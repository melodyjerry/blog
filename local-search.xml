<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>JUnit-Java单元测试框架</title>
    <link href="/blog/2020/07/15/JUnit-Java%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/"/>
    <url>/blog/2020/07/15/JUnit-Java%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/</url>
    
    <content type="html"><![CDATA[<h1 id="JUnit概述"><a href="#JUnit概述" class="headerlink" title="JUnit概述"></a>JUnit概述</h1><p>官网：<a href="https://junit.org/junit5/" target="_blank" rel="noopener">https://junit.org/junit5/</a></p><p><strong>JUnit是一个Java语言的单元测试框架。</strong></p><blockquote><p>它由Kent Beck和Erich Gamma建立，逐渐成为源于Kent Beck的sUnit的xUnit家族中为最成功的一个。 JUnit有它自己的JUnit扩展生态圈。</p></blockquote><p>多数Java的开发环境都已经集成了JUnit作为单元测试的工具。</p><a id="more"></a><h1 id="教程视频"><a href="#教程视频" class="headerlink" title="教程视频"></a>教程视频</h1><ol><li><p><a href="https://www.w3cschool.cn/junit/" target="_blank" rel="noopener">jUnit 教程</a></p></li><li><p><a href="http://www.sikiedu.com/course/284/task/14725/show" target="_blank" rel="noopener">编写Mapper子项目的junit测试程序</a></p></li><li><p><a href="https://blog.csdn.net/fulishafulisha/article/details/80158392" target="_blank" rel="noopener">Junit的基本使用（详解）</a></p></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>JavaWeb</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SSM整合及Maven配置文件</title>
    <link href="/blog/2020/07/15/SSM%E6%95%B4%E5%90%88%E5%8F%8AMaven%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    <url>/blog/2020/07/15/SSM%E6%95%B4%E5%90%88%E5%8F%8AMaven%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<p><a href="https://files-cdn.cnblogs.com/files/melodyjerry/SSM%E6%95%B4%E5%90%88%E5%8F%8AMaven%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.zip" target="_blank" rel="noopener">下载 🔗</a></p><div class="hljs"><pre><code class="hljs crmsh">SSM整合及Maven配置文件.zip ├── maven_ssm │   ├── pom.xml │   ├── pom_test.xml │   └── ssm │       ├── applicationContext_mapper.xml │       ├── applicationContext_service.xml │       ├── applicationContext_transaction.xml │       ├── db.properties │       ├── ItemMapper.xml │       ├── springmvc.xml │       └── web.xml ├── pom.xml └── web.xml</code></pre></div><a id="more"></a><p>如何使用 <a href="http://www.sikiedu.com/course/284/task/14721/show" target="_blank" rel="noopener">？</a></p><h1 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h1><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">"http://maven.apache.org/POM/4.0.0"</span> <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">modelVersion</span>&gt;</span>4.0.0<span class="hljs-tag">&lt;/<span class="hljs-name">modelVersion</span>&gt;</span><span class="hljs-comment">&lt;!-- maven版本 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.sikiedu<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><span class="hljs-comment">&lt;!-- 域名反写 + 项目名 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>HelloMaven<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><span class="hljs-comment">&lt;!-- 项目名 子项目名 模块名 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><span class="hljs-comment">&lt;!-- 版本号-类型 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">packaging</span>&gt;</span>war<span class="hljs-tag">&lt;/<span class="hljs-name">packaging</span>&gt;</span><span class="hljs-comment">&lt;!-- 打包类型 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>mavenProject<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><span class="hljs-comment">&lt;!-- 当前项目名 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">description</span>&gt;</span>我的第一个maven工程<span class="hljs-tag">&lt;/<span class="hljs-name">description</span>&gt;</span><span class="hljs-comment">&lt;!-- 项目描述 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><span class="hljs-comment">&lt;!-- 依赖标签 配置项目中依赖的jar包坐标 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>junit<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>junit<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>4.9<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>javax.servlet<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>servlet-api<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.5<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>provided<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>javax.servlet<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>jsp-api<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>provided<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">build</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">plugins</span>&gt;</span><span class="hljs-comment">&lt;!-- 插件列表 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><span class="hljs-comment">&lt;!-- 通过坐标获取插件 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.8.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">source</span>&gt;</span>1.8<span class="hljs-tag">&lt;/<span class="hljs-name">source</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">target</span>&gt;</span>1.8<span class="hljs-tag">&lt;/<span class="hljs-name">target</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">encoding</span>&gt;</span>UTF-8<span class="hljs-tag">&lt;/<span class="hljs-name">encoding</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">plugins</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">build</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">project</span>&gt;</span></code></pre></div><h1 id="SSM整合pom-xml"><a href="#SSM整合pom-xml" class="headerlink" title="SSM整合pom.xml"></a>SSM整合pom.xml</h1><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">"http://maven.apache.org/POM/4.0.0"</span> <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">modelVersion</span>&gt;</span>4.0.0<span class="hljs-tag">&lt;/<span class="hljs-name">modelVersion</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.sikiedu<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>MavenSSM2<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">packaging</span>&gt;</span>war<span class="hljs-tag">&lt;/<span class="hljs-name">packaging</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">properties</span>&gt;</span>  <span class="hljs-comment">&lt;!-- lib version --&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">spring.version</span>&gt;</span>5.0.8.RELEASE<span class="hljs-tag">&lt;/<span class="hljs-name">spring.version</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">mybais.version</span>&gt;</span>3.4.6<span class="hljs-tag">&lt;/<span class="hljs-name">mybais.version</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">mybatis-spring.version</span>&gt;</span>1.3.2<span class="hljs-tag">&lt;/<span class="hljs-name">mybatis-spring.version</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">mysql-connector.version</span>&gt;</span>5.1.46<span class="hljs-tag">&lt;/<span class="hljs-name">mysql-connector.version</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">ojdbc7.version</span>&gt;</span>12.1.0.2.0<span class="hljs-tag">&lt;/<span class="hljs-name">ojdbc7.version</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">druid.version</span>&gt;</span>1.0.16<span class="hljs-tag">&lt;/<span class="hljs-name">druid.version</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">aopalliance.version</span>&gt;</span>1.0<span class="hljs-tag">&lt;/<span class="hljs-name">aopalliance.version</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">aspectj.weaver.version</span>&gt;</span>1.6.4.RELEASE<span class="hljs-tag">&lt;/<span class="hljs-name">aspectj.weaver.version</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">commons.logging.version</span>&gt;</span>1.1.1<span class="hljs-tag">&lt;/<span class="hljs-name">commons.logging.version</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">jstl.version</span>&gt;</span>1.2<span class="hljs-tag">&lt;/<span class="hljs-name">jstl.version</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">log4j.version</span>&gt;</span>1.2.16<span class="hljs-tag">&lt;/<span class="hljs-name">log4j.version</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">slf4j-api.version</span>&gt;</span>1.6.1<span class="hljs-tag">&lt;/<span class="hljs-name">slf4j-api.version</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">slf4j-nop.version</span>&gt;</span>1.6.4<span class="hljs-tag">&lt;/<span class="hljs-name">slf4j-nop.version</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">fileupload.version</span>&gt;</span>1.3.1<span class="hljs-tag">&lt;/<span class="hljs-name">fileupload.version</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">jackson.version</span>&gt;</span>2.9.6<span class="hljs-tag">&lt;/<span class="hljs-name">jackson.version</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">junit.version</span>&gt;</span>4.9<span class="hljs-tag">&lt;/<span class="hljs-name">junit.version</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">servlet-api.version</span>&gt;</span>8.5.32<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-api.version</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">jsp-api.version</span>&gt;</span>8.5.32<span class="hljs-tag">&lt;/<span class="hljs-name">jsp-api.version</span>&gt;</span>    <span class="hljs-comment">&lt;!-- plugins version --&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">maven-compiler-plugin.version</span>&gt;</span>3.8.0<span class="hljs-tag">&lt;/<span class="hljs-name">maven-compiler-plugin.version</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">tomcat7-maven-plugin.version</span>&gt;</span>2.2<span class="hljs-tag">&lt;/<span class="hljs-name">tomcat7-maven-plugin.version</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">properties</span>&gt;</span>    <span class="hljs-comment">&lt;!-- 锁定版本， --&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">dependencyManagement</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span>   <span class="hljs-comment">&lt;!-- spring --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-core<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>${spring.version}<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-web<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>${spring.version}<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-tx<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>${spring.version}<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-jdbc<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>${spring.version}<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-webmvc<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>${spring.version}<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-aop<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>${spring.version}<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-context-support<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>${spring.version}<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-test<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>${spring.version}<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-comment">&lt;!-- spring end --&gt;</span>         <span class="hljs-comment">&lt;!-- mybais --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.mybatis<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>${mybais.version}<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-comment">&lt;!-- mybatis - spring 整合包--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.mybatis<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-spring<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>${mybatis-spring.version}<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-comment">&lt;!-- json --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>jackson-core<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>${jackson.version}<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>jackson-annotations<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>${jackson.version}<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>jackson-databind<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>${jackson.version}<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-comment">&lt;!-- json end --&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependencyManagement</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span>    <span class="hljs-comment">&lt;!-- spring --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-core<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-web<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-tx<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-jdbc<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-webmvc<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-aop<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-context-support<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>   <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-test<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-comment">&lt;!-- spring end --&gt;</span>            <span class="hljs-comment">&lt;!-- mybais --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.mybatis<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-comment">&lt;!-- mybatis - spring 整合包--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.mybatis<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-spring<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-comment">&lt;!-- mysql --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>mysql<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mysql-connector-java<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>${mysql-connector.version}<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>cn.easyproject<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>ojdbc7<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>${ojdbc7.version}<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-comment">&lt;!-- mysql end --&gt;</span> <span class="hljs-comment">&lt;!-- 阿里巴巴的数据库连接池 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alibaba<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>druid<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>${druid.version}<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-comment">&lt;!-- aop --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>aopalliance<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>aopalliance<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>${aopalliance.version}<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.aspectj<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>com.springsource.org.aspectj.weaver<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>${aspectj.weaver.version}<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-comment">&lt;!-- aop end --&gt;</span><span class="hljs-comment">&lt;!-- logging --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.commons<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>com.springsource.org.apache.commons.logging<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>${commons.logging.version}<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-comment">&lt;!-- jsp标准标签库 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>javax.servlet<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>jstl<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>${jstl.version}<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-comment">&lt;!-- log --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>log4j<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>log4j<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>${log4j.version}<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.slf4j<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>slf4j-api<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>${slf4j-api.version}<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.slf4j<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>slf4j-nop<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>${slf4j-nop.version}<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-comment">&lt;!-- log end --&gt;</span><span class="hljs-comment">&lt;!--文件上传--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>commons-fileupload<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>commons-fileupload<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>${fileupload.version}<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-comment">&lt;!-- json --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>jackson-core<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>jackson-annotations<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>jackson-databind<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-comment">&lt;!-- json end --&gt;</span><span class="hljs-comment">&lt;!-- junit单元测试 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>junit<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>junit<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>${junit.version}<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-comment">&lt;!-- servlet-api 8.5.32 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.tomcat<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>tomcat-servlet-api<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>${servlet-api.version}<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>provided<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-comment">&lt;!-- jsp-api 8.5.32 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.tomcat<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>tomcat-jsp-api<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>${jsp-api.version}<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>provided<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">build</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">plugins</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>${maven-compiler-plugin.version}<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">source</span>&gt;</span>1.8<span class="hljs-tag">&lt;/<span class="hljs-name">source</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">target</span>&gt;</span>1.8<span class="hljs-tag">&lt;/<span class="hljs-name">target</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>${tomcat7-maven-plugin.version}<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>http://localhost:8080/manager/text<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span>joey<span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>123123<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">plugins</span>&gt;</span>    <span class="hljs-comment">&lt;!-- 配置文件放行 --&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">resources</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">resource</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">directory</span>&gt;</span>src/main/java<span class="hljs-tag">&lt;/<span class="hljs-name">directory</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">includes</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">include</span>&gt;</span>**/*.properties<span class="hljs-tag">&lt;/<span class="hljs-name">include</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">include</span>&gt;</span>**/*.xml<span class="hljs-tag">&lt;/<span class="hljs-name">include</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">includes</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">filtering</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">filtering</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">resource</span>&gt;</span><span class="hljs-comment">&lt;!-- 放行main/resources下的配置文件 如果不放行spring mybatis等配置文件不会被打到包里从而导致错误 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">resource</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">directory</span>&gt;</span>src/main/resources<span class="hljs-tag">&lt;/<span class="hljs-name">directory</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">includes</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">include</span>&gt;</span>**/*.properties<span class="hljs-tag">&lt;/<span class="hljs-name">include</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">include</span>&gt;</span>**/*.xml<span class="hljs-tag">&lt;/<span class="hljs-name">include</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">includes</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">filtering</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">filtering</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">resource</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">resources</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">build</span>&gt;</span>   <span class="hljs-tag">&lt;/<span class="hljs-name">project</span>&gt;</span></code></pre></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>JavaWeb</tag>
      
      <tag>SSM</tag>
      
      <tag>Maven</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Maven项目管理</title>
    <link href="/blog/2020/07/11/Maven%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    <url>/blog/2020/07/11/Maven%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/</url>
    
    <content type="html"><![CDATA[<p><img src="https://s1.ax1x.com/2020/07/13/UJbRm9.png" srcset="/blog/img/loading.gif" alt="UJbRm9.png"></p><p>左者使用SSM框架，需要导入jar包；</p><p>右者使用Maven，不需要导入jar包。</p><h1 id="Maven是什么？"><a href="#Maven是什么？" class="headerlink" title="Maven是什么？"></a>Maven是什么？</h1><ul><li><strong>Maven是Apache下的项目管理工具</strong>，它由<strong>纯Java</strong>语言开发，可以帮助我们<strong>更方便的管理和构建Java项目</strong>。</li></ul><h1 id="为什么要使用Maven？"><a href="#为什么要使用Maven？" class="headerlink" title="为什么要使用Maven？"></a>为什么要使用Maven？</h1><p>1、  jar包管理：</p><ul><li>a)   从<strong>Maven中央仓库</strong>获取<strong>标准的规范的jar包以及相关依赖的jar包</strong>，避免自己下载到错误的jar包；</li><li>b)   <strong>本地仓库统一管理jar包，使jar包与项目分离，减轻项目体积。</strong></li></ul><p>2、  maven是跨平台的可以在window、linux上使用。</p><p>3、  清晰的项目结构；</p><p>4、  多工程开发，<strong>将模块拆分成若干工程</strong>，利于团队协作开发。</p><p>5、  一键构建项目：使用命令可以对项目进行一键构建，操作系统中无需安装eclipse和tomcat。</p><h1 id="下载、安装、配置环境变量Maven"><a href="#下载、安装、配置环境变量Maven" class="headerlink" title="下载、安装、配置环境变量Maven"></a>下载、安装、配置环境变量Maven</h1><p>a)   <a href="http://maven.apache.org/download.cgi" target="_blank" rel="noopener">http://maven.apache.org/download.cgi</a></p><p>b)   安装JDK 1.8；</p><p>c)   配置环境变量；</p><ul><li><p>i.     win + r 打开运行窗口 或者 进入cmd命令窗口；</p></li><li><p>ii.     输入sysdm.cpl打开系统属性 -&gt; 高级 -&gt; 环境变量；</p></li><li><p>iii.     新建系统变量，变量名：<code>MAVEN_HOME</code>，变量值：<code>Maven安装路径</code>；</p></li><li><p>iv.     在<code>Path</code>下追加一条属性指向Maven的bin目录 <code>%MAVEN_HOME%/bin</code></p></li></ul><h1 id="Maven的优点"><a href="#Maven的优点" class="headerlink" title="Maven的优点"></a>Maven的优点</h1><p><font size="5" color="blue">a)</font>   jar包管理：依赖管理</p><ul><li><p>i.     <strong>从Maven中央仓库获取标准的规范的jar包以及相关依赖的jar包</strong>，避免自己下载到错误的jar包；</p></li><li><p>ii.    <strong>本地仓库统一管理jar包，使jar包与项目分离，减轻项目体积。</strong><br><img src="https://s1.ax1x.com/2020/07/13/UJg1jf.png" srcset="/blog/img/loading.gif" alt="Maven项目获取jar包的方式"></p></li><li><p>iii.     Maven项目通过<strong>坐标的方式</strong>从本地仓库获取jar包；</p></li></ul><table><thead><tr><th>坐标</th><th>本地仓库</th></tr></thead><tbody><tr><td>由公司/组织名(groupId) + 项目名/子项目名(artifactId) + 版本号(version)组成</td><td>存放很多jar包，供Maven项目使用</td></tr></tbody></table><ol><li>Maven通过建立本地仓库索引，可以快速的找到符合要求的jar包，从而解决效率问题；</li><li>多个Maven项目都可以从本地仓库获取jar包；</li><li>设置本地仓库：<em>maven根目录</em> -&gt; <em>conf</em> -&gt; <em>settings.xml</em>，将<code>localRepository</code>标签中的路径替换成自己本地仓库的路径；</li></ol><ul><li><p>iv.     Maven三种仓库概念：本地仓库、远程仓库、中央仓库</p><ul><li>中央仓库-官方：<a href="https://mvnrepository.com/" target="_blank" rel="noopener">https://mvnrepository.com/</a></li><li>中央仓库-阿里云：<a href="https://maven.aliyun.com/mvn/search" target="_blank" rel="noopener">https://maven.aliyun.com/mvn/search</a></li></ul><p><img src="https://s1.ax1x.com/2020/07/13/UJ2Sr8.png" srcset="/blog/img/loading.gif" alt="Maven三种仓库概念"></p></li></ul><ul><li>v.     设置阿里云Maven仓库镜像：</li></ul><ol><li>在<code>settings.xml</code>文件中的<code>mirrors</code>下添加<code>mirror</code>标签； <div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">mirror</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>alimaven<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>aliyun maven<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">mirrorOf</span>&gt;</span>central<span class="hljs-tag">&lt;/<span class="hljs-name">mirrorOf</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mirror</span>&gt;</span></code></pre></div></li></ol><p><font size="5" color="blue">b)</font>   maven由纯Java语言开发，是跨平台的可以在window、linux、mac上使用。</p><p><font size="5" color="blue">c)</font>   清晰的项目结构；</p><p><font size="5" color="blue">d)</font>   使用Maven将大型项目按照模块拆分成若干工程，不同的团队维护各自的工程，可大大的提升开发效率；</p><ul><li><p>i.     大型商城项目按业务分成商品管理、用户管理、订单管理等等模块。</p><p><img src="https://s1.ax1x.com/2020/07/13/UJRPOK.png" srcset="/blog/img/loading.gif" alt="大型项目，分模块开发"></p></li></ul><ul><li><p>ii.     中小型项目按照传统项目分为Web、Service、Dao层，依照员工自身的业务能力分配工作。</p><p><img src="https://s1.ax1x.com/2020/07/13/UJRVFH.png" srcset="/blog/img/loading.gif" alt="中小型项目，分层开发"></p></li></ul><p><font size="5" color="blue">e)</font>   一键构建项目：使用命令可以对项目进行一键构建，操作系统中无需安装eclipse和tomcat。</p><h1 id="Maven常用命令"><a href="#Maven常用命令" class="headerlink" title="Maven常用命令"></a>Maven常用命令</h1><ul><li><code>clean</code>：       清理，编译后的目录；</li><li><code>compile</code>：    编译，只编译main目录，不编译test中的代码；</li><li><code>test-compile</code>：编译test目录中的代码；</li><li><code>test</code>：        运行test里边的代码；</li><li><code>package</code>：    打包<ul><li>i.     java项目-&gt;打成jar包；</li><li>ii.     web项目-&gt;打成war包；</li></ul></li><li><code>install</code>：发布项目到本地仓库，用在打jar包上，打成jar包可以被其他项目使用；</li><li><code>tomcat:run</code>：一键构建项目；</li></ul><h1 id="Maven命令的生命周期"><a href="#Maven命令的生命周期" class="headerlink" title="Maven命令的生命周期"></a>Maven命令的生命周期</h1><p> 不同的生命周期可以一起执行，例如：先clean 再compile</p><table><thead><tr><th>命令</th><th>生命周期</th></tr></thead><tbody><tr><td>Clean</td><td>clean</td></tr><tr><td>Default</td><td>compile、test-compile、test、package、install</td></tr><tr><td>Site</td><td>site命令，生成项目描述文档静态页</td></tr></tbody></table><h1 id="Maven命令的执行顺序"><a href="#Maven命令的执行顺序" class="headerlink" title="Maven命令的执行顺序"></a>Maven命令的执行顺序</h1><ol><li><p>在相同生命周期中的命令才会受执行顺序的影响；</p></li><li><p>Default生命周期中的命令执行顺序：</p><div class="hljs"><pre><code class="hljs clean">compile &lt;- test-compile &lt;- test &lt;- package &lt;- install；</code></pre></div></li></ol><h1 id="Maven入门程序"><a href="#Maven入门程序" class="headerlink" title="Maven入门程序"></a>Maven入门程序</h1><p><font size="5" color="blue">Ø</font> 入门程序：</p><ol><li><p>创建Maven项目；</p></li><li><p>在src -&gt; main -&gt; webapp下创建WEB-INF目录，并在目录下创建web.xml；</p></li><li><p>修改Maven默认编译级别：</p><ul><li><p>a)   全局编译级别 -&gt; 修改settings.xml</p></li><li><p>b)   项目级别修改 -&gt; 项目对应的pom.xml</p></li></ul></li><li><p>在Java Resourcese -&gt; src/main/java下写代码，创建包和Servlet；</p></li><li><p>添加servlet-api： </p></li><li><p>在servlet-api中添加<code>scope</code>标签，值为：proviede；</p><ul><li>a)   如果不加此标签有很大几率报错，因为tomcat中也有servlet-api的包导致冲突；</li></ul></li><li><p>运行：发生错误，原因是maven默认使用tomcat6.xx，不支持@WebServle注解；</p><ul><li><p>a)   解决方案1：需要去web.xml中配置<code>Servlet</code>;</p></li><li><p>b)   解决方案2：配置高版本tomcat插件；</p></li></ul></li><li><p>最后测试，启动服务，在地址栏输入请求，显示结果；</p></li></ol><p><font size="5" color="blue">Ø</font> 使用tomcat7插件运行项目</p><p><font size="5" color="blue">Ø</font> Scope依赖作用域也可称作依赖范围：maven中的依赖，会根据程序所处的阶段和场景发生变化，所以maven用scope属性来做限制；</p><ul><li><p>a)   <code>compile</code>（默认值）：在编译、运行、测试、打包都有效；</p></li><li><p>b)   <code>provided</code>：编译、测试时有效，运行、打包无效；</p></li><li><p>c)   <code>test</code>：仅在测试时有效；</p></li><li><p>d)   <code>runtime</code>：测试、运行、打包时有效；</p></li><li><p>e)   <code>system</code>：不推荐使用，使用system作用域不会去本地仓库寻找依赖，要指定本地路径；</p><p><img src="https://s1.ax1x.com/2020/07/13/UJfQIg.png" srcset="/blog/img/loading.gif" alt="依赖关系中作用域说明"></p></li></ul><h1 id="Maven热部署"><a href="#Maven热部署" class="headerlink" title="Maven热部署"></a>Maven热部署</h1><p><strong>Maven 3.5.4 + tomcat 8.5.32 热部署：</strong></p><blockquote><p>热部署：在tomcat运行时将项目部署上去；</p></blockquote><ol><li>开启tomcat热部署：</li></ol><ul><li>a)   修改tomcat -&gt; conf-&gt; tomcat-users.xml 配置文件；</li><li>b)   在tomcat-users标签中加入以下代码：</li></ul><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">role</span> <span class="hljs-attr">rolename</span>=<span class="hljs-string">"manager-gui"</span>/&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">role</span> <span class="hljs-attr">rolename</span>=<span class="hljs-string">"manager-script"</span>/&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">user</span> <span class="hljs-attr">username</span>=<span class="hljs-string">"joey"</span> <span class="hljs-attr">password</span>=<span class="hljs-string">"123123"</span> <span class="hljs-attr">roles</span>=<span class="hljs-string">"manager-gui, manager-script"</span>/&gt;</span></code></pre></div><ul><li><p>c)   启动tomcat；</p></li><li><p>d)   修改项目中pom.xml，在tomcat7的插件上添加以下代码：</p></li></ul><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>http://localhost:8080/manager/text<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span>joey<span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>123123<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span></code></pre></div><ul><li><p>e)   右键项目-&gt; run as -&gt; maven build… 在goals中使用tomcat7:deploy或tomcat7:redeploy来进行热部署；</p><ul><li><p>i.     tomcat7:deploy，第一次部署时使用。</p></li><li><p>ii.     tomcat7:redeploy，非第一次部署时使用。</p></li></ul></li><li><p>f)    部署完毕，打开浏览器测试；</p></li></ul><h1 id="Maven整合SSM框架"><a href="#Maven整合SSM框架" class="headerlink" title="Maven整合SSM框架"></a>Maven整合SSM框架</h1><ol><li>Maven+SSM框架整合；</li></ol><ul><li><p>a)   加入SSM框架所需的依赖；</p></li><li><p>b)   配置插件；</p></li><li><p>c)   导入SSM框架所需配置文件, 配置文件下载：<a href="https://www.cnblogs.com/melodyjerry/p/13304361.html" target="_blank" rel="noopener">https://www.cnblogs.com/melodyjerry/p/13304361.html</a>；</p></li><li><p>d)   配置Maven Resources资源放行：</p><ul><li>i.     因为Maven会把src/main/java下的*.java文件文件编译放到target/classes目录目录中，但这目录中的其他文件会被忽略；</li><li>ii.     Mybatis Mapper映射文件也要放在src/main/java下，所以不能忽略；</li><li>iii.     因此我们需要对src/main/java下的配置文件进行过滤，不能被忽略；</li><li>iv.     利用Maven中的<code>Resources</code>标签可以进行配置；</li></ul></li></ul><ol start="2"><li>测试；</li></ol><ul><li>a)   新建名为User的bean对象，有<code>username</code>，<code>password</code>俩字段；</li><li>b)   新建login.jsp，可以输入用户名和密码，通过表单提交到后台；</li><li>c)   后台接受用户名和密码，跳转页面，并显示；</li></ul><ol start="3"><li>读取数据库显示游戏列表；</li></ol><ul><li>a)   导入item_info表；</li><li>b)   在login.jsp中增加<code>button</code>，点击后跳转页面，显示列表；</li></ul><h1 id="Maven模块化开发"><a href="#Maven模块化开发" class="headerlink" title="Maven模块化开发"></a>Maven模块化开发</h1><p> <img src="https://s1.ax1x.com/2020/07/13/UJfOw8.png" srcset="/blog/img/loading.gif" alt="Maven模块化开发项目依赖关系"></p><p><font size="5" color="blue">Ø</font> 需求：将Maven-SSM项目以层为单位拆分，按模块开发；</p><ol><li><p>创建父项目，在父项目中加入依赖；</p></li><li><p>创建mapper层子项目继承父项目；</p></li><li><p>子项目可以继承父项目的依赖；</p></li><li><p>利用junit测试mapper模块项目； </p></li><li><p>Maven的依赖传递，与依赖版本管理；</p></li></ol><ul><li>a)   依赖传递：添加依赖的jar包如果还依赖其他jar包，则在添加时会一起引入；</li><li>b)   依赖冲突：Base-project由3个子项目组成，A-project依赖Tools.jar 1.0版本，C-project依赖Tools.jar 2.0版本，根据依赖传递机制，Base-project将同时依赖Tools.jar两个版本，但这造成了冲突。根据路径最近获胜策略，该项目最终依赖Tools.jar 1.0，导致C-project无法调用getAll方法从而报错，因此我们要手动选择一个适合项目的版本。</li></ul><p><img src="https://s1.ax1x.com/2020/07/13/UJhnp9.png" srcset="/blog/img/loading.gif" alt="Maven模块化开发项目依赖关系"></p><ul><li><p>c)   解决依赖冲突的办法：</p><ul><li><p>i.    <strong>直接声明</strong>：直接添加Tools.jar 2.0依赖；</p></li><li><p>ii.     <strong>排除</strong>：使用<code>&lt;dependency&gt;</code>标签中的<code>&lt;exclusions&gt;</code>标签排除A-project中的Tools.jar 1.0依赖；</p></li><li><p>iii.     <strong>依赖管理，版本锁定</strong>：<code>&lt;dependencyManagement&gt;</code></p></li></ul></li></ul><div class="hljs"><pre><code class="hljs xml">1. <span class="hljs-tag">&lt;<span class="hljs-name">dependencyManagement</span>&gt;</span>是依赖管理，该标签下添加的<span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span>可以声明依赖，但是不会引入jar包；2. 只有声明在<span class="hljs-tag">&lt;<span class="hljs-name">project</span>&gt;</span>标签下<span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span>中的依赖才会被引用到项目中；3. 在<span class="hljs-tag">&lt;<span class="hljs-name">dependencyManagement</span>&gt;</span>下添加jar包坐标后，<span class="hljs-tag">&lt;<span class="hljs-name">project</span>&gt;</span>标签下<span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span>标签的版本号可以忽略不写；4. <span class="hljs-tag">&lt; <span class="hljs-attr">properties</span>&gt;</span>标签可以自定义版本号，用el表达式赋值给<span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>标签；5. 统一管理jar包版本，修改方便；</code></pre></div><ol start="6"><li><p>创建scervice模块项目，利用junit测试service模块项目；</p></li><li><p>依赖作用域对依赖传递的影响；</p></li><li><p>创建controller模块项目，运行程序；</p></li></ol><h1 id="Maven远程仓库Nexus（私服）"><a href="#Maven远程仓库Nexus（私服）" class="headerlink" title="Maven远程仓库Nexus（私服）"></a>Maven远程仓库Nexus（私服）</h1><p><font size="5" color="blue">Ø</font> Nexus获取与配置：</p><p>1、  下载Nexus <a href="https://www.sonatype.com/download-oss-sonatype?hsCtaTracking=920dd7b5-7ef3-47fe-9600-10fecad8aa32|f59d5f10-099f-4c66-a622-0254373f4a92" target="_blank" rel="noopener">点击我下载</a></p><p>2、  Nexus安装，解压缩到本地即可；</p><p>3、  Nexus安装目录下nexus-3.14.0-04/etc/nexus-default.properties配置表中可以修改以下属性：</p><p>​    a)   application-host : Nexus服务监听的主机；</p><p>​    b)   application-port: Nexus服务监听的端口；</p><p>​    c)   nexus-context-path : Nexus服务的上下文路径；</p><p>4、  Nexus服务配置和启动：</p><p>​    a)   以管理员身份运行cmd -&gt; 进入到nexus安装目录../nexus-3.14.0-04/bin目录下；</p><p>​    b)   在cmd中运行 nexus.exe/install 可以安装nexus服务；</p><p>​    c)   在cmd中运行 nexus.exe/start 可以启动nexus服务；</p><p>​    d)   在cmd中运行 nexus.exe/stop 可以停止nexus服务；</p><p>5、  登录Nexus：</p><p>​    a)   启动服务后，根据nexus-default.properties的配置进行登录，如果没有修改，可以在浏览器中输入<a href="http://localhost:8081来登录；">http://localhost:8081来登录；</a></p><p>​    b)   默认用户名是admin，密码是admin123；</p><p>6、  仓库类型：nexus有多种仓库类型：</p><p> <img src="https://s1.ax1x.com/2020/07/13/UJhjnx.png" srcset="/blog/img/loading.gif" alt="Nexus仓库类型介绍"></p><p>​     </p><p><font size="5" color="blue">Ø</font> Nexus使用：</p><p>需求：将项目中的mapper.jar包提交到远程仓库中， 使service项目从远程仓库获取；</p><p><font size="3" color="#ed9f00">✧☼</font> 上传jar包到远程仓库；</p><p>1、  在Maven的 setting.xml中配置nexus访问权限；</p><p>2、  在项目的pom.xml中配置nexus仓库位置；</p><p>3、  以上2个配置标签中的id要一致；</p><p>4、  使用deploy命令将项目打包，发布到nexus中；</p><p>5、  检查仓库中是否有上传好的jar包；</p><p><font size="3" color="#ed9f00">✧☼</font> 从远程仓库下载jar包：</p><p>1、 使用profiles标签在Maven的setting.xml中配置仓库位置；</p><p>2、 激活profiles标签，使它发生作用；</p><p>3、 如果之前打包了，删除本地仓库下的mapper.jar；</p><p>4、 关闭mapper子项目，让service子项目依赖mapper.jar包；</p><p>5、 更新项目，从远程仓库中获取mapper.jar；</p><p><font size="3" color="#ed9f00">✧☼</font> 使用自定义用户和自定义仓库进行上传和下载jar包：</p><p>1、  建议先将管理员密码修改；</p><p>2、  在Roles中可以增加用户权限组，里边可以自定义用户权限；</p><p>3、  在Users中可以增加用户，分配设置好的权限；</p><p>4、  在Repositories中新建仓库；</p><p>​    a)   name：仓库名称；</p><p>​    b)   version pollcy：版本策略；</p><p>​                 i.     Release：发行版；</p><p>​                 ii.     Snapshot：快照版；</p><p>​                iii.     Mixed：混合模式；</p><p>​    c)   Layout pollcy：布局策略；</p><p>​                 i.     Strict：严格；</p><p>​                 ii.     Permissive：宽松；</p><p>​    d)   Deployment pollcy：部署策略；</p><p>​                 i.     Allow redeploy：允许重新部署；</p><p>​                 ii.     Disable redeploy：禁止重新部署；</p><p>​                iii.     Read-only：只读；</p><p>5、  修改配置，将jar包上传到自定义仓库，然后从自定义仓库下载jar包；</p><hr><p>资源下载：<a href="http://www.sikiedu.com/course/284/material/14783/download" target="_blank" rel="noopener">http://www.sikiedu.com/course/284/material/14783/download</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>JavaWeb</tag>
      
      <tag>SSM</tag>
      
      <tag>Maven</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mybatis框架概述</title>
    <link href="/blog/2020/07/11/Mybatis%E6%A1%86%E6%9E%B6%E6%A6%82%E8%BF%B0/"/>
    <url>/blog/2020/07/11/Mybatis%E6%A1%86%E6%9E%B6%E6%A6%82%E8%BF%B0/</url>
    
    <content type="html"><![CDATA[<p><code>mybatis</code>是一个优秀的基于<code>java</code>的<strong>持久层框架</strong>，它内部封装了<code>jdbc</code>，使开发者<strong>只需要关注<code>sql</code>语句本身</strong>，而不需要花费精力去处理加载驱动、创建连接、创建<code>statement</code>等繁杂的过程。 </p><blockquote><p><code>mybatis</code>通过<code>xml</code>或注解的方式将要执行的各种<code>statement</code>配置起来，并通过<code>java</code>对象和<code>statement</code>中<code>sql</code>的动态参数进行映射生成最终执行的<code>sql</code>语句，最后由<code>mybatis</code>框架执行<code>sql</code>并将结果映射为<code>java</code>对象并返回。 </p></blockquote><p><strong>采用<code>ORM(Object Relational Mapping)</code>思想解决了实体和数据库映射的问题</strong>，<em>对<code>jdbc</code>进行了封装，屏蔽了<code>jdbc api</code>底层访问细节</em>，使我们不用与<code>jdbc api</code>打交道，就可以完成对数据库的持久化操作。</p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>JavaWeb</tag>
      
      <tag>SSM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>博客建筑常用的JS特效</title>
    <link href="/blog/2020/07/11/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AD%91%E5%B8%B8%E7%94%A8%E7%9A%84JS%E7%89%B9%E6%95%88/"/>
    <url>/blog/2020/07/11/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AD%91%E5%B8%B8%E7%94%A8%E7%9A%84JS%E7%89%B9%E6%95%88/</url>
    
    <content type="html"><![CDATA[<p>随机图片API</p><ol><li><a href="https://api.mz-moe.cn/img.php" target="_blank" rel="noopener">https://api.mz-moe.cn/img.php</a></li><li><a href="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" target="_blank" rel="noopener">https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture</a></li></ol><div class="hljs"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--动态线条背景--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span></span><span class="hljs-tag"><span class="hljs-attr">color</span>=<span class="hljs-string">"255,0,0"</span> <span class="hljs-attr">opacity</span>=<span class="hljs-string">'1'</span> <span class="hljs-attr">zIndex</span>=<span class="hljs-string">"-2"</span> <span class="hljs-attr">count</span>=<span class="hljs-string">"100"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-comment">&lt;!-- 天气挂件 --&gt;</span><span class="hljs-comment">&lt;!-- &lt;div id="tp-weather-widget"&gt;&lt;/div&gt;</span><span class="hljs-comment">&lt;script&gt;</span><span class="hljs-comment">    (function(a,h,g,f,e,d,c,b){b=function(){d=h.createElement(g);c=h.getElementsByTagName(g)[0];d.src=e;d.charset="utf-8";d.async=1;c.parentNode.insertBefore(d,c)};a["SeniverseWeatherWidgetObject"]=f;a[f]||(a[f]=function(){(a[f].q=a[f].q||[]).push(arguments)});a[f].l=+new Date();if(a.attachEvent){a.attachEvent("onload",b)}else{a.addEventListener("load",b,false)}}(window,document,"script","SeniverseWeatherWidget","//cdn.sencdn.com/widget2/static/js/bundle.js?t="+parseInt((new Date().getTime() / 100000000).toString(),10)));</span><span class="hljs-comment">    window.SeniverseWeatherWidget('show', {</span><span class="hljs-comment">      flavor: "bubble",</span><span class="hljs-comment">      location: "WS0E9D8WN298",</span><span class="hljs-comment">      geolocation: true,</span><span class="hljs-comment">      language: "zh-Hans",</span><span class="hljs-comment">      unit: "c",</span><span class="hljs-comment">      theme: "auto",</span><span class="hljs-comment">      token: "5fd5b254-57fe-4f8a-8a13-f92485efeb0b",</span><span class="hljs-comment">      hover: "enabled",</span><span class="hljs-comment">      container: "tp-weather-widget"</span><span class="hljs-comment">    })</span><span class="hljs-comment">&lt;/script&gt;--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"tp-weather-widget"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">    (<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">a,h,g,f,e,d,c,b</span>)</span>{b=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>{d=h.createElement(g);c=h.getElementsByTagName(g)[<span class="hljs-number">0</span>];d.src=e;d.charset=<span class="hljs-string">"utf-8"</span>;d.async=<span class="hljs-number">1</span>;c.parentNode.insertBefore(d,c)};a[<span class="hljs-string">"SeniverseWeatherWidgetObject"</span>]=f;a[f]||(a[f]=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>{(a[f].q=a[f].q||[]).push(<span class="hljs-built_in">arguments</span>)});a[f].l=+<span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>();<span class="hljs-keyword">if</span>(a.attachEvent){a.attachEvent(<span class="hljs-string">"onload"</span>,b)}<span class="hljs-keyword">else</span>{a.addEventListener(<span class="hljs-string">"load"</span>,b,<span class="hljs-literal">false</span>)}}(<span class="hljs-built_in">window</span>,<span class="hljs-built_in">document</span>,<span class="hljs-string">"script"</span>,<span class="hljs-string">"SeniverseWeatherWidget"</span>,<span class="hljs-string">"//cdn.sencdn.com/widget2/static/js/bundle.js?t="</span>+<span class="hljs-built_in">parseInt</span>((<span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().getTime() / <span class="hljs-number">100000000</span>).toString(),<span class="hljs-number">10</span>)));</span><span class="javascript">    <span class="hljs-built_in">window</span>.SeniverseWeatherWidget(<span class="hljs-string">'show'</span>, {</span><span class="actionscript">      flavor: <span class="hljs-string">"bubble"</span>,</span><span class="actionscript">      location: <span class="hljs-string">"WS0E9D8WN298"</span>,</span><span class="actionscript">      geolocation: <span class="hljs-literal">true</span>,</span><span class="actionscript">      language: <span class="hljs-string">"zh-Hans"</span>,</span><span class="actionscript">      unit: <span class="hljs-string">"c"</span>,</span><span class="actionscript">      theme: <span class="hljs-string">"auto"</span>,</span><span class="actionscript">      token: <span class="hljs-string">"5fd5b254-57fe-4f8a-8a13-f92485efeb0b"</span>,</span><span class="actionscript">      hover: <span class="hljs-string">"disabled"</span>,</span><span class="actionscript">      container: <span class="hljs-string">"tp-weather-widget"</span></span>    })<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>    <span class="hljs-comment">&lt;!--浏览器搞笑标题--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://cdn.jsdelivr.net/gh/TRHX/CDN-for-itrhx.com@3.0.6/js/FunnyTitle.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-comment">&lt;!--图片放缩-fancybox插件--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://cdn.jsdelivr.net/gh/fancyapps/fancybox@3.5.7/dist/jquery.fancybox.min.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-comment">&lt;!--放大图片--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"stylesheet"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/css"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://blog-static.cnblogs.com/files/zouwangblog/zoom.css"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://cdn.bootcss.com/jquery/1.8.3/jquery.min.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://cdn.bootcss.com/bootstrap/3.2.0/js/transition.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://blog-static.cnblogs.com/files/zouwangblog/zoom.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">'text/javascript'</span>&gt;</span><span class="javascript">$(<span class="hljs-string">'#cnblogs_post_body img'</span>).attr(<span class="hljs-string">'data-action'</span>, <span class="hljs-string">'zoom'</span>);</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-comment">&lt;!--放大图片end--&gt;</span><span class="hljs-comment">&lt;!--樱花瓣飘落--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://cdn.jsdelivr.net/gh/TRHX/CDN-for-love109.cn@2.0.6/js/sakura.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-comment">&lt;!--速度优化脚本--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://cdn.jsdelivr.net/gh/TRHX/CDN-for-itrhx.com@2.0.6/js/instantclick-1.2.2.js"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"module"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-comment">&lt;!--热门标签，旋转，来自https://arlxn.xyz/--&gt;</span><span class="hljs-comment">&lt;!--tagcloud.ejs--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://createdestruction.github.io/js/tagcanvas.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://createdestruction.github.io/js/tagcloud.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-comment">&lt;!--宅音乐播放器 https://player.ilt.me/admin--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"ilt"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://player.ilt.me/player/js/player.js"</span> <span class="hljs-attr">key</span>=<span class="hljs-string">"992f0d81b6b74b93b6bbdb56f57a6c58"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-comment">&lt;!--闲聊么http://www.xianliao.me/faq&lt;script&gt;var xlm_wid='15920';var xlm_url='https://www.xianliao.me/';&lt;/script&gt;&lt;script type="text/javascript" charset="UTF-8" src="https://www.xianliao.me/embed.js"&gt;&lt;/script&gt;--&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">center</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://cdn.jsdelivr.net/npm/typed.js@2.0.11"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span> <span class="hljs-comment">&lt;!--打字机--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"text-align: center;font-weight: bold;color: #1BC3FB;"</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"subtitle1"</span>&gt;</span>没有伞的孩子必须努力奔跑！<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"typed-cursor typed-cursor--blink"</span>&gt;</span>|<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"typed-cursor"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-comment">&lt;!-- 打字特效（蓝色字体） --&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://cdn.jsdelivr.net/npm/typed.js@2.0.11"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="actionscript"><span class="hljs-keyword">var</span> typed = <span class="hljs-keyword">new</span> Typed(<span class="hljs-string">"#subtitle1"</span>, { strings: [<span class="hljs-string">"Live a good life, write some good code !!!"</span>, <span class="hljs-string">"愿自己的努力终将获得回报。"</span>, <span class="hljs-string">"花开不是为了花落，而是为了开的更加灿烂。"</span>, <span class="hljs-string">"没有伞的孩子必须努力奔跑！"</span>, <span class="hljs-string">"欲望以提升热忱，毅力以磨平高山。"</span>, <span class="hljs-string">"如果放弃太早，你永远都不知道自己会错过什么。"</span>, <span class="hljs-string">"没有礁石，就没有美丽的浪花；没有挫折，就没有壮丽的人生。"</span>], startDelay: <span class="hljs-number">1000</span>, typeSpeed: <span class="hljs-number">100</span>, loop: !<span class="hljs-number">0</span>, backSpeed: <span class="hljs-number">60</span>, backDelay: <span class="hljs-number">2000</span>, showCursor: !<span class="hljs-number">0</span> })</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-comment">&lt;!--建站运行时长--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">    <span class="hljs-keyword">var</span> now = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(); </span><span class="actionscript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createtime</span><span class="hljs-params">()</span> </span>{ </span><span class="javascript">        <span class="hljs-keyword">var</span> grt= <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(<span class="hljs-string">"06/11/2019 17:38:00"</span>);<span class="hljs-comment">//在此处修改你的建站时间，格式：月/日/年 时:分:秒</span></span>        now.setTime(now.getTime()+250); <span class="javascript">        days = (now - grt ) / <span class="hljs-number">1000</span> / <span class="hljs-number">60</span> / <span class="hljs-number">60</span> / <span class="hljs-number">24</span>; dnum = <span class="hljs-built_in">Math</span>.floor(days); </span><span class="javascript">        hours = (now - grt ) / <span class="hljs-number">1000</span> / <span class="hljs-number">60</span> / <span class="hljs-number">60</span> - (<span class="hljs-number">24</span> * dnum); hnum = <span class="hljs-built_in">Math</span>.floor(hours); </span><span class="javascript">        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">String</span>(hnum).length ==<span class="hljs-number">1</span> ){hnum = <span class="hljs-string">"0"</span> + hnum;} minutes = (now - grt ) / <span class="hljs-number">1000</span> /<span class="hljs-number">60</span> - (<span class="hljs-number">24</span> * <span class="hljs-number">60</span> * dnum) - (<span class="hljs-number">60</span> * hnum); </span><span class="javascript">        mnum = <span class="hljs-built_in">Math</span>.floor(minutes); <span class="hljs-keyword">if</span>(<span class="hljs-built_in">String</span>(mnum).length ==<span class="hljs-number">1</span> ){mnum = <span class="hljs-string">"0"</span> + mnum;} </span>        seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum); <span class="javascript">        snum = <span class="hljs-built_in">Math</span>.round(seconds); <span class="hljs-keyword">if</span>(<span class="hljs-built_in">String</span>(snum).length ==<span class="hljs-number">1</span> ){snum = <span class="hljs-string">"0"</span> + snum;} </span><span class="javascript">        <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"timeDate"</span>).innerHTML = <span class="hljs-string">"小站勉强运行了 "</span>+dnum+<span class="hljs-string">" 天 "</span>; </span><span class="javascript">        <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"times"</span>).innerHTML = hnum + <span class="hljs-string">" 小时 "</span> + mnum + <span class="hljs-string">" 分 "</span> + snum + <span class="hljs-string">" 秒 ( ͡° ͜ʖ ͡°)✧ "</span>; </span>    } <span class="actionscript">setInterval(<span class="hljs-string">"createtime()"</span>,<span class="hljs-number">250</span>);</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"timeDate"</span>&gt;</span>载入天数...<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"times"</span>&gt;</span>载入时分秒...<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>     <span class="hljs-comment">&lt;!--网站访客地理信息--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"//rf.revolvermaps.com/0/0/8.js?i=5eqiqb8vl6p&amp;m=2&amp;c=ff0000&amp;cr1=ffffff&amp;f=arial&amp;l=33&amp;z=17&amp;rx=-40&amp;lx=-540&amp;ly=520&amp;hi=60"</span> <span class="hljs-attr">async</span>=<span class="hljs-string">"async"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">center</span>&gt;</span><span class="hljs-comment">&lt;!--cnzz统计--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">center</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span>&gt;</span><span class="javascript"><span class="hljs-built_in">document</span>.write(<span class="hljs-built_in">unescape</span>(<span class="hljs-string">"%3Cspan id='cnzz_stat_icon_'%3E%3C/span%3E%3Cscript src='' type='text/javascript'"</span>));</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">center</span>&gt;</span></code></pre></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    <categories>
      
      <category>uncategorized</category>
      
    </categories>
    
    
    <tags>
      
      <tag>小技巧</tag>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>What？框架？</title>
    <link href="/blog/2020/07/11/What%EF%BC%9F%E6%A1%86%E6%9E%B6%EF%BC%9F/"/>
    <url>/blog/2020/07/11/What%EF%BC%9F%E6%A1%86%E6%9E%B6%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<h1 id="什么是框架"><a href="#什么是框架" class="headerlink" title="什么是框架"></a>什么是框架</h1><blockquote><p>框架（<code>Framework</code>）是整个或部分系统的可重用设计，表现为一组抽象构件及构件实例间交互的方法;另一种定义认为，框架是可被应用开发者定制的应用骨架。</p><p><strong>前者是从应用方面而后者是从目的方面给出的定义</strong>。</p></blockquote><p>​        简而言之，框架其实就是某种应用的半成品，就是一组组件，供你选用完成你自己的系统。简单说就是使用别人搭好的舞台，你来做表演。而且，框架一般是成熟的，不断升级的软件。</p><p>​    它是我门软件开发种的一套解决方案，不同框架解决不同问题。</p><a id="more"></a><h2 id="框架要解决的问题"><a href="#框架要解决的问题" class="headerlink" title="框架要解决的问题"></a>框架要解决的问题</h2><p><strong>框架要解决的最重要的一个问题是技术整合的问题。</strong></p><blockquote><p>在<code>J2EE</code>的框架中，有着各种各样的技术，不同的软件企业需要从J2EE中选择不同的技术，这就使得软件企业最终的应用依赖于这些技术，技术自身的复杂性和技术的风险性将会直接对应用造成冲击。</p><p>而应用是软件企业的核心，是竞争力的关键所在，因此应该将应用自身的设计和具体的实现技术解耦。</p><p>这样，软件企业的研发将集中在应用的设计上，而不是具体的技术实现，技术实现是应用的底层支撑，它不应该直接对应用产生影响。</p></blockquote><p><font color="red">框架一般处在低层应用平台（如J2EE）和高层业务逻辑之间的中间层。</font></p><h2 id="软件开发的分层重要性"><a href="#软件开发的分层重要性" class="headerlink" title="软件开发的分层重要性"></a>软件开发的分层重要性</h2><p>框架的<strong>重要性在于它实现了部分功能，并且能够很好的将低层应用平台和高层业务逻辑进行了缓和。</strong></p><p>为了实现软件工程中的<strong>“高内聚、低耦合”</strong>。</p><p>把问题划分开来各个解决，易于控制，易于延展，易于分配资源。</p><p>我们常见的<strong><code>MVC</code>软件设计思想</strong>就是很好的分层思想。</p><p>👉关于<a href="https://melodyjerry.gitee.io/blog/2020/02/27/MVC：开发模式/" target="_blank" rel="noopener">MVC：开发模式</a></p><p><img src="https://s1.ax1x.com/2020/07/11/UluqhD.png" srcset="/blog/img/loading.gif" alt="UluqhD.png"></p><h2 id="分层开发下的常见框架"><a href="#分层开发下的常见框架" class="headerlink" title="分层开发下的常见框架"></a>分层开发下的常见框架</h2><h3 id="常见的JavaEE开发框架"><a href="#常见的JavaEE开发框架" class="headerlink" title="常见的JavaEE开发框架"></a>常见的JavaEE开发框架</h3><h3 id="1-解决数据的持久化问题的框架"><a href="#1-解决数据的持久化问题的框架" class="headerlink" title="1.解决数据的持久化问题的框架"></a>1.解决数据的持久化问题的框架</h3><p><img src="https://s1.ax1x.com/2020/07/11/UlKaE6.png" srcset="/blog/img/loading.gif" alt="UlKaE6.png"></p><blockquote><p>作为持久层的框架，还有一个封装程度更高的框架就是<code>Hibernate</code>，但这个框架因为各种原因目前在国内的流行程度下降太多，现在公司开发也越来越少使用。</p></blockquote><p>目前使用<code>Spring Data</code>来实现数据持久化也是一种趋势。</p><h4 id="2-解决Web层问题的MVC框架"><a href="#2-解决Web层问题的MVC框架" class="headerlink" title="2.解决Web层问题的MVC框架"></a>2.解决Web层问题的MVC框架</h4><p><img src="https://s1.ax1x.com/2020/07/11/UlMka6.png" srcset="/blog/img/loading.gif" alt="UlMka6.png"></p><h4 id="3-解决技术整合问题的框架"><a href="#3-解决技术整合问题的框架" class="headerlink" title="3.解决技术整合问题的框架"></a>3.解决技术整合问题的框架</h4><p><img src="https://s1.ax1x.com/2020/07/11/UlM3If.png" srcset="/blog/img/loading.gif" alt="UlM3If.png"></p><h1 id="三层架构"><a href="#三层架构" class="headerlink" title="三层架构"></a>三层架构</h1><p><img src="https://s1.ax1x.com/2020/07/11/UllVjH.png" srcset="/blog/img/loading.gif" alt="UllVjH.png"></p><h2 id="表示层"><a href="#表示层" class="headerlink" title="表示层"></a>表示层</h2><ul><li>用于展示数据</li></ul><h2 id="业务层"><a href="#业务层" class="headerlink" title="业务层"></a>业务层</h2><ul><li>处理业务需求</li></ul><h2 id="持久层"><a href="#持久层" class="headerlink" title="持久层"></a>持久层</h2><ul><li>和数据库交互</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>JavaWeb</tag>
      
      <tag>Java</tag>
      
      <tag>Web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git Bash 命令大全</title>
    <link href="/blog/2020/07/10/Git-Bash-%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/"/>
    <url>/blog/2020/07/10/Git-Bash-%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="仓库"><a href="#仓库" class="headerlink" title="仓库"></a>仓库</h2><p>在当前目录新建一个Git代码库</p><div class="hljs"><pre><code class="hljs elixir">复制<span class="hljs-variable">$ </span>git init</code></pre></div><p>新建一个目录，将其初始化为Git代码库</p><div class="hljs"><pre><code class="hljs applescript">复制$ git init [project-<span class="hljs-built_in">name</span>]</code></pre></div><p>下载一个项目和它的整个代码历史</p><div class="hljs"><pre><code class="hljs crmsh">复制$ git <span class="hljs-keyword">clone</span> <span class="hljs-title">[url</span>]</code></pre></div><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>显示当前的Git配置</p><div class="hljs"><pre><code class="hljs routeros">复制$ git<span class="hljs-built_in"> config </span>--list</code></pre></div><p>编辑Git配置文件</p><div class="hljs"><pre><code class="hljs routeros">复制$ git<span class="hljs-built_in"> config </span>-e [--global]</code></pre></div><p>设置提交代码时的用户信息</p><div class="hljs"><pre><code class="hljs routeros">复制$ git<span class="hljs-built_in"> config </span>[--global] user.name <span class="hljs-string">"[name]"</span>$ git<span class="hljs-built_in"> config </span>[--global] user.email <span class="hljs-string">"[email address]"</span></code></pre></div><h2 id="增加-删除文件"><a href="#增加-删除文件" class="headerlink" title="增加/删除文件"></a>增加/删除文件</h2><p>添加指定文件到暂存区</p><div class="hljs"><pre><code class="hljs prolog">复制$ git add [file1] [file2] ...</code></pre></div><p>添加指定目录到暂存区，包括子目录</p><div class="hljs"><pre><code class="hljs dockerfile">复制$ git <span class="hljs-keyword">add</span><span class="bash"> [dir]</span></code></pre></div><p>添加当前目录的所有文件到暂存区</p><div class="hljs"><pre><code class="hljs dockerfile">复制$ git <span class="hljs-keyword">add</span><span class="bash"> .</span></code></pre></div><p>添加每个变化前，都会要求确认，对于同一个文件的多处变化，可以实现分次提交</p><div class="hljs"><pre><code class="hljs dockerfile">复制$ git <span class="hljs-keyword">add</span><span class="bash"> -p</span></code></pre></div><p>删除工作区文件，并且将这次删除放入暂存区</p><div class="hljs"><pre><code class="hljs prolog">复制$ git rm [file1] [file2] ...</code></pre></div><p>停止追踪指定文件，但该文件会保留在工作区</p><div class="hljs"><pre><code class="hljs gams">复制<span class="hljs-symbol">$</span> git rm --cached [<span class="hljs-keyword">file</span>]</code></pre></div><p>改名文件，并且将这个改名放入暂存区</p><div class="hljs"><pre><code class="hljs gams">复制<span class="hljs-symbol">$</span> git mv [<span class="hljs-keyword">file</span>-original] [<span class="hljs-keyword">file</span>-renamed]</code></pre></div><h2 id="代码提交"><a href="#代码提交" class="headerlink" title="代码提交"></a>代码提交</h2><p>提交暂存区到仓库区</p><div class="hljs"><pre><code class="hljs cmake">复制$ git commit -m [<span class="hljs-keyword">message</span>]</code></pre></div><p>提交暂存区的指定文件到仓库区</p><div class="hljs"><pre><code class="hljs inform7">复制$ git commit <span class="hljs-comment">[file1]</span> <span class="hljs-comment">[file2]</span> ... -m <span class="hljs-comment">[message]</span></code></pre></div><p>提交工作区自上次commit之后的变化，直接到仓库区</p><div class="hljs"><pre><code class="hljs elixir">复制<span class="hljs-variable">$ </span>git commit -a</code></pre></div><p>提交时显示所有diff信息</p><div class="hljs"><pre><code class="hljs elixir">复制<span class="hljs-variable">$ </span>git commit -v</code></pre></div><p>使用一次新的commit，替代上一次提交<br>如果代码没有任何新变化，则用来改写上一次commit的提交信息</p><div class="hljs"><pre><code class="hljs pgsql">复制$ git <span class="hljs-keyword">commit</span> <span class="hljs-comment">--amend -m [message]</span></code></pre></div><p>重做上一次commit，并包括指定文件的新变化</p><div class="hljs"><pre><code class="hljs prolog">复制$ git commit --amend [file1] [file2] ...</code></pre></div><h2 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h2><p>列出所有本地分支</p><div class="hljs"><pre><code class="hljs elixir">复制<span class="hljs-variable">$ </span>git branch</code></pre></div><p>列出所有远程分支</p><div class="hljs"><pre><code class="hljs armasm">复制$ git <span class="hljs-keyword">branch </span>-r</code></pre></div><p>列出所有本地分支和远程分支</p><div class="hljs"><pre><code class="hljs armasm">复制$ git <span class="hljs-keyword">branch </span>-a</code></pre></div><p>新建一个分支，但依然停留在当前分支</p><div class="hljs"><pre><code class="hljs applescript">复制$ git branch [branch-<span class="hljs-built_in">name</span>]</code></pre></div><p>新建一个分支，并切换到该分支</p><div class="hljs"><pre><code class="hljs armasm">复制$ git checkout -<span class="hljs-keyword">b </span>[<span class="hljs-keyword">branch]</span></code></pre></div><p>新建一个分支，指向指定commit</p><div class="hljs"><pre><code class="hljs armasm">复制$ git <span class="hljs-keyword">branch </span>[<span class="hljs-keyword">branch] </span>[commit]</code></pre></div><p>新建一个分支，与指定的远程分支建立追踪关系</p><div class="hljs"><pre><code class="hljs armasm">复制$ git <span class="hljs-keyword">branch </span>--track [<span class="hljs-keyword">branch] </span>[remote-<span class="hljs-keyword">branch]</span></code></pre></div><p>切换到指定分支，并更新工作区</p><div class="hljs"><pre><code class="hljs applescript">复制$ git checkout [branch-<span class="hljs-built_in">name</span>]</code></pre></div><p>切换到上一个分支</p><div class="hljs"><pre><code class="hljs elixir">复制<span class="hljs-variable">$ </span>git checkout -</code></pre></div><p>建立追踪关系，在现有分支与指定的远程分支之间</p><div class="hljs"><pre><code class="hljs gams">复制<span class="hljs-symbol">$</span> git branch --<span class="hljs-keyword">set</span>-upstream <span class="hljs-comment">[branch] [remote-branch]</span></code></pre></div><p>合并指定分支到当前分支</p><div class="hljs"><pre><code class="hljs cos">复制$ git <span class="hljs-keyword">merge</span> [branch]</code></pre></div><p>选择一个commit，合并进当前分支</p><div class="hljs"><pre><code class="hljs elixir">复制<span class="hljs-variable">$ </span>git cherry-pick [commit]</code></pre></div><p>删除分支</p><div class="hljs"><pre><code class="hljs applescript">复制$ git branch -d [branch-<span class="hljs-built_in">name</span>]</code></pre></div><p>删除远程分支</p><div class="hljs"><pre><code class="hljs armasm">复制$ git <span class="hljs-keyword">push </span>origin --delete [<span class="hljs-keyword">branch-name]</span><span class="hljs-keyword">$ </span>git <span class="hljs-keyword">branch </span>-dr [remote/<span class="hljs-keyword">branch]</span></code></pre></div><h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><p>列出所有tag</p><div class="hljs"><pre><code class="hljs crmsh">复制$ git <span class="hljs-keyword">tag</span></code></pre></div><p>新建一个tag在当前commit</p><div class="hljs"><pre><code class="hljs crmsh">复制$ git <span class="hljs-keyword">tag</span> <span class="hljs-title">[tag</span>]</code></pre></div><p>新建一个tag在指定commit</p><div class="hljs"><pre><code class="hljs crmsh">复制$ git <span class="hljs-keyword">tag</span> <span class="hljs-title">[tag</span>] [commit]</code></pre></div><p>删除本地tag</p><div class="hljs"><pre><code class="hljs crmsh">复制$ git <span class="hljs-keyword">tag</span> <span class="hljs-title">-d</span> [<span class="hljs-keyword">tag</span>]</code></pre></div><p>删除远程tag</p><div class="hljs"><pre><code class="hljs elixir">复制<span class="hljs-variable">$ </span>git push origin <span class="hljs-symbol">:refs/tags/</span>[tagName]</code></pre></div><p>查看tag信息</p><div class="hljs"><pre><code class="hljs crmsh">复制$ git show [<span class="hljs-keyword">tag</span>]</code></pre></div><p>提交指定tag</p><div class="hljs"><pre><code class="hljs inform7">复制$ git push <span class="hljs-comment">[remote]</span> <span class="hljs-comment">[tag]</span></code></pre></div><p>提交所有tag</p><div class="hljs"><pre><code class="hljs ada">复制$ git push [remote] <span class="hljs-comment">--tags</span></code></pre></div><p>新建一个分支，指向某个tag</p><div class="hljs"><pre><code class="hljs armasm">复制$ git checkout -<span class="hljs-keyword">b </span>[<span class="hljs-keyword">branch] </span>[tag]</code></pre></div><h2 id="查看信息"><a href="#查看信息" class="headerlink" title="查看信息"></a>查看信息</h2><p>显示有变更的文件</p><div class="hljs"><pre><code class="hljs elixir">复制<span class="hljs-variable">$ </span>git status</code></pre></div><p>显示当前分支的版本历史</p><div class="hljs"><pre><code class="hljs gams">复制<span class="hljs-symbol">$</span> git <span class="hljs-built-in">log</span></code></pre></div><p>显示commit历史，以及每次commit发生变更的文件</p><div class="hljs"><pre><code class="hljs applescript">复制$ git <span class="hljs-built_in">log</span> <span class="hljs-comment">--stat</span></code></pre></div><p>搜索提交历史，根据关键词</p><div class="hljs"><pre><code class="hljs gams">复制<span class="hljs-symbol">$</span> git <span class="hljs-built-in">log</span> -S [keyword]</code></pre></div><p>显示某个commit之后的所有变动，每个commit占据一行</p><div class="hljs"><pre><code class="hljs applescript">复制$ git <span class="hljs-built_in">log</span> [tag] HEAD <span class="hljs-comment">--pretty=format:%s</span></code></pre></div><p>显示某个commit之后的所有变动，其”提交说明”必须符合搜索条件</p><div class="hljs"><pre><code class="hljs vim">复制$ git <span class="hljs-built_in">log</span> [<span class="hljs-keyword">tag</span>] HEAD --<span class="hljs-keyword">grep</span> feature</code></pre></div><p>显示某个文件的版本历史，包括文件改名</p><div class="hljs"><pre><code class="hljs gams">复制<span class="hljs-symbol">$</span> git <span class="hljs-built-in">log</span> --follow [<span class="hljs-keyword">file</span>]<span class="hljs-symbol">$</span> git whatchanged [<span class="hljs-keyword">file</span>]</code></pre></div><p>显示指定文件相关的每一次diff</p><div class="hljs"><pre><code class="hljs gams">复制<span class="hljs-symbol">$</span> git <span class="hljs-built-in">log</span> -p [<span class="hljs-keyword">file</span>]</code></pre></div><p>显示过去5次提交</p><div class="hljs"><pre><code class="hljs applescript">复制$ git <span class="hljs-built_in">log</span> <span class="hljs-number">-5</span> <span class="hljs-comment">--pretty --oneline</span></code></pre></div><p>显示所有提交过的用户，按提交次数排序</p><div class="hljs"><pre><code class="hljs armasm">复制$ git shortlog -<span class="hljs-meta">sn</span></code></pre></div><p>显示指定文件是什么人在什么时间修改过</p><div class="hljs"><pre><code class="hljs gams">复制<span class="hljs-symbol">$</span> git blame [<span class="hljs-keyword">file</span>]</code></pre></div><p>显示暂存区和工作区的差异</p><div class="hljs"><pre><code class="hljs elixir">复制<span class="hljs-variable">$ </span>git diff</code></pre></div><p>显示暂存区和上一个commit的差异</p><div class="hljs"><pre><code class="hljs gams">复制<span class="hljs-symbol">$</span> git diff --cached [<span class="hljs-keyword">file</span>]</code></pre></div><p>显示工作区与当前分支最新commit之间的差异</p><div class="hljs"><pre><code class="hljs elixir">复制<span class="hljs-variable">$ </span>git diff HEAD</code></pre></div><p>显示两次提交之间的差异</p><div class="hljs"><pre><code class="hljs maxima">复制$ git <span class="hljs-built_in">diff</span> [<span class="hljs-built_in">first</span>-branch]...[<span class="hljs-built_in">second</span>-branch]</code></pre></div><p>显示今天你写了多少行代码</p><div class="hljs"><pre><code class="hljs mipsasm">复制$ git <span class="hljs-keyword">diff </span>--<span class="hljs-keyword">shortstat </span><span class="hljs-string">"@{0 day ago}"</span></code></pre></div><p>显示某次提交的元数据和内容变化</p><div class="hljs"><pre><code class="hljs pgsql">复制$ git <span class="hljs-keyword">show</span> [<span class="hljs-keyword">commit</span>]</code></pre></div><p>显示某次提交发生变化的文件</p><div class="hljs"><pre><code class="hljs fortran">复制$ git show --<span class="hljs-keyword">name</span>-<span class="hljs-keyword">only</span> [commit]</code></pre></div><p>显示某次提交时，某个文件的内容</p><div class="hljs"><pre><code class="hljs inform7">复制$ git show <span class="hljs-comment">[commit]</span>:<span class="hljs-comment">[filename]</span></code></pre></div><p>显示当前分支的最近几次提交</p><div class="hljs"><pre><code class="hljs angelscript">复制$ git <span class="hljs-built_in">ref</span>log</code></pre></div><h2 id="远程同步"><a href="#远程同步" class="headerlink" title="远程同步"></a>远程同步</h2><p>下载远程仓库的所有变动</p><div class="hljs"><pre><code class="hljs elixir">复制<span class="hljs-variable">$ </span>git fetch [remote]</code></pre></div><p>显示所有远程仓库</p><div class="hljs"><pre><code class="hljs elixir">复制<span class="hljs-variable">$ </span>git remote -v</code></pre></div><p>显示某个远程仓库的信息</p><div class="hljs"><pre><code class="hljs dart">复制$ git remote <span class="hljs-keyword">show</span> [remote]</code></pre></div><p>增加一个新的远程仓库，并命名</p><div class="hljs"><pre><code class="hljs dockerfile">复制$ git remote <span class="hljs-keyword">add</span><span class="bash"> [shortname] [url]</span></code></pre></div><p>取回远程仓库的变化，并与本地分支合并</p><div class="hljs"><pre><code class="hljs inform7">复制$ git pull <span class="hljs-comment">[remote]</span> <span class="hljs-comment">[branch]</span></code></pre></div><p>上传本地指定分支到远程仓库</p><div class="hljs"><pre><code class="hljs inform7">复制$ git push <span class="hljs-comment">[remote]</span> <span class="hljs-comment">[branch]</span></code></pre></div><p>强行推送当前分支到远程仓库，即使有冲突</p><div class="hljs"><pre><code class="hljs ada">复制$ git push [remote] <span class="hljs-comment">--force</span></code></pre></div><p>推送所有分支到远程仓库</p><div class="hljs"><pre><code class="hljs gams">复制<span class="hljs-symbol">$</span> git push [remote] --<span class="hljs-keyword">all</span></code></pre></div><h2 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h2><p>恢复暂存区的指定文件到工作区</p><div class="hljs"><pre><code class="hljs gams">复制<span class="hljs-symbol">$</span> git checkout [<span class="hljs-keyword">file</span>]</code></pre></div><p>恢复某个commit的指定文件到暂存区和工作区</p><div class="hljs"><pre><code class="hljs gams">复制<span class="hljs-symbol">$</span> git checkout [commit] [<span class="hljs-keyword">file</span>]</code></pre></div><p>恢复暂存区的所有文件到工作区</p><div class="hljs"><pre><code class="hljs elixir">复制<span class="hljs-variable">$ </span>git checkout .</code></pre></div><p>重置暂存区的指定文件，与上一次commit保持一致，但工作区不变</p><div class="hljs"><pre><code class="hljs gams">复制<span class="hljs-symbol">$</span> git reset [<span class="hljs-keyword">file</span>]</code></pre></div><p>重置暂存区与工作区，与上一次commit保持一致</p><div class="hljs"><pre><code class="hljs pgsql">复制$ git <span class="hljs-keyword">reset</span> <span class="hljs-comment">--hard</span></code></pre></div><p>重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变</p><div class="hljs"><pre><code class="hljs pgsql">复制$ git <span class="hljs-keyword">reset</span> [<span class="hljs-keyword">commit</span>]</code></pre></div><p>重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致</p><div class="hljs"><pre><code class="hljs pgsql">复制$ git <span class="hljs-keyword">reset</span> <span class="hljs-comment">--hard [commit]</span></code></pre></div><p>重置当前HEAD为指定commit，但保持暂存区和工作区不变</p><div class="hljs"><pre><code class="hljs pgsql">复制$ git <span class="hljs-keyword">reset</span> <span class="hljs-comment">--keep [commit]</span></code></pre></div><p>新建一个commit，用来撤销指定commit<br>后者的所有变化都将被前者抵消，并且应用到当前分支</p><div class="hljs"><pre><code class="hljs armasm">复制$ git <span class="hljs-keyword">revert </span>[commit]</code></pre></div><p>暂时将未提交的变化移除，稍后再移入</p><div class="hljs"><pre><code class="hljs elixir">复制<span class="hljs-variable">$ </span>git stash<span class="hljs-variable">$ </span>git stash pop</code></pre></div><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>生成一个可供发布的压缩包</p><div class="hljs"><pre><code class="hljs elixir">复制<span class="hljs-variable">$ </span>git archive</code></pre></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    <categories>
      
      <category>uncategorized</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>「hexo.sh」一个方便管理与发布hexo博客的脚本</title>
    <link href="/blog/2020/07/10/%E3%80%8Chexo.sh%E3%80%8D%E4%B8%80%E4%B8%AA%E6%96%B9%E4%BE%BF%E7%AE%A1%E7%90%86%E4%B8%8E%E5%8F%91%E5%B8%83hexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%84%9A%E6%9C%AC/"/>
    <url>/blog/2020/07/10/%E3%80%8Chexo.sh%E3%80%8D%E4%B8%80%E4%B8%AA%E6%96%B9%E4%BE%BF%E7%AE%A1%E7%90%86%E4%B8%8E%E5%8F%91%E5%B8%83hexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%84%9A%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<p><a href="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/proj/hexo.sh/e14f6ecb16deb21e894e78c9ccc46729854394.png" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/proj/hexo.sh/e14f6ecb16deb21e894e78c9ccc46729854394.png" srcset="/blog/img/loading.gif" alt="img"></a></p><p>「<code>hexo.sh</code>」脚本可以很方便执行各种 hexo 命令，开启后会一直保持会话，随时输入 <code>c</code>、<code>cs</code>、<code>cg</code>、<code>cgd</code> 等简短的命令去执行一系列操作，提高效率。</p><div class="hljs"><pre><code class="hljs properties"><span class="hljs-meta">例如，`cs`相当于：hexo</span> <span class="hljs-string">clean</span><span class="hljs-attr">hexo</span> <span class="hljs-string">s</span><span class="hljs-meta">`cgd`相当于：hexo</span> <span class="hljs-string">clean</span><span class="hljs-attr">hexo</span> <span class="hljs-string">g</span><span class="hljs-attr">hexo</span> <span class="hljs-string">d</span><span class="hljs-attr">git</span> <span class="hljs-string">add --all</span><span class="hljs-attr">git</span> <span class="hljs-string">commit -am "update all"</span><span class="hljs-attr">git</span> <span class="hljs-string">push origin</span></code></pre></div><h2 id="下载并安装脚本"><a href="#下载并安装脚本" class="headerlink" title="下载并安装脚本"></a>下载并安装脚本</h2><p>打开终端，输入这行命令：</p><div class="hljs"><pre><code class="hljs vim">curl -s http<span class="hljs-variable">s:</span>//xaoxuu.<span class="hljs-keyword">com</span>/install | <span class="hljs-keyword">sh</span> -s hexo.<span class="hljs-keyword">sh</span></code></pre></div><p>如需安装指定版本，在后面加上版本号即可，例如：</p><div class="hljs"><pre><code class="hljs vim">curl -s http<span class="hljs-variable">s:</span>//xaoxuu.<span class="hljs-keyword">com</span>/install | <span class="hljs-keyword">sh</span> -s hexo.<span class="hljs-keyword">sh</span> <span class="hljs-number">2.1</span>.<span class="hljs-number">0</span></code></pre></div><h2 id="启动脚本"><a href="#启动脚本" class="headerlink" title="启动脚本"></a>启动脚本</h2><p>在终端输入如下命令即可打开脚本：</p><div class="hljs"><pre><code class="hljs css"><span class="hljs-selector-tag">hexo</span><span class="hljs-selector-class">.sh</span></code></pre></div><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>在终端输入如下命令即可查看脚本所有支持的指令：</p><div class="hljs"><pre><code class="hljs stata">hexo.<span class="hljs-keyword">sh</span> <span class="hljs-keyword">help</span></code></pre></div><p>如果是脚本已经启动（可以看到脚本菜单，处于待输入指令的状态），则只需要输入 <code>help</code>，下文其它情景同理。</p><p>下面是一些常见使用场景：</p><h3 id="A-使用脚本快速搭建博客"><a href="#A-使用脚本快速搭建博客" class="headerlink" title="A. 使用脚本快速搭建博客"></a>A. 使用脚本快速搭建博客</h3><p>let <code>path</code> = 你想把博客放在哪里，打开终端 <strong><code>cd</code> 到 <code>path</code></strong> 。</p><p>在终端输入如下命令自动检查并安装所有需要的环境，然后搭建并启动博客：</p><div class="hljs"><pre><code class="hljs reasonml"><span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">COPYhexo</span>.</span></span>sh init</code></pre></div><p>脚本会依次执行以下这些操作：</p><ol><li>检测node.js环境，如果没有就安装。</li><li>检测hexo环境，如果没有就安装。</li><li>输入自定义博客名，在当前目录执行初始化。</li><li>安装Material X主题。</li><li>安装所有依赖包。</li></ol><blockquote><p>注意：安装node.js或者hexo的时候需要输入一次<strong>本机密码</strong>，别忘了哦。<br>搭建博客的时候你需要输入<strong>博客名</strong>，其他时间就可以坐和放宽了。</p></blockquote><h3 id="B-使用脚本快速更新博客"><a href="#B-使用脚本快速更新博客" class="headerlink" title="B. 使用脚本快速更新博客"></a>B. 使用脚本快速更新博客</h3><p>let <code>path</code> = 你的博客路径，打开终端 <code>cd</code> 到 <code>path</code> 。</p><p>在终端输入如下命令启动博客：</p><div class="hljs"><pre><code class="hljs css"><span class="hljs-selector-tag">hexo</span><span class="hljs-selector-class">.sh</span> <span class="hljs-selector-tag">s</span></code></pre></div><p>然后修改你的文章、博客主题，如果修改了 <code>_config.yml</code> 是需要重新启动博客的，有些参数甚至需要 <code>clean</code> 之后重启才能生效，这时候你只需要在终端脚本【请输入指令】后面输入：</p><div class="hljs"><pre><code class="hljs ebnf"><span class="hljs-attribute">cs</span></code></pre></div><p>就执行 <code>hexo clean</code>，然后执行 <code>hexo server</code> 了。</p><p>如果你已经修改完毕，需要发布更新，可以在终端脚本【请输入指令】后面输入：</p><div class="hljs"><pre><code class="hljs ebnf"><span class="hljs-attribute">cgd</span></code></pre></div><p>脚本就会执行 <code>hexo clean</code>、<code>hexo generate</code>、<code>hexo deploy</code>，然后执行一系列的git命令把源码的更新提交至远程仓库。</p><h2 id="所有支持的命令"><a href="#所有支持的命令" class="headerlink" title="所有支持的命令"></a>所有支持的命令</h2><p>这是 <code>2.1.0</code> 版本中的所有命令，可能未必准确，以脚本中的帮助信息为准。</p><div class="hljs"><pre><code class="hljs properties"><span class="hljs-meta">常用</span>:<span class="hljs-string"></span>  <span class="hljs-attr">c</span> <span class="hljs-string">(clean)  执行 hexo clean</span>  <span class="hljs-attr">s</span> <span class="hljs-string">(server)  执行 hexo server</span>  <span class="hljs-attr">g</span> <span class="hljs-string">(generate)  执行 hexo generate</span>  <span class="hljs-attr">d</span> <span class="hljs-string">(deploy)  执行 hexo deploy</span>  <span class="hljs-attr">cs</span>   <span class="hljs-string">执行 c, s 的组合</span>  <span class="hljs-attr">cg</span>   <span class="hljs-string">执行 c, g 的组合</span>  <span class="hljs-attr">cgd</span>   <span class="hljs-string">执行 c, g, d 的组合，然后提交代码</span><span class="hljs-meta">安装</span>:<span class="hljs-string"></span>  <span class="hljs-attr">i</span> <span class="hljs-string">(install)  用于安装的命令，下面是install命令的参数:</span>   <span class="hljs-attr">n</span> <span class="hljs-string">(node)       安装node.js环境</span>   <span class="hljs-attr">h</span> <span class="hljs-string">(hexo)       安装hexo环境(npm install hexo-cli -g)</span>   <span class="hljs-attr">b</span> <span class="hljs-string">(blog)       搭建博客(hexo init, npm install)</span>   <span class="hljs-attr">d</span> <span class="hljs-string">(dependency) 安装依赖包(npm install)</span>   <span class="hljs-attr">v</span> <span class="hljs-string">(volantis)   下载并应用「Volantis」主题</span><span class="hljs-meta">自动</span>:<span class="hljs-string"></span>  <span class="hljs-attr">init</span>  <span class="hljs-string">自动检查并安装所有需要的环境，然后搭建并启动博客。👍🏼</span>  <span class="hljs-attr">vut</span>  <span class="hljs-string">下载并运行「Volantis」主题的单元测试。</span><span class="hljs-meta">脚本</span>:<span class="hljs-string"></span>  <span class="hljs-attr">cd</span> <span class="hljs-string">+ `path`  选择路径</span>  <span class="hljs-attr">docs</span>   <span class="hljs-string">查看文档(https://xaoxuu.com/wiki/hexo.sh)</span>  <span class="hljs-attr">gh</span> <span class="hljs-string">(github)  GitHub页面(https://github.com/xaoxuu/hexo.sh)</span>  <span class="hljs-attr">u</span> <span class="hljs-string">(update)  更新脚本文件(当前版本：2.1.0)</span></code></pre></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    <categories>
      
      <category>uncategorized</category>
      
    </categories>
    
    
    <tags>
      
      <tag>小技巧</tag>
      
      <tag>工具</tag>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux命令小记</title>
    <link href="/blog/2020/07/10/Linux%E5%91%BD%E4%BB%A4%E5%B0%8F%E8%AE%B0/"/>
    <url>/blog/2020/07/10/Linux%E5%91%BD%E4%BB%A4%E5%B0%8F%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<a id="more"></a><ol><li><p><code>rpm -q xx</code> 查询xx是否安装</p></li><li><p><code>yum install xx</code> 安装xx软件包</p></li><li><p><code>yum remove xx</code> 卸载xx软件包</p></li><li><p><code>vim /路径</code> 读写文件</p><ul><li>i：编辑模式</li><li>Exc：退出到命令模式</li><li>:wq：保存并退出Vim</li></ul></li><li><p><code>startx</code> （一次性地）从命令行切换到桌面环境</p></li><li><p><code>systemctl get-default</code> 获取当前启动模式</p></li><li><p><code>systemctl set-default graphical.target</code> 修改启动模式为图形化</p></li><li><p><code>systemctl set-default multi-user.target</code> 修改启动模式为命令行</p></li><li><p><code>安装桌面环境</code> 安装桌面环境（这里安装 GNOME）</p></li><li><p><code>systemctl start xx</code>  启动xx服务</p></li><li><p><code>systemctl enable xx</code> 开机自启动xx服务</p></li><li><p><code>firewall-cmd --permanent --zone=public --add-port=3389/tcp</code> 防火墙开放3389端口</p></li><li><p><code>firewall-cmd --reload</code> 重启防火墙</p></li><li><p><code>systemctl stop firewalld</code> 关闭防火墙</p></li><li><p><code>systemctl disable firewalld</code></p><p>禁止防火墙开机启动</p></li><li><p><code>cp /路径</code> 复制文件</p></li><li><p><code>systemctl daemon-reload</code></p><p>让服务文件修改生效</p></li><li><p><code>netstat -lnpt|grep xx</code> 查看xx的服务端口</p></li><li><p><code>sudo yum update -y</code> 更新服务器地软件包</p></li><li><p><code>sudo yum install java-1.8.0-openjdk -y</code> 安装 OpenJRE</p></li><li><p><code>java -version</code>  检测jre是否安装成功</p></li><li><p><code>sudo useradd -m halo</code>  创建一个<strong>低权限</strong>地用户halo</p></li><li><p><code>sudo su halo</code> 登录用户halo</p></li><li><p><code>wget url</code> 下载xx安装包</p></li><li><p><code>useradd [-d home] [-s shell] [-c comment] [-m [-k template]] [-f inactive] [-e expire ] [-p passwd] [-r] name</code>  useradd或adduser命令用来建立用户帐号和创建用户的起始目录，使用权限是超级用户</p><p>主要参数</p><ul><li>-c：加上备注文字，备注文字保存在passwd的备注栏中。</li><li>-d：指定用户登入时的主目录，替换系统默认值/home/&lt;用户名&gt;</li><li>-D：变更预设值。</li><li>-e：指定账号的失效日期，日期格式为MM/DD/YY，例如06/30/12。缺省表示永久有效。</li><li>-f：指定在密码过期后多少天即关闭该账号。如果为0账号立即被停用；如果为-1则账号一直可用。默认值为-1.</li><li>-g：指定用户所属的群组。值可以使组名也可以是GID。用户组必须已经存在的，期默认值为100，即users。</li><li>-G：指定用户所属的附加群组。</li><li>-m：自动建立用户的登入目录。</li><li>-M：不要自动建立用户的登入目录。</li><li>-n：取消建立以用户名称为名的群组。</li><li>-r：建立系统账号。</li><li>-s：指定用户登入后所使用的shell。默认值为/bin/bash。</li><li>-u：指定用户ID号。该值在系统中必须是唯一的。0~499默认是保留给系统用户账号使用的，所以该值必须大于499。</li></ul><blockquote><p><a href="https://www.cnblogs.com/irisrain/p/4324593.html" target="_blank" rel="noopener">https://www.cnblogs.com/irisrain/p/4324593.html</a></p></blockquote></li><li><p><code>w # whoami</code> 查看当前登陆用户</p><div class="hljs"><pre><code class="hljs angelscript"> <span class="hljs-number">12</span>:<span class="hljs-number">10</span>:<span class="hljs-number">27</span> up <span class="hljs-number">21</span>:<span class="hljs-number">13</span>,  <span class="hljs-number">1</span> user,  load average: <span class="hljs-number">0.00</span>, <span class="hljs-number">0.01</span>, <span class="hljs-number">0.08</span>USER          TTY      FROM                 <span class="hljs-symbol">LOGIN@</span>   IDLE   JCPU   PCPU WHATroot            pts/<span class="hljs-number">0</span>    ***.**.***.**    <span class="hljs-number">11</span>:<span class="hljs-number">33</span>    <span class="hljs-number">0.00</span>s  <span class="hljs-number">0.08</span>s  <span class="hljs-number">0.00</span>s   wtmp_3254  ps1       ***.**.***.**     <span class="hljs-number">11</span>:<span class="hljs-number">33</span>    <span class="hljs-number">0.00</span>s  <span class="hljs-number">0.08</span>s  <span class="hljs-number">0.00</span>s   ls</code></pre></div></li></ol><ol start="27"><li><p><code>su xxx # 或者直接 exit</code> 退出当前用户登录，进入一个有管理员权限的用户</p></li><li><p><code>pkill -kill -t [TTY]</code> 强制退出已经登陆用户</p><div class="hljs"><pre><code class="hljs angelscript"><span class="hljs-number">0</span>pkill -kill -t ps1</code></pre></div></li><li><p><code>ls -a # ls --all</code> 查看当前目录下的所有文件</p></li><li><p><code>service xx restart</code>  重启xx应用</p></li><li><p><code>curl -o /路径 --create-dirs  url</code>  下载配置文件、模板等文件</p></li><li><p><code>sudo nginx -t</code> 检查Nginx配置是否有误</p></li><li><p><code>sudo nginx -s reload</code> 重载Nginx配置</p></li><li><p><code>sudo service xx status</code>  查看xx的运行状态</p></li><li><p><code>sudo service halo stop</code>  停止xx</p></li><li><p><code>sudo service halo restart</code> 重启xx</p></li><li><p><code>sudo service halo start</code>  启动xx</p></li><li><p><code>sudo systemctl daemon-reload</code> 修改<strong>service</strong>文件之后需要刷新<strong>Systemd</strong></p></li><li><p><code>sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</code> 添加软件源信息</p></li><li><p><code>sudo yum makecache fast</code> 更新yum缓存</p></li><li><p>镜像加速</p><div class="hljs"><pre><code class="hljs bash"><span class="hljs-comment"># 新建 daemon.json 文件</span>sudo vim /etc/docker/daemon.json</code></pre></div><p>将下面的配置复制进去即可：</p><div class="hljs"><pre><code class="hljs json">{  <span class="hljs-attr">"registry-mirrors"</span>: [<span class="hljs-string">"http://hub-mirror.c.163.com"</span>]}</code></pre></div><blockquote><p>注意：修改完配置文件之后需要执行 <code>service docker restart</code> 才可生效。</p></blockquote></li><li><p><code>sudo docker pull ruibaby/xx</code> 拉取xx的最新镜像</p></li><li><p><code>docker run --rm -it -d --name halo -p 8090:8090  -v ~/.halo:/root/.halo ruibaby/halo</code> 创建容器并运行halo</p><ul><li>–rm：停止之后自动删除容器。</li><li>–name：容器名。</li><li>-p：占用端口，前者为宿主机端口，后者为 Halo 的运行端口，可在 <code>application.yaml</code> 配置。</li><li>-v：目录映射，一般不要修改。</li></ul></li><li><p><code>netstat -tln # netstat -tln | grep 8080</code> 查找被占用的端口（可接特定端口号）</p></li><li><p><code>netstat -ntlp</code> 查看其他端口</p></li><li><p><code>lsof -i:8060</code> 查看端口属于哪个程序、端口被哪个进程占用</p></li><li><p><code>kill -9 进程id</code> 杀掉占用端口的进程 根据pid杀掉</p></li><li><p><code>shutdown -h now</code>  立即关机</p></li><li><p><code>shutdown -r now # reboot</code>  立即重启</p></li><li><p><code>docker run --name some-wordpress --link some-mysql:mysql -d wordpress</code> 参数说明：</p><ul><li><code>--name</code> 容器的的名字</li><li><code>--link</code> 和其他容器做连接</li><li><code>-d/--detach</code> 后台运行</li></ul></li><li><p><code>docker run -d --privileged=true --name myMysql -v /data/mysql:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 -p 33306:3306 mysql:5.6</code> 参数解释：</p><ul><li>-p: 端口映射，33306表示宿主，3306表示容器中的端口。 这里表示将宿主机的33306映射给镜像的3306.</li><li>-e: 环境变量， 环境变量和具体的Docker容器制作时设置有关，这里表示设置镜像中MySQL的root 密码时123456</li><li>-v: 指定数据卷，也就是将我们MySQL容器的<code>/var/lib/mysql</code>映射到宿主机的<code>/data/mysql</code></li><li><code>--privileged=true:</code> CentOS系统下的安全Selinux禁止了一些安全权限，导致MySQL容器在运行时会因为权限不足而报错，所以需要增加该选项</li></ul></li><li><p><code>docker ps -a</code>  查看MySQL是否正常运行</p></li><li><p><code>docker stop 容器名</code>  停止运行</p></li><li><p><code>docker rm 容器名</code>  删除容器（之后去掉<code>-d</code>选项重新运行排查错误）</p></li><li><p>快速批量删除docker镜像或容器</p><blockquote><p>Docker本身并没有提供批量删除的功能，当有大量的镜像或者容器需要删除的时候，手动的一个一个删就比较麻烦了。</p></blockquote><div class="hljs"><pre><code class="hljs nsis"><span class="hljs-comment"># 直接删除所有镜像或容器</span>    <span class="hljs-comment"># 直接删除所有镜像</span>    docker rmi <span class="hljs-string">`docker images -q`</span>    <span class="hljs-comment"># 直接删除所有容器</span>    docker rm <span class="hljs-string">`docker ps -aq`</span>    <span class="hljs-comment"># 按条件筛选之后删除</span>    <span class="hljs-comment"># 按条件筛选之后删除镜像</span>    docker rmi <span class="hljs-string">`docker images | grep xxxxx | awk '{print <span class="hljs-variable">$3</span>}'`</span>    <span class="hljs-comment"># 按条件筛选之后删除容器</span>    docker rm <span class="hljs-string">`docker ps -a | grep xxxxx | awk '{print <span class="hljs-variable">$1</span>}'`</span></code></pre></div></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>服务器</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker学习笔记</title>
    <link href="/blog/2020/07/08/Docker%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <url>/blog/2020/07/08/Docker%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="Docker安装部署"><a href="#Docker安装部署" class="headerlink" title="Docker安装部署"></a>Docker安装部署</h1><h2 id="CentOS"><a href="#CentOS" class="headerlink" title="CentOS"></a>CentOS</h2><ul><li><p>yum 包更新到最新（花的时间比较多）</p>  <div class="hljs"><pre><code class="hljs ebnf"><span class="hljs-attribute">yum update</span></code></pre></div></li><li><p>安装需要的软件包，yum-util 提供的yum-config-manager功能，另外两个是devicemapper驱动依赖的</p>  <div class="hljs"><pre><code class="hljs gml">yum install -<span class="hljs-symbol">y</span> yum-utils device-mapper-<span class="hljs-symbol">persistent</span>-data lvm2</code></pre></div></li><li><p>设置yum源</p>  <div class="hljs"><pre><code class="hljs vim">yum-confi-manager --<span class="hljs-built_in">add</span>-repo http<span class="hljs-variable">s:</span>//download.docker.<span class="hljs-keyword">com</span>/linux/centos/docker-<span class="hljs-keyword">ce</span>.repo</code></pre></div></li><li><p>安装docker，出现输入的页面都按 y</p>  <div class="hljs"><pre><code class="hljs cmake">yum <span class="hljs-keyword">install</span> -y docker-ce</code></pre></div></li><li><p>查看docker版本，验证是否安装成功</p>  <div class="hljs"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker -v</span></code></pre></div></li></ul><h3 id="其他安装方式-推荐"><a href="#其他安装方式-推荐" class="headerlink" title="其他安装方式(推荐)"></a>其他安装方式(推荐)</h3><p>教程链接：<a href="https://www.jianshu.com/p/1e5c86accacb" target="_blank" rel="noopener">Here!</a></p><h1 id="Docker命令"><a href="#Docker命令" class="headerlink" title="Docker命令"></a>Docker命令</h1><h2 id="Docker服务相关命令"><a href="#Docker服务相关命令" class="headerlink" title="Docker服务相关命令"></a>Docker服务相关命令</h2><ul><li><p>启动docker服务</p>  <div class="hljs"><pre><code class="hljs crmsh">systemctl <span class="hljs-literal">start</span> dockersystemctl <span class="hljs-literal">start</span> docker</code></pre></div></li><li><p>停止docker服务</p>  <div class="hljs"><pre><code class="hljs arduino">systemctl <span class="hljs-built_in">stop</span> docker</code></pre></div></li><li><p>重启docker服务</p>  <div class="hljs"><pre><code class="hljs ebnf"><span class="hljs-attribute">systemctl restart docker</span></code></pre></div></li><li><p>查看docker服务状态</p>  <div class="hljs"><pre><code class="hljs ebnf"><span class="hljs-attribute">systemctl status docker</span></code></pre></div></li><li><p>设置开机启动docker服务</p>  <div class="hljs"><pre><code class="hljs routeros">systemstl <span class="hljs-builtin-name">enable</span> docker</code></pre></div></li></ul><h2 id="Docker镜像相关命令"><a href="#Docker镜像相关命令" class="headerlink" title="Docker镜像相关命令"></a>Docker镜像相关命令</h2><ul><li><p>查看镜像：查看本地所有的镜像</p>  <div class="hljs"><pre><code class="hljs nginx"><span class="hljs-attribute">docker</span> imagesdocker images -q <span class="hljs-comment"># 查看所有镜像id</span></code></pre></div></li><li><p>搜索镜像：从网络中查找需要的镜像</p>  <div class="hljs"><pre><code class="hljs excel">docker <span class="hljs-built_in">search</span> 镜像名称</code></pre></div></li><li><p>拉取镜像：从docker仓库下载镜像到本地，镜像名称格式为 名称:版本号，如果版本号不指定则是<strong>最新版本</strong>。如果不知道镜像版本，可以去<a href="http://hub.docker.com/" target="_blank" rel="noopener">docker hub</a> 搜索对应镜像查看</p>  <div class="hljs"><pre><code class="hljs nginx"><span class="hljs-attribute">docker</span> pull 镜像名称</code></pre></div></li><li><p>删除镜像</p>  <div class="hljs"><pre><code class="hljs applescript">docker rmi 镜像<span class="hljs-built_in">id</span>docker rmi `docker images -q` <span class="hljs-comment"># 删除所有本地镜像</span></code></pre></div></li></ul><h2 id="Docker容器相关的命令"><a href="#Docker容器相关的命令" class="headerlink" title="Docker容器相关的命令"></a>Docker容器相关的命令</h2><ul><li><p>查看容器</p>  <div class="hljs"><pre><code class="hljs livecodeserver">docker ps <span class="hljs-comment"># 查看正在运行的容器</span>docker ps -<span class="hljs-keyword">a</span> <span class="hljs-comment"># 查看所有容器</span></code></pre></div></li><li><p>创建并启动容器</p>  <div class="hljs"><pre><code class="hljs dockerfile">docker <span class="hljs-keyword">run</span><span class="bash"> 参数</span></code></pre></div><ul><li>参数说明：<ul><li>-i：保持容器运行。通常与-t同时使用。加入it这两个参数后，容器创建后自动进入容器中，退出容器后，容器自动关闭。</li><li>-t：为容器重新分配一个伪输入终端，通常与-i同时使用。</li><li>-d:以守护（后台）模式运行容器。创建一个容器在后台运行，需要使用<code>docker exec</code>进入容器。退出时，容器不会关闭。</li><li>-it：创建的容器一般称为<strong>交互式容器</strong>。</li><li>-id：创建的容器一般称为<strong>守护式容器</strong>。</li><li>–name：为创建的容器命名。</li></ul></li></ul></li><li><p>进入容器</p>  <div class="hljs"><pre><code class="hljs bash">docker <span class="hljs-built_in">exec</span> 参数 <span class="hljs-comment"># 退出容器，容器不会关闭</span></code></pre></div></li><li><p>启动容器</p>  <div class="hljs"><pre><code class="hljs crmsh">docker <span class="hljs-literal">start</span> 容器名称</code></pre></div></li><li><p>停止容器</p>  <div class="hljs"><pre><code class="hljs arduino">docker <span class="hljs-built_in">stop</span> 容器名称</code></pre></div></li><li><p>删除容器：如果容器是运行状态则删除失败，需要停止容器才能删除</p>  <div class="hljs"><pre><code class="hljs nginx"><span class="hljs-attribute">docker</span> rm 容器名称</code></pre></div></li><li><p>查看容器信息</p>  <div class="hljs"><pre><code class="hljs gradle">docker <span class="hljs-keyword">inspect</span> 容器名称</code></pre></div></li></ul><h1 id="Docker容器的数据卷"><a href="#Docker容器的数据卷" class="headerlink" title="Docker容器的数据卷"></a>Docker容器的数据卷</h1><h2 id="数据卷概念和作用"><a href="#数据卷概念和作用" class="headerlink" title="数据卷概念和作用"></a>数据卷概念和作用</h2><h3 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h3><ul><li>Docker容器删除后，在容器中产生的数据也会随之销毁吗？<ul><li>会。</li></ul></li><li>Docker容器和外部机器可以直接交换文件吗？<ul><li>不可以。</li></ul></li><li>容器之间想要进行数据交互？<ul><li>不可以。</li></ul></li></ul><blockquote><p><em>那咋办嘛？这就要用到数据卷了</em></p></blockquote><h3 id="数据卷"><a href="#数据卷" class="headerlink" title="数据卷"></a>数据卷</h3><ul><li>数据卷是宿主机中的一个<strong>目录或文件</strong></li><li>当容器目录和数据卷目录绑定后，对方的修改会立即同步</li><li>一个数据卷可以被<strong>多个容器同时挂载</strong></li><li>一个容器也可以被挂载<strong>多个数据卷</strong></li></ul><h3 id="数据卷的作用"><a href="#数据卷的作用" class="headerlink" title="数据卷的作用"></a>数据卷的作用</h3><ul><li>容器数据持久化</li><li>外部机器和容器间接通信</li><li>容器之间数据交换</li></ul><h2 id="配置数据卷"><a href="#配置数据卷" class="headerlink" title="配置数据卷"></a>配置数据卷</h2><ul><li><p>创建启动容器时，使用<code>-v</code>参数设置数据卷</p>  <div class="hljs"><pre><code class="hljs routeros">docker <span class="hljs-builtin-name">run</span> <span class="hljs-built_in">..</span>.-v 宿主机目录(文件):容器内目录(文件)<span class="hljs-built_in">..</span>.</code></pre></div></li><li><p>注意事项：</p><ol><li>目录必须是<strong>绝对路径</strong></li><li>如果目录不存在，会<strong>自动创建</strong></li><li>可以挂载<strong>多个</strong>数据卷</li></ol></li></ul><h2 id="数据卷容器"><a href="#数据卷容器" class="headerlink" title="数据卷容器"></a>数据卷容器</h2><h3 id="配置数据卷容器"><a href="#配置数据卷容器" class="headerlink" title="配置数据卷容器"></a>配置数据卷容器</h3><ul><li><p>创建启动c3数据卷容器，使用<code>-v</code>参数设置数据卷</p>  <div class="hljs"><pre><code class="hljs routeros">docker <span class="hljs-builtin-name">run</span> -it <span class="hljs-attribute">--name-</span>=c3 -v /volume centos:7 /bin/bash</code></pre></div></li><li><p>创建启动c1 c2数据卷容器，使用<code>-volumes-from</code>参数设置数据卷</p>  <div class="hljs"><pre><code class="hljs routeros">docker <span class="hljs-builtin-name">run</span> -it <span class="hljs-attribute">--name-</span>=c1 -volumes-from c3 centos:7 /bin/bashdocker <span class="hljs-builtin-name">run</span> -it <span class="hljs-attribute">--name-</span>=c2 -volumes-from c3 centos:7 /bin/bash</code></pre></div></li></ul><p>#Docker应用部署</p><h2 id="MySQL部署"><a href="#MySQL部署" class="headerlink" title="MySQL部署"></a>MySQL部署</h2><ul><li><p>搜索MySQL镜像</p>  <div class="hljs"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker search mysql</span></code></pre></div></li><li><p>拉取MySQL镜像</p>  <div class="hljs"><pre><code class="hljs angelscript">docker pull mysql:<span class="hljs-number">5.6</span></code></pre></div></li><li><p>创建容器，设置端口映射、目录映射</p>  <div class="hljs"><pre><code class="hljs jboss-cli"><span class="hljs-comment"># 在/root目录下创建mysql目录用于存储mysql数据信息</span>mkdir ~<span class="hljs-string">/mysql</span><span class="hljs-keyword">cd</span> ~<span class="hljs-string">/mysql</span></code></pre></div><hr>  <div class="hljs"><pre><code class="hljs crystal">docker run -id \--name=c_mysql \-p <span class="hljs-number">3307</span>:<span class="hljs-number">3306</span> \-v $PWD/<span class="hljs-symbol">conf:</span>/etc/mysql/confi.d \-v $PWD/<span class="hljs-symbol">logs:</span>/logs \-v $PWD/<span class="hljs-symbol">data:</span>/var/<span class="hljs-class"><span class="hljs-keyword">lib</span>/<span class="hljs-title">mysql</span> \</span>-e MYSQL_ROOT_PASSWORD=<span class="hljs-number">123456</span> \<span class="hljs-symbol">mysql:</span><span class="hljs-number">5.6</span></code></pre></div><ul><li>参数说明：<ul><li>-p 3307:3306：将容器的3306端口映射到宿主机的3307端口。</li><li>-v $PWD/conf:/etc/mysql/confi.d：将主机当前目录下的conf/my.cnf挂载到容器的/etc/mysql/my.cnf。配置目录</li><li>-v $PWD/logs:/logs：将主机当前目录下的logs目录挂载到容器的/logs。日志目录</li><li>-v $PWD/data:/var/lib/mysql：将主机当前目录下的data目录挂载到容器的/var/lib/mysql。数据目录</li><li>-e MYSQL_ROOT_PASSWORD=123456：初始化root用户的密码。</li></ul></li></ul></li></ul><h2 id="Tomcat部署"><a href="#Tomcat部署" class="headerlink" title="Tomcat部署"></a>Tomcat部署</h2><ul><li><p>搜索Tomcat镜像</p>  <div class="hljs"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker search tomcat</span></code></pre></div></li><li><p>拉取Tomcat镜像</p>  <div class="hljs"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker pull tomcat</span></code></pre></div></li><li><p>创建容器，设置端口映射、目录映射</p>  <div class="hljs"><pre><code class="hljs jboss-cli"><span class="hljs-comment"># 在/root目录下创建tomcat目录用于存储tomcat数据信息</span>mkdir ~<span class="hljs-string">/tomcat</span><span class="hljs-keyword">cd</span> ~<span class="hljs-string">/tomcat</span></code></pre></div><hr>  <div class="hljs"><pre><code class="hljs haml">docker run -id \-<span class="ruby">-name=c_tomcat \</span><span class="ruby">-p <span class="hljs-number">8080</span><span class="hljs-symbol">:</span><span class="hljs-number">8080</span> \</span><span class="ruby">-v $PWD<span class="hljs-symbol">:/usr/local/tomcat/webapps</span> \</span><span class="ruby">tomcat</span></code></pre></div><ul><li>参数说明：<ul><li>-p 8000:8080：将容器的8080端口映射到宿主机的8000端口。</li><li>-v $PWD:/usr/local/tomcat/webapps：将主机当前目录挂载到容器的/usr/local/tomcat/webapps。</li></ul></li></ul></li></ul><h2 id="Nginx部署"><a href="#Nginx部署" class="headerlink" title="Nginx部署"></a>Nginx部署</h2><ul><li><p>搜索Nginx镜像</p>  <div class="hljs"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker search nginx</span></code></pre></div></li><li><p>拉取Nginx镜像</p>  <div class="hljs"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker pull nginx</span></code></pre></div></li><li><p>创建容器，设置端口映射、目录映射</p>  <div class="hljs"><pre><code class="hljs vim"># 在/root目录下创建nginx目录用于存储nginx数据信息<span class="hljs-built_in">mkdir</span> ~/nginx<span class="hljs-keyword">cd</span> ~/nginx<span class="hljs-built_in">mkdir</span> <span class="hljs-keyword">conf</span><span class="hljs-keyword">cd</span> <span class="hljs-keyword">conf</span># 在~/nginx/<span class="hljs-keyword">conf</span>/下创建nginx.<span class="hljs-keyword">conf</span>文件，粘贴下面内容<span class="hljs-keyword">vim</span> nginx.<span class="hljs-keyword">conf</span></code></pre></div><hr>  <div class="hljs"><pre><code class="hljs nginx"><span class="hljs-attribute">user</span>  nginx;<span class="hljs-attribute">worker_processes</span>  <span class="hljs-number">1</span>;<span class="hljs-attribute">error_log</span>  /var/log/nginx/error.log <span class="hljs-literal">warn</span>;<span class="hljs-attribute">pid</span>        /var/run/nginx.pid;<span class="hljs-section">events</span> {    <span class="hljs-attribute">worker_connections</span>  <span class="hljs-number">1024</span>;}<span class="hljs-section">http</span> {    <span class="hljs-attribute">include</span>       /etc/nginx/mime.types;    <span class="hljs-attribute">default_type</span>  application/octet-stream;    <span class="hljs-attribute">log_format</span>  main  <span class="hljs-string">'<span class="hljs-variable">$remote_addr</span> - <span class="hljs-variable">$remote_user</span> [<span class="hljs-variable">$time_local</span>] "<span class="hljs-variable">$request</span>" '</span>                      <span class="hljs-string">'<span class="hljs-variable">$status</span> <span class="hljs-variable">$body_bytes_sent</span> "<span class="hljs-variable">$http_referer</span>" '</span>                      <span class="hljs-string">'"<span class="hljs-variable">$http_user_agent</span>" "<span class="hljs-variable">$http_x_forwarded_for</span>"'</span>;    <span class="hljs-attribute">access_log</span>  /var/log/nginx/access.log  main;    <span class="hljs-attribute">sendfile</span>        <span class="hljs-literal">on</span>;    <span class="hljs-comment">#tcp_nopush     on;</span>    <span class="hljs-attribute">keepalive_timeout</span>  <span class="hljs-number">65</span>;    <span class="hljs-comment">#gzip  on;</span>    <span class="hljs-attribute">include</span> /etc/nginx/conf.d/<span class="hljs-regexp">*.conf</span>;}</code></pre></div><hr>  <div class="hljs"><pre><code class="hljs stata">docker <span class="hljs-keyword">run</span> -id \--name=c_nginx \-p 81:80 \-v <span class="hljs-variable">$PWD</span>/<span class="hljs-keyword">conf</span>/nginx.<span class="hljs-keyword">conf</span>:/etc/nginx/nginx.<span class="hljs-keyword">conf</span> \-v <span class="hljs-variable">$PWD</span>/logs:/<span class="hljs-keyword">var</span>/<span class="hljs-keyword">log</span>/nginx \-v <span class="hljs-variable">$PWD</span>/html:/usr/share/nginx/html \nginx</code></pre></div><ul><li>参数说明：<ul><li>-p 81:80：将容器的80端口映射到宿主机的81端口。</li><li>v $PWD/conf/nginx.conf:/etc/nginx/nginx.conf：将主机当前目录下的/conf/nginx.conf挂载到容器的/etc/nginx/nginx.conf。配置目录</li><li>-v $PWD/logs:/var/log/nginx：将主机当前目录下的logs目录挂载到容器的/var/log/nginx。日志目录</li><li>-v $PWD/html:/usr/share/nginx/html：将主机当前目录下的/html挂载到容器的/usr/share/nginx/html。</li></ul></li></ul></li></ul><h2 id="Redis部署"><a href="#Redis部署" class="headerlink" title="Redis部署"></a>Redis部署</h2><ul><li><p>搜索Redis镜像</p>  <div class="hljs"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker search redis</span></code></pre></div></li><li><p>拉取Redis镜像</p>  <div class="hljs"><pre><code class="hljs vim">docker pull <span class="hljs-keyword">redi</span><span class="hljs-variable">s:5</span>.<span class="hljs-number">0</span></code></pre></div></li><li><p>创建容器，设置端口映射、目录映射</p>  <div class="hljs"><pre><code class="hljs routeros">docker <span class="hljs-builtin-name">run</span> -id <span class="hljs-attribute">--name</span>=c_redis -p 6379:6379 redis:5.0</code></pre></div><ul><li>参数说明：<ul><li>-p 6379:6379：将容器的6379端口映射到宿主机的6379端口。</li></ul></li></ul></li><li><p>使用外部机器连接redis</p>  <div class="hljs"><pre><code class="hljs stylus">./redis-cli<span class="hljs-selector-class">.exe</span> -h &lt;your ipAddress&gt; -<span class="hljs-selector-tag">p</span> <span class="hljs-number">6379</span></code></pre></div></li></ul><h1 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h1><h2 id="Docker镜像原理"><a href="#Docker镜像原理" class="headerlink" title="Docker镜像原理"></a>Docker镜像原理</h2><h3 id="思考-1"><a href="#思考-1" class="headerlink" title="思考"></a>思考</h3><ul><li><p>Docker镜像本质是什么？</p><ul><li>是一个分层的文件系统</li></ul></li><li><p>Docker中一个centos镜像为什么只有200MB，而一个centos操作系统的</p>  <div class="hljs"><pre><code class="hljs ebnf"><span class="hljs-attribute">iso</span></code></pre></div><p>  文件要几个GB？</p><ul><li>Centos的<code>iso</code>镜像文件包含<code>bootfs</code>和<code>rootfs</code>，而docker的centos镜像<strong>复用</strong>操作系统的<code>bootfs</code>，只包含<code>rootfs</code>和其他镜像层</li></ul></li><li><p>Docker中一个tomcat镜像为什么有500MB，而一个tomcat安装包只有70多MB？</p><ul><li>由于docker中镜像是分层的，tomcat虽然只有70多MB，但它需要依赖于<strong>父镜像</strong>和<strong>子镜像</strong>，所有整个对外暴露的tomcat镜像大小有500多MB</li></ul></li></ul><h3 id="Linux文件系统"><a href="#Linux文件系统" class="headerlink" title="Linux文件系统"></a>Linux文件系统</h3><ul><li>bootfs：包含<code>bootloader</code>（引导加载系统）和<code>kernel</code>（内核）</li><li>rootfs：root文件系统，包含的就是典型的Linux系统中的<code>/dev</code>，<code>/proc</code>，<code>/bin</code>，<code>/etc</code>等标准目录和文件</li><li>不用的Linux发行版，<code>bootfs</code>基本一样，而<code>rootfs</code>不同，如Ubuntu，centos等</li></ul><p><img src="http://106.75.80.200/2020/03/15/seven/layer1.png" srcset="/blog/img/loading.gif" alt="img"></p><h3 id="Docker镜像"><a href="#Docker镜像" class="headerlink" title="Docker镜像"></a>Docker镜像</h3><ul><li>Docker镜像是由特殊的文件系统叠加而成</li><li>最底端是<code>bootfs</code>,并使用宿主机的<code>bootfs</code></li><li>第二层是root文件系统<code>rootfs</code>,称为<code>base image</code></li><li>然后再往上可以叠加其他的镜像文件</li><li><strong><em>统一文件系统(Union File System)\</em></strong>技术能够将不同的层整合成一个文件系统,为这些层提供了一个统一的视角，这样就隐藏了多层的存在，在用户的角度看来,只存在一个文件系统。</li><li>一个镜像可以放在另一个镜像的上面。位于下面的镜像称为<strong><em>父镜像\</em></strong>，最底部的镜像成为<strong><em>基础镜像\</em></strong>。</li><li>当从一个镜像启动容器时，Docker会从最顶层加载一个<strong>读写文件系统</strong>作为容器</li></ul><p><img src="http://106.75.80.200/2020/03/15/seven/layer2.png" srcset="/blog/img/loading.gif" alt="img"></p><h2 id="镜像制作"><a href="#镜像制作" class="headerlink" title="镜像制作"></a>镜像制作</h2><ul><li><p>容器转为镜像</p>  <div class="hljs"><pre><code class="hljs sql">docker <span class="hljs-keyword">commit</span> 容器<span class="hljs-keyword">id</span> 镜像名称:版本号  <span class="hljs-comment"># 将容器转换为镜像文件</span>docker <span class="hljs-keyword">save</span> -o 压缩文件名称 镜像名称:版本号  <span class="hljs-comment"># 将镜像文件打包成压缩文件，之后就能对压缩文件传送了</span>docker <span class="hljs-keyword">load</span> -i 压缩文件名称  <span class="hljs-comment"># 将压缩文件解压称为镜像文件</span></code></pre></div></li><li><p>Dockerfile</p><ul><li><em>看下面内容</em></li></ul></li></ul><h2 id="Dockerfile概念及作用"><a href="#Dockerfile概念及作用" class="headerlink" title="Dockerfile概念及作用"></a>Dockerfile概念及作用</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><ul><li>Dockerfile是一个文本文件</li><li>包含了一条条的指令</li><li>每一条指令构建一层，基于基础镜像，最终构建出一个新的镜像</li><li>对于开发人员：可以为开发团队提供一个完全一致的开发环境</li><li>对于测试人员：可以直接拿开发时所构建的镜像或者通过Dockerfile文件构建一个新的镜像开始工作了</li><li>对于运维人员：在部署时，可以实现应用的无缝移植</li></ul><p><img src="http://106.75.80.200/2020/03/15/seven/dockerfile1.png" srcset="/blog/img/loading.gif" alt="img"></p><h2 id="Dockerfile关键字"><a href="#Dockerfile关键字" class="headerlink" title="Dockerfile关键字"></a>Dockerfile关键字</h2><p><em>列举一些常用的</em></p><table><thead><tr><th>关键字</th><th>作用</th><th>备注</th></tr></thead><tbody><tr><td>FROM</td><td>指定父镜像</td><td>指定dockerfile基于那个image构建</td></tr><tr><td>MAINTAINER</td><td>作者信息</td><td>用来标明这个dockerfile谁写的</td></tr><tr><td>LABEL</td><td>标签</td><td>用来标明dockerfile的标签 可以使用Label代替Maintainer 最终都是在docker image基本信息中可以查看</td></tr><tr><td>RUN</td><td>执行命令</td><td>执行一段命令 默认是/bin/sh 格式: RUN command 或者 RUN [“command” , “param1”,”param2”]</td></tr><tr><td>CMD</td><td>容器启动命令</td><td>提供启动容器时候的默认命令 和ENTRYPOINT配合使用.格式 CMD command param1 param2 或者 CMD [“command” , “param1”,”param2”]</td></tr><tr><td>ENTRYPOINT</td><td>入口</td><td>一般在制作一些执行就关闭的容器中会使用</td></tr><tr><td>COPY</td><td>复制文件</td><td>build的时候复制文件到image中</td></tr><tr><td>ADD</td><td>添加文件</td><td>build的时候添加文件到image中 不仅仅局限于当前build上下文 可以来源于远程服务</td></tr><tr><td>ENV</td><td>环境变量</td><td>指定build时候的环境变量 可以在启动的容器的时候 通过-e覆盖 格式ENV name=value</td></tr><tr><td>ARG</td><td>构建参数</td><td>构建参数 只在构建的时候使用的参数 如果有ENV 那么ENV的相同名字的值始终覆盖arg的参数</td></tr><tr><td>VOLUME</td><td>定义外部可以挂载的数据卷</td><td>指定build的image那些目录可以启动的时候挂载到文件系统中 启动容器的时候使用 -v 绑定 格式 VOLUME [“目录”]</td></tr><tr><td>EXPOSE</td><td>暴露端口</td><td>定义容器运行的时候监听的端口 启动容器的使用-p来绑定暴露端口 格式: EXPOSE 8080 或者 EXPOSE 8080/udp</td></tr><tr><td>WORKDIR</td><td>工作目录</td><td>指定容器内部的工作目录 如果没有创建则自动创建 如果指定/ 使用的是绝对地址 如果不是/开头那么是在上一条workdir的路径的相对路径</td></tr><tr><td>USER</td><td>指定执行用户</td><td>指定build或者启动的时候 用户 在RUN CMD ENTRYPONT执行的时候的用户</td></tr><tr><td>HEALTHCHECK</td><td>健康检查</td><td>指定监测当前容器的健康监测的命令 基本上没用 因为很多时候 应用本身有健康监测机制</td></tr><tr><td>ONBUILD</td><td>触发器</td><td>当存在ONBUILD关键字的镜像作为基础镜像的时候 当执行FROM完成之后 会执行 ONBUILD的命令 但是不影响当前镜像 用处也不怎么大</td></tr><tr><td>STOPSIGNAL</td><td>发送信号量到宿主机</td><td>该STOPSIGNAL指令设置将发送到容器的系统调用信号以退出。</td></tr><tr><td>SHELL</td><td>指定执行脚本的shell</td><td>指定RUN CMD ENTRYPOINT 执行命令的时候 使用的shell</td></tr></tbody></table><h2 id="制作自定义centos镜像"><a href="#制作自定义centos镜像" class="headerlink" title="制作自定义centos镜像"></a>制作自定义centos镜像</h2><h3 id="自定义需求"><a href="#自定义需求" class="headerlink" title="自定义需求"></a>自定义需求</h3><ul><li>默认登录路径为<code>/usr</code></li><li>可以使用vim</li></ul><h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><ul><li><p>创建编辑dockerfile文件</p>  <div class="hljs"><pre><code class="hljs properties"><span class="hljs-attr">mkdir</span> <span class="hljs-string">/root/dockerfile</span><span class="hljs-attr">cd</span> <span class="hljs-string">dockerfile</span><span class="hljs-attr">vim</span> <span class="hljs-string">centos_dockerfile</span></code></pre></div><ul><li>定义父镜像：<code>FROM centos:7</code></li><li>定义作者信息：<code>MAINTAINER adongyo &lt;adongyo@it.cn&gt;</code></li><li>执行安装vim命令：<code>RUN yum install -y vim</code></li><li>定义默认的工作目录：<code>WORKDIR /usr</code></li><li>定义容器启动执行的命令：<code>CMD /bin/bash</code></li></ul></li><li><p>执行命令</p>  <div class="hljs"><pre><code class="hljs angelscript">docker build -f ./centos_dockerfile -t myCentos:<span class="hljs-number">1</span> .</code></pre></div><ul><li><p>参数说明：</p><ul><li><p>-f： 指定dockerfile文件</p></li><li><p>-t： 设置生成的新的镜像的名称</p></li><li><p>.： 别漏了后面还有一个’.’</p></li></ul></li></ul></li></ul><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="https://www.bilibili.com/video/av89009239" target="_blank" rel="noopener">b站转载黑马程序员</a></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>服务器</tag>
      
      <tag>Linux</tag>
      
      <tag>Docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo部署到云服务器</title>
    <link href="/blog/2020/07/08/Hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <url>/blog/2020/07/08/Hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<a id="more"></a><p>阿里云VPS搭建自己的的Hexo博客：<a href="https://segmentfault.com/a/1190000005723321" target="_blank" rel="noopener">https://segmentfault.com/a/1190000005723321</a><br>Hexo个人博客部署到CentOS个人服务器：<a href="https://segmentfault.com/a/1190000010680022" target="_blank" rel="noopener">https://segmentfault.com/a/1190000010680022</a><br>部署Hexo到个人服务器：<a href="https://www.huangtengxq.com/2017/08/19/BuildHexoOnVps/" target="_blank" rel="noopener">https://www.huangtengxq.com/2017/08/19/BuildHexoOnVps/</a><br>HEXO部署到unbuntu服务器详细指南：<a href="http://www.laoyuyu.me/2017/10/10/hexo_deploy_vps/" target="_blank" rel="noopener">http://www.laoyuyu.me/2017/10/10/hexo_deploy_vps/</a><br>服务器部署Hexo博客：<a href="https://dogorgod.github.io/2017/03/24/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2Hexo%E5%8D%9A%E5%AE%A2/" target="_blank" rel="noopener">https://dogorgod.github.io/2017/03/24/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2Hexo%E5%8D%9A%E5%AE%A2/</a><br>Hexo博客部署到服务器：<a href="https://i.jakeyu.top/2016/12/06/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B9%B6%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/" target="_blank" rel="noopener">https://i.jakeyu.top/2016/12/06/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B9%B6%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/</a><br>通过Git将Hexo博客部署到服务器：<a href="https://www.jianshu.com/p/e03e363713f9" target="_blank" rel="noopener">https://www.jianshu.com/p/e03e363713f9</a><br>部署Hexo博客到linux云主机并实现自动发布：<a href="https://ghui.me/post/2016/07/host-hexo-vps/" target="_blank" rel="noopener">https://ghui.me/post/2016/07/host-hexo-vps/</a><br>将Hexo博客部署到云主机：<a href="https://blog.fundebug.com/2017/05/18/deploy-hexo-on-cloud/" target="_blank" rel="noopener">https://blog.fundebug.com/2017/05/18/deploy-hexo-on-cloud/</a><br>配合Travis CI，将Hexo博客自动部署到你的服务器上：<a href="https://blog.keep.moe/2015/11/06/hexo-and-travis-ci/" target="_blank" rel="noopener">https://blog.keep.moe/2015/11/06/hexo-and-travis-ci/</a><br>使用Git Hook自动部署Hexo到个人VPS：<a href="http://www.swiftyper.com/2016/04/17/deploy-hexo-with-git-hook/" target="_blank" rel="noopener">http://www.swiftyper.com/2016/04/17/deploy-hexo-with-git-hook/</a><br>VPS Centos7安装Git服务器，部署Hexo静态博客：<a href="https://www.micronbot.com/blog/8.html" target="_blank" rel="noopener">https://www.micronbot.com/blog/8.html</a><br>在Ubuntu 14.04服务器上部署Hexo博客：<a href="https://cloud.tencent.com/developer/article/1004587" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/1004587</a><br>阿里云ubuntu部署hexo,并与本地同步，实现自动部署：<a href="http://blog.csdn.net/nghuyong/article/details/54430093" target="_blank" rel="noopener">http://blog.csdn.net/nghuyong/article/details/54430093</a><br>阿里云搭建Git服务，实现Hexo自动部署：<a href="https://imys.net/20160303/hexo-nginx-auto-deploy.html" target="_blank" rel="noopener">https://imys.net/20160303/hexo-nginx-auto-deploy.html</a><br>hexo博客部署到linux服务器上：<a href="https://lvshen9.github.io/2018/01/08/Hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E5%88%B0Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A/" target="_blank" rel="noopener">https://lvshen9.github.io/2018/01/08/Hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E5%88%B0Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A/</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>服务器</tag>
      
      <tag>Linux</tag>
      
      <tag>Hexo</tag>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>服务器安装宝塔面板</title>
    <link href="/blog/2020/07/07/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BFLinux%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/"/>
    <url>/blog/2020/07/07/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BFLinux%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/</url>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="安装宝塔"><a href="#安装宝塔" class="headerlink" title="安装宝塔"></a>安装宝塔</h2><p>Centos安装脚本</p><div class="hljs"><pre><code class="hljs vim">yum install -<span class="hljs-keyword">y</span> wget &amp;&amp; wget -O install.<span class="hljs-keyword">sh</span> http://download.bt.<span class="hljs-keyword">cn</span>/install/install_6.<span class="hljs-number">0</span>.<span class="hljs-keyword">sh</span> &amp;&amp; <span class="hljs-keyword">sh</span> install.<span class="hljs-keyword">sh</span></code></pre></div><p>Ubuntu/Deepin安装脚本</p><div class="hljs"><pre><code class="hljs cmake">wget -O <span class="hljs-keyword">install</span>.sh http://download.bt.cn/<span class="hljs-keyword">install</span>/<span class="hljs-keyword">install</span>-ubuntu_6.<span class="hljs-number">0</span>.sh &amp;&amp; sudo bash <span class="hljs-keyword">install</span>.sh</code></pre></div><p>Debian安装脚本</p><div class="hljs"><pre><code class="hljs cmake">wget -O <span class="hljs-keyword">install</span>.sh http://download.bt.cn/<span class="hljs-keyword">install</span>/<span class="hljs-keyword">install</span>-ubuntu_6.<span class="hljs-number">0</span>.sh &amp;&amp; bash <span class="hljs-keyword">install</span>.sh</code></pre></div><p>Fedora安装脚本</p><div class="hljs"><pre><code class="hljs vim">wget -O install.<span class="hljs-keyword">sh</span> http://download.bt.<span class="hljs-keyword">cn</span>/install/install_6.<span class="hljs-number">0</span>.<span class="hljs-keyword">sh</span> &amp;&amp; bash install.<span class="hljs-keyword">sh</span></code></pre></div><h2 id="管理宝塔"><a href="#管理宝塔" class="headerlink" title="管理宝塔"></a>管理宝塔</h2><p>宝塔工具箱(包含下列绝大部分功能 直接ssh中执行bt命令 仅限6.x以上版本面板)</p><div class="hljs"><pre><code class="hljs ebnf"><span class="hljs-attribute">bt</span></code></pre></div><p>停止</p><div class="hljs"><pre><code class="hljs arduino">/etc/init.d/bt <span class="hljs-built_in">stop</span></code></pre></div><p>启动</p><div class="hljs"><pre><code class="hljs armasm">/etc/init.d/<span class="hljs-keyword">bt </span>start</code></pre></div><p>重启</p><div class="hljs"><pre><code class="hljs armasm">/etc/init.d/<span class="hljs-keyword">bt </span>restart</code></pre></div><p>卸载</p><div class="hljs"><pre><code class="hljs awk"><span class="hljs-regexp">/etc/i</span>nit.d<span class="hljs-regexp">/bt stop &amp;&amp; chkconfig --del bt &amp;&amp; rm -f /</span>etc<span class="hljs-regexp">/init.d/</span>bt &amp;&amp; rm -rf <span class="hljs-regexp">/www/</span>server<span class="hljs-regexp">/panel</span></code></pre></div><p>查看当前面板端口</p><div class="hljs"><pre><code class="hljs awk">cat <span class="hljs-regexp">/www/</span>server<span class="hljs-regexp">/panel/</span>data<span class="hljs-regexp">/port.pl</span></code></pre></div><p>修改面板端口，如要改成8881（centos 6 系统）</p><div class="hljs"><pre><code class="hljs routeros">echo <span class="hljs-string">'8881'</span> &gt; /www/server/panel/data/port.pl &amp;&amp; /etc/init.d/bt restartiptables -I INPUT -p tcp -m state --state NEW -m tcp --dport 8881 -j ACCEPTservice iptables saveservice iptables restart</code></pre></div><p>修改面板端口，如要改成8881（centos 7 系统）</p><div class="hljs"><pre><code class="hljs jboss-cli"><span class="hljs-keyword">echo</span> '8881' &gt; <span class="hljs-string">/www/server/panel/data/port.pl</span> &amp;&amp; <span class="hljs-string">/etc/init.d/bt</span> restartfirewall-cmd <span class="hljs-params">--permanent</span> <span class="hljs-params">--zone=public</span> <span class="hljs-params">--add-port=8881/tcp</span>firewall-cmd <span class="hljs-params">--reload</span></code></pre></div><p>强制修改MySQL管理(root)密码，如要改成123456</p><div class="hljs"><pre><code class="hljs vim"><span class="hljs-keyword">cd</span> /www/server/panel &amp;&amp; <span class="hljs-keyword">python</span> tools.<span class="hljs-keyword">py</span> root <span class="hljs-number">123456</span></code></pre></div><p>修改面板密码，如要改成123456</p><div class="hljs"><pre><code class="hljs mel">cd /www/server/<span class="hljs-keyword">panel</span> &amp;&amp; <span class="hljs-keyword">python</span> tools.py <span class="hljs-keyword">panel</span> <span class="hljs-number">123456</span></code></pre></div><p>查看宝塔日志</p><div class="hljs"><pre><code class="hljs stata"><span class="hljs-keyword">cat</span> /tmp/panelBoot.<span class="hljs-keyword">pl</span></code></pre></div><p>查看软件安装日志</p><div class="hljs"><pre><code class="hljs stata"><span class="hljs-keyword">cat</span> /tmp/panelExec.<span class="hljs-keyword">log</span></code></pre></div><p>站点配置文件位置</p><div class="hljs"><pre><code class="hljs awk"><span class="hljs-regexp">/www/</span>server<span class="hljs-regexp">/panel/</span>vhost</code></pre></div><p>删除域名绑定面板</p><div class="hljs"><pre><code class="hljs awk">rm -f <span class="hljs-regexp">/www/</span>server<span class="hljs-regexp">/panel/</span>data<span class="hljs-regexp">/domain.conf</span></code></pre></div><p>清理登陆限制</p><div class="hljs"><pre><code class="hljs awk">rm -f <span class="hljs-regexp">/www/</span>server<span class="hljs-regexp">/panel/</span>data<span class="hljs-regexp">/*.login</span></code></pre></div><p>查看面板授权IP</p><div class="hljs"><pre><code class="hljs awk">cat <span class="hljs-regexp">/www/</span>server<span class="hljs-regexp">/panel/</span>data<span class="hljs-regexp">/limitip.conf</span></code></pre></div><p>关闭访问限制</p><div class="hljs"><pre><code class="hljs awk">rm -f <span class="hljs-regexp">/www/</span>server<span class="hljs-regexp">/panel/</span>data<span class="hljs-regexp">/limitip.conf</span></code></pre></div><p>查看许可域名</p><div class="hljs"><pre><code class="hljs awk">cat <span class="hljs-regexp">/www/</span>server<span class="hljs-regexp">/panel/</span>data<span class="hljs-regexp">/domain.conf</span></code></pre></div><p>关闭面板SSL</p><div class="hljs"><pre><code class="hljs awk">rm -f <span class="hljs-regexp">/www/</span>server<span class="hljs-regexp">/panel/</span>data<span class="hljs-regexp">/ssl.pl &amp;&amp; /</span>etc<span class="hljs-regexp">/init.d/</span>bt restart</code></pre></div><p>查看面板错误日志</p><div class="hljs"><pre><code class="hljs awk">cat <span class="hljs-regexp">/tmp/</span>panelBoot</code></pre></div><p>查看数据库错误日志</p><div class="hljs"><pre><code class="hljs awk">cat <span class="hljs-regexp">/www/</span>server<span class="hljs-regexp">/data/</span>*.err</code></pre></div><p>站点配置文件目录(nginx)</p><div class="hljs"><pre><code class="hljs awk"><span class="hljs-regexp">/www/</span>server<span class="hljs-regexp">/panel/</span>vhost<span class="hljs-regexp">/nginx</span></code></pre></div><p>站点配置文件目录(apache)</p><div class="hljs"><pre><code class="hljs awk"><span class="hljs-regexp">/www/</span>server<span class="hljs-regexp">/panel/</span>vhost<span class="hljs-regexp">/apache</span></code></pre></div><p>站点默认目录</p><div class="hljs"><pre><code class="hljs awk"><span class="hljs-regexp">/www/</span>wwwroot</code></pre></div><p>数据库备份目录</p><div class="hljs"><pre><code class="hljs sql">/www/<span class="hljs-keyword">backup</span>/<span class="hljs-keyword">database</span></code></pre></div><p>站点备份目录</p><div class="hljs"><pre><code class="hljs awk"><span class="hljs-regexp">/www/</span>backup<span class="hljs-regexp">/site</span></code></pre></div><p>站点日志</p><div class="hljs"><pre><code class="hljs awk"><span class="hljs-regexp">/www/</span>wwwlogs</code></pre></div><h2 id="Nginx服务管理"><a href="#Nginx服务管理" class="headerlink" title="Nginx服务管理"></a>Nginx服务管理</h2><p>nginx安装目录</p><div class="hljs"><pre><code class="hljs awk"><span class="hljs-regexp">/www/</span>server<span class="hljs-regexp">/nginx</span></code></pre></div><p>启动</p><div class="hljs"><pre><code class="hljs awk"><span class="hljs-regexp">/etc/i</span>nit.d<span class="hljs-regexp">/nginx start</span></code></pre></div><p>停止</p><div class="hljs"><pre><code class="hljs arduino">/etc/init.d/nginx <span class="hljs-built_in">stop</span></code></pre></div><p>重启</p><div class="hljs"><pre><code class="hljs awk"><span class="hljs-regexp">/etc/i</span>nit.d<span class="hljs-regexp">/nginx restart</span></code></pre></div><p>启载</p><div class="hljs"><pre><code class="hljs jboss-cli"><span class="hljs-string">/etc/init.d/nginx</span> <span class="hljs-keyword">reload</span></code></pre></div><p>nginx配置文件</p><div class="hljs"><pre><code class="hljs awk"><span class="hljs-regexp">/www/</span>server<span class="hljs-regexp">/nginx/</span>conf<span class="hljs-regexp">/nginx.conf</span></code></pre></div><h2 id="Apache服务管理"><a href="#Apache服务管理" class="headerlink" title="Apache服务管理"></a>Apache服务管理</h2><p>apache安装目录</p><div class="hljs"><pre><code class="hljs awk"><span class="hljs-regexp">/www/</span>server<span class="hljs-regexp">/httpd</span></code></pre></div><p>启动</p><div class="hljs"><pre><code class="hljs awk"><span class="hljs-regexp">/etc/i</span>nit.d<span class="hljs-regexp">/httpd start</span></code></pre></div><p>停止</p><div class="hljs"><pre><code class="hljs arduino">/etc/init.d/httpd <span class="hljs-built_in">stop</span></code></pre></div><p>重启</p><div class="hljs"><pre><code class="hljs awk"><span class="hljs-regexp">/etc/i</span>nit.d<span class="hljs-regexp">/httpd restart</span></code></pre></div><p>启载</p><div class="hljs"><pre><code class="hljs jboss-cli"><span class="hljs-string">/etc/init.d/httpd</span> <span class="hljs-keyword">reload</span></code></pre></div><p>apache配置文件</p><div class="hljs"><pre><code class="hljs awk"><span class="hljs-regexp">/www/</span>server<span class="hljs-regexp">/apache/</span>conf<span class="hljs-regexp">/httpd.conf</span></code></pre></div><h2 id="MySQL服务管理"><a href="#MySQL服务管理" class="headerlink" title="MySQL服务管理"></a>MySQL服务管理</h2><p>mysql安装目录</p><div class="hljs"><pre><code class="hljs awk"><span class="hljs-regexp">/www/</span>server<span class="hljs-regexp">/mysql</span></code></pre></div><p>phpmyadmin安装目录</p><div class="hljs"><pre><code class="hljs awk"><span class="hljs-regexp">/www/</span>server<span class="hljs-regexp">/phpmyadmin</span></code></pre></div><p>数据存储目录</p><div class="hljs"><pre><code class="hljs haskell">/www/server/<span class="hljs-class"><span class="hljs-keyword">data</span></span></code></pre></div><p>启动</p><div class="hljs"><pre><code class="hljs awk"><span class="hljs-regexp">/etc/i</span>nit.d<span class="hljs-regexp">/mysqld start</span></code></pre></div><p>停止</p><div class="hljs"><pre><code class="hljs arduino">/etc/init.d/mysqld <span class="hljs-built_in">stop</span></code></pre></div><p>重启</p><div class="hljs"><pre><code class="hljs awk"><span class="hljs-regexp">/etc/i</span>nit.d<span class="hljs-regexp">/mysqld restart</span></code></pre></div><p>启载</p><div class="hljs"><pre><code class="hljs jboss-cli"><span class="hljs-string">/etc/init.d/mysqld</span> <span class="hljs-keyword">reload</span></code></pre></div><p>mysql配置文件</p><div class="hljs"><pre><code class="hljs applescript">/etc/<span class="hljs-keyword">my</span>.cnf</code></pre></div><h2 id="FTP服务管理"><a href="#FTP服务管理" class="headerlink" title="FTP服务管理"></a>FTP服务管理</h2><p>ftp安装目录</p><div class="hljs"><pre><code class="hljs awk"><span class="hljs-regexp">/www/</span>server<span class="hljs-regexp">/pure-ftpd</span></code></pre></div><p>启动</p><div class="hljs"><pre><code class="hljs awk"><span class="hljs-regexp">/etc/i</span>nit.d<span class="hljs-regexp">/pure-ftpd start</span></code></pre></div><p>停止</p><div class="hljs"><pre><code class="hljs fortran">/etc/init.d/<span class="hljs-keyword">pure</span>-ftpd <span class="hljs-keyword">stop</span></code></pre></div><p>重启</p><div class="hljs"><pre><code class="hljs awk"><span class="hljs-regexp">/etc/i</span>nit.d<span class="hljs-regexp">/pure-ftpd restart</span></code></pre></div><p>ftp配置文件</p><div class="hljs"><pre><code class="hljs awk"><span class="hljs-regexp">/www/</span>server<span class="hljs-regexp">/pure-ftpd/</span>etc<span class="hljs-regexp">/pure-ftpd.conf</span></code></pre></div><h2 id="PHP服务管理"><a href="#PHP服务管理" class="headerlink" title="PHP服务管理"></a>PHP服务管理</h2><p>php安装目录</p><div class="hljs"><pre><code class="hljs awk"><span class="hljs-regexp">/www/</span>server<span class="hljs-regexp">/php</span></code></pre></div><p>启动(请根据安装PHP版本号做更改，例如：/etc/init.d/php-fpm-54 start)</p><div class="hljs"><pre><code class="hljs angelscript">/etc/init.d/php-fpm-{<span class="hljs-number">52</span>|<span class="hljs-number">53</span>|<span class="hljs-number">54</span>|<span class="hljs-number">55</span>|<span class="hljs-number">56</span>|<span class="hljs-number">70</span>|<span class="hljs-number">71</span>|<span class="hljs-number">72</span>|<span class="hljs-number">73</span>|<span class="hljs-number">74</span>} start</code></pre></div><p>停止(请根据安装PHP版本号做更改，例如：/etc/init.d/php-fpm-54 stop)</p><div class="hljs"><pre><code class="hljs angelscript">/etc/init.d/php-fpm-{<span class="hljs-number">52</span>|<span class="hljs-number">53</span>|<span class="hljs-number">54</span>|<span class="hljs-number">55</span>|<span class="hljs-number">56</span>|<span class="hljs-number">70</span>|<span class="hljs-number">71</span>|<span class="hljs-number">72</span>|<span class="hljs-number">73</span>|<span class="hljs-number">74</span>} stop</code></pre></div><p>重启(请根据安装PHP版本号做更改，例如：/etc/init.d/php-fpm-54 restart)</p><div class="hljs"><pre><code class="hljs angelscript">/etc/init.d/php-fpm-{<span class="hljs-number">52</span>|<span class="hljs-number">53</span>|<span class="hljs-number">54</span>|<span class="hljs-number">55</span>|<span class="hljs-number">56</span>|<span class="hljs-number">70</span>|<span class="hljs-number">71</span>|<span class="hljs-number">72</span>|<span class="hljs-number">73</span>|<span class="hljs-number">74</span>} restart</code></pre></div><p>启载(请根据安装PHP版本号做更改，例如：/etc/init.d/php-fpm-54 reload)</p><div class="hljs"><pre><code class="hljs angelscript">/etc/init.d/php-fpm-{<span class="hljs-number">52</span>|<span class="hljs-number">53</span>|<span class="hljs-number">54</span>|<span class="hljs-number">55</span>|<span class="hljs-number">56</span>|<span class="hljs-number">70</span>|<span class="hljs-number">71</span>|<span class="hljs-number">72</span>|<span class="hljs-number">73</span>|<span class="hljs-number">74</span>} reload</code></pre></div><p>配置文件(请根据安装PHP版本号做更改，例如：/www/server/php/52/etc/php.ini)</p><div class="hljs"><pre><code class="hljs angelscript">/www/server/php/{<span class="hljs-number">52</span>|<span class="hljs-number">53</span>|<span class="hljs-number">54</span>|<span class="hljs-number">55</span>|<span class="hljs-number">56</span>|<span class="hljs-number">70</span>|<span class="hljs-number">71</span>|<span class="hljs-number">72</span>|<span class="hljs-number">73</span>|<span class="hljs-number">74</span>}/etc/php.ini</code></pre></div><h2 id="Redis服务管理"><a href="#Redis服务管理" class="headerlink" title="Redis服务管理"></a>Redis服务管理</h2><p>redis安装目录</p><div class="hljs"><pre><code class="hljs awk"><span class="hljs-regexp">/www/</span>server<span class="hljs-regexp">/redis</span></code></pre></div><p>启动</p><div class="hljs"><pre><code class="hljs awk"><span class="hljs-regexp">/etc/i</span>nit.d<span class="hljs-regexp">/redis start</span></code></pre></div><p>停止</p><div class="hljs"><pre><code class="hljs arduino">/etc/init.d/redis <span class="hljs-built_in">stop</span></code></pre></div><p>redis配置文件</p><div class="hljs"><pre><code class="hljs awk"><span class="hljs-regexp">/www/</span>server<span class="hljs-regexp">/redis/</span>redis.conf</code></pre></div><h2 id="Memcached服务管理"><a href="#Memcached服务管理" class="headerlink" title="Memcached服务管理"></a>Memcached服务管理</h2><p>memcached安装目录</p><div class="hljs"><pre><code class="hljs applescript">/usr/<span class="hljs-keyword">local</span>/memcached</code></pre></div><p>启动</p><div class="hljs"><pre><code class="hljs awk"><span class="hljs-regexp">/etc/i</span>nit.d<span class="hljs-regexp">/memcached start</span></code></pre></div><p>停止</p><div class="hljs"><pre><code class="hljs arduino">/etc/init.d/memcached <span class="hljs-built_in">stop</span></code></pre></div><p>重启</p><div class="hljs"><pre><code class="hljs awk"><span class="hljs-regexp">/etc/i</span>nit.d<span class="hljs-regexp">/memcached restart</span></code></pre></div><p>启载</p><div class="hljs"><pre><code class="hljs jboss-cli"><span class="hljs-string">/etc/init.d/memcached</span> <span class="hljs-keyword">reload</span></code></pre></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>服务器</tag>
      
      <tag>Linux</tag>
      
      <tag>宝塔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>服务器安装宝塔面板</title>
    <link href="/blog/2020/07/07/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E8%A3%85%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/"/>
    <url>/blog/2020/07/07/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E8%A3%85%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/</url>
    
    <content type="html"><![CDATA[<p>这里两篇文章关于“CentOS安装宝塔面板”</p><ol><li><a href="https://developer.aliyun.com/ask/233242?spm=a2c6h.13524658" target="_blank" rel="noopener">https://developer.aliyun.com/ask/233242?spm=a2c6h.13524658</a></li><li><a href="http://tencent.yundashi168.com/327.html?spm=a2c6h.13066369.0.0.328d79c6znCKp6" target="_blank" rel="noopener">http://tencent.yundashi168.com/327.html?spm=a2c6h.13066369.0.0.328d79c6znCKp6</a></li></ol><a id="more"></a><h1 id="①"><a href="#①" class="headerlink" title="①"></a>①</h1><p>购买完云服务器ECS后，对于新手而言如何搭建Web环境是比较棘手的，分享一款简单易用的主机面板：宝塔面板，分享阿里云服务器安装宝塔面板图文教程：</p><p>本文以：Linux云服务器，CentOS 7.4 64位系统为例。</p><h2 id="一：开放安全组端口"><a href="#一：开放安全组端口" class="headerlink" title="一：开放安全组端口"></a>一：开放安全组端口</h2><p>什么是安全组？是阿里云ECS云服务器特有的虚拟防火墙，是一种安全机制，默认情况下宝塔面板依赖的端口并没有开放，所以我们第一步是自定义安全组开放端口，如下图所示：<br><img src="http://bbs.aliyun.com/attachment/Fid_207/207_1314033676496389_53df984b8026689.png" srcset="/blog/img/loading.gif" alt="img"></p><p>我们以开放8888号端口为例：<br>1、登录到云服务器ECS控制台；<br>2、点击“更多”–“网络和安全组”–“安全组配置”，点击“配置规则”<br>3、如下图所示，端口范围填：8888/8888，授权对象填：0.0.0.0/0<br><img src="http://bbs.aliyun.com/attachment/Fid_207/207_1314033676496389_a2508699857cd44.png" srcset="/blog/img/loading.gif" alt="img"></p><p>端口范围按照格式，填写我们需要开放的端口；授权对象填0.0.0.0/0的意思是对所有人开放这个端口，授权范围大家可以按照自己的需求自定义。<br>宝塔面板需要开放的端口有：8888、888、80、443、20、21，这6个端口都需要开放，大家按照上面的方法开放即可。</p><p>安全组不会操作，可以参考阿里云官方文档： <a href="https://help.aliyun.com/document_detail/58746.html?source=5176.11533457&amp;userCode=r3yteowb&amp;type=copy" target="_blank" rel="noopener">阿里云安全组的典型应用示例</a></p><h2 id="二：安装宝塔面板"><a href="#二：安装宝塔面板" class="headerlink" title="二：安装宝塔面板"></a>二：安装宝塔面板</h2><p>SSH的方式登录到你的云服务器ECS上，命令：ssh root@你的服务器IP<br>执行命令：<br><code>yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh</code>然后输入字母“y”，等待程序自行安装，大约2分钟</p><h2 id="三：保存宝塔面板后台登录名和密码"><a href="#三：保存宝塔面板后台登录名和密码" class="headerlink" title="三：保存宝塔面板后台登录名和密码"></a>三：保存宝塔面板后台登录名和密码</h2><p>执行上述命令后，程序自动安装，安装完毕后，会出现宝塔后台登录的账户名和密码，大家保存下来<br><code>Complete!==================================================================Congratulations! Install succeeded!==================================================================Bt-Panel: http://47.104.71.103:8888username: adminpassword: 66d52887Warning:If you cannot access the panel,release the following port (8888|888|80|443|20|21) in the security group==================================================================</code><br>宝塔面板后台登录地址为：http://你的服务器IP/8888<br>默认登录名为：admin<br>密码：安装完成后，会随机生成一段密码，请保存好</p><h2 id="四：登录到宝塔面板后台，安装web环境"><a href="#四：登录到宝塔面板后台，安装web环境" class="headerlink" title="四：登录到宝塔面板后台，安装web环境"></a>四：登录到宝塔面板后台，安装web环境</h2><p>使用刚才保存的账户名和密码，登录到宝塔面吧后台，一键安装Web环境，登录宝塔面板后台，地址：http://你的服务器IP/8888，输入刚才保存好的账户和密码</p><p>登录后会自动弹出安装Web环境页面，如下图所示：<br><img src="http://bbs.aliyun.com/attachment/Fid_207/207_1314033676496389_9e27130fd205b61.jpg" srcset="/blog/img/loading.gif" alt="img"></p><p>可选LNMP和LAMP两种Web环境，大家按需选择（推荐选择第一个LNMP），然后点击“一键安装”，等待即可。大约需要8分钟。</p><h2 id="五：创建站点"><a href="#五：创建站点" class="headerlink" title="五：创建站点"></a>五：创建站点</h2><p>Web环境一键安装完毕后，点击左侧“网站”—“添加站点”，如下图所示：<br><img src="http://bbs.aliyun.com/attachment/Fid_207/207_1314033676496389_2cb13619b62eeec.jpg" srcset="/blog/img/loading.gif" alt="img"></p><p>输入域名后，默认不会自动创建FTP和MySQL数据库，我们可以选择自动创建，方便省事，点击“提交”，创建成功后，会显示你的FTP和MySQL数据信息，例如：</p><blockquote><p>FTP账号资料<br>用户：aliyunbaike_com<br>密码：625GcrKSc3<br>只要将网站上传至以上FTP即可访问!<br>数据库账号资料<br>数据库名：aliyunbaike_com<br>用户：aliyunbaike_com<br>密码：e8QZfQDPDT</p></blockquote><p>大家将新建站点的FTP账户密码、数据库账户密码都保存好。</p><h2 id="六：域名解析"><a href="#六：域名解析" class="headerlink" title="六：域名解析"></a>六：域名解析</h2><p>将域名解析到你的服务器IP，解析出成功后，会显示“恭喜，站点创建成功！”</p><h2 id="七：网站安装"><a href="#七：网站安装" class="headerlink" title="七：网站安装"></a>七：网站安装</h2><p>将你的网站程序上传到域名所对应的根目录，如果是新站，输入第五步的数据库账户和密码。</p><h1 id="②"><a href="#②" class="headerlink" title="②"></a>②</h1><p>下面稍微介绍一下如何使用阿里云服务器安装<a href="https://www.bt.cn/?invite_code=MV9la3hmaXo=" target="_blank" rel="noopener">宝塔面板</a>。</p><h2 id="一、准备"><a href="#一、准备" class="headerlink" title="一、准备"></a>一、准备</h2><p>阿里云的<a href="https://www.aliyun.com/minisite/goods?userCode=ywqc0ubl&amp;share_source=copy_link" target="_blank" rel="noopener">云服务器</a>，即 阿里云ECS，默认的用户名 root，密码的话可以修改。</p><p>远程连接云服务器使用 ssh 软件工具，使用的是公网ip。</p><p>注意事项：出于性能考虑，服务器的操作系统一定要选Linux版本（centos或者ubuntu），不要选Window。</p><blockquote><p><strong>主要步骤</strong>：拥有一台云服务器》ssh工具连接云服务器》安装宝塔面板》配置云服务器安全组(放行端口)》宝塔面板在线访问成功</p></blockquote><h2 id="二、安装面板"><a href="#二、安装面板" class="headerlink" title="二、安装面板"></a>二、安装面板</h2><h3 id="1、使用ssh工具连接云服务器"><a href="#1、使用ssh工具连接云服务器" class="headerlink" title="1、使用ssh工具连接云服务器"></a>1、使用ssh工具连接云服务器</h3><p>windows下可以使用XShell，macOs的可以使用终端。</p><blockquote><p>因为SSH工具有很多种，找到自己用的舒服的工具就可以，不用纠结使用哪一种。</p></blockquote><p>我自己是用的<a href="https://www.jianshu.com/p/14c3b78ca570" target="_blank" rel="noopener">FinalShell</a>这一款SSH工具来进行Linux远程连接的,如何认为不安全的话，也可以继续用Xshell，只是需要激活码,如下图</p><p><img src="https://i.loli.net/2020/05/02/rAwQ6NvadVFEemS.png" srcset="/blog/img/loading.gif" alt="image.png"></p><h3 id="2、输入宝塔面板安装命令"><a href="#2、输入宝塔面板安装命令" class="headerlink" title="2、输入宝塔面板安装命令"></a>2、输入宝塔面板安装命令</h3><blockquote><p><strong>温馨提示</strong>：宝塔面板最近升级到了7.0版本，Centos7以上的系统建议安装宝塔面板最新版：<a href="https://www.bt.cn/bbs/thread-19376-1-1.html（宝塔面板7.x版本，点击查看安装命令）" target="_blank" rel="noopener">https://www.bt.cn/bbs/thread-19376-1-1.html（宝塔面板7.x版本，点击查看安装命令）</a><br><a href="https://www.bt.cn/bbs/thread-30562-1-1.html（宝塔面板6.x版本，点击查看安装命令）" target="_blank" rel="noopener">https://www.bt.cn/bbs/thread-30562-1-1.html（宝塔面板6.x版本，点击查看安装命令）</a></p></blockquote><p>安装方法这里也有介绍（以宝塔面板5.x版本举例）：<a href="http://www.bt.cn/bbs/thread-1186-1-1.html" target="_blank" rel="noopener">http://www.bt.cn/bbs/thread-1186-1-1.html</a></p><blockquote><p>以下安装命令是宝塔面板5.x版本的，请注意。如果安装出错了，就去安装宝塔面板7.x版本</p></blockquote><p><strong>Centos安装脚本：</strong></p><blockquote><p>yum install -y wget &amp;&amp; wget -O install.sh <a href="http://download.bt.cn/install/install.sh" target="_blank" rel="noopener">http://download.bt.cn/install/install.sh</a> &amp;&amp; sh install.sh</p></blockquote><p><strong>Ubuntu/Deepin安装脚本：</strong></p><blockquote><p>wget -O install.sh <a href="http://download.bt.cn/install/install-ubuntu.sh" target="_blank" rel="noopener">http://download.bt.cn/install/install-ubuntu.sh</a> &amp;&amp; sudo bash install.sh</p></blockquote><p>Debian安装脚本：</p><blockquote><p>wget -O install.sh <a href="http://download.bt.cn/install/install-ubuntu.sh" target="_blank" rel="noopener">http://download.bt.cn/install/install-ubuntu.sh</a> &amp;&amp; bash install.sh</p></blockquote><p>Fedora安装脚本:</p><blockquote><p>wget -O install.sh <a href="http://download.bt.cn/install/install.sh" target="_blank" rel="noopener">http://download.bt.cn/install/install.sh</a> &amp;&amp; bash install.sh</p></blockquote><p>前两者偏多。根据操作系统输入不同的安装命令，然后回车</p><p>此间不需要任何操作。</p><h3 id="3、宝塔面板安装成功"><a href="#3、宝塔面板安装成功" class="headerlink" title="3、宝塔面板安装成功"></a>3、宝塔面板安装成功</h3><p>稍等一分钟（有时候网速差可能久一点)，然后不要关闭窗口</p><p>最终可以看到如下界面</p><p><img src="https://i.loli.net/2020/05/02/VJea2FuRGSXx5iY.png" srcset="/blog/img/loading.gif" alt="image.png"></p><p>这里会显示宝塔后台地址和账号密码，可以手动复制到记事本暂时存起来。</p><h2 id="三、配置安全组"><a href="#三、配置安全组" class="headerlink" title="三、配置安全组"></a>三、配置安全组</h2><blockquote><p>如果你已经会设置安全组的话，就可以省略这一步，直接浏览器访问宝塔面板<br>访问地址：<strong>http://云服务器公网IP地址:8888/</strong></p></blockquote><p>上面的黄色的字也说了，如果不能访问面板，请在安全组中放行端口。</p><p>因为刚装的系统，自然也没有放行8888端口，面板后台无法打开</p><p><img src="https://i.loli.net/2020/05/02/6gsm9Ft1vXEyTHK.png" srcset="/blog/img/loading.gif" alt="image.png"></p><p>下面我们添加安全组</p><h3 id="1、进入云服务器管理后台"><a href="#1、进入云服务器管理后台" class="headerlink" title="1、进入云服务器管理后台"></a>1、进入云服务器管理后台</h3><p>进入<a href="https://www.aliyun.com/activity/daily/cloud?source=5176.11533457&amp;userCode=ywqc0ubl&amp;type=copy" target="_blank" rel="noopener">服务器</a>(实例)主页，点击右边的查看更多，点击安全组配置。</p><p><img src="https://i.loli.net/2020/05/02/yRi8TN31z6sGmQg.png" srcset="/blog/img/loading.gif" alt="image.png"></p><h3 id="2、然后可以看到一条安全组"><a href="#2、然后可以看到一条安全组" class="headerlink" title="2、然后可以看到一条安全组"></a>2、然后可以看到一条安全组</h3><p>点击配置规则（如果没有就新建一条安全组）</p><h3 id="3、点击快速创建规则"><a href="#3、点击快速创建规则" class="headerlink" title="3、点击快速创建规则"></a>3、点击快速创建规则</h3><p><img src="https://i.loli.net/2020/05/02/k81wxvdC4fcRTAB.png" srcset="/blog/img/loading.gif" alt="image.png"></p><h3 id="4、可以看到如下页面"><a href="#4、可以看到如下页面" class="headerlink" title="4、可以看到如下页面"></a>4、可以看到如下页面</h3><p><img src="https://i.loli.net/2020/05/02/v1EzkoN7jmZlG5K.png" srcset="/blog/img/loading.gif" alt="image.png"></p><p>常用端口可以勾选，相当于多选。也可以自定义端口，比如我们要将8888和888添加进去。</p><p>授权对象像之前已经填的 0.0.0.0/0 一样。</p><p>基本就是这样。</p><h3 id="5、最终安全记录如下"><a href="#5、最终安全记录如下" class="headerlink" title="5、最终安全记录如下"></a>5、最终安全记录如下</h3><p><img src="https://i.loli.net/2020/05/02/MBPJ9XnlIvd2OjQ.png" srcset="/blog/img/loading.gif" alt="image.png"></p><h3 id="6、浏览器访问宝塔面板成功"><a href="#6、浏览器访问宝塔面板成功" class="headerlink" title="6、浏览器访问宝塔面板成功"></a>6、浏览器访问宝塔面板成功</h3><p>然后我们再刷新之前的网页就能正常啦</p><blockquote><p>在云服务器上安装宝塔面板成功之后，访问地址：<strong>http://云服务器公网IP地址:8888/</strong><br>输入安装的时候产生的默认<strong>临时账号和密码登录</strong>。登录之后，请一定记得去改账号和密码哦！</p></blockquote><p><img src="https://i.loli.net/2020/05/02/xq5ncj4BTetbL3s.png" srcset="/blog/img/loading.gif" alt="image.png"></p><h3 id="7、修改临时账号和密码"><a href="#7、修改临时账号和密码" class="headerlink" title="7、修改临时账号和密码"></a>7、修改临时账号和密码</h3><blockquote><p>为了安全考虑，在云服务器上安装完成宝塔面板之后，你应该马上修改你的宝塔面板登录账户和密码（注意：这个账户和密码不是宝塔面板官网的，而是每个云服务器访问宝塔面板需要用到的账户和密码）</p></blockquote><p><img src="https://i.loli.net/2020/05/02/pjZnqBRT74yJcHu.png" srcset="/blog/img/loading.gif" alt="image.png"></p><p>修改账号和密码之后，后面访问登录就是你新设置的账号和密码了</p><p><img src="https://i.loli.net/2020/05/02/5eLR3YS6AMaG4fD.png" srcset="/blog/img/loading.gif" alt="image.png"></p><h3 id="8、绑定宝塔面板账号"><a href="#8、绑定宝塔面板账号" class="headerlink" title="8、绑定宝塔面板账号"></a>8、绑定宝塔面板账号</h3><blockquote><p>首先解释下为什么要绑定宝塔面板账号：每一台云服务器上安装了宝塔面板之后都需要去绑定你在宝塔面板官网上注册的 宝塔账号 这样每台云服务器的宝塔面板都可以享受你这个账号付过费的服务了。</p></blockquote><p>安装宝塔面板之后必做的事情：<a href="http://tencent.yundashi168.com/319.html" target="_blank" rel="noopener">如何注册和绑定宝塔面板账号？</a></p><p><a href="https://i.loli.net/2020/05/02/uqXTf6wH5a14mvl.png" target="_blank" rel="noopener"><img src="https://i.loli.net/2020/05/02/uqXTf6wH5a14mvl.png" srcset="/blog/img/loading.gif" alt="img"></a></p><h3 id="9、安装LNMP网站环境"><a href="#9、安装LNMP网站环境" class="headerlink" title="9、安装LNMP网站环境"></a>9、安装LNMP网站环境</h3><p>LNMP网站环境是Linux+Nginx+Mysql+PHP的组合搭配网站程序环境，用来快速搭建各种开源的网站程序（WordPress,帝国CMS，织梦，Zblog等）</p><p><strong>为什么选择LNMP?</strong> 主要归功于Nignx服务器的功能强大和性能出色，还能节省服务器内存开销。</p><p><img src="https://i.loli.net/2020/06/28/PmZn3esuv5NMG98.png" srcset="/blog/img/loading.gif" alt="img"></p><p>然后会出现这个界面，需要等待十分钟左右，这会你可以去忙其它事情，过会来看。</p><p><img src="https://i.loli.net/2020/06/28/AGP2w9CZ3phuFTl.png" srcset="/blog/img/loading.gif" alt="image.png"></p><h3 id="10、安装开源建站程序"><a href="#10、安装开源建站程序" class="headerlink" title="10、安装开源建站程序"></a>10、安装开源建站程序</h3><p>完成了以上步骤之后，你就可以随心所以的基于宝塔面板来安装各种建站程序了</p><ul><li><a href="http://tencent.yundashi168.com/421.html" target="_blank" rel="noopener">基于宝塔面板安装WordPress个人网站（图文教程）</a></li><li><a href="http://tencent.yundashi168.com/407.html" target="_blank" rel="noopener">基于宝塔面板搭建Typecho博客网站（图文教程）</a></li><li><a href="http://tencent.yundashi168.com/520.html" target="_blank" rel="noopener">基于宝塔面板安装Hexo个人博客（图文教程）</a></li></ul><hr><ul><li><a href="http://tencent.yundashi168.com/503.html" target="_blank" rel="noopener">基于宝塔面板对WordPress网站进行备份与恢复（网站迁移教程）</a></li><li><a href="http://tencent.yundashi168.com/258.html" target="_blank" rel="noopener">宝塔面板干什么用的? 有什么优点？搭建网站为什么要用它？</a></li><li><a href="http://tencent.yundashi168.com/325.html" target="_blank" rel="noopener">使用宝塔面板搭建网站之后的经验总结</a></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>服务器</tag>
      
      <tag>Linux</tag>
      
      <tag>宝塔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CentOS7操作SSH/SSHD服务(查看/启动/重启/自启)</title>
    <link href="/blog/2020/07/07/CentOS7%E6%93%8D%E4%BD%9CSSH%E3%80%81SSHD%E6%9C%8D%E5%8A%A1(%E6%9F%A5%E7%9C%8B%E3%80%81%E5%90%AF%E5%8A%A8%E3%80%81%E9%87%8D%E5%90%AF%E3%80%81%E8%87%AA%E5%90%AF)/"/>
    <url>/blog/2020/07/07/CentOS7%E6%93%8D%E4%BD%9CSSH%E3%80%81SSHD%E6%9C%8D%E5%8A%A1(%E6%9F%A5%E7%9C%8B%E3%80%81%E5%90%AF%E5%8A%A8%E3%80%81%E9%87%8D%E5%90%AF%E3%80%81%E8%87%AA%E5%90%AF)/</url>
    
    <content type="html"><![CDATA[<p>查看状态：</p><div class="hljs"><pre><code class="hljs css"><span class="hljs-selector-tag">systemctl</span> <span class="hljs-selector-tag">status</span> <span class="hljs-selector-tag">sshd</span><span class="hljs-selector-class">.service</span></code></pre></div><p>启动服务：</p><div class="hljs"><pre><code class="hljs crmsh">systemctl <span class="hljs-literal">start</span> sshd.service</code></pre></div><p>重启服务：</p><div class="hljs"><pre><code class="hljs css"><span class="hljs-selector-tag">systemctl</span> <span class="hljs-selector-tag">restart</span> <span class="hljs-selector-tag">sshd</span><span class="hljs-selector-class">.service</span></code></pre></div><p>开机自启：</p><div class="hljs"><pre><code class="hljs routeros">systemctl <span class="hljs-builtin-name">enable</span> sshd.service</code></pre></div><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>服务器</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CentOS服务器升级Linux版本</title>
    <link href="/blog/2020/07/07/CentOS%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8D%87%E7%BA%A7Linux%E7%89%88%E6%9C%AC/"/>
    <url>/blog/2020/07/07/CentOS%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8D%87%E7%BA%A7Linux%E7%89%88%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<h1 id="检查系统版本"><a href="#检查系统版本" class="headerlink" title="检查系统版本"></a>检查系统版本</h1><div class="hljs"><pre><code class="hljs arduino">$ cat /etc/redhat-<span class="hljs-built_in">release</span></code></pre></div><p>显示</p><div class="hljs"><pre><code class="hljs angelscript">CentOS Linux release <span class="hljs-number">7.1</span><span class="hljs-number">.1503</span> (Core)</code></pre></div><h1 id="备份重要数据"><a href="#备份重要数据" class="headerlink" title="备份重要数据"></a>备份重要数据</h1><p>备份例如<code>/etc</code>、<code>/var</code>、<code>/opt</code><br>如果是安装在虚拟机上，那么可以使用快照进行备份。像VMware虚拟机可以快照备份，当然更奢侈一点是备份整个虚拟机。也可以针对重要程序数据进行备份，例如MySQL, Appache, Nginx, DNS等等。</p><h1 id="运行yum命令升级"><a href="#运行yum命令升级" class="headerlink" title="运行yum命令升级"></a>运行yum命令升级</h1><div class="hljs"><pre><code class="hljs gams"><span class="hljs-symbol">$</span> sudo yum clean <span class="hljs-keyword">all</span><span class="hljs-symbol">$</span> sudo yum update</code></pre></div><h1 id="重启系统"><a href="#重启系统" class="headerlink" title="重启系统"></a>重启系统</h1><div class="hljs"><pre><code class="hljs elixir"><span class="hljs-variable">$ </span>sudo reboot</code></pre></div><h1 id="查看现在系统版本"><a href="#查看现在系统版本" class="headerlink" title="查看现在系统版本"></a>查看现在系统版本</h1><div class="hljs"><pre><code class="hljs arduino">$ cat /etc/redhat-<span class="hljs-built_in">release</span></code></pre></div><p>显示</p><div class="hljs"><pre><code class="hljs angelscript">CentOS Linux release <span class="hljs-number">7.8</span><span class="hljs-number">.2003</span> (Core)</code></pre></div><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>服务器</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>阿里云云服务器漏洞修复</title>
    <link href="/blog/2020/07/07/%E9%98%BF%E9%87%8C%E4%BA%91%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8D/"/>
    <url>/blog/2020/07/07/%E9%98%BF%E9%87%8C%E4%BA%91%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8D/</url>
    
    <content type="html"><![CDATA[<p>前阵子在阿里云618活动花“巨款”买下了一个T5型的云服务器，镜像版本为CentOS 7.4。由于是第一次购买阿里云的服务器，云安全中心提示需要修复的漏洞有98个，一看到就怕了，可以阿里云的修复要钱，最少都是30/台/月，耗不起。<br>于是，百度了一下，找到了3篇有用的文章</p><ol><li><a href="https://www.cnblogs.com/wang-yaz/p/10563394.html" target="_blank" rel="noopener">https://www.cnblogs.com/wang-yaz/p/10563394.html</a></li><li><a href="https://www.cnblogs.com/ice-line/p/9590445.html" target="_blank" rel="noopener">https://www.cnblogs.com/ice-line/p/9590445.html</a></li><li><a href="https://www.v2ex.com/t/598779" target="_blank" rel="noopener">https://www.v2ex.com/t/598779</a></li></ol><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>服务器</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux服务器安装Docker</title>
    <link href="/blog/2020/07/07/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E8%A3%85Docker/"/>
    <url>/blog/2020/07/07/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E8%A3%85Docker/</url>
    
    <content type="html"><![CDATA[<p>前阵子在阿里云618活动花“巨款”买下了一个T5型的云服务器，镜像版本为CentOS 7.4。现打算安装Docker。</p><h1 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h1><p><a href="https://docs.docker.com/install/linux/docker-ce/centos/" target="_blank" rel="noopener">https://docs.docker.com/install/linux/docker-ce/centos/</a></p><a id="more"></a><h1 id="卸载旧版"><a href="#卸载旧版" class="headerlink" title="卸载旧版"></a>卸载旧版</h1><p>按官方的文档，新版Docker无法覆盖旧版的，所以无比先卸载原来的旧版本</p><p>在Linux虚拟机上，我是装有旧版的，但由于服务器是全新的，无任何配置的，可以跳过这步骤</p><div class="hljs"><pre><code class="hljs properties"><span class="hljs-comment"># 移除旧版本的 Docker</span><span class="hljs-attr">yum</span> <span class="hljs-string">remove docker \</span>  <span class="hljs-meta">docker-client</span> <span class="hljs-string">\</span>  <span class="hljs-meta">docker-client-latest</span> <span class="hljs-string">\</span>  <span class="hljs-meta">docker-common</span> <span class="hljs-string">\</span>  <span class="hljs-meta">docker-latest</span> <span class="hljs-string">\</span>  <span class="hljs-meta">docker-latest-logrotate</span> <span class="hljs-string">\</span>  <span class="hljs-meta">docker-logrotate</span> <span class="hljs-string">\</span>  <span class="hljs-meta">docker-selinux</span> <span class="hljs-string">\</span>  <span class="hljs-meta">docker-engine-selinux</span> <span class="hljs-string">\</span>  <span class="hljs-attr">docker-engine</span></code></pre></div><h1 id="安装-Docker"><a href="#安装-Docker" class="headerlink" title="安装 Docker"></a>安装 Docker</h1><ol><li>安装软件包</li></ol><div class="hljs"><pre><code class="hljs haskell"><span class="hljs-meta"># 安装 Docker 依赖</span><span class="hljs-title">yum</span> install -y yum-utils device-mapper-persistent-<span class="hljs-class"><span class="hljs-keyword">data</span> lvm2</span></code></pre></div><ol start="2"><li>配置阿里云Docker Yum源(个人觉的好)</li></ol><div class="hljs"><pre><code class="hljs vala"><span class="hljs-meta"># 添加源</span>yum-config-manager --add-repo https:<span class="hljs-comment">//download.docker.com/linux/centos/docker-ce.repo</span><span class="hljs-meta"># 更新 yum 缓存</span>yum makecache fast</code></pre></div><ol start="3"><li>安装最新版本的Docker</li></ol><div class="hljs"><pre><code class="hljs sql"><span class="hljs-comment"># 安装 Docker-CE</span>yum <span class="hljs-keyword">install</span> -y docker-ce<span class="hljs-comment"># 开启 Docker</span>systemctl <span class="hljs-keyword">start</span> docker<span class="hljs-comment"># 安装 Docker Compose</span>curl -L <span class="hljs-string">"https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m)"</span> -o /usr/<span class="hljs-keyword">local</span>/<span class="hljs-keyword">bin</span>/docker-composechmod +x /usr/<span class="hljs-keyword">local</span>/<span class="hljs-keyword">bin</span>/docker-compose</code></pre></div><h1 id="相关防火墙配置"><a href="#相关防火墙配置" class="headerlink" title="相关防火墙配置"></a>相关防火墙配置</h1><div class="hljs"><pre><code class="hljs dsconfig"><span class="hljs-comment"># Docker 和 Swarm 相关防火墙配置</span><span class="hljs-string">systemctl </span><span class="hljs-string">status </span><span class="hljs-string">firewalld</span><span class="hljs-string">systemctl </span><span class="hljs-string">start </span><span class="hljs-string">firewalld</span><span class="hljs-string">firewall-</span><span class="hljs-string">cmd </span><span class="hljs-built_in">--add-port=9010/tcp</span> <span class="hljs-built_in">--permanent</span><span class="hljs-built_in">firewall-cmd</span> <span class="hljs-built_in">--add-port=9020/tcp</span> <span class="hljs-built_in">--permanentfirewall-cmd</span> <span class="hljs-built_in">--add-port=443/tcp</span> <span class="hljs-built_in">--permanent</span><span class="hljs-built_in">firewall-cmd</span> <span class="hljs-built_in">--add-port=80/tcp</span> <span class="hljs-built_in">--permanent</span><span class="hljs-built_in">firewall-cmd</span> <span class="hljs-built_in">--add-port=80/udp</span> <span class="hljs-built_in">--permanentfirewall-cmd</span> <span class="hljs-built_in">--add-port=22/tcp</span> <span class="hljs-built_in">--permanent</span><span class="hljs-built_in">firewall-cmd</span> <span class="hljs-built_in">--add-port=22/udp</span> <span class="hljs-built_in">--permanent</span><span class="hljs-built_in">firewall-cmd</span> <span class="hljs-built_in">--reload</span><span class="hljs-built_in">systemctl</span> <span class="hljs-string">restart </span><span class="hljs-string">docker</span></code></pre></div><p>这里说明一下如果开始 firewalld 服务被锁定<code>Unit is masked</code></p><p>需要先解除锁定，然后才能开放端口</p><div class="hljs"><pre><code class="hljs ebnf"><span class="hljs-attribute">systemctl unmask firewall</span></code></pre></div><h1 id="开机启动"><a href="#开机启动" class="headerlink" title="开机启动"></a>开机启动</h1><div class="hljs"><pre><code class="hljs routeros"><span class="hljs-comment"># 开机自启动</span>systemctl <span class="hljs-builtin-name">enable</span> firewalldsystemctl <span class="hljs-builtin-name">enable</span> docker</code></pre></div><h1 id="可能出现的问题"><a href="#可能出现的问题" class="headerlink" title="可能出现的问题"></a>可能出现的问题</h1><p>在配置阿里云Docker Yum源时候，可能出现<code>Loaded plugins: fastestmirror</code>的错误提示，百度上的解决如下：</p><p>1、</p><div class="hljs"><pre><code class="hljs ini"><span class="hljs-comment"># vi  /etc/yum/pluginconf.d/fastestmirror.conf</span><span class="hljs-attr">enabled</span>=<span class="hljs-number">0</span>    //由 <span class="hljs-number">1</span> 改成<span class="hljs-number">0</span> ，禁用该插件<span class="hljs-attr">verbose</span>=<span class="hljs-number">0</span><span class="hljs-attr">always_print_best_host</span> = <span class="hljs-literal">true</span><span class="hljs-attr">socket_timeout</span>=<span class="hljs-number">3</span><span class="hljs-comment">#  Relative paths are relative to the cachedir (and so works for users as well</span><span class="hljs-comment"># as root).</span><span class="hljs-attr">hostfilepath</span>=timedhosts.txt<span class="hljs-attr">maxhostfileage</span>=<span class="hljs-number">10</span><span class="hljs-attr">maxthreads</span>=<span class="hljs-number">15</span><span class="hljs-comment">#exclude=.gov, facebook</span><span class="hljs-comment">#include_only=.nl,.de,.uk,.ie</span></code></pre></div><p>2、</p><div class="hljs"><pre><code class="hljs ini"><span class="hljs-comment">#vi /etc/yum.conf</span><span class="hljs-section">[main]</span><span class="hljs-attr">cachedir</span>=/var/cache/yum/<span class="hljs-variable">$basearch</span>/<span class="hljs-variable">$releasever</span><span class="hljs-attr">keepcache</span>=<span class="hljs-number">0</span><span class="hljs-attr">debuglevel</span>=<span class="hljs-number">2</span><span class="hljs-attr">logfile</span>=/var/log/yum.log<span class="hljs-attr">exactarch</span>=<span class="hljs-number">1</span><span class="hljs-attr">obsoletes</span>=<span class="hljs-number">1</span><span class="hljs-attr">gpgcheck</span>=<span class="hljs-number">1</span><span class="hljs-attr">plugins</span>=<span class="hljs-number">1</span> <span class="hljs-comment">#将plugins的值修改为0</span><span class="hljs-attr">installonly_limit</span>=<span class="hljs-number">5</span></code></pre></div><p>3、</p><div class="hljs"><pre><code class="hljs elixir"><span class="hljs-variable">$ </span>yum clean dbcache</code></pre></div><p>4、重新执行配置源和安装命令即可</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>服务器</tag>
      
      <tag>Linux</tag>
      
      <tag>Docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>服务器安装Nginx</title>
    <link href="/blog/2020/07/07/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E8%A3%85Nginx/"/>
    <url>/blog/2020/07/07/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E8%A3%85Nginx/</url>
    
    <content type="html"><![CDATA[<p>图方便，用了个自动脚本：</p><div class="hljs"><pre><code class="hljs jboss-cli">wget http:<span class="hljs-string">//mirrors.linuxeye.com/oneinstack-full.tar.gz</span> &amp;&amp; tar xzf oneinstack-full.tar.gz &amp;&amp; <span class="hljs-string">./oneinstack/install.sh</span> <span class="hljs-params">--nginx_option</span> 1</code></pre></div><p>安装 Nginx 成功，重启服务器，连接 SSH</p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>服务器</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo+GitEE 搭建、备份、恢复、多终端</title>
    <link href="/blog/2020/07/07/Hexo%20+%20GitEE%20%E6%90%AD%E5%BB%BA%E3%80%81%E5%A4%87%E4%BB%BD%E3%80%81%E6%81%A2%E5%A4%8D%E3%80%81%E5%A4%9A%E7%BB%88%E7%AB%AF/"/>
    <url>/blog/2020/07/07/Hexo%20+%20GitEE%20%E6%90%AD%E5%BB%BA%E3%80%81%E5%A4%87%E4%BB%BD%E3%80%81%E6%81%A2%E5%A4%8D%E3%80%81%E5%A4%9A%E7%BB%88%E7%AB%AF/</url>
    
    <content type="html"><![CDATA[<blockquote><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p></blockquote><p>Hexo 是使用的比较多的博客框架了，之所以没有使用 GitHub 而选择了码云，</p><ol><li>我有自己的 VPS 不需要使用 GitHub Pages ，所以本文也没有关于如何使用 GitHub Pages 的教程；</li><li>GitHub 上私有仓库是收费的，码云上面能创建免费的私有仓库。也有人选择使用 Docker 来创建博客环境，做镜像备份.</li></ol><p>这里没有使用此方案，各有所好吧！</p><a id="more"></a><h1 id="1-环境"><a href="#1-环境" class="headerlink" title="1.环境"></a>1.环境</h1><p>主服务器系统版本与内核版本：</p><div class="hljs"><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>dbn- ~]# cat /etc/redhat-releaseCentOS Linux release <span class="hljs-number">7.5</span><span class="hljs-number">.1804</span> (Core) [<span class="hljs-symbol">root@</span>dbn- ~]# uname -r<span class="hljs-number">3.10</span><span class="hljs-number">.0</span><span class="hljs-number">-862.3</span><span class="hljs-number">.2</span>.el7.x86_64</code></pre></div><p>测试服务器系统版本与内核版本：</p><div class="hljs"><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>host ~]# cat /etc/redhat-releaseCentOS Linux release <span class="hljs-number">7.3</span><span class="hljs-number">.1611</span> (Core) [<span class="hljs-symbol">root@</span>host ~]# uname -r<span class="hljs-number">4.10</span><span class="hljs-number">.4</span><span class="hljs-number">-1.</span>el7.elrepo.x86_64</code></pre></div><h1 id="2-安装"><a href="#2-安装" class="headerlink" title="2.安装"></a>2.安装</h1><h2 id="2-1-wget"><a href="#2-1-wget" class="headerlink" title="2.1 wget"></a>2.1 wget</h2><div class="hljs"><pre><code class="hljs cmake">yum <span class="hljs-keyword">install</span> -y wget</code></pre></div><h2 id="2-2-NodeJS"><a href="#2-2-NodeJS" class="headerlink" title="2.2 NodeJS"></a>2.2 NodeJS</h2><div class="hljs"><pre><code class="hljs crmsh"><span class="hljs-comment"># 下载nodejs最新的bin包</span>wget https://nodejs.org/dist/v12.<span class="hljs-number">18.2</span>/<span class="hljs-keyword">node</span><span class="hljs-title">-v12</span>.<span class="hljs-number">18.2</span>-linux-x64.tar.xz<span class="hljs-comment"># 解压</span>xz -d <span class="hljs-keyword">node</span><span class="hljs-title">-v12</span>.<span class="hljs-number">18.2</span>-linux-x64.tar.xztar -xf <span class="hljs-keyword">node</span><span class="hljs-title">-v12</span>.<span class="hljs-number">18.2</span>-linux-x64.tar<span class="hljs-comment"># 移动目录</span>mv <span class="hljs-keyword">node</span><span class="hljs-title">-v12</span>.<span class="hljs-number">18.2</span>-linux-x64 /usr/local/nodejs<span class="hljs-comment"># 部署文件</span>ln -s /usr/local/nodejs/bin/<span class="hljs-keyword">node</span> <span class="hljs-title">/usr</span>/bin/<span class="hljs-keyword">node</span><span class="hljs-title"></span><span class="hljs-title">ln</span> -s /usr/local/nodejs/bin/npm /usr/bin/npm</code></pre></div><p>可以去<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">官方网站</a>下载，我这里使用的类型为：Linux Binaries (x64)</p><p><strong>测试</strong></p><div class="hljs"><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>dbn-japan packages]# node -vv12<span class="hljs-number">.18</span><span class="hljs-number">.2</span>[<span class="hljs-symbol">root@</span>dbn-japan packages]# npm -v<span class="hljs-number">6.14</span><span class="hljs-number">.5</span></code></pre></div><p>如果输出了版本号，说明安装成功。</p><h2 id="2-3-Git"><a href="#2-3-Git" class="headerlink" title="2.3 Git"></a>2.3 Git</h2><div class="hljs"><pre><code class="hljs cmake">yum <span class="hljs-keyword">install</span> -y git</code></pre></div><p>初始化设置：</p><div class="hljs"><pre><code class="hljs routeros">git<span class="hljs-built_in"> config </span>--global user.email <span class="hljs-string">"vip@email.com"</span>git<span class="hljs-built_in"> config </span>--global user.name <span class="hljs-string">"MelodyJerry"</span></code></pre></div><h2 id="2-4-Hexo"><a href="#2-4-Hexo" class="headerlink" title="2.4 Hexo"></a>2.4 Hexo</h2><div class="hljs"><pre><code class="hljs avrasm">npm install -g hexo-<span class="hljs-keyword">cli</span></code></pre></div><p>安装后尝试执行命令： hexo </p><p>如果出现下面的输出，按我下面的方法解决，没有则跳过。</p><div class="hljs"><pre><code class="hljs mipsasm">[root@dbn-<span class="hljs-keyword">japan </span>packages]<span class="hljs-comment"># hexo</span>-<span class="hljs-keyword">bash: </span>hexo: command not found</code></pre></div><p>编辑环境变量文件： vim /etc/profile ，在文件末尾增加下面设置：</p><div class="hljs"><pre><code class="hljs elixir">export PATH=<span class="hljs-variable">$PATH</span><span class="hljs-symbol">:/usr/local/nodejs/lib/node_modules/hexo-cli/bin</span></code></pre></div><p>刷新环境变量： source /etc/profile ，这时再运行命令 hexo 就会有正确的输出了。</p><h1 id="3-配置"><a href="#3-配置" class="headerlink" title="3.配置"></a>3.配置</h1><h2 id="3-1-创建项目与分支"><a href="#3-1-创建项目与分支" class="headerlink" title="3.1 创建项目与分支"></a>3.1 创建项目与分支</h2><p><a href="https://img2018.cnblogs.com/blog/1065454/201811/1065454-20181112223524269-603079356.png" target="_blank" rel="noopener"><img src="https://img2018.cnblogs.com/blog/1065454/201811/1065454-20181112223524269-603079356.png" srcset="/blog/img/loading.gif" alt="img"></a></p><p>创建新的分支：sources</p><p><a href="https://img2018.cnblogs.com/blog/1065454/201811/1065454-20181112223651823-1038516991.png" target="_blank" rel="noopener"><img src="https://img2018.cnblogs.com/blog/1065454/201811/1065454-20181112223651823-1038516991.png" srcset="/blog/img/loading.gif" alt="img"></a></p><ul><li><strong>master</strong>：存放 Hexo 编译生成的静态资源。</li><li><strong>sources</strong>：存放源文件，用来备份博客。</li></ul><h2 id="3-2-设置-SSH-Key"><a href="#3-2-设置-SSH-Key" class="headerlink" title="3.2 设置 SSH Key"></a>3.2 设置 SSH Key</h2><p>运行下面的命令创建 SSH Key，邮箱部分改成你创建账户时候的邮箱：</p><div class="hljs"><pre><code class="hljs vbnet">[root@dbn-japan blog.dbnuo.org]<span class="hljs-meta"># ssh-keygen -t rsa -C "dbnuo@foxmail.com"</span>Generating <span class="hljs-keyword">public</span>/<span class="hljs-keyword">private</span> rsa <span class="hljs-keyword">key</span> pair.Enter file <span class="hljs-keyword">in</span> which <span class="hljs-keyword">to</span> save the <span class="hljs-keyword">key</span> (/root/.ssh/id_rsa): <span class="hljs-meta"># 目录</span>Enter passphrase (empty <span class="hljs-keyword">for</span> no passphrase): <span class="hljs-meta"># 输入密码，可回车跳过</span>Enter same passphrase again: <span class="hljs-meta"># 再次输入密码</span></code></pre></div><p>查看公开密钥：</p><div class="hljs"><pre><code class="hljs arcade">cat ~<span class="hljs-regexp">/.ssh/i</span>d_rsa.pub</code></pre></div><p> 将公开密钥添加至码云。</p><p><a href="https://img2018.cnblogs.com/blog/1065454/201811/1065454-20181112223849791-551396003.png" target="_blank" rel="noopener"><img src="https://img2018.cnblogs.com/blog/1065454/201811/1065454-20181112223849791-551396003.png" srcset="/blog/img/loading.gif" alt="img"></a></p><h2 id="3-3-拉取项目"><a href="#3-3-拉取项目" class="headerlink" title="3.3 拉取项目"></a>3.3 拉取项目</h2><p>跳转至网站根目录，克隆项目至本地：</p><div class="hljs"><pre><code class="hljs crmsh">git <span class="hljs-keyword">clone</span> <span class="hljs-title">https</span>://gitee.com/dbnuo/bnd-hexo.git</code></pre></div><p>跳转至拉取的项目目录：</p><div class="hljs"><pre><code class="hljs sql"><span class="hljs-comment"># 创建 hexo 目录</span>mkdir hexo<span class="hljs-comment"># 进入 hexo 目录</span>cd hexo/<span class="hljs-comment"># 初始化 hexo 目录</span>hexo initnpm <span class="hljs-keyword">install</span><span class="hljs-comment"># 安装插件</span>npm <span class="hljs-keyword">install</span> hexo-generator-<span class="hljs-keyword">index</span> <span class="hljs-comment">--save</span>npm <span class="hljs-keyword">install</span> hexo-generator-<span class="hljs-keyword">archive</span> <span class="hljs-comment">--save</span>npm <span class="hljs-keyword">install</span> hexo-generator-<span class="hljs-keyword">category</span> <span class="hljs-comment">--save</span>npm <span class="hljs-keyword">install</span> hexo-generator-tag <span class="hljs-comment">--save</span>npm <span class="hljs-keyword">install</span> hexo-<span class="hljs-keyword">server</span> <span class="hljs-comment">--save</span>npm <span class="hljs-keyword">install</span> hexo-deployer-git <span class="hljs-comment">--save</span>npm <span class="hljs-keyword">install</span> hexo-deployer-heroku <span class="hljs-comment">--save</span>npm <span class="hljs-keyword">install</span> hexo-deployer-rsync <span class="hljs-comment">--save</span>npm <span class="hljs-keyword">install</span> hexo-deployer-openshift <span class="hljs-comment">--save</span>npm <span class="hljs-keyword">install</span> hexo-renderer-marked <span class="hljs-comment">--save</span>npm <span class="hljs-keyword">install</span> hexo-renderer-stylus <span class="hljs-comment">--save</span>npm <span class="hljs-keyword">install</span> hexo-generator-feed <span class="hljs-comment">--save</span>npm <span class="hljs-keyword">install</span> hexo-generator-sitemap <span class="hljs-comment">--save</span></code></pre></div><h1 id="4-建站"><a href="#4-建站" class="headerlink" title="4.建站"></a>4.建站</h1><p>先看文件夹里都有什么：</p><div class="hljs"><pre><code class="hljs mipsasm">[root@dbn-<span class="hljs-keyword">japan </span>hexo]<span class="hljs-comment"># ls -a</span>.  ..  _<span class="hljs-built_in">config</span>.yml  .gitignore  node_modules  package.<span class="hljs-keyword">json </span> package-lock.<span class="hljs-keyword">json </span> <span class="hljs-keyword">scaffolds </span> source  themes</code></pre></div><ul><li>_config.yml：站点的配置文件，需要备份；</li><li>themes：主题文件夹，需要备份；</li><li>source：博客文章的 .md 文件，需要备份；</li><li>scaffolds：文章的模板，需要备份；</li><li>package.json：安装包的名称，需要备份；</li><li>.gitignore：限定在 push 时哪些文件可以忽略，需要备份；</li><li>.git：主题和站点都有，标志这是一个 git 项目，不需要备份；</li><li>node_modules：是安装包的目录，在执行 npm install 的时候会重新生成，不需要备份；</li><li>public：是 hexo g 生成的静态网页，不需要备份；</li><li>.deploy_git：同上，hexo g 也会生成，不需要备份；</li><li>db.json：文件，不需要备份。</li></ul><h2 id="4-1-配置-config-yml"><a href="#4-1-配置-config-yml" class="headerlink" title="4.1 配置 _config.yml"></a>4.1 配置 _config.yml</h2><p>基础配置可以参考<a href="https://hexo.io/zh-cn/docs/configuration" target="_blank" rel="noopener">官方文档</a>的配置说明。这里需要在末尾添加 Git 的配置：</p><div class="hljs"><pre><code class="hljs crmsh">...deploy:  <span class="hljs-keyword">type</span>: git  repo: https://gitee.com/dbnuo/bnd-hexo.git  branch: <span class="hljs-literal">master</span>  message: 'web updata: {{now(<span class="hljs-string">"YYYY-MM-DD HH/mm/ss"</span>)}}'</code></pre></div><h2 id="4-2-生成页面并提交"><a href="#4-2-生成页面并提交" class="headerlink" title="4.2 生成页面并提交"></a>4.2 生成页面并提交</h2><p>运行命令： <code>hexo cl &amp;&amp; hexo g -d</code> 输入用户名和密码后，页面代码就会提交至码云项目中。</p><p><a href="https://img2018.cnblogs.com/blog/1065454/201811/1065454-20181113103505392-1803344108.png" target="_blank" rel="noopener"><img src="https://img2018.cnblogs.com/blog/1065454/201811/1065454-20181113103505392-1803344108.png" srcset="/blog/img/loading.gif" alt="img"></a></p><p>将网站目录指定至 hexo 的 public 文件夹中，访问网站：</p><div class="hljs"><pre><code class="hljs routeros">cd hexohexo s # hexo<span class="hljs-built_in"> server </span>默认是4000端口</code></pre></div><p><a href="https://img2018.cnblogs.com/blog/1065454/201811/1065454-20181113103622833-1181993845.png" target="_blank" rel="noopener"><img src="https://img2018.cnblogs.com/blog/1065454/201811/1065454-20181113103622833-1181993845.png" srcset="/blog/img/loading.gif" alt="img"></a></p><h1 id="5-备份"><a href="#5-备份" class="headerlink" title="5.备份"></a>5.备份</h1><p>跳转至项目目录 bnd-hexo：</p><div class="hljs"><pre><code class="hljs mipsasm">git checkout -<span class="hljs-keyword">b </span>sources <span class="hljs-comment"># 创建切换分支</span>git push <span class="hljs-keyword">origin </span>sources <span class="hljs-comment"># 提交代码至分支</span></code></pre></div><p>提交至码云项目分支：</p><p><a href="https://img2018.cnblogs.com/blog/1065454/201811/1065454-20181113105109879-1083473093.png" target="_blank" rel="noopener"><img src="https://img2018.cnblogs.com/blog/1065454/201811/1065454-20181113105109879-1083473093.png" srcset="/blog/img/loading.gif" alt="img"></a></p><p>至此搭建完毕，代码也备份到项目中了。为了测试备份恢复，我新建了个文章 test 并提交进行测试。</p><p><a href="https://img2018.cnblogs.com/blog/1065454/201811/1065454-20181113105556438-1191039737.png" target="_blank" rel="noopener"><img src="https://img2018.cnblogs.com/blog/1065454/201811/1065454-20181113105556438-1191039737.png" srcset="/blog/img/loading.gif" alt="img"></a></p><h1 id="6-恢复"><a href="#6-恢复" class="headerlink" title="6.恢复"></a>6.恢复</h1><p>切换至测试服务器，基础的安装和设置可以参考上面的流程。</p><p>跳转至网站的根目录：</p><div class="hljs"><pre><code class="hljs sql"><span class="hljs-comment"># 拉取项目至本地</span>git clone https://gitee.com/dbnuo/bnd-hexo.git<span class="hljs-comment"># 跳转至目录</span>cd bnd-hexo<span class="hljs-comment"># 创建分支并拉取</span>git checkout -b sources origin/sources<span class="hljs-comment"># 跳转至源文件目录</span>cd hexo<span class="hljs-comment"># 初始安装</span>npm <span class="hljs-keyword">install</span>npm <span class="hljs-keyword">install</span> hexo-generator-<span class="hljs-keyword">index</span> <span class="hljs-comment">--save</span>npm <span class="hljs-keyword">install</span> hexo-generator-<span class="hljs-keyword">archive</span> <span class="hljs-comment">--save</span>npm <span class="hljs-keyword">install</span> hexo-generator-<span class="hljs-keyword">category</span> <span class="hljs-comment">--save</span>npm <span class="hljs-keyword">install</span> hexo-generator-tag <span class="hljs-comment">--save</span>npm <span class="hljs-keyword">install</span> hexo-<span class="hljs-keyword">server</span> <span class="hljs-comment">--save</span>npm <span class="hljs-keyword">install</span> hexo-deployer-git <span class="hljs-comment">--save</span>npm <span class="hljs-keyword">install</span> hexo-deployer-heroku <span class="hljs-comment">--save</span>npm <span class="hljs-keyword">install</span> hexo-deployer-rsync <span class="hljs-comment">--save</span>npm <span class="hljs-keyword">install</span> hexo-deployer-openshift <span class="hljs-comment">--save</span>npm <span class="hljs-keyword">install</span> hexo-renderer-marked <span class="hljs-comment">--save</span>npm <span class="hljs-keyword">install</span> hexo-renderer-stylus <span class="hljs-comment">--save</span>npm <span class="hljs-keyword">install</span> hexo-generator-feed <span class="hljs-comment">--save</span>npm <span class="hljs-keyword">install</span> hexo-generator-sitemap <span class="hljs-comment">--save</span></code></pre></div><p>执行完毕，hexo 就恢复了，可以正常操作了。</p><h1 id="7-多终端"><a href="#7-多终端" class="headerlink" title="7.多终端"></a>7.多终端</h1><p>至此两台服务器都对一个项目库进行操作，可以说是多终端了，我在测试服务器新建了个文章： hexo new post “test2” </p><p>创建成功后提交上传。</p><p>切换回主服务器：</p><div class="hljs"><pre><code class="hljs properties"><span class="hljs-comment"># 跳转至项目目录</span><span class="hljs-attr">cd</span> <span class="hljs-string">bnd-hexo</span><span class="hljs-comment"># 拉取项目</span><span class="hljs-attr">git</span> <span class="hljs-string">pull origin sources</span><span class="hljs-comment"># 跳转至源文件目录</span><span class="hljs-attr">cd</span> <span class="hljs-string">hexo/</span><span class="hljs-comment"># 重新编译</span><span class="hljs-attr">hexo</span> <span class="hljs-string">cl &amp;&amp; hexo g -d</span></code></pre></div><p>再访问网站：</p><p><a href="https://img2018.cnblogs.com/blog/1065454/201811/1065454-20181113114656020-1660436245.png" target="_blank" rel="noopener"><img src="https://img2018.cnblogs.com/blog/1065454/201811/1065454-20181113114656020-1660436245.png" srcset="/blog/img/loading.gif" alt="img"></a></p><p>看到这里出现了文章 test2 ，至此多终端编辑操作成功。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>服务器端简单Demo</title>
    <link href="/blog/2020/07/07/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E7%AE%80%E5%8D%95Demo/"/>
    <url>/blog/2020/07/07/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E7%AE%80%E5%8D%95Demo/</url>
    
    <content type="html"><![CDATA[<a id="more"></a><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">void</span> CSrvDemoDlg::OnBnClickedOk(){    <span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> 在此添加控件通知处理程序代码</span>    <span class="hljs-comment">//创建一个套接字的步骤</span>    <span class="hljs-comment">//定义套接字变量</span>    SOCKET ls;    <span class="hljs-comment">//创建套接字</span>    ls=socket(AF_INET,SOCK_STREAM,IPPROTO_TCP);    <span class="hljs-comment">//判断套接字是否成功，失败则退出</span>    <span class="hljs-keyword">if</span>(ls==INVALID_SOCKET){        printf(<span class="hljs-string">"Error at socket():%d\n"</span>,WSAGetLastError());        WSACleanup();        <span class="hljs-keyword">return</span>;    }    <span class="hljs-comment">//绑定套接字和套接字地址</span>    sockaddr_in sa;    sa.sin_family=AF_INET;    sa.sin_addr.S_un.S_addr=inet_addr(<span class="hljs-string">"127.0.0.1"</span>);    sa.sin_port=htons(<span class="hljs-number">12345</span>);    <span class="hljs-comment">//判断是否绑定成功</span>    <span class="hljs-keyword">if</span>(bind(ls,(SOCKADDR*)&amp;sa,sizeof(sa))==SOCKET_ERROR){        printf(<span class="hljs-string">"bind()failed.\n"</span>);        closesocket(ls);        <span class="hljs-keyword">return</span>;    }    <span class="hljs-comment">//把套接字置入侦听状态</span>    listen(ls,<span class="hljs-number">3</span>);    <span class="hljs-comment">//接受连接请求</span>    SOCKET snew;    snew=accept(ls,NULL,NULL);    <span class="hljs-keyword">char</span> szmsg[<span class="hljs-number">50</span>];    strcpy(szmsg,<span class="hljs-string">"welcome to hgu.edu!\r\n"</span>);    <span class="hljs-comment">//发送数据</span>    send(snew,szmsg,strlen(szmsg),<span class="hljs-number">0</span>);}</code></pre></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【LeetCode】9. 回文数</title>
    <link href="/blog/2020/06/10/%E3%80%90LeetCode%E3%80%919.%20%E5%9B%9E%E6%96%87%E6%95%B0/"/>
    <url>/blog/2020/06/10/%E3%80%90LeetCode%E3%80%919.%20%E5%9B%9E%E6%96%87%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>判断一个整数是否是回文数。</p><p>回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。</p><p>示例 1:</p><div class="hljs"><pre><code class="hljs yaml"><span class="hljs-string">输入:</span> <span class="hljs-number">121</span><span class="hljs-string">输出:</span> <span class="hljs-literal">true</span></code></pre></div><p>示例 2:</p><div class="hljs"><pre><code class="hljs yaml"><span class="hljs-string">输入:</span> <span class="hljs-number">-121</span><span class="hljs-string">输出:</span> <span class="hljs-literal">false</span><span class="hljs-string">解释:</span> <span class="hljs-string">从左向右读,</span> <span class="hljs-string">为</span> <span class="hljs-number">-121</span> <span class="hljs-string">。</span> <span class="hljs-string">从右向左读,</span> <span class="hljs-string">为</span> <span class="hljs-number">121</span><span class="hljs-bullet">-</span> <span class="hljs-string">。因此它不是一个回文数。</span></code></pre></div><p>示例 3:</p><div class="hljs"><pre><code class="hljs yaml"><span class="hljs-string">输入:</span> <span class="hljs-number">10</span><span class="hljs-string">输出:</span> <span class="hljs-literal">false</span><span class="hljs-string">解释:</span> <span class="hljs-string">从右向左读,</span> <span class="hljs-string">为</span> <span class="hljs-number">01</span> <span class="hljs-string">。因此它不是一个回文数。</span></code></pre></div><p>进阶:</p><ul><li>你能不将整数转为字符串来解决这个问题吗？</li></ul><a id="more"></a><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>用数学方法直接计算出倒数</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>{    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">isPalindrome</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x)</span> </span>{        <span class="hljs-keyword">if</span>(x &lt; <span class="hljs-number">0</span>)  <span class="hljs-keyword">return</span> <span class="hljs-keyword">false</span>;        <span class="hljs-keyword">int</span> rec = <span class="hljs-number">0</span>;        <span class="hljs-keyword">int</span> num = x;        <span class="hljs-keyword">while</span>(num != <span class="hljs-number">0</span>) {            rec = rec * <span class="hljs-number">10</span> + num % <span class="hljs-number">10</span>;            num /= <span class="hljs-number">10</span>;        }        <span class="hljs-keyword">return</span> rec == x;    }}</code></pre></div><h1 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h1><ul><li>将整数转为字符串来解决<br><a href="https://leetcode-cn.com/problems/palindrome-number/solution/dong-hua-hui-wen-shu-de-san-chong-jie-fa-fa-jie-ch/" target="_blank" rel="noopener">动画：回文数的三种解法 | 法解种三的数文回：画动</a><br><a href="https://leetcode-cn.com/problems/palindrome-number/solution/hui-wen-shu-by-leetcode-solution/" target="_blank" rel="noopener">回文数</a></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>超星学习通脚本（油猴）</title>
    <link href="/blog/2020/06/09/%E8%B6%85%E6%98%9F%E5%AD%A6%E4%B9%A0%E9%80%9A%E8%84%9A%E6%9C%AC%EF%BC%88%E6%B2%B9%E7%8C%B4%EF%BC%89/"/>
    <url>/blog/2020/06/09/%E8%B6%85%E6%98%9F%E5%AD%A6%E4%B9%A0%E9%80%9A%E8%84%9A%E6%9C%AC%EF%BC%88%E6%B2%B9%E7%8C%B4%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="脚本①"><a href="#脚本①" class="headerlink" title="脚本①"></a>脚本①</h1><div class="hljs"><pre><code class="hljs js"><span class="hljs-comment">// ==UserScript==</span><span class="hljs-comment">// @name         熊猫超星网课助手</span><span class="hljs-comment">// @namespace    xiongmao</span><span class="hljs-comment">// @version      9.0.1</span><span class="hljs-comment">// @description  自动挂机看尔雅MOOC，支持视频、音频、文档、图书自动完成，章节测验自动答题提交，支持自动切换任务点、挂机阅读时长、自动登录等，解除各类功能限制，开放自定义参数</span><span class="hljs-comment">// @author       xiongmao</span><span class="hljs-comment">// @match        *://*.chaoxing.com/*</span><span class="hljs-comment">// @match        *://*.edu.cn/*</span><span class="hljs-comment">// @connect      api.xmlm8.com</span><span class="hljs-comment">// @run-at       document-end</span><span class="hljs-comment">// @grant        unsafeWindow</span><span class="hljs-comment">// @grant        GM_xmlhttpRequest</span><span class="hljs-comment">// @grant        GM_setClipboard</span><span class="hljs-comment">// @license      MIT</span><span class="hljs-comment">// ==/UserScript==</span><span class="hljs-comment">// 设置修改后，需要刷新或重新打开网课页面才会生效</span><span class="hljs-keyword">var</span> setting = {    <span class="hljs-comment">// 8E3 == 8000，科学记数法，表示毫秒数</span>    time: <span class="hljs-number">8E3</span> <span class="hljs-comment">// 默认响应速度为8秒，不建议小于5秒</span>    ,<span class="hljs-attr">token</span>: <span class="hljs-string">''</span> <span class="hljs-comment">// 捐助用户可以使用定制功能，更精准的匹配答案，此处填写捐助后获取的识别码</span>    ,<span class="hljs-attr">review</span>: <span class="hljs-number">0</span> <span class="hljs-comment">// 复习模式，完整挂机视频(音频)时长，支持挂机任务点已完成的视频和音频，默认关闭</span>    ,<span class="hljs-attr">queue</span>: <span class="hljs-number">1</span> <span class="hljs-comment">// 队列模式，开启后任务点逐一完成，关闭则单页面所有任务点同时进行，默认开启</span>    <span class="hljs-comment">// 1代表开启，0代表关闭</span>    ,<span class="hljs-attr">video</span>: <span class="hljs-number">1</span> <span class="hljs-comment">// 视频支持后台、切换窗口不暂停，支持多视频，默认开启</span>    ,<span class="hljs-attr">work</span>: <span class="hljs-number">0</span> <span class="hljs-comment">// 自动答题功能(章节测验)，作业需要手动开启查询，高准确率，默认开启</span>    ,<span class="hljs-attr">audio</span>: <span class="hljs-number">1</span> <span class="hljs-comment">// 音频自动播放，与视频功能共享vol和rate参数，默认开启</span>    ,<span class="hljs-attr">book</span>: <span class="hljs-number">1</span> <span class="hljs-comment">// 图书阅读任务点，非课程阅读任务点，默认开启</span>    ,<span class="hljs-attr">docs</span>: <span class="hljs-number">1</span> <span class="hljs-comment">// 文档阅读任务点，PPT类任务点自动完成阅读任务，默认开启</span>    <span class="hljs-comment">// 本区域参数，上方为任务点功能，下方为独立功能</span>    ,<span class="hljs-attr">jump</span>: <span class="hljs-number">1</span> <span class="hljs-comment">// 自动切换任务点、章节、课程(需要配置course参数)，默认开启</span>    ,<span class="hljs-attr">read</span>: <span class="hljs-string">'0'</span> <span class="hljs-comment">// 挂机课程阅读时间，单位是分钟，'65'代表挂机65分钟，请手动打开阅读页面，默认'0'分钟</span>    ,<span class="hljs-attr">face</span>: <span class="hljs-number">0</span> <span class="hljs-comment">// 解除面部识别(不支持二维码类面部采集)，此功能仅为临时解除，默认关闭</span>    ,<span class="hljs-attr">total</span>: <span class="hljs-number">0</span> <span class="hljs-comment">// 显示课程进度的统计数据，在学习进度页面的上方展示，默认关闭</span>    <span class="hljs-comment">// 仅开启video(audio)时，修改此处才会生效</span>    ,<span class="hljs-attr">line</span>: <span class="hljs-string">'公网1'</span> <span class="hljs-comment">// 视频播放的默认资源线路，此功能适用于系统默认线路无资源，默认'公网1'</span>    ,<span class="hljs-attr">http</span>: <span class="hljs-string">'标清'</span> <span class="hljs-comment">// 视频播放的默认清晰度，无效参数则使用系统默认清晰度，默认'标清'</span>    <span class="hljs-comment">// 本区域参数，上方为video功能独享，下方为audio功能共享</span>    ,<span class="hljs-attr">vol</span>: <span class="hljs-string">'0'</span> <span class="hljs-comment">// 默认音量的百分数，设定范围：[0,100]，'0'为静音，默认'0'</span>    ,<span class="hljs-attr">rate</span>: <span class="hljs-string">'3'</span> <span class="hljs-comment">// 视频播放默认倍率，参数范围0∪[0.0625,16]，'0'为秒过，默认'1'倍</span>    <span class="hljs-comment">// 仅开启work时，修改此处才会生效</span>    ,<span class="hljs-attr">auto</span>: <span class="hljs-number">0</span> <span class="hljs-comment">// 答题完成后自动提交，默认关闭 改为1开启</span>    ,<span class="hljs-attr">none</span>: <span class="hljs-number">0</span> <span class="hljs-comment">// 无匹配答案时执行默认操作，关闭后若题目无匹配答案则会暂时保存已作答的题目，默认开启</span>    ,<span class="hljs-attr">scale</span>: <span class="hljs-number">0</span> <span class="hljs-comment">// 富文本编辑器高度自动拉伸，用于文本类题目，答题框根据内容自动调整大小，默认关闭</span>    <span class="hljs-comment">// 仅开启jump时，修改此处才会生效</span>    ,<span class="hljs-attr">course</span>: <span class="hljs-number">0</span> <span class="hljs-comment">// 当前课程完成后自动切换课程，仅支持按照根目录课程顺序切换，默认开启</span>    ,<span class="hljs-attr">lock</span>: <span class="hljs-number">1</span> <span class="hljs-comment">// 跳过未开放(图标是锁)的章节，即闯关模式或定时发放的任务点，默认开启</span>    <span class="hljs-comment">// 自动登录功能配置区</span>    ,<span class="hljs-attr">school</span>: <span class="hljs-string">'账号为手机号可以不修改此参数'</span> <span class="hljs-comment">// 学校/单位/机构码，要求完整有效可查询，例如'清华大学'</span>    ,<span class="hljs-attr">username</span>: <span class="hljs-string">''</span> <span class="hljs-comment">// 学号/工号/借书证号(邮箱/手机号/账号)，例如'2018010101'，默认''</span>    ,<span class="hljs-attr">password</span>: <span class="hljs-string">''</span> <span class="hljs-comment">// 密码，例如'123456'，默认''</span>},_self = unsafeWindow,url = location.pathname,top = _self;<span class="hljs-keyword">if</span> (url != <span class="hljs-string">'/studyApp/studying'</span> &amp;&amp; top != _self.top) <span class="hljs-built_in">document</span>.domain = location.host.replace(<span class="hljs-regexp">/.+?\./</span>, <span class="hljs-string">''</span>);<span class="hljs-keyword">try</span> {    <span class="hljs-keyword">while</span> (top != _self.top) {        top = top.parent.document ? top.parent : _self.top;        <span class="hljs-keyword">if</span> (top.location.pathname == <span class="hljs-string">'/mycourse/studentstudy'</span>) <span class="hljs-keyword">break</span>;    }} <span class="hljs-keyword">catch</span> (err) {    <span class="hljs-comment">// console.log(err);</span>    top = _self;}<span class="hljs-keyword">var</span> $ = _self.jQuery || top.jQuery,parent = _self == top ? self : _self.parent,Ext = _self.Ext || parent.Ext || {},UE = _self.UE,vjs = _self.videojs;<span class="hljs-built_in">String</span>.prototype.toCDB = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{    <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.replace(<span class="hljs-regexp">/\s/g</span>, <span class="hljs-string">''</span>).replace(<span class="hljs-regexp">/[\uff01-\uff5e]/g</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">str</span>) </span>{        <span class="hljs-keyword">return</span> <span class="hljs-built_in">String</span>.fromCharCode(str.charCodeAt(<span class="hljs-number">0</span>) - <span class="hljs-number">65248</span>);    }).replace(<span class="hljs-regexp">/[“”]/g</span>, <span class="hljs-string">'"'</span>).replace(<span class="hljs-regexp">/[‘’]/g</span>, <span class="hljs-string">"'"</span>).replace(<span class="hljs-regexp">/。/g</span>, <span class="hljs-string">'.'</span>);};setting.normal = <span class="hljs-string">''</span>; <span class="hljs-comment">// ':visible'</span><span class="hljs-comment">// setting.time += Math.ceil(setting.time * Math.random()) - setting.time / 2;</span>setting.job = [<span class="hljs-string">':not(*)'</span>];setting.video &amp;&amp; setting.job.push(<span class="hljs-string">'iframe[src*="/video/index.html"]'</span>);setting.work &amp;&amp; setting.job.push(<span class="hljs-string">'iframe[src*="/work/index.html"]'</span>);setting.audio &amp;&amp; setting.job.push(<span class="hljs-string">'iframe[src*="/audio/index.html"]'</span>);setting.book &amp;&amp; setting.job.push(<span class="hljs-string">'iframe[src*="/innerbook/index.html"]'</span>);setting.docs &amp;&amp; setting.job.push(<span class="hljs-string">'iframe[src*="/ppt/index.html"]'</span>, <span class="hljs-string">'iframe[src*="/pdf/index.html"]'</span>);setting.tip = !setting.queue || top != _self &amp;&amp; jobSort($ || Ext.query);<span class="hljs-keyword">if</span> (url == <span class="hljs-string">'/mycourse/studentstudy'</span>) {    _self.checkMobileBrowerLearn = $.noop;    <span class="hljs-keyword">var</span> classId = location.search.match(<span class="hljs-regexp">/cla[zs]{2}id=(\d+)/i</span>)[<span class="hljs-number">1</span>] || <span class="hljs-number">0</span>,    courseId = _self.courseId || location.search.match(<span class="hljs-regexp">/courseId=(\d+)/i</span>)[<span class="hljs-number">1</span>] || <span class="hljs-number">0</span>;    setting.lock || $(<span class="hljs-string">'#coursetree'</span>).on(<span class="hljs-string">'click'</span>, <span class="hljs-string">'[onclick*=void], [href*=void]'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{        _self.getTeacherAjax(courseId, classId, $(<span class="hljs-keyword">this</span>).parent().attr(<span class="hljs-string">'id'</span>).slice(<span class="hljs-number">3</span>));    });} <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (url == <span class="hljs-string">'/ananas/modules/video/index.html'</span> &amp;&amp; setting.video) {    <span class="hljs-keyword">if</span> (setting.review) _self.greenligth = Ext.emptyFn;    checkPlayer(_self.supportH5Video());} <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (url == <span class="hljs-string">'/work/doHomeWorkNew'</span> || url == <span class="hljs-string">'/api/work'</span> || url == <span class="hljs-string">'/work/addStudentWorkNewWeb'</span>) {    <span class="hljs-keyword">if</span> (!UE) {        <span class="hljs-keyword">var</span> len = ($ || Ext.query || <span class="hljs-built_in">Array</span>)(<span class="hljs-string">'font:contains(未登录)'</span>, <span class="hljs-built_in">document</span>).length;        setTimeout(len == <span class="hljs-number">1</span> ? top.location.reload : parent.greenligth, setting.time);    } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (setting.work) {        setTimeout(relieveLimit, <span class="hljs-number">0</span>);        beforeFind();    }} <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (url == <span class="hljs-string">'/ananas/modules/audio/index.html'</span> &amp;&amp; setting.audio) {    <span class="hljs-keyword">if</span> (setting.review) _self.greenligth = Ext.emptyFn;    _self.videojs = hookAudio;    hookAudio.xhr = vjs.xhr;} <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (url == <span class="hljs-string">'/ananas/modules/innerbook/index.html'</span> &amp;&amp; setting.book &amp;&amp; setting.tip) {    setTimeout(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{        _self.setting ? _self.top.onchangepage(_self.getFrameAttr(<span class="hljs-string">'end'</span>)) : _self.greenligth();    }, setting.time);} <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (url.match(<span class="hljs-regexp">/^\/ananas\/modules\/(ppt|pdf)\/index\.html$/</span>) &amp;&amp; setting.docs &amp;&amp; setting.tip) {    setTimeout(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{        _self.setting ? _self.finishJob() : _self.greenligth();    }, setting.time);    frameElement.setAttribute(<span class="hljs-string">'download'</span>, <span class="hljs-number">1</span>);} <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (url == <span class="hljs-string">'/knowledge/cards'</span>) {    $ &amp;&amp; checkToNext();} <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (url.match(<span class="hljs-regexp">/^\/(course|zt)\/\d+\.html$/</span>)) {    setTimeout(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{        +setting.read &amp;&amp; _self.sendLogs &amp;&amp; $(<span class="hljs-string">'.course_section:eq(0) .chapterText'</span>).click();    }, setting.time);} <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (url == <span class="hljs-string">'/ztnodedetailcontroller/visitnodedetail'</span>) {    setting.read *= <span class="hljs-number">60</span> / $(<span class="hljs-string">'.course_section'</span>).length;    setting.read &amp;&amp; _self.sendLogs &amp;&amp; autoRead();} <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (url == <span class="hljs-string">'/mycourse/studentcourse'</span>) {    <span class="hljs-keyword">var</span> gv = location.search.match(<span class="hljs-regexp">/d=\d+&amp;/g</span>);    setting.total &amp;&amp; $(<span class="hljs-string">'&lt;a&gt;'</span>, {        href: <span class="hljs-string">'/moocAnalysis/chapterStatisticByUser?classI'</span> + gv[<span class="hljs-number">1</span>] + <span class="hljs-string">'courseI'</span> + gv[<span class="hljs-number">0</span>] + <span class="hljs-string">'userId='</span> + _self.getCookie(<span class="hljs-string">'_uid'</span>) + <span class="hljs-string">'&amp;ut=s'</span>,        target: <span class="hljs-string">'_blank'</span>,        title: <span class="hljs-string">'点击查看章节统计'</span>,        style: <span class="hljs-string">'margin: 0 25px;'</span>,        html: <span class="hljs-string">'本课程共'</span> + $(<span class="hljs-string">'.icon'</span>).length + <span class="hljs-string">'节，剩余'</span> + $(<span class="hljs-string">'em:not(.openlock)'</span>).length + <span class="hljs-string">'节未完成'</span>    }).appendTo(<span class="hljs-string">'.zt_logo'</span>).parent().width(<span class="hljs-string">'auto'</span>);} <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (url.match(<span class="hljs-regexp">/^\/visit\/(courses|interaction)$/</span>)) {    setting.face &amp;&amp; $(<span class="hljs-string">'.zmodel'</span>).on(<span class="hljs-string">'click'</span>, <span class="hljs-string">'[onclick^=openFaceTip]'</span>, DisplayURL);} <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (location.host.match(<span class="hljs-regexp">/^passport2/</span>)) {    setting.username &amp;&amp; getSchoolId();} <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (location.hostname == <span class="hljs-string">'i.mooc.chaoxing.com'</span>) {    _self.layui.use(<span class="hljs-string">'layer'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{        <span class="hljs-keyword">this</span>.layer.open({<span class="hljs-attr">content</span>: <span class="hljs-string">'拖动进度条、倍速播放、秒过会导致不良记录！题库在慢慢补充，搜不到的题目系统会在次日进行自动补充'</span>, <span class="hljs-attr">title</span>: <span class="hljs-string">'超星网课助手提示'</span>, <span class="hljs-attr">btn</span>: <span class="hljs-string">'我已知悉'</span>, <span class="hljs-attr">offset</span>: <span class="hljs-string">'t'</span>, <span class="hljs-attr">closeBtn</span>: <span class="hljs-number">0</span>});    });} <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (url == <span class="hljs-string">'/widget/pcvote/goStudentVotePage'</span>) {    $(<span class="hljs-string">':checked'</span>).click();    $(<span class="hljs-string">'.StudentTimu'</span>).each(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">index</span>) </span>{        <span class="hljs-keyword">var</span> ans = _self.questionlist[index].answer;        $(<span class="hljs-string">':radio, :checkbox'</span>, <span class="hljs-keyword">this</span>).each(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">num</span>) </span>{            ans[num].isanswer &amp;&amp; <span class="hljs-keyword">this</span>.click();        });        $(<span class="hljs-string">':text'</span>, <span class="hljs-keyword">this</span>).val(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">num</span>) </span>{            <span class="hljs-keyword">return</span> $(ans[num].content).text().trim();        });    });} <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (url == <span class="hljs-string">'/work/selectWorkQuestionYiPiYue'</span>) {    submitAnswer(getIframe().parent(), $.extend(<span class="hljs-literal">true</span>, [], parent._data));}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getIframe</span>(<span class="hljs-params">tip, win, job</span>) </span>{    <span class="hljs-keyword">if</span> (!$) <span class="hljs-keyword">return</span> Ext.get(frameElement || []).parent().child(<span class="hljs-string">'.ans-job-icon'</span>) || Ext.get([]);    <span class="hljs-keyword">do</span> {        win = win ? win.parent : _self;        job = $(win.frameElement).prevAll(<span class="hljs-string">'.ans-job-icon'</span>);    } <span class="hljs-keyword">while</span> (!job.length &amp;&amp; win.parent.frameElement);    <span class="hljs-keyword">return</span> tip ? win : job;}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">jobSort</span>(<span class="hljs-params">$</span>) </span>{    <span class="hljs-keyword">var</span> fn = $.fn ? [getIframe(<span class="hljs-number">1</span>), <span class="hljs-string">'length'</span>] : [self, <span class="hljs-string">'dom'</span>],    sel = setting.job.join(<span class="hljs-string">', :not(.ans-job-finished) &gt; .ans-job-icon'</span> + setting.normal + <span class="hljs-string">' ~ '</span>);    <span class="hljs-keyword">if</span> ($(sel, fn[<span class="hljs-number">0</span>].parent.document)[<span class="hljs-number">0</span>] == fn[<span class="hljs-number">0</span>].frameElement) <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;    <span class="hljs-keyword">if</span> (!getIframe()[fn[<span class="hljs-number">1</span>]] || getIframe().parent().is(<span class="hljs-string">'.ans-job-finished'</span>)) <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;    setInterval(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{        $(sel, fn[<span class="hljs-number">0</span>].parent.document)[<span class="hljs-number">0</span>] == fn[<span class="hljs-number">0</span>].frameElement &amp;&amp; fn[<span class="hljs-number">0</span>].location.reload();    }, setting.time);}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkPlayer</span>(<span class="hljs-params">tip</span>) </span>{    _self.videojs = hookVideo;    hookVideo.xhr = vjs.xhr;    Ext.isSogou = Ext.isIos = Ext.isAndroid = <span class="hljs-literal">false</span>;    <span class="hljs-keyword">var</span> data = Ext.decode(_self.config(<span class="hljs-string">'data'</span>)) || {};    <span class="hljs-keyword">delete</span> data.danmaku;    data.doublespeed = <span class="hljs-number">1</span>;    frameElement.setAttribute(<span class="hljs-string">'data'</span>, Ext.encode(data));    <span class="hljs-keyword">if</span> (tip) <span class="hljs-keyword">return</span>;    _self.supportH5Video = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;};    alert(<span class="hljs-string">'此浏览器不支持html5播放器，请更换浏览器'</span>);}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">hookVideo</span>(<span class="hljs-params"></span>) </span>{    _self.alert = <span class="hljs-built_in">console</span>.log;    <span class="hljs-keyword">var</span> config = <span class="hljs-built_in">arguments</span>[<span class="hljs-number">1</span>],    line = Ext.Array.filter(Ext.Array.map(config.playlines, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">value, index</span>) </span>{        <span class="hljs-keyword">return</span> value.label == setting.line &amp;&amp; index;    }), <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">value</span>) </span>{        <span class="hljs-keyword">return</span> Ext.isNumber(value);    })[<span class="hljs-number">0</span>] || <span class="hljs-number">0</span>,    http = Ext.Array.filter(config.sources, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">value</span>) </span>{        <span class="hljs-keyword">return</span> value.label == setting.http;    })[<span class="hljs-number">0</span>];    config.playlines.unshift(config.playlines[line]);    config.playlines.splice(line + <span class="hljs-number">1</span>, <span class="hljs-number">1</span>);    config.plugins.videoJsResolutionSwitcher.default = http ? http.res : <span class="hljs-number">360</span>;    config.plugins.studyControl.enableSwitchWindow = <span class="hljs-number">1</span>;    config.plugins.timelineObjects.url = <span class="hljs-string">'/richvideo/initdatawithviewer?'</span>;    config.plugins.seekBarControl.enableFastForward = <span class="hljs-number">1</span>;    <span class="hljs-keyword">if</span> (!setting.queue) <span class="hljs-keyword">delete</span> config.plugins.studyControl;    <span class="hljs-comment">// config.preload = setting.tip ? 'auto' : 'none';</span>    <span class="hljs-keyword">var</span> player = vjs.apply(<span class="hljs-keyword">this</span>, <span class="hljs-built_in">arguments</span>),    a = <span class="hljs-string">'&lt;a href="https://d0.ananas.chaoxing.com/download/'</span> + _self.config(<span class="hljs-string">'objectid'</span>) + <span class="hljs-string">'" target="_blank"&gt;'</span>,    img = <span class="hljs-string">'&lt;img src="https://d0.ananas.chaoxing.com/download/e363b256c0e9bc5bd8266bf99dd6d6bb" style="margin: 6px 0 0 6px;"&gt;'</span>;    player.volume(<span class="hljs-built_in">Math</span>.round(setting.vol) / <span class="hljs-number">100</span> || <span class="hljs-number">0</span>);    Ext.get(player.controlBar.addChild(<span class="hljs-string">'Button'</span>).el_).setHTML(a + img + <span class="hljs-string">'&lt;/a&gt;'</span>).dom.title = <span class="hljs-string">'下载视频'</span>;    player.on(<span class="hljs-string">'loadstart'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{        setting.tip &amp;&amp; <span class="hljs-keyword">this</span>.play().catch(Ext.emptyFn);        <span class="hljs-keyword">this</span>.playbackRate(setting.rate &gt; <span class="hljs-number">16</span> || setting.rate &lt; <span class="hljs-number">0.0625</span> ? <span class="hljs-number">1</span> : setting.rate);    });    player.one([<span class="hljs-string">'loadedmetadata'</span>, <span class="hljs-string">'firstplay'</span>], <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{        setting.two = setting.rate === <span class="hljs-string">'0'</span> &amp;&amp; setting.two &lt; <span class="hljs-number">1</span>;        setting.two &amp;&amp; config.plugins.seekBarControl.sendLog(<span class="hljs-keyword">this</span>.children_[<span class="hljs-number">0</span>], <span class="hljs-string">'ended'</span>, <span class="hljs-built_in">Math</span>.floor(<span class="hljs-keyword">this</span>.cache_.duration));    });    player.on(<span class="hljs-string">'ended'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{        Ext.fly(frameElement).parent().addCls(<span class="hljs-string">'ans-job-finished'</span>);    });    <span class="hljs-keyword">return</span> player;}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">hookAudio</span>(<span class="hljs-params"></span>) </span>{    _self.alert = <span class="hljs-built_in">console</span>.log;    <span class="hljs-keyword">var</span> config = <span class="hljs-built_in">arguments</span>[<span class="hljs-number">1</span>];    config.plugins.studyControl.enableSwitchWindow = <span class="hljs-number">1</span>;    config.plugins.seekBarControl.enableFastForward = <span class="hljs-number">1</span>;    <span class="hljs-keyword">if</span> (!setting.queue) <span class="hljs-keyword">delete</span> config.plugins.studyControl;    <span class="hljs-keyword">var</span> player = vjs.apply(<span class="hljs-keyword">this</span>, <span class="hljs-built_in">arguments</span>),    a = <span class="hljs-string">'&lt;a href="https://d0.ananas.chaoxing.com/download/'</span> + _self.config(<span class="hljs-string">'objectid'</span>) + <span class="hljs-string">'" target="_blank"&gt;'</span>,    img = <span class="hljs-string">'&lt;img src="https://d0.ananas.chaoxing.com/download/e363b256c0e9bc5bd8266bf99dd6d6bb" style="margin: 6px 0 0 6px;"&gt;'</span>;    player.volume(<span class="hljs-built_in">Math</span>.round(setting.vol) / <span class="hljs-number">100</span> || <span class="hljs-number">0</span>);    player.playbackRate(setting.rate &gt; <span class="hljs-number">16</span> || setting.rate &lt; <span class="hljs-number">0.0625</span> ? <span class="hljs-number">1</span> : setting.rate);    Ext.get(player.controlBar.addChild(<span class="hljs-string">'Button'</span>).el_).setHTML(a + img + <span class="hljs-string">'&lt;/a&gt;'</span>).dom.title = <span class="hljs-string">'下载音频'</span>;    player.on(<span class="hljs-string">'loadeddata'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{        setting.tip &amp;&amp; <span class="hljs-keyword">this</span>.play().catch(Ext.emptyFn);    });    player.one(<span class="hljs-string">'firstplay'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{        setting.rate === <span class="hljs-string">'0'</span> &amp;&amp; config.plugins.seekBarControl.sendLog(<span class="hljs-keyword">this</span>.children_[<span class="hljs-number">0</span>], <span class="hljs-string">'ended'</span>, <span class="hljs-built_in">Math</span>.floor(<span class="hljs-keyword">this</span>.cache_.duration));    });    player.on(<span class="hljs-string">'ended'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{        Ext.fly(frameElement).parent().addCls(<span class="hljs-string">'ans-job-finished'</span>);    });    <span class="hljs-keyword">return</span> player;}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">relieveLimit</span>(<span class="hljs-params"></span>) </span>{    <span class="hljs-keyword">if</span> (setting.scale) _self.UEDITOR_CONFIG.scaleEnabled = <span class="hljs-literal">false</span>;    $.each(UE.instants, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{        <span class="hljs-keyword">var</span> key = <span class="hljs-keyword">this</span>.key;        <span class="hljs-keyword">this</span>.ready(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{            <span class="hljs-keyword">this</span>.destroy();            UE.getEditor(key);        });    });}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">beforeFind</span>(<span class="hljs-params"></span>) </span>{    setting.regl = parent.greenligth || $.noop;    <span class="hljs-keyword">if</span> ($.type(parent._data) == <span class="hljs-string">'array'</span>) <span class="hljs-keyword">return</span> setting.regl();    setting.div = $(        <span class="hljs-string">'&lt;div style="border: 2px dashed rgb(0, 85, 68); width: 330px; position: fixed; top: 0; right: 0; z-index: 99999; background-color: rgba(70, 196, 38, 0.6); overflow-x: auto;"&gt;'</span> +            <span class="hljs-string">'&lt;span style="font-size: medium;"&gt;&lt;/span&gt;'</span> +            <span class="hljs-string">'&lt;div style="font-size: medium;"&gt;正在搜索答案...&lt;/div&gt;'</span> +            <span class="hljs-string">'&lt;button style="margin-right: 10px;"&gt;暂停答题&lt;/button&gt;'</span> +            <span class="hljs-string">'&lt;button style="margin-right: 10px;"&gt;'</span> + (setting.auto ? <span class="hljs-string">'取消本次自动提交'</span> : <span class="hljs-string">'开启本次自动提交'</span>) + <span class="hljs-string">'&lt;/button&gt;'</span> +            <span class="hljs-string">'&lt;button style="margin-right: 10px;"&gt;重新查询&lt;/button&gt;'</span> +            <span class="hljs-string">'&lt;button&gt;折叠面板&lt;/button&gt;'</span> +            <span class="hljs-string">'&lt;div style="max-height: 300px; overflow-y: auto;"&gt;'</span> +                <span class="hljs-string">'&lt;table border="1" style="font-size: 12px;"&gt;'</span> +                    <span class="hljs-string">'&lt;thead&gt;'</span> +                        <span class="hljs-string">'&lt;tr&gt;'</span> +                            <span class="hljs-string">'&lt;th style="width: 25px; min-width: 25px;"&gt;题号&lt;/th&gt;'</span> +                            <span class="hljs-string">'&lt;th style="width: 60%; min-width: 130px;"&gt;题目（点击可复制）&lt;/th&gt;'</span> +                            <span class="hljs-string">'&lt;th style="min-width: 130px;"&gt;答案（点击可复制）&lt;/th&gt;'</span> +                        <span class="hljs-string">'&lt;/tr&gt;'</span> +                    <span class="hljs-string">'&lt;/thead&gt;'</span> +                    <span class="hljs-string">'&lt;tfoot style="display: none;"&gt;'</span> +                        <span class="hljs-string">'&lt;tr&gt;'</span> +                            <span class="hljs-string">'&lt;th colspan="3"&gt;答案提示框 已折叠&lt;/th&gt;'</span> +                        <span class="hljs-string">'&lt;/tr&gt;'</span> +                    <span class="hljs-string">'&lt;/tfoot&gt;'</span> +                    <span class="hljs-string">'&lt;tbody&gt;'</span> +                        <span class="hljs-string">'&lt;tr&gt;'</span> +                            <span class="hljs-string">'&lt;td colspan="3" style="display: none;"&gt;&lt;/td&gt;'</span> +                        <span class="hljs-string">'&lt;/tr&gt;'</span> +                    <span class="hljs-string">'&lt;/tbody&gt;'</span> +                <span class="hljs-string">'&lt;/table&gt;'</span> +            <span class="hljs-string">'&lt;/div&gt;'</span> +        <span class="hljs-string">'&lt;/div&gt;'</span>    ).appendTo(<span class="hljs-string">'body'</span>).on(<span class="hljs-string">'click'</span>, <span class="hljs-string">'button, td'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{        <span class="hljs-keyword">var</span> len = $(<span class="hljs-keyword">this</span>).prevAll(<span class="hljs-string">'button'</span>).length;        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.nodeName == <span class="hljs-string">'TD'</span>) {            $(<span class="hljs-keyword">this</span>).prev().length &amp;&amp; GM_setClipboard($(<span class="hljs-keyword">this</span>).text());        } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (!$(<span class="hljs-keyword">this</span>).siblings().length) {            $(<span class="hljs-keyword">this</span>).parent().text(<span class="hljs-string">'正在搜索答案...'</span>);            setting.num++;        } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (len === <span class="hljs-number">0</span>) {            <span class="hljs-keyword">if</span> (setting.loop) {                clearInterval(setting.loop);                <span class="hljs-keyword">delete</span> setting.loop;                len = [<span class="hljs-string">'已暂停搜索'</span>, <span class="hljs-string">'继续答题'</span>];            } <span class="hljs-keyword">else</span> {                setting.loop = setInterval(findAnswer, setting.time);                len = [<span class="hljs-string">'正在搜索答案...'</span>, <span class="hljs-string">'暂停答题'</span>];            }            setting.div.children(<span class="hljs-string">'div:eq(0)'</span>).html(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{                <span class="hljs-keyword">return</span> $(<span class="hljs-keyword">this</span>).data(<span class="hljs-string">'html'</span>) || len[<span class="hljs-number">0</span>];            }).removeData(<span class="hljs-string">'html'</span>);            $(<span class="hljs-keyword">this</span>).html(len[<span class="hljs-number">1</span>]);        } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (len == <span class="hljs-number">1</span>) {            setting.auto = !setting.auto;            $(<span class="hljs-keyword">this</span>).html(setting.auto ? <span class="hljs-string">'取消本次自动提交'</span> : <span class="hljs-string">'开启本次自动提交'</span>);        } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (len == <span class="hljs-number">2</span>) {            parent.location.reload();        } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (len == <span class="hljs-number">3</span>) {            setting.div.find(<span class="hljs-string">'tbody, tfoot'</span>).toggle();        }    }).find(<span class="hljs-string">'table, td, th'</span>).css(<span class="hljs-string">'border'</span>, <span class="hljs-string">'1px solid'</span>).end();    setting.lose = setting.num = <span class="hljs-number">0</span>;    setting.data = parent._data = [];    setting.over = <span class="hljs-string">'&lt;button style="margin-right: 10px;"&gt;跳过此题&lt;/button&gt;'</span>;    setting.curs = $(<span class="hljs-string">'script:contains(courseName)'</span>, top.document).text().match(<span class="hljs-regexp">/courseName:\'(.+?)\'|$/</span>)[<span class="hljs-number">1</span>] || $(<span class="hljs-string">'h1'</span>).text().trim() || <span class="hljs-string">'无'</span>;    setting.loop = setInterval(findAnswer, setting.time);    <span class="hljs-keyword">var</span> tip = ({<span class="hljs-attr">undefined</span>: <span class="hljs-string">'任务点排队中'</span>, <span class="hljs-attr">null</span>: <span class="hljs-string">'等待切换中'</span>})[setting.tip];    tip &amp;&amp; setting.div.children(<span class="hljs-string">'div:eq(0)'</span>).data(<span class="hljs-string">'html'</span>, tip).siblings(<span class="hljs-string">'button:eq(0)'</span>).click();}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">findAnswer</span>(<span class="hljs-params"></span>) </span>{    <span class="hljs-keyword">if</span> (setting.num &gt;= $(<span class="hljs-string">'.TiMu'</span>).length) {        <span class="hljs-keyword">var</span> arr = setting.lose ? [<span class="hljs-string">'共有 &lt;font color="red"&gt;'</span> + setting.lose + <span class="hljs-string">'&lt;/font&gt; 道题目待完善（已深色标注）'</span>, saveThis] : [<span class="hljs-string">'答题已完成'</span>, submitThis];        setting.div.children(<span class="hljs-string">'div:eq(0)'</span>).data(<span class="hljs-string">'html'</span>, arr[<span class="hljs-number">0</span>]).siblings(<span class="hljs-string">'button:eq(0)'</span>).hide().click();        <span class="hljs-keyword">return</span> setTimeout(arr[<span class="hljs-number">1</span>], setting.time);    }    <span class="hljs-keyword">var</span> $TiMu = $(<span class="hljs-string">'.TiMu'</span>).eq(setting.num),    question = filterImg($TiMu.find(<span class="hljs-string">'.Zy_TItle:eq(0) .clearfix'</span>)).replace(<span class="hljs-regexp">/^【.*?】\s*/</span>, <span class="hljs-string">''</span>).replace(<span class="hljs-regexp">/\s*（\d+\.\d+分）$/</span>, <span class="hljs-string">''</span>).replace(<span class="hljs-regexp">/[(]\s*[)]。$/</span>,<span class="hljs-string">''</span>).replace(<span class="hljs-regexp">/（\s*）。$/</span>,<span class="hljs-string">''</span>).replace(<span class="hljs-regexp">/[(]\s*[)]$/</span>,<span class="hljs-string">''</span>).replace(<span class="hljs-regexp">/（\s*）$/</span>,<span class="hljs-string">''</span>),    type = $TiMu.find(<span class="hljs-string">'input[name^=answertype]:eq(0)'</span>).val() || <span class="hljs-string">'-1'</span>;    <span class="hljs-comment">//setting.div.children('div:eq(0)').text(encodeURIComponent(question)+'正在搜索答案...');</span>    GM_xmlhttpRequest({        method: <span class="hljs-string">'GET'</span>,        url: <span class="hljs-string">'http://api.xmlm8.com/tp/tk.php?t='</span>+ <span class="hljs-built_in">encodeURIComponent</span>(question),        headers: {            <span class="hljs-string">'Content-type'</span>: <span class="hljs-string">'application/x-www-form-urlencoded'</span>        },        timeout: setting.time,        onload: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">xhr</span>) </span>{            <span class="hljs-keyword">if</span> (!setting.loop) {            } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (xhr.status == <span class="hljs-number">200</span>) {                <span class="hljs-keyword">var</span> obj = $.parseJSON(xhr.responseText) || {};                <span class="hljs-keyword">if</span> (obj.code == <span class="hljs-number">1</span>) {                    setting.div.children(<span class="hljs-string">'div:eq(0)'</span>).text(<span class="hljs-string">'正在搜索答案...'</span>);                    <span class="hljs-keyword">var</span> td = <span class="hljs-string">'&lt;td style="border: 1px solid;'</span>,                    answer = <span class="hljs-built_in">String</span>(obj.answer).replace(<span class="hljs-regexp">/&amp;/g</span>, <span class="hljs-string">'&amp;amp;'</span>).replace(<span class="hljs-regexp">/&lt;(?!img)/g</span>, <span class="hljs-string">'&amp;lt;'</span>);                    obj.answer = <span class="hljs-regexp">/^http/</span>.test(answer) ? <span class="hljs-string">'&lt;img src="'</span> + obj.answer + <span class="hljs-string">'"&gt;'</span> : obj.answer;                    $(                        <span class="hljs-string">'&lt;tr&gt;'</span> +                            td + <span class="hljs-string">' text-align: center;"&gt;'</span> + $TiMu.find(<span class="hljs-string">'.Zy_TItle:eq(0) i'</span>).text().trim() + <span class="hljs-string">'&lt;/td&gt;'</span> +                            td + <span class="hljs-string">'" title="点击可复制"&gt;'</span> + (question.match(<span class="hljs-string">'&lt;img'</span>) ? question : question.replace(<span class="hljs-regexp">/&amp;/g</span>, <span class="hljs-string">'&amp;amp;'</span>).replace(<span class="hljs-regexp">/&lt;/g</span>, <span class="hljs-string">'&amp;lt'</span>)) + <span class="hljs-string">'&lt;/td&gt;'</span> +                            td + <span class="hljs-string">'" title="点击可复制"&gt;'</span> + (<span class="hljs-regexp">/^http/</span>.test(answer) ? obj.answer : <span class="hljs-string">''</span>) + answer + <span class="hljs-string">'&lt;/td&gt;'</span> +                        <span class="hljs-string">'&lt;/tr&gt;'</span>                    ).appendTo(setting.div.find(<span class="hljs-string">'tbody'</span>)).css(<span class="hljs-string">'background-color'</span>, fillAnswer($TiMu.find(<span class="hljs-string">'ul:eq(0)'</span>).find(<span class="hljs-string">'li'</span>), obj, type) ? <span class="hljs-string">''</span> : <span class="hljs-string">'rgba(0, 150, 136, 0.6)'</span>);                    setting.data[setting.num++] = {                        code: obj.code &gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>,                        question: question,                        option: obj.answer,                        type: <span class="hljs-built_in">Number</span>(type)                    };                } <span class="hljs-keyword">else</span> {                    setting.div.children(<span class="hljs-string">'div:eq(0)'</span>).html(setting.over + obj.answer || setting.over + <span class="hljs-string">'服务器繁忙，正在重试...'</span>);                }                setting.div.children(<span class="hljs-string">'span'</span>).html(obj.msg || <span class="hljs-string">''</span>);            } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (xhr.status == <span class="hljs-number">403</span>) {                <span class="hljs-keyword">var</span> html = xhr.responseText.indexOf(<span class="hljs-string">'{'</span>) ? <span class="hljs-string">'请求过于频繁，建议稍后再试'</span> : $.parseJSON(xhr.responseText).data;                setting.div.children(<span class="hljs-string">'div:eq(0)'</span>).data(<span class="hljs-string">'html'</span>, html).siblings(<span class="hljs-string">'button:eq(0)'</span>).click();            } <span class="hljs-keyword">else</span> {                setting.div.children(<span class="hljs-string">'div:eq(0)'</span>).html(setting.over + <span class="hljs-string">'服务器异常，正在重试...'</span>);            }        },        ontimeout: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{            setting.loop &amp;&amp; setting.div.children(<span class="hljs-string">'div:eq(0)'</span>).html(setting.over + <span class="hljs-string">'服务器超时，正在重试...'</span>);        }    });}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fillAnswer</span>(<span class="hljs-params">$li, obj, type</span>) </span>{    <span class="hljs-keyword">var</span> $input = $li.find(<span class="hljs-string">':radio, :checkbox'</span>),    str = <span class="hljs-built_in">String</span>(obj.answer).toCDB() || <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().toString(),    data = str.split(<span class="hljs-regexp">/#|\x01|\|/</span>),    opt = obj.opt || str,    state = setting.lose;    <span class="hljs-comment">// $li.find(':radio:checked').prop('checked', false);</span>    obj.code &gt; <span class="hljs-number">0</span> &amp;&amp; $input.each(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">index</span>) </span>{        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.value == <span class="hljs-string">'true'</span>) {            data.join().match(<span class="hljs-regexp">/(^|,)(正确|是|对|√|T|ri)(,|$)/</span>) &amp;&amp; <span class="hljs-keyword">this</span>.click();        } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.value == <span class="hljs-string">'false'</span>) {            data.join().match(<span class="hljs-regexp">/(^|,)(错误|否|错|×|F|wr)(,|$)/</span>) &amp;&amp; <span class="hljs-keyword">this</span>.click();        } <span class="hljs-keyword">else</span> {            <span class="hljs-keyword">var</span> tip = filterImg($li.eq(index).find(<span class="hljs-string">'.after'</span>)).toCDB() || <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().toString();            <span class="hljs-built_in">Boolean</span>($.inArray(tip, data) + <span class="hljs-number">1</span> || (type == <span class="hljs-string">'1'</span> &amp;&amp; str.indexOf(tip) + <span class="hljs-number">1</span>)) == <span class="hljs-keyword">this</span>.checked || <span class="hljs-keyword">this</span>.click();        }    }).each(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{        <span class="hljs-keyword">if</span> (!<span class="hljs-regexp">/^A?B?C?D?E?F?G?$/</span>.test(opt)) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;        <span class="hljs-built_in">Boolean</span>(opt.match(<span class="hljs-keyword">this</span>.value)) == <span class="hljs-keyword">this</span>.checked || <span class="hljs-keyword">this</span>.click();    });    <span class="hljs-keyword">if</span> (type.match(<span class="hljs-regexp">/^[013]$/</span>)) {        $input.is(<span class="hljs-string">':checked'</span>) || (setting.none ? ($input[<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random() * $input.length)] || $()).click() : setting.lose++);    } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (type.match(<span class="hljs-regexp">/^(2|[4-9]|1[08])$/</span>)) {        data = <span class="hljs-built_in">String</span>(obj.answer).split(<span class="hljs-regexp">/#|\x01|\|/</span>);        str = $li.end().find(<span class="hljs-string">'textarea'</span>).each(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">index</span>) </span>{            index = (obj.code &gt; <span class="hljs-number">0</span> &amp;&amp; data[index]) || <span class="hljs-string">''</span>;            UE.getEditor(<span class="hljs-keyword">this</span>.name).setContent(index.trim());        }).length;        (obj.code &gt; <span class="hljs-number">0</span> &amp;&amp; data.length == str) || setting.none || setting.lose++;    } <span class="hljs-keyword">else</span> {        setting.none || setting.lose++;    }    <span class="hljs-keyword">return</span> state == setting.lose;}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">saveThis</span>(<span class="hljs-params"></span>) </span>{    <span class="hljs-keyword">if</span> (!setting.auto) <span class="hljs-keyword">return</span> setTimeout(saveThis, setting.time);    setting.div.children(<span class="hljs-string">'button:lt(3)'</span>).hide().eq(<span class="hljs-number">1</span>).click();    _self.alert = <span class="hljs-built_in">console</span>.log;    $(<span class="hljs-string">'#tempsave'</span>).click();    setting.regl();}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">submitThis</span>(<span class="hljs-params"></span>) </span>{    <span class="hljs-keyword">if</span> (!setting.auto) {    } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (!$(<span class="hljs-string">'.Btn_blue_1:visible'</span>).length) {        setting.div.children(<span class="hljs-string">'button:lt(3)'</span>).hide().eq(<span class="hljs-number">1</span>).click();        <span class="hljs-keyword">return</span> setting.regl();    } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> ($(<span class="hljs-string">'#confirmSubWin:visible'</span>).length) {        <span class="hljs-keyword">var</span> btn = $(<span class="hljs-string">'#tipContent + * &gt; a'</span>).offset() || {<span class="hljs-attr">top</span>: <span class="hljs-number">0</span>, <span class="hljs-attr">left</span>: <span class="hljs-number">0</span>},        mouse = <span class="hljs-built_in">document</span>.createEvent(<span class="hljs-string">'MouseEvents'</span>);        btn = [btn.left + <span class="hljs-built_in">Math</span>.ceil(<span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">46</span>), btn.top + <span class="hljs-built_in">Math</span>.ceil(<span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">26</span>)];        mouse.initMouseEvent(<span class="hljs-string">'click'</span>, <span class="hljs-literal">true</span>, <span class="hljs-literal">true</span>, <span class="hljs-built_in">document</span>.defaultView, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, btn[<span class="hljs-number">0</span>], btn[<span class="hljs-number">1</span>], <span class="hljs-literal">false</span>, <span class="hljs-literal">false</span>, <span class="hljs-literal">false</span>, <span class="hljs-literal">false</span>, <span class="hljs-number">0</span>, <span class="hljs-literal">null</span>);        _self.event = $.extend(<span class="hljs-literal">true</span>, {}, mouse);        <span class="hljs-keyword">delete</span> _self.event.isTrusted;        _self.form1submit();    } <span class="hljs-keyword">else</span> {        $(<span class="hljs-string">'.Btn_blue_1'</span>)[<span class="hljs-number">0</span>].click();    }    setTimeout(submitThis, <span class="hljs-built_in">Math</span>.ceil(setting.time * <span class="hljs-built_in">Math</span>.random()) * <span class="hljs-number">2</span>);}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkToNext</span>(<span class="hljs-params"></span>) </span>{    <span class="hljs-keyword">var</span> $tip = $(setting.job.join(<span class="hljs-string">', '</span>), <span class="hljs-built_in">document</span>).prevAll(<span class="hljs-string">'.ans-job-icon'</span> + setting.normal);    setInterval(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{        $tip.parent(<span class="hljs-string">':not(.ans-job-finished)'</span>).length || setting.jump &amp;&amp; toNext();    }, setting.time);}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">toNext</span>(<span class="hljs-params"></span>) </span>{    <span class="hljs-keyword">var</span> $cur = $(<span class="hljs-string">'#cur'</span> + $(<span class="hljs-string">'#chapterIdid'</span>).val()),    $tip = $(<span class="hljs-string">'span.currents ~ span'</span>),    sel = setting.review ? <span class="hljs-string">'html'</span> : <span class="hljs-string">'.blue'</span>;    <span class="hljs-keyword">if</span> (!$cur.has(sel).length &amp;&amp; $tip.length) <span class="hljs-keyword">return</span> $tip.eq(<span class="hljs-number">0</span>).click();    $tip = $(<span class="hljs-string">'.roundpointStudent, .roundpoint'</span>).parent();    $tip = $tip.slice($tip.index($cur) + <span class="hljs-number">1</span>).not(<span class="hljs-string">':has('</span> + sel + <span class="hljs-string">')'</span>);    $tip.not(setting.lock ? <span class="hljs-string">':has(.lock)'</span> : <span class="hljs-string">'html'</span>).find(<span class="hljs-string">'span'</span>).eq(<span class="hljs-number">0</span>).click();    $tip.length || setting.course &amp;&amp; switchCourse();}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">switchCourse</span>(<span class="hljs-params"></span>) </span>{    GM_xmlhttpRequest({        method: <span class="hljs-string">'GET'</span>,        url: <span class="hljs-string">'/visit/courses/study?isAjax=true&amp;fileId=0&amp;debug='</span>,        headers: {            <span class="hljs-string">'Referer'</span>: location.origin + <span class="hljs-string">'/visit/courses'</span>,            <span class="hljs-string">'X-Requested-With'</span>: <span class="hljs-string">'XMLHttpRequest'</span>        },        onload: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">xhr</span>) </span>{            <span class="hljs-keyword">var</span> list = $(<span class="hljs-string">'h3 a[target]'</span>, xhr.responseText).map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{                <span class="hljs-keyword">return</span> $(<span class="hljs-keyword">this</span>).attr(<span class="hljs-string">'href'</span>);            }),            index = list.map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">index</span>) </span>{                <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.match(top.courseId) &amp;&amp; index;            }).filter(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{                <span class="hljs-keyword">return</span> $.isNumeric(<span class="hljs-keyword">this</span>);            })[<span class="hljs-number">0</span>] + <span class="hljs-number">1</span> || <span class="hljs-number">0</span>;            setting.course = list[index] ? goCourse(list[index]) : <span class="hljs-number">0</span>;        }    });}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">goCourse</span>(<span class="hljs-params">url</span>) </span>{    GM_xmlhttpRequest({        method: <span class="hljs-string">'GET'</span>,        url: url,        onload: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">xhr</span>) </span>{            $.globalEval(<span class="hljs-string">'location.href = "'</span> + $(<span class="hljs-string">'.articlename a[href]'</span>, xhr.responseText).attr(<span class="hljs-string">'href'</span>) + <span class="hljs-string">'";'</span>);        }    });}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">autoRead</span>(<span class="hljs-params"></span>) </span>{    $(<span class="hljs-string">'html, body'</span>).animate({        scrollTop: $(<span class="hljs-built_in">document</span>).height() - $(<span class="hljs-built_in">window</span>).height()    }, <span class="hljs-built_in">Math</span>.round(setting.read) * <span class="hljs-number">1E3</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{        $(<span class="hljs-string">'.nodeItem.r i'</span>).click();    }).one(<span class="hljs-string">'click'</span>, <span class="hljs-string">'#top'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">event</span>) </span>{        $(event.delegateTarget).stop();    });}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">DisplayURL</span>(<span class="hljs-params"></span>) </span>{    _self.WAY.box.hide();    <span class="hljs-keyword">var</span> $li = $(<span class="hljs-keyword">this</span>).closest(<span class="hljs-string">'li'</span>);    $.<span class="hljs-keyword">get</span>('/visit/goToCourseByFace', {        courseId: $li.find(<span class="hljs-string">'input[name=courseId]'</span>).val(),        clazzId: $li.find(<span class="hljs-string">'input[name=classId]'</span>).val()    }, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>) </span>{        $li.find(<span class="hljs-string">'[onclick^=openFaceTip]'</span>).removeAttr(<span class="hljs-string">'onclick'</span>).attr({            target: <span class="hljs-string">'_blank'</span>,            href: $(data).filter(<span class="hljs-string">'script:last'</span>).text().match(<span class="hljs-regexp">/n\("(.+?)"/</span>)[<span class="hljs-number">1</span>]        });        alert(<span class="hljs-string">'本课程已临时解除面部识别'</span>);    }, <span class="hljs-string">'html'</span>);}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getSchoolId</span>(<span class="hljs-params"></span>) </span>{    <span class="hljs-keyword">var</span> school = <span class="hljs-regexp">/^1\d{10}$/</span>.test(setting.username) ? <span class="hljs-string">''</span> : setting.school;    <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">isNaN</span>(school)) <span class="hljs-keyword">return</span> setTimeout(toLogin, setting.time, school);    <span class="hljs-keyword">if</span> (school == <span class="hljs-string">'账号为手机号可以不修改此参数'</span>) <span class="hljs-keyword">return</span> alert(<span class="hljs-string">'请修改school参数'</span>);    $.getJSON(<span class="hljs-string">'/org/searchUnis?filter='</span> + <span class="hljs-built_in">encodeURI</span>(school) + <span class="hljs-string">'&amp;product=44'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>) </span>{        <span class="hljs-keyword">if</span> (!data.result) <span class="hljs-keyword">return</span> alert(<span class="hljs-string">'学校查询错误'</span>);        <span class="hljs-keyword">var</span> msg = $.grep(data.froms, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">value</span>) </span>{            <span class="hljs-keyword">return</span> value.name == school;        })[<span class="hljs-number">0</span>];        msg ? setTimeout(toLogin, setting.time, msg.schoolid) : alert(<span class="hljs-string">'学校名称不完整'</span>);    });}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">toLogin</span>(<span class="hljs-params">fid</span>) </span>{    GM_xmlhttpRequest({        method: <span class="hljs-string">'GET'</span>,        url: <span class="hljs-string">'/api/login?name='</span> + setting.username + <span class="hljs-string">'&amp;pwd='</span> + setting.password + <span class="hljs-string">'&amp;schoolid='</span> + fid + <span class="hljs-string">'&amp;verify=0'</span>,        onload: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">xhr</span>) </span>{            <span class="hljs-keyword">var</span> obj = $.parseJSON(xhr.responseText) || {};            obj.result ? location.href = <span class="hljs-built_in">decodeURIComponent</span>($(<span class="hljs-string">'#ref, #refer_0x001'</span>).val()) : alert(obj.errorMsg || <span class="hljs-string">'Error'</span>);        }    });}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">submitAnswer</span>(<span class="hljs-params">$job, data</span>) </span>{    $job.removeClass(<span class="hljs-string">'ans-job-finished'</span>);    data = data.length ? $(data) : $(<span class="hljs-string">'.TiMu'</span>).map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{        <span class="hljs-keyword">var</span> title = filterImg($(<span class="hljs-string">'.Zy_TItle .clearfix'</span>, <span class="hljs-keyword">this</span>));        <span class="hljs-keyword">return</span> {            question: title.replace(<span class="hljs-regexp">/^【.*?】\s*/</span>, <span class="hljs-string">''</span>),            type: ({单选题: <span class="hljs-number">0</span>, 多选题: <span class="hljs-number">1</span>, 填空题: <span class="hljs-number">2</span>, 判断题: <span class="hljs-number">3</span>})[title.match(<span class="hljs-regexp">/^【(.*?)】|$/</span>)[<span class="hljs-number">1</span>]]        };    });    data = $.grep(data.map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">index</span>) </span>{        <span class="hljs-keyword">var</span> $TiMu = $(<span class="hljs-string">'.TiMu'</span>).eq(index);        <span class="hljs-keyword">if</span> (!($.isPlainObject(<span class="hljs-keyword">this</span>) &amp;&amp; <span class="hljs-keyword">this</span>.type &lt; <span class="hljs-number">4</span> &amp;&amp; $TiMu.find(<span class="hljs-string">'.fr'</span>).length)) {            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;        } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.type == <span class="hljs-number">2</span>) {            <span class="hljs-keyword">var</span> $ans = $TiMu.find(<span class="hljs-string">'.Py_tk, .Py_answer'</span>).eq(<span class="hljs-number">0</span>);            <span class="hljs-keyword">if</span> (!$TiMu.find(<span class="hljs-string">'.cuo'</span>).length &amp;&amp; <span class="hljs-keyword">this</span>.code) {                <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;            } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (!$ans.find(<span class="hljs-string">'.cuo'</span>).length) {                <span class="hljs-keyword">this</span>.option = $ans.find(<span class="hljs-string">'.clearfix'</span>).map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{                    <span class="hljs-keyword">return</span> $(<span class="hljs-keyword">this</span>).text().trim();                }).get().join(<span class="hljs-string">'#'</span>) || <span class="hljs-string">'无'</span>;            } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.code) {                <span class="hljs-keyword">this</span>.code = <span class="hljs-number">-1</span>;            } <span class="hljs-keyword">else</span> {                <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;            }        } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.type == <span class="hljs-number">3</span>) {            <span class="hljs-keyword">var</span> ans = $TiMu.find(<span class="hljs-string">'.font20:last'</span>).text();            <span class="hljs-keyword">if</span> ($TiMu.find(<span class="hljs-string">'.cuo'</span>).length) {                <span class="hljs-keyword">this</span>.option = ({<span class="hljs-string">'√'</span>: <span class="hljs-string">'错误'</span>, <span class="hljs-string">'×'</span>: <span class="hljs-string">'正确'</span>})[ans] || <span class="hljs-string">'无'</span>;            } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (!<span class="hljs-keyword">this</span>.code) {                <span class="hljs-keyword">this</span>.option = ({<span class="hljs-string">'√'</span>: <span class="hljs-string">'正确'</span>, <span class="hljs-string">'×'</span>: <span class="hljs-string">'错误'</span>})[ans] || <span class="hljs-string">'无'</span>;            } <span class="hljs-keyword">else</span> {                <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;            }        } <span class="hljs-keyword">else</span> {            <span class="hljs-keyword">var</span> text = $TiMu.find(<span class="hljs-string">'.Py_answer &gt; span:eq(0)'</span>).text();            <span class="hljs-keyword">if</span> ($TiMu.find(<span class="hljs-string">'.dui'</span>).length &amp;&amp; <span class="hljs-keyword">this</span>.code &amp;&amp; !<span class="hljs-regexp">/^A?B?C?D?E?F?G?$/</span>.test(<span class="hljs-keyword">this</span>.option)) {                <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;            } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> ($TiMu.find(<span class="hljs-string">'.dui'</span>).length || text.match(<span class="hljs-string">'正确答案'</span>)) {                text = text.match(<span class="hljs-regexp">/[A-G]/gi</span>) || [];                <span class="hljs-keyword">this</span>.option = $.map(text, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">value</span>) </span>{                    <span class="hljs-keyword">return</span> filterImg($TiMu.find(<span class="hljs-string">'.fl:contains('</span> + value + <span class="hljs-string">') + a'</span>));                }).join(<span class="hljs-string">'#'</span>) || <span class="hljs-string">'无'</span>;                <span class="hljs-keyword">this</span>.key = text.join(<span class="hljs-string">''</span>);            } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.code) {                <span class="hljs-keyword">this</span>.code = <span class="hljs-number">-1</span>;            } <span class="hljs-keyword">else</span> {                <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;            }        }        <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>;    }), <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">value</span>) </span>{        <span class="hljs-keyword">return</span> value &amp;&amp; value.option != <span class="hljs-string">'无'</span>;    });    setting.curs = $(<span class="hljs-string">'script:contains(courseName)'</span>, top.document).text().match(<span class="hljs-regexp">/courseName:\'(.+?)\'|$/</span>)[<span class="hljs-number">1</span>] || $(<span class="hljs-string">'h1'</span>).text().trim() || <span class="hljs-string">'无'</span>;    data.length &amp;&amp; GM_xmlhttpRequest({        method: <span class="hljs-string">'POST'</span>,        url: <span class="hljs-string">'http://mooc.forestpolice.org/upload/cx/'</span> + (setting.token || <span class="hljs-number">0</span>) + <span class="hljs-string">'/?workRelationId='</span> + $(<span class="hljs-string">'#workId'</span>).val(),        headers: {            <span class="hljs-string">'Content-type'</span>: <span class="hljs-string">'application/x-www-form-urlencoded'</span>        },        data: <span class="hljs-string">'course='</span> + <span class="hljs-built_in">encodeURIComponent</span>(setting.curs) + <span class="hljs-string">'&amp;data='</span> + <span class="hljs-built_in">encodeURIComponent</span>((Ext.encode || <span class="hljs-built_in">JSON</span>.stringify)(data)) + <span class="hljs-string">'&amp;id='</span> + $(<span class="hljs-string">'#jobid'</span>).val().slice(<span class="hljs-number">5</span>)    });    $job.addClass(<span class="hljs-string">'ans-job-finished'</span>);}<span class="hljs-comment">/*</span><span class="hljs-comment">function filterImg(dom) {</span><span class="hljs-comment">    return $(dom).clone().find('img[src]').replaceWith(function() {</span><span class="hljs-comment">        return $('&lt;p&gt;&lt;/p&gt;').text('&lt;img src="' + $(this).attr('src') + '"&gt;');</span><span class="hljs-comment">    }).end().find('iframe[src]').replaceWith(function() {</span><span class="hljs-comment">        return $('&lt;p&gt;&lt;/p&gt;').text('&lt;iframe src="' + $(this).attr('src') + '"&gt;&lt;/irame&gt;');</span><span class="hljs-comment">    }).end().text().trim();</span><span class="hljs-comment">}</span><span class="hljs-comment">*/</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">filterImg</span>(<span class="hljs-params">dom</span>) </span>{    <span class="hljs-keyword">return</span> $(dom).clone().find(<span class="hljs-string">'img[src]'</span>).replaceWith(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{        <span class="hljs-keyword">return</span> $(<span class="hljs-string">'&lt;p&gt;&lt;/p&gt;'</span>).text(<span class="hljs-string">''</span>);    }).end().find(<span class="hljs-string">'iframe[src]'</span>).replaceWith(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{        <span class="hljs-keyword">return</span> $(<span class="hljs-string">'&lt;p&gt;&lt;/p&gt;'</span>).text(<span class="hljs-string">''</span>);    }).end().text().trim();}</code></pre></div><h1 id="脚本②"><a href="#脚本②" class="headerlink" title="脚本②"></a>脚本②</h1><div class="hljs"><pre><code class="hljs js">超星学习通油猴脚本<span class="hljs-comment">// ==UserScript==</span><span class="hljs-comment">// @name         超星网课助手(改)(查题可用)</span><span class="hljs-comment">// @version      4.5.7</span><span class="hljs-comment">// @namespace    coder_tq</span><span class="hljs-comment">// @description  自动挂机看尔雅MOOC，支持视频、音频、文档、图书自动完成，章节测验自动答题提交，支持自动切换任务点、挂机阅读时长、自动登录等，解除各类功能限制，开放自定义参数</span><span class="hljs-comment">// @author       coder_tq</span><span class="hljs-comment">// @match        *://*.chaoxing.com/*</span><span class="hljs-comment">// @match        *://*.edu.cn/*</span><span class="hljs-comment">// @match        *://*.nbdlib.cn/*</span><span class="hljs-comment">// @match        *://*.hnsyu.net/*</span><span class="hljs-comment">// @connect      cx.beaa.cn</span><span class="hljs-comment">// @connect      cx.icodef.com</span><span class="hljs-comment">// @run-at       document-end</span><span class="hljs-comment">// @grant        unsafeWindow</span><span class="hljs-comment">// @grant        GM_xmlhttpRequest</span><span class="hljs-comment">// @grant        GM_setValue</span><span class="hljs-comment">// @grant        GM_getValue</span><span class="hljs-comment">// @grant        GM_setClipboard</span><span class="hljs-comment">// @license      MIT</span><span class="hljs-comment">// ==/UserScript==</span><span class="hljs-comment">// 设置修改后，需要刷新或重新打开网课页面才会生效</span><span class="hljs-keyword">var</span> setting = {    <span class="hljs-comment">// 5E3 == 5000，科学记数法，表示毫秒数</span>    time: <span class="hljs-number">5E3</span> <span class="hljs-comment">// 默认响应速度为5秒，不建议小于5秒</span>    ,<span class="hljs-attr">token</span>: <span class="hljs-string">''</span> <span class="hljs-comment">// token可以增加并发次数，用来打码，采集题库奖励</span>    ,<span class="hljs-attr">review</span>: <span class="hljs-number">0</span> <span class="hljs-comment">// 复习模式，完整挂机视频(音频)时长，支持挂机任务点已完成的视频和音频，默认关闭</span>    ,<span class="hljs-attr">queue</span>: <span class="hljs-number">1</span> <span class="hljs-comment">// 队列模式，开启后任务点逐一完成，关闭则单页面所有任务点同时进行，默认开启</span>    <span class="hljs-comment">// 1代表开启，0代表关闭</span>    ,<span class="hljs-attr">video</span>: <span class="hljs-number">1</span> <span class="hljs-comment">// 视频支持后台、切换窗口不暂停，支持多视频，默认开启</span>    ,<span class="hljs-attr">work</span>: <span class="hljs-number">0</span> <span class="hljs-comment">// 自动答题功能(章节测验)，作业需要手动开启查询，高准确率，默认开启</span>    ,<span class="hljs-attr">audio</span>: <span class="hljs-number">1</span> <span class="hljs-comment">// 音频自动播放，与视频功能共享vol和rate参数，默认开启</span>    ,<span class="hljs-attr">book</span>: <span class="hljs-number">1</span> <span class="hljs-comment">// 图书阅读任务点，非课程阅读任务点，默认开启</span>    ,<span class="hljs-attr">docs</span>: <span class="hljs-number">1</span> <span class="hljs-comment">// 文档阅读任务点，PPT类任务点自动完成阅读任务，默认开启</span>    <span class="hljs-comment">// 本区域参数，上方为任务点功能，下方为独立功能</span>    ,<span class="hljs-attr">jump</span>: <span class="hljs-number">1</span> <span class="hljs-comment">// 自动切换任务点、章节、课程(需要配置course参数)，默认开启</span>    ,<span class="hljs-attr">read</span>: <span class="hljs-string">'65'</span> <span class="hljs-comment">// 挂机课程阅读时间，单位是分钟，'65'代表挂机65分钟，请手动打开阅读页面，默认'65'分钟</span>    ,<span class="hljs-attr">face</span>: <span class="hljs-number">1</span> <span class="hljs-comment">// 解除面部识别(不支持二维码类面部采集)，此功能仅为临时解除，默认开启</span>    ,<span class="hljs-attr">total</span>: <span class="hljs-number">1</span> <span class="hljs-comment">// 显示课程进度的统计数据，在学习进度页面的上方展示，默认开启</span>    <span class="hljs-comment">// 仅开启video(audio)时，修改此处才会生效</span>    ,<span class="hljs-attr">line</span>: <span class="hljs-string">'公网1'</span> <span class="hljs-comment">// 视频播放的默认资源线路，此功能适用于系统默认线路无资源，默认'公网1'</span>    ,<span class="hljs-attr">http</span>: <span class="hljs-string">'标清'</span> <span class="hljs-comment">// 视频播放的默认清晰度，无效参数则使用系统默认清晰度，默认'标清'</span>    <span class="hljs-comment">// 本区域参数，上方为video功能独享，下方为audio功能共享</span>    ,<span class="hljs-attr">vol</span>: <span class="hljs-string">'0'</span> <span class="hljs-comment">// 默认音量的百分数，设定范围：[0,100]，'0'为静音，默认'0'</span>    ,<span class="hljs-attr">rate</span>: <span class="hljs-string">'3'</span> <span class="hljs-comment">// 视频播放默认倍率，参数范围0∪[0.0625,16]，'0'为秒过，默认'1'倍</span>    <span class="hljs-comment">// 仅开启work时，修改此处才会生效</span>    ,<span class="hljs-attr">auto</span>: <span class="hljs-number">0</span> <span class="hljs-comment">// 答题完成后自动提交，默认关闭</span>    ,<span class="hljs-attr">none</span>: <span class="hljs-number">0</span> <span class="hljs-comment">// 无匹配答案时执行默认操作，关闭后若题目无匹配答案则会暂时保存已作答的题目，默认开启</span>    ,<span class="hljs-attr">scale</span>: <span class="hljs-number">0</span> <span class="hljs-comment">// 富文本编辑器高度自动拉伸，用于文本类题目，答题框根据内容自动调整大小，默认关闭</span>    <span class="hljs-comment">// 仅开启jump时，修改此处才会生效</span>    ,<span class="hljs-attr">course</span>: <span class="hljs-number">0</span> <span class="hljs-comment">// 当前课程完成后自动切换课程，仅支持按照根目录课程顺序切换，默认开启</span>    ,<span class="hljs-attr">lock</span>: <span class="hljs-number">1</span> <span class="hljs-comment">// 跳过未开放(图标是锁)的章节，即闯关模式或定时发放的任务点，默认开启</span>    <span class="hljs-comment">// 自动登录功能配置区</span>    ,<span class="hljs-attr">school</span>: <span class="hljs-string">'账号为手机号可以不修改此参数'</span> <span class="hljs-comment">// 学校/单位/机构码，要求完整有效可查询，例如'清华大学'</span>    ,<span class="hljs-attr">username</span>: <span class="hljs-string">''</span> <span class="hljs-comment">// 学号/工号/借书证号(邮箱/手机号/账号)，例如'2018010101'，默认''</span>    ,<span class="hljs-attr">password</span>: <span class="hljs-string">''</span> <span class="hljs-comment">// 密码，例如'123456'，默认''</span>    <span class="hljs-comment">// 题库接口配置区</span>    ,<span class="hljs-attr">tk_num</span>: <span class="hljs-number">0</span> <span class="hljs-comment">// 题库接口，默认0</span>},    _self = unsafeWindow,    url = location.pathname,    top = _self;setting.tk_num = GM_getValue(<span class="hljs-string">'tk_num'</span>);setting.tk_num = setting.tk_num == <span class="hljs-literal">undefined</span> ? <span class="hljs-number">1</span>:setting.tk_num;setting.tk_num = <span class="hljs-built_in">isNaN</span>(setting.tk_num)? <span class="hljs-number">1</span>:setting.tk_num;<span class="hljs-keyword">if</span> (url != <span class="hljs-string">'/studyApp/studying'</span> &amp;&amp; top != _self.top) <span class="hljs-built_in">document</span>.domain = location.host.replace(<span class="hljs-regexp">/.+?\./</span>, <span class="hljs-string">''</span>);<span class="hljs-keyword">try</span> {    <span class="hljs-keyword">while</span> (top != _self.top) {        top = top.parent.document ? top.parent : _self.top;        <span class="hljs-keyword">if</span> (top.location.pathname == <span class="hljs-string">'/mycourse/studentstudy'</span>) <span class="hljs-keyword">break</span>;    }} <span class="hljs-keyword">catch</span> (err) {    <span class="hljs-comment">// console.log(err);</span>    top = _self;}<span class="hljs-keyword">var</span> $ = _self.jQuery || top.jQuery,    parent = _self == top ? self : _self.parent,    Ext = _self.Ext || parent.Ext || {},    UE = _self.UE,    vjs = _self.videojs;<span class="hljs-built_in">String</span>.prototype.toCDB = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{    <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.replace(<span class="hljs-regexp">/\s/g</span>, <span class="hljs-string">''</span>).replace(<span class="hljs-regexp">/[\uff01-\uff5e]/g</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">str</span>) </span>{        <span class="hljs-keyword">return</span> <span class="hljs-built_in">String</span>.fromCharCode(str.charCodeAt(<span class="hljs-number">0</span>) - <span class="hljs-number">65248</span>);    }).replace(<span class="hljs-regexp">/[“”]/g</span>, <span class="hljs-string">'"'</span>).replace(<span class="hljs-regexp">/[‘’]/g</span>, <span class="hljs-string">"'"</span>).replace(<span class="hljs-regexp">/。/g</span>, <span class="hljs-string">'.'</span>);};setting.normal = <span class="hljs-string">''</span>; <span class="hljs-comment">// ':visible'</span><span class="hljs-comment">// setting.time += Math.ceil(setting.time * Math.random()) - setting.time / 2;</span>setting.job = [<span class="hljs-string">':not(*)'</span>];setting.video &amp;&amp; setting.job.push(<span class="hljs-string">'iframe[src*="/video/index.html"]'</span>);setting.work &amp;&amp; setting.job.push(<span class="hljs-string">'iframe[src*="/work/index.html"]'</span>);setting.audio &amp;&amp; setting.job.push(<span class="hljs-string">'iframe[src*="/audio/index.html"]'</span>);setting.book &amp;&amp; setting.job.push(<span class="hljs-string">'iframe[src*="/innerbook/index.html"]'</span>);setting.docs &amp;&amp; setting.job.push(<span class="hljs-string">'iframe[src*="/ppt/index.html"]'</span>, <span class="hljs-string">'iframe[src*="/pdf/index.html"]'</span>);setting.tip = !setting.queue || top != _self &amp;&amp; jobSort($ || Ext.query);<span class="hljs-keyword">if</span> (url == <span class="hljs-string">'/mycourse/studentstudy'</span>) {    _self.checkMobileBrowerLearn = $.noop;    <span class="hljs-keyword">var</span> classId = location.search.match(<span class="hljs-regexp">/cla[zs]{2}id=(\d+)/i</span>)[<span class="hljs-number">1</span>] || <span class="hljs-number">0</span>,        courseId = _self.courseId || location.search.match(<span class="hljs-regexp">/courseId=(\d+)/i</span>)[<span class="hljs-number">1</span>] || <span class="hljs-number">0</span>;    setting.lock || $(<span class="hljs-string">'#coursetree'</span>).on(<span class="hljs-string">'click'</span>, <span class="hljs-string">'[onclick*=void], [href*=void]'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{        _self.getTeacherAjax(courseId, classId, $(<span class="hljs-keyword">this</span>).parent().attr(<span class="hljs-string">'id'</span>).slice(<span class="hljs-number">3</span>));    });} <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (url == <span class="hljs-string">'/ananas/modules/video/index.html'</span> &amp;&amp; setting.video) {    <span class="hljs-keyword">if</span> (setting.review) _self.greenligth = Ext.emptyFn;    checkPlayer(_self.supportH5Video());} <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (url == <span class="hljs-string">'/work/doHomeWorkNew'</span> || url == <span class="hljs-string">'/api/work'</span> || url == <span class="hljs-string">'/work/addStudentWorkNewWeb'</span>) {    <span class="hljs-keyword">if</span> (!UE) {        <span class="hljs-keyword">var</span> len = ($ || Ext.query || <span class="hljs-built_in">Array</span>)(<span class="hljs-string">'font:contains(未登录)'</span>, <span class="hljs-built_in">document</span>).length;        setTimeout(len == <span class="hljs-number">1</span> ? top.location.reload : parent.greenligth, setting.time);    } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (setting.work) {        setTimeout(relieveLimit, <span class="hljs-number">0</span>);        beforeFind();    }} <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (url == <span class="hljs-string">'/ananas/modules/audio/index.html'</span> &amp;&amp; setting.audio) {    <span class="hljs-keyword">if</span> (setting.review) _self.greenligth = Ext.emptyFn;    _self.videojs = hookAudio;    hookAudio.xhr = vjs.xhr;} <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (url == <span class="hljs-string">'/ananas/modules/innerbook/index.html'</span> &amp;&amp; setting.book &amp;&amp; setting.tip) {    setTimeout(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{        _self.setting ? _self.top.onchangepage(_self.getFrameAttr(<span class="hljs-string">'end'</span>)) : _self.greenligth();    }, setting.time);} <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (url.match(<span class="hljs-regexp">/^\/ananas\/modules\/(ppt|pdf)\/index\.html$/</span>) &amp;&amp; setting.docs &amp;&amp; setting.tip) {    setTimeout(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{        _self.setting ? _self.finishJob() : _self.greenligth();    }, setting.time);    frameElement.setAttribute(<span class="hljs-string">'download'</span>, <span class="hljs-number">1</span>);} <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (url == <span class="hljs-string">'/knowledge/cards'</span>) {    $ &amp;&amp; checkToNext();} <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (url.match(<span class="hljs-regexp">/^\/(course|zt)\/\d+\.html$/</span>)) {    setTimeout(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{        +setting.read &amp;&amp; _self.sendLogs &amp;&amp; $(<span class="hljs-string">'.course_section:eq(0) .chapterText'</span>).click();    }, setting.time);} <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (url == <span class="hljs-string">'/ztnodedetailcontroller/visitnodedetail'</span>) {    setting.read *= <span class="hljs-number">60</span> / $(<span class="hljs-string">'.course_section'</span>).length;    setting.read &amp;&amp; _self.sendLogs &amp;&amp; autoRead();} <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (url == <span class="hljs-string">'/mycourse/studentcourse'</span>) {    <span class="hljs-keyword">var</span> gv = location.search.match(<span class="hljs-regexp">/d=\d+&amp;/g</span>);    setting.total &amp;&amp; $(<span class="hljs-string">'&lt;a&gt;'</span>, {        href: <span class="hljs-string">'/moocAnalysis/chapterStatisticByUser?classI'</span> + gv[<span class="hljs-number">1</span>] + <span class="hljs-string">'courseI'</span> + gv[<span class="hljs-number">0</span>] + <span class="hljs-string">'userId='</span> + _self.getCookie(<span class="hljs-string">'_uid'</span>) + <span class="hljs-string">'&amp;ut=s'</span>,        target: <span class="hljs-string">'_blank'</span>,        title: <span class="hljs-string">'点击查看章节统计'</span>,        style: <span class="hljs-string">'margin: 0 25px;'</span>,        html: <span class="hljs-string">'本课程共'</span> + $(<span class="hljs-string">'.icon'</span>).length + <span class="hljs-string">'节，剩余'</span> + $(<span class="hljs-string">'em:not(.openlock)'</span>).length + <span class="hljs-string">'节未完成'</span>    }).appendTo(<span class="hljs-string">'.zt_logo'</span>).parent().width(<span class="hljs-string">'auto'</span>);} <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (url.match(<span class="hljs-regexp">/^\/visit\/(courses|interaction)$/</span>)) {    setting.face &amp;&amp; $(<span class="hljs-string">'.zmodel'</span>).on(<span class="hljs-string">'click'</span>, <span class="hljs-string">'[onclick^=openFaceTip]'</span>, DisplayURL);} <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (location.host.match(<span class="hljs-regexp">/^passport2/</span>)) {    setting.username &amp;&amp; getSchoolId();} <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (location.hostname == <span class="hljs-string">'i.mooc.chaoxing.com'</span>) {    _self.layui.use(<span class="hljs-string">'layer'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{        <span class="hljs-keyword">this</span>.layer.open({<span class="hljs-attr">content</span>: <span class="hljs-string">'拖动进度条、倍速播放、秒过会导致不良记录！题库在慢慢补充，搜不到的题目系统会在次日进行自动补充'</span>, <span class="hljs-attr">title</span>: <span class="hljs-string">'超星网课助手提示'</span>, <span class="hljs-attr">btn</span>: <span class="hljs-string">'我已知悉'</span>, <span class="hljs-attr">offset</span>: <span class="hljs-string">'t'</span>, <span class="hljs-attr">closeBtn</span>: <span class="hljs-number">0</span>});    });} <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (url == <span class="hljs-string">'/widget/pcvote/goStudentVotePage'</span>) {    $(<span class="hljs-string">':checked'</span>).click();    $(<span class="hljs-string">'.StudentTimu'</span>).each(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">index</span>) </span>{        <span class="hljs-keyword">var</span> ans = _self.questionlist[index].answer;        $(<span class="hljs-string">':radio, :checkbox'</span>, <span class="hljs-keyword">this</span>).each(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">num</span>) </span>{            ans[num].isanswer &amp;&amp; <span class="hljs-keyword">this</span>.click();        });        $(<span class="hljs-string">':text'</span>, <span class="hljs-keyword">this</span>).val(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">num</span>) </span>{            <span class="hljs-keyword">return</span> $(ans[num].content).text().trim();        });    });} <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (url == <span class="hljs-string">'/work/selectWorkQuestionYiPiYue'</span>) {    submitAnswer(getIframe().parent(), $.extend(<span class="hljs-literal">true</span>, [], parent._data));}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getIframe</span>(<span class="hljs-params">tip, win, job</span>) </span>{    <span class="hljs-keyword">if</span> (!$) <span class="hljs-keyword">return</span> Ext.get(frameElement || []).parent().child(<span class="hljs-string">'.ans-job-icon'</span>) || Ext.get([]);    <span class="hljs-keyword">do</span> {        win = win ? win.parent : _self;        job = $(win.frameElement).prevAll(<span class="hljs-string">'.ans-job-icon'</span>);    } <span class="hljs-keyword">while</span> (!job.length &amp;&amp; win.parent.frameElement);    <span class="hljs-keyword">return</span> tip ? win : job;}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">jobSort</span>(<span class="hljs-params">$</span>) </span>{    <span class="hljs-keyword">var</span> fn = $.fn ? [getIframe(<span class="hljs-number">1</span>), <span class="hljs-string">'length'</span>] : [self, <span class="hljs-string">'dom'</span>],        sel = setting.job.join(<span class="hljs-string">', :not(.ans-job-finished) &gt; .ans-job-icon'</span> + setting.normal + <span class="hljs-string">' ~ '</span>);    <span class="hljs-keyword">if</span> ($(sel, fn[<span class="hljs-number">0</span>].parent.document)[<span class="hljs-number">0</span>] == fn[<span class="hljs-number">0</span>].frameElement) <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;    <span class="hljs-keyword">if</span> (!getIframe()[fn[<span class="hljs-number">1</span>]] || getIframe().parent().is(<span class="hljs-string">'.ans-job-finished'</span>)) <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;    setInterval(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{        $(sel, fn[<span class="hljs-number">0</span>].parent.document)[<span class="hljs-number">0</span>] == fn[<span class="hljs-number">0</span>].frameElement &amp;&amp; fn[<span class="hljs-number">0</span>].location.reload();    }, setting.time);}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkPlayer</span>(<span class="hljs-params">tip</span>) </span>{    _self.videojs = hookVideo;    hookVideo.xhr = vjs.xhr;    Ext.isSogou = Ext.isIos = Ext.isAndroid = <span class="hljs-literal">false</span>;    <span class="hljs-keyword">var</span> data = Ext.decode(_self.config(<span class="hljs-string">'data'</span>)) || {};    <span class="hljs-keyword">delete</span> data.danmaku;    data.doublespeed = <span class="hljs-number">1</span>;    frameElement.setAttribute(<span class="hljs-string">'data'</span>, Ext.encode(data));    <span class="hljs-keyword">if</span> (tip) <span class="hljs-keyword">return</span>;    _self.supportH5Video = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;};    alert(<span class="hljs-string">'此浏览器不支持html5播放器，请更换浏览器'</span>);}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">hookVideo</span>(<span class="hljs-params"></span>) </span>{    _self.alert = <span class="hljs-built_in">console</span>.log;    <span class="hljs-keyword">var</span> config = <span class="hljs-built_in">arguments</span>[<span class="hljs-number">1</span>],        line = Ext.Array.filter(Ext.Array.map(config.playlines, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">value, index</span>) </span>{            <span class="hljs-keyword">return</span> value.label == setting.line &amp;&amp; index;        }), <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">value</span>) </span>{            <span class="hljs-keyword">return</span> Ext.isNumber(value);        })[<span class="hljs-number">0</span>] || <span class="hljs-number">0</span>,        http = Ext.Array.filter(config.sources, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">value</span>) </span>{            <span class="hljs-keyword">return</span> value.label == setting.http;        })[<span class="hljs-number">0</span>];    config.playlines.unshift(config.playlines[line]);    config.playlines.splice(line + <span class="hljs-number">1</span>, <span class="hljs-number">1</span>);    config.plugins.videoJsResolutionSwitcher.default = http ? http.res : <span class="hljs-number">360</span>;    config.plugins.studyControl.enableSwitchWindow = <span class="hljs-number">1</span>;    config.plugins.timelineObjects.url = <span class="hljs-string">'/richvideo/initdatawithviewer?'</span>;    config.plugins.seekBarControl.enableFastForward = <span class="hljs-number">1</span>;    <span class="hljs-keyword">if</span> (!setting.queue) <span class="hljs-keyword">delete</span> config.plugins.studyControl;    <span class="hljs-comment">// config.preload = setting.tip ? 'auto' : 'none';</span>    <span class="hljs-keyword">var</span> player = vjs.apply(<span class="hljs-keyword">this</span>, <span class="hljs-built_in">arguments</span>),        a = <span class="hljs-string">'&lt;a href="https://d0.ananas.chaoxing.com/download/'</span> + _self.config(<span class="hljs-string">'objectid'</span>) + <span class="hljs-string">'" target="_blank"&gt;'</span>,        img = <span class="hljs-string">'&lt;img src="https://d0.ananas.chaoxing.com/download/e363b256c0e9bc5bd8266bf99dd6d6bb" style="margin: 6px 0 0 6px;"&gt;'</span>;    player.volume(<span class="hljs-built_in">Math</span>.round(setting.vol) / <span class="hljs-number">100</span> || <span class="hljs-number">0</span>);    Ext.get(player.controlBar.addChild(<span class="hljs-string">'Button'</span>).el_).setHTML(a + img + <span class="hljs-string">'&lt;/a&gt;'</span>).dom.title = <span class="hljs-string">'下载视频'</span>;    player.on(<span class="hljs-string">'loadstart'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{        setting.tip &amp;&amp; <span class="hljs-keyword">this</span>.play().catch(Ext.emptyFn);        <span class="hljs-keyword">this</span>.playbackRate(setting.rate &gt; <span class="hljs-number">16</span> || setting.rate &lt; <span class="hljs-number">0.0625</span> ? <span class="hljs-number">1</span> : setting.rate);    });    player.one([<span class="hljs-string">'loadedmetadata'</span>, <span class="hljs-string">'firstplay'</span>], <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{        setting.two = setting.rate === <span class="hljs-string">'0'</span> &amp;&amp; setting.two &lt; <span class="hljs-number">1</span>;        setting.two &amp;&amp; config.plugins.seekBarControl.sendLog(<span class="hljs-keyword">this</span>.children_[<span class="hljs-number">0</span>], <span class="hljs-string">'ended'</span>, <span class="hljs-built_in">Math</span>.floor(<span class="hljs-keyword">this</span>.cache_.duration));    });    player.on(<span class="hljs-string">'ended'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{        Ext.fly(frameElement).parent().addCls(<span class="hljs-string">'ans-job-finished'</span>);    });    <span class="hljs-keyword">return</span> player;}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">hookAudio</span>(<span class="hljs-params"></span>) </span>{    _self.alert = <span class="hljs-built_in">console</span>.log;    <span class="hljs-keyword">var</span> config = <span class="hljs-built_in">arguments</span>[<span class="hljs-number">1</span>];    config.plugins.studyControl.enableSwitchWindow = <span class="hljs-number">1</span>;    config.plugins.seekBarControl.enableFastForward = <span class="hljs-number">1</span>;    <span class="hljs-keyword">if</span> (!setting.queue) <span class="hljs-keyword">delete</span> config.plugins.studyControl;    <span class="hljs-keyword">var</span> player = vjs.apply(<span class="hljs-keyword">this</span>, <span class="hljs-built_in">arguments</span>),        a = <span class="hljs-string">'&lt;a href="https://d0.ananas.chaoxing.com/download/'</span> + _self.config(<span class="hljs-string">'objectid'</span>) + <span class="hljs-string">'" target="_blank"&gt;'</span>,        img = <span class="hljs-string">'&lt;img src="https://d0.ananas.chaoxing.com/download/e363b256c0e9bc5bd8266bf99dd6d6bb" style="margin: 6px 0 0 6px;"&gt;'</span>;    player.volume(<span class="hljs-built_in">Math</span>.round(setting.vol) / <span class="hljs-number">100</span> || <span class="hljs-number">0</span>);    player.playbackRate(setting.rate &gt; <span class="hljs-number">16</span> || setting.rate &lt; <span class="hljs-number">0.0625</span> ? <span class="hljs-number">1</span> : setting.rate);    Ext.get(player.controlBar.addChild(<span class="hljs-string">'Button'</span>).el_).setHTML(a + img + <span class="hljs-string">'&lt;/a&gt;'</span>).dom.title = <span class="hljs-string">'下载音频'</span>;    player.on(<span class="hljs-string">'loadeddata'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{        setting.tip &amp;&amp; <span class="hljs-keyword">this</span>.play().catch(Ext.emptyFn);    });    player.one(<span class="hljs-string">'firstplay'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{        setting.rate === <span class="hljs-string">'0'</span> &amp;&amp; config.plugins.seekBarControl.sendLog(<span class="hljs-keyword">this</span>.children_[<span class="hljs-number">0</span>], <span class="hljs-string">'ended'</span>, <span class="hljs-built_in">Math</span>.floor(<span class="hljs-keyword">this</span>.cache_.duration));    });    player.on(<span class="hljs-string">'ended'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{        Ext.fly(frameElement).parent().addCls(<span class="hljs-string">'ans-job-finished'</span>);    });    <span class="hljs-keyword">return</span> player;}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">relieveLimit</span>(<span class="hljs-params"></span>) </span>{    <span class="hljs-keyword">if</span> (setting.scale) _self.UEDITOR_CONFIG.scaleEnabled = <span class="hljs-literal">false</span>;    $.each(UE.instants, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{        <span class="hljs-keyword">var</span> key = <span class="hljs-keyword">this</span>.key;        <span class="hljs-keyword">this</span>.ready(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{            <span class="hljs-keyword">this</span>.destroy();            UE.getEditor(key);        });    });}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">beforeFind</span>(<span class="hljs-params"></span>) </span>{    setting.regl = parent.greenligth || $.noop;    <span class="hljs-keyword">if</span> ($.type(parent._data) == <span class="hljs-string">'array'</span>) <span class="hljs-keyword">return</span> setting.regl();    setting.div = $(        <span class="hljs-string">'&lt;div style="border: 2px dashed rgb(0, 85, 68); width: 330px; position: fixed; top: 0; right: 0; z-index: 99999; background-color: rgba(70, 196, 38, 0.6); overflow-x: auto;"&gt;'</span> +        <span class="hljs-string">'&lt;span style="font-size: medium;"&gt;&lt;/span&gt;'</span> +        <span class="hljs-string">'&lt;div style="font-size: medium;"&gt;正在搜索答案...&lt;/div&gt;'</span> +        <span class="hljs-string">'&lt;button style="margin-right: 10px;"&gt;暂停答题&lt;/button&gt;'</span> +        <span class="hljs-string">'&lt;button style="margin-right: 10px;"&gt;'</span> + (setting.auto ? <span class="hljs-string">'取消本次自动提交'</span> : <span class="hljs-string">'开启本次自动提交'</span>) + <span class="hljs-string">'&lt;/button&gt;'</span> +        <span class="hljs-string">'&lt;button style="margin-right: 10px;"&gt;重新查询&lt;/button&gt;'</span> +        <span class="hljs-string">'&lt;button&gt;折叠面板&lt;/button&gt;&lt;br&gt;'</span> +        <span class="hljs-string">'&lt;div style="font-size: medium;"&gt;当前查题接口:'</span>+ (setting.tk_num%<span class="hljs-number">2</span>+<span class="hljs-number">1</span>) + <span class="hljs-string">'&lt;/div&gt;'</span> +        <span class="hljs-string">'&lt;button id = "next_tk"&gt;切换为下一个查题接口&lt;/button&gt;'</span> +        <span class="hljs-string">'&lt;div style="max-height: 300px; overflow-y: auto;"&gt;'</span> +        <span class="hljs-string">'&lt;table border="1" style="font-size: 12px;"&gt;'</span> +        <span class="hljs-string">'&lt;thead&gt;'</span> +        <span class="hljs-string">'&lt;tr&gt;'</span> +        <span class="hljs-string">'&lt;th style="width: 25px; min-width: 25px;"&gt;题号&lt;/th&gt;'</span> +        <span class="hljs-string">'&lt;th style="width: 60%; min-width: 130px;"&gt;题目（点击可复制）&lt;/th&gt;'</span> +        <span class="hljs-string">'&lt;th style="min-width: 130px;"&gt;答案（点击可复制）&lt;/th&gt;'</span> +        <span class="hljs-string">'&lt;/tr&gt;'</span> +        <span class="hljs-string">'&lt;/thead&gt;'</span> +        <span class="hljs-string">'&lt;tfoot style="display: none;"&gt;'</span> +        <span class="hljs-string">'&lt;tr&gt;'</span> +        <span class="hljs-string">'&lt;th colspan="3"&gt;答案提示框 已折叠&lt;/th&gt;'</span> +        <span class="hljs-string">'&lt;/tr&gt;'</span> +        <span class="hljs-string">'&lt;/tfoot&gt;'</span> +        <span class="hljs-string">'&lt;tbody&gt;'</span> +        <span class="hljs-string">'&lt;tr&gt;'</span> +        <span class="hljs-string">'&lt;td colspan="3" style="display: none;"&gt;&lt;/td&gt;'</span> +        <span class="hljs-string">'&lt;/tr&gt;'</span> +        <span class="hljs-string">'&lt;/tbody&gt;'</span> +        <span class="hljs-string">'&lt;/table&gt;'</span> +        <span class="hljs-string">'&lt;/div&gt;'</span> +        <span class="hljs-string">'&lt;/div&gt;'</span>    ).appendTo(<span class="hljs-string">'body'</span>).on(<span class="hljs-string">'click'</span>, <span class="hljs-string">'button, td'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{        <span class="hljs-keyword">var</span> len = $(<span class="hljs-keyword">this</span>).prevAll(<span class="hljs-string">'button'</span>).length;        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.nodeName == <span class="hljs-string">'TD'</span>) {            $(<span class="hljs-keyword">this</span>).prev().length &amp;&amp; GM_setClipboard($(<span class="hljs-keyword">this</span>).text());        } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (!$(<span class="hljs-keyword">this</span>).siblings().length) {            $(<span class="hljs-keyword">this</span>).parent().text(<span class="hljs-string">'正在搜索答案...'</span>);            setting.num++;        } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (len === <span class="hljs-number">0</span>) {            <span class="hljs-keyword">if</span> (setting.loop) {                clearInterval(setting.loop);                <span class="hljs-keyword">delete</span> setting.loop;                len = [<span class="hljs-string">'已暂停搜索'</span>, <span class="hljs-string">'继续答题'</span>];            } <span class="hljs-keyword">else</span> {                setting.loop = setInterval(findAnswer, setting.time);                len = [<span class="hljs-string">'正在搜索答案...'</span>, <span class="hljs-string">'暂停答题'</span>];            }            setting.div.children(<span class="hljs-string">'div:eq(0)'</span>).html(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{                <span class="hljs-keyword">return</span> $(<span class="hljs-keyword">this</span>).data(<span class="hljs-string">'html'</span>) || len[<span class="hljs-number">0</span>];            }).removeData(<span class="hljs-string">'html'</span>);            $(<span class="hljs-keyword">this</span>).html(len[<span class="hljs-number">1</span>]);        } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (len == <span class="hljs-number">1</span>) {            setting.auto = !setting.auto;            $(<span class="hljs-keyword">this</span>).html(setting.auto ? <span class="hljs-string">'取消本次自动提交'</span> : <span class="hljs-string">'开启本次自动提交'</span>);        } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (len == <span class="hljs-number">2</span>) {            parent.location.reload();        } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (len == <span class="hljs-number">3</span>) {            setting.div.find(<span class="hljs-string">'tbody, tfoot'</span>).toggle();        } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (len == <span class="hljs-number">4</span>) {            setting.tk_num++;            GM_setValue(<span class="hljs-string">'tk_num'</span>,setting.tk_num);            setting.tk_num = GM_getValue(<span class="hljs-string">'tk_num'</span>);            <span class="hljs-built_in">console</span>.log(setting.tk_num);            parent.location.reload();        }    }).find(<span class="hljs-string">'table, td, th'</span>).css(<span class="hljs-string">'border'</span>, <span class="hljs-string">'1px solid'</span>).end();    setting.lose = setting.num = <span class="hljs-number">0</span>;    setting.data = parent._data = [];    setting.over = <span class="hljs-string">'&lt;button style="margin-right: 10px;"&gt;跳过此题&lt;/button&gt;'</span>;    setting.curs = $(<span class="hljs-string">'script:contains(courseName)'</span>, top.document).text().match(<span class="hljs-regexp">/courseName:\'(.+?)\'|$/</span>)[<span class="hljs-number">1</span>] || $(<span class="hljs-string">'h1'</span>).text().trim() || <span class="hljs-string">'无'</span>;    setting.loop = setInterval(findAnswer, setting.time);    <span class="hljs-keyword">var</span> tip = ({<span class="hljs-attr">undefined</span>: <span class="hljs-string">'任务点排队中'</span>, <span class="hljs-attr">null</span>: <span class="hljs-string">'等待切换中'</span>})[setting.tip];    tip &amp;&amp; setting.div.children(<span class="hljs-string">'div:eq(0)'</span>).data(<span class="hljs-string">'html'</span>, tip).siblings(<span class="hljs-string">'button:eq(0)'</span>).click();}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">findAnswer</span>(<span class="hljs-params"></span>) </span>{    <span class="hljs-keyword">if</span> (setting.num &gt;= $(<span class="hljs-string">'.TiMu'</span>).length) {        <span class="hljs-keyword">var</span> arr = setting.lose ? [<span class="hljs-string">'共有 &lt;font color="red"&gt;'</span> + setting.lose + <span class="hljs-string">'&lt;/font&gt; 道题目待完善（已深色标注）'</span>, saveThis] : [<span class="hljs-string">'答题已完成'</span>, submitThis];        setting.div.children(<span class="hljs-string">'div:eq(0)'</span>).data(<span class="hljs-string">'html'</span>, arr[<span class="hljs-number">0</span>]).siblings(<span class="hljs-string">'button:eq(0)'</span>).hide().click();        <span class="hljs-keyword">return</span> setTimeout(arr[<span class="hljs-number">1</span>], setting.time);    }    <span class="hljs-keyword">var</span> $TiMu = $(<span class="hljs-string">'.TiMu'</span>).eq(setting.num),        question = filterImg($TiMu.find(<span class="hljs-string">'.Zy_TItle:eq(0) .clearfix'</span>)).replace(<span class="hljs-regexp">/^【.*?】\s*/</span>, <span class="hljs-string">''</span>).replace(<span class="hljs-regexp">/\s*（\d+\.\d+分）$/</span>, <span class="hljs-string">''</span>).replace(<span class="hljs-regexp">/[(]\s*[)]。$/</span>,<span class="hljs-string">''</span>).replace(<span class="hljs-regexp">/（\s*）。$/</span>,<span class="hljs-string">''</span>).replace(<span class="hljs-regexp">/[(]\s*[)]$/</span>,<span class="hljs-string">''</span>).replace(<span class="hljs-regexp">/（\s*）$/</span>,<span class="hljs-string">''</span>).replace(<span class="hljs-regexp">/。$/</span>,<span class="hljs-string">''</span>),        type = $TiMu.find(<span class="hljs-string">'input[name^=answertype]:eq(0)'</span>).val() || <span class="hljs-string">'-1'</span>;    <span class="hljs-comment">//setting.div.children('div:eq(0)').text(encodeURIComponent(question)+'正在搜索答案...');</span>    <span class="hljs-keyword">switch</span>(setting.tk_num%<span class="hljs-number">2</span>)    {        <span class="hljs-keyword">case</span> <span class="hljs-number">0</span>:{            GM_xmlhttpRequest({                method: <span class="hljs-string">'POST'</span>,                url: <span class="hljs-string">'http://cx.icodef.com/wyn-nb'</span>,                headers: {                    <span class="hljs-string">'Content-type'</span>: <span class="hljs-string">'application/x-www-form-urlencoded'</span>,                    <span class="hljs-string">'Authorization'</span>: setting.token,                },                data: <span class="hljs-string">'question='</span> + <span class="hljs-built_in">encodeURIComponent</span>(question) + <span class="hljs-string">'&amp;type='</span> + type + <span class="hljs-string">'&amp;id='</span> + ($(<span class="hljs-string">'#workLibraryId'</span>).val() || $(<span class="hljs-string">'#oldWorkId'</span>).val()),                timeout: setting.time,                onload: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">xhr</span>) </span>{                    <span class="hljs-keyword">if</span> (!setting.loop) {                    } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (xhr.status == <span class="hljs-number">200</span>) {                        <span class="hljs-keyword">var</span> obj = $.parseJSON(xhr.responseText) || {};                        obj.answer = obj.data;                        <span class="hljs-keyword">if</span> (obj.code) {                            setting.div.children(<span class="hljs-string">'div:eq(0)'</span>).text(<span class="hljs-string">'正在搜索答案...'</span>);                            <span class="hljs-keyword">var</span> td = <span class="hljs-string">'&lt;td style="border: 1px solid;'</span>,                                answer = <span class="hljs-built_in">String</span>(obj.answer).replace(<span class="hljs-regexp">/&amp;/g</span>, <span class="hljs-string">'&amp;amp;'</span>).replace(<span class="hljs-regexp">/&lt;(?!img)/g</span>, <span class="hljs-string">'&amp;lt;'</span>);                            obj.answer = <span class="hljs-regexp">/^http/</span>.test(answer) ? <span class="hljs-string">'&lt;img src="'</span> + obj.answer + <span class="hljs-string">'"&gt;'</span> : obj.answer;                            $(                                <span class="hljs-string">'&lt;tr&gt;'</span> +                                td + <span class="hljs-string">' text-align: center;"&gt;'</span> + $TiMu.find(<span class="hljs-string">'.Zy_TItle:eq(0) i'</span>).text().trim() + <span class="hljs-string">'&lt;/td&gt;'</span> +                                td + <span class="hljs-string">'" title="点击可复制"&gt;'</span> + (question.match(<span class="hljs-string">'&lt;img'</span>) ? question : question.replace(<span class="hljs-regexp">/&amp;/g</span>, <span class="hljs-string">'&amp;amp;'</span>).replace(<span class="hljs-regexp">/&lt;/g</span>, <span class="hljs-string">'&amp;lt'</span>)) + <span class="hljs-string">'&lt;/td&gt;'</span> +                                td + <span class="hljs-string">'" title="点击可复制"&gt;'</span> + (<span class="hljs-regexp">/^http/</span>.test(answer) ? obj.answer : <span class="hljs-string">''</span>) + answer + <span class="hljs-string">'&lt;/td&gt;'</span> +                                <span class="hljs-string">'&lt;/tr&gt;'</span>                            ).appendTo(setting.div.find(<span class="hljs-string">'tbody'</span>)).css(<span class="hljs-string">'background-color'</span>, fillAnswer($TiMu.find(<span class="hljs-string">'ul:eq(0)'</span>).find(<span class="hljs-string">'li'</span>), obj, type) ? <span class="hljs-string">''</span> : <span class="hljs-string">'rgba(0, 150, 136, 0.6)'</span>);                            setting.data[setting.num++] = {                                code: obj.code &gt; <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>,                                question: question,                                option: obj.answer,                                type: <span class="hljs-built_in">Number</span>(type)                            };                        } <span class="hljs-keyword">else</span> {                            setting.div.children(<span class="hljs-string">'div:eq(0)'</span>).html(obj.answer || setting.over + <span class="hljs-string">'服务器繁忙，正在重试...'</span>);                        }                        setting.div.children(<span class="hljs-string">'span'</span>).html(obj.msg || <span class="hljs-string">''</span>);                    } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (xhr.status == <span class="hljs-number">403</span>) {                        <span class="hljs-keyword">var</span> html = xhr.responseText.indexOf(<span class="hljs-string">'{'</span>) ? <span class="hljs-string">'请求过于频繁，单击下面的切换题库接口按钮试试吧'</span> : $.parseJSON(xhr.responseText).data;                        setting.div.children(<span class="hljs-string">'div:eq(0)'</span>).data(<span class="hljs-string">'html'</span>, html).siblings(<span class="hljs-string">'button:eq(0)'</span>).click();                    } <span class="hljs-keyword">else</span> {                        setting.div.children(<span class="hljs-string">'div:eq(0)'</span>).html(<span class="hljs-string">'题库异常，单击下面的切换题库接口按钮试试吧...'</span>);                    }                },                ontimeout: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{                    setting.loop &amp;&amp; setting.div.children(<span class="hljs-string">'div:eq(0)'</span>).html(setting.over + <span class="hljs-string">'服务器超时，正在重试...'</span>);                }            });        }; <span class="hljs-keyword">break</span>;        <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:{            GM_xmlhttpRequest({                method: <span class="hljs-string">'POST'</span>,                url: <span class="hljs-string">'http://cx.beaa.cn/cx.php'</span>,                headers: {                    <span class="hljs-string">'Content-type'</span>: <span class="hljs-string">'application/x-www-form-urlencoded'</span>,                },                data: <span class="hljs-string">'content='</span> + <span class="hljs-built_in">encodeURIComponent</span>(question.replace(<span class="hljs-regexp">/^&lt;img src="/</span>,<span class="hljs-string">""</span>).replace(<span class="hljs-regexp">/"&gt;$/</span>,<span class="hljs-string">""</span>)),                timeout: setting.time,                onload: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">xhr</span>) </span>{                    <span class="hljs-keyword">if</span> (!setting.loop) {                    } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (xhr.status == <span class="hljs-number">200</span>) {                        <span class="hljs-keyword">var</span> obj = $.parseJSON(xhr.responseText.replace(<span class="hljs-regexp">/^操作数据失败！/</span>,<span class="hljs-string">''</span>)) || {};                        <span class="hljs-keyword">if</span> (obj.code) {                            setting.div.children(<span class="hljs-string">'div:eq(0)'</span>).text(<span class="hljs-string">'正在搜索答案...'</span>);                            <span class="hljs-keyword">var</span> td = <span class="hljs-string">'&lt;td style="border: 1px solid;'</span>,                                answer = S</code></pre></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>小技巧</tag>
      
      <tag>工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Beyond Compare 4解除到期限制的技巧</title>
    <link href="/blog/2020/06/08/Beyond%20Compare%204%E8%A7%A3%E9%99%A4%E5%88%B0%E6%9C%9F%E9%99%90%E5%88%B6%E7%9A%84%E6%8A%80%E5%B7%A7/"/>
    <url>/blog/2020/06/08/Beyond%20Compare%204%E8%A7%A3%E9%99%A4%E5%88%B0%E6%9C%9F%E9%99%90%E5%88%B6%E7%9A%84%E6%8A%80%E5%B7%A7/</url>
    
    <content type="html"><![CDATA[<ol><li><p>如果提示 这个授权密钥已被吊销 ，删除 C:\Users\Administrator\AppData\Roaming\Scooter Software\Beyond Compare 4 目录下的文件即可（将Administrator换成自己的用户名）</p></li><li><p>如果没有输入激活码，且试用30天已到期，可以删除安装目录下 的 BCUnrar.dll 文件，发现又可以使用了，不过依然是试用。<br>也可以删除注册表 \HKEY_CURRENT_USER\Software\ScooterSoftware\Beyond Compare 4\CacheId ，也能够继续使用，且不会到期。</p></li></ol><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>小技巧</tag>
      
      <tag>工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java 常用资源工具集合</title>
    <link href="/blog/2020/06/08/Java%20%E5%B8%B8%E7%94%A8%E8%B5%84%E6%BA%90%E5%B7%A5%E5%85%B7%E9%9B%86%E5%90%88/"/>
    <url>/blog/2020/06/08/Java%20%E5%B8%B8%E7%94%A8%E8%B5%84%E6%BA%90%E5%B7%A5%E5%85%B7%E9%9B%86%E5%90%88/</url>
    
    <content type="html"><![CDATA[<p>来源：<a href="http://rrd.me/emdDq" target="_blank" rel="noopener">http://rrd.me/emdDq</a></p><a id="more"></a><p>搜索资源网站<br>学习技术过程我们经常需要使用搜索引擎来检索资料，国内常用的也就是某度了。</p><p>当然有条件的话，搜索引擎首先还是推荐使用 Google，如果没办法使用，可以使用以下几个作为备用：</p><p>Bing<br>Bing 国际版：<a href="https://cn.bing.com/" target="_blank" rel="noopener">https://cn.bing.com/</a></p><p>比某度好用，之前还被停用了几天，最近可以了。</p><p>DuckDuckGo<br>DuckDuckGo：<a href="https://duckduckgo.com/" target="_blank" rel="noopener">https://duckduckgo.com/</a></p><p>从官网的介绍来看这个搜索引擎不收集用户信息，而且没有广告。</p><p>Stack Overflow<br>Stack Overflow：<a href="https://stackoverflow.com/" target="_blank" rel="noopener">https://stackoverflow.com/</a></p><p>我们如果常用 Google，很多技术问题的答案就在这个网站上，如果你无法使用 Google 可以在这个网站上直接检索就好了。</p><p>Gitlogs<br>Gitlogs：<a href="https://www.gitlogs.com/" target="_blank" rel="noopener">https://www.gitlogs.com/</a></p><p>Gitlogs 是专门针对 GitHub 项目的搜索引擎，我们通过他可以快速找到想要项目。</p><p>jiumo search<br>文档搜索引擎 jiumo search 鸠摩搜书：<a href="https://www.jiumodiary.com/" target="_blank" rel="noopener">https://www.jiumodiary.com/</a></p><p>可以用来找一些技术文档手册，很多在百度网盘里。</p><p>Ebooke<br>Ebooke：<a href="https://ebookee.org/" target="_blank" rel="noopener">https://ebookee.org/</a></p><p>Ebookee 是一个基于互联网并提供免费电子图书下载的搜索引擎网站。</p><p>Iconfinder<br>图标搜索：<a href="https://www.iconfinder.com/" target="_blank" rel="noopener">https://www.iconfinder.com/</a></p><p>用来查找 logo 图片。</p><p>TinEye<br>TinEye：<a href="https://www.tineye.com" target="_blank" rel="noopener">https://www.tineye.com</a></p><p>用图片来检索图片，我们可以上传图片或输入图片的 URL 来检索。</p><p>SemanticScholar<br>SemanticScholar：<a href="https://www.semanticscholar.org/" target="_blank" rel="noopener">https://www.semanticscholar.org/</a></p><p>SemanticScholar 是一个免费学术搜索引擎，其检索结果来自于期刊、学术会议资料或者是学术机构的文献。</p><p>LibreStock<br>LibreStock：<a href="https://librestock.com/" target="_blank" rel="noopener">https://librestock.com/</a></p><p>LibreStock 上可以检索一些优质的高清图片。</p><p>CC Search<br>CC Search：<a href="https://ccsearch.creativecommons.org/" target="_blank" rel="noopener">https://ccsearch.creativecommons.org/</a></p><p>CC Search 上搜索到的图片资源都是无版权的，我们可以免费的使用。</p><p>Pexels<br>Pexels：<a href="https://www.pexels.com/" target="_blank" rel="noopener">https://www.pexels.com/</a></p><p>高质量的图片网站，可以免费使用。</p><p>Unsplash<br>Unsplash：<a href="https://unsplash.com/" target="_blank" rel="noopener">https://unsplash.com/</a></p><p>免费高清素材网站。</p><p>The App Store<br>The App Store：<a href="https://theappstore.org/" target="_blank" rel="noopener">https://theappstore.org/</a></p><p>The App Store 是一个针对苹果手机、iPad、Mac 设备的应用搜索工具。</p><p>工具类<br>图片相关工具<br>TinyPNG：<a href="https://tinypng.com/" target="_blank" rel="noopener">https://tinypng.com/</a></p><p>免费的在线图片压缩工具，压缩率高，无损画质，直接拖拽使用，很方便。</p><p>picdiet：<a href="https://www.picdiet.com/zh-cn" target="_blank" rel="noopener">https://www.picdiet.com/zh-cn</a></p><p>独特且强悍的JavaScript 算法，能极速压缩 80% 的图片大小，而不损害其质量。</p><p>SmartResize：</p><p><a href="https://www.smartresize.com/zh-cn" target="_blank" rel="noopener">https://www.smartresize.com/zh-cn</a></p><p>这个工具基于 javascript+HTML5 编写而成的，是一个批量裁剪缩放图片的神器！</p><p>正则表达式相关工具<br>以下两个工具以图形的方式来展示正则表达式，更易于理解：</p><p><a href="https://regexr.com/" target="_blank" rel="noopener">https://regexr.com/</a></p><p><a href="https://jex.im/regulex/#!flags=&amp;re=%5E(a%7Cb)*%3F%24" target="_blank" rel="noopener">https://jex.im/regulex/#!flags=&amp;re=%5E(a%7Cb)*%3F%24</a></p><p>文件转换转换工具<br>以下资源支持各种格式（PDF、图片、Word）相互转换。</p><p><a href="https://smallpdf.com/cn" target="_blank" rel="noopener">https://smallpdf.com/cn</a></p><p><a href="https://convertio.co/zh/" target="_blank" rel="noopener">https://convertio.co/zh/</a></p><p><a href="https://www.online-convert.com/" target="_blank" rel="noopener">https://www.online-convert.com/</a></p><p><a href="https://www.pdftoword.com/" target="_blank" rel="noopener">https://www.pdftoword.com/</a></p><p><a href="https://tools.pdf24.org/zh/" target="_blank" rel="noopener">https://tools.pdf24.org/zh/</a></p><p><a href="https://cn.office-converter.com/" target="_blank" rel="noopener">https://cn.office-converter.com/</a></p><p>在线编译器<br>包含前后端（php、java、c等）都可以在线运行测试</p><p><a href="https://rextester.com/" target="_blank" rel="noopener">https://rextester.com/</a></p><p><a href="https://www.onlinegdb.com/" target="_blank" rel="noopener">https://www.onlinegdb.com/</a></p><p><a href="https://c.runoob.com/" target="_blank" rel="noopener">https://c.runoob.com/</a></p><p>HTML、CSS、JS、设计类的工具<br>JSFiddle: <a href="https://jsfiddle.net/" target="_blank" rel="noopener">https://jsfiddle.net/</a></p><p>CodePen: <a href="https://codepen.io/" target="_blank" rel="noopener">https://codepen.io/</a></p><p>Runoob: <a href="https://c.runoob.com/front-end/61" target="_blank" rel="noopener">https://c.runoob.com/front-end/61</a></p><p>JSON 解析器: <a href="https://c.runoob.com/front-end/53" target="_blank" rel="noopener">https://c.runoob.com/front-end/53</a></p><p>在线 PS: <a href="http://www.kantu.com/" target="_blank" rel="noopener">http://www.kantu.com/</a></p><p>表格转换工具: <a href="https://tableconvert.com/" target="_blank" rel="noopener">https://tableconvert.com/</a></p><p>支持的 Markdown、HTML table、CSV 和 Excel 的相互转换。</p><p>DesignCap: <a href="https://www.designcap.com/" target="_blank" rel="noopener">https://www.designcap.com/</a></p><p>在线设计海报，内置众多模板及素材。</p><p>思维导图工具<br>推荐几款绘图工具：</p><p>Xmind：<a href="https://www.xmind.cn/" target="_blank" rel="noopener">https://www.xmind.cn/</a></p><p>跨平台、跨终端，拥有全功能的思维导图软件。</p><p>ProcessOn：<a href="https://www.processon.com/" target="_blank" rel="noopener">https://www.processon.com/</a></p><p>免费在线作图，实时协作，支持流程图、思维导图、原型图、UML、网络拓扑图、组织结构图等。</p><p>MindMaster：<a href="https://www.edrawsoft.cn/mindmaster/" target="_blank" rel="noopener">https://www.edrawsoft.cn/mindmaster/</a></p><p>多平台思维导图软件，可用于Windows，Mac和Linux等桌面环境，也可以在线使用或在苹果，安卓等移动端上使用。</p><p>MindMeister：<a href="https://www.mindmeister.com/zh" target="_blank" rel="noopener">https://www.mindmeister.com/zh</a></p><p>在线思维导图工具，已有超过1000万个用户。</p><p>百度脑图：<a href="http://naotu.baidu.com/" target="_blank" rel="noopener">http://naotu.baidu.com/</a> 简洁的在线思维导图工具</p><p>Gliffy：<a href="https://www.gliffy.com/" target="_blank" rel="noopener">https://www.gliffy.com/</a></p><p>我们可以在 Chrome 浏览器上安装 gliffy 插件。</p><p>可以在线创建流程图、UML图、线框图、BPNM、组织架构图等。</p><p>文档笔记平台<br>推荐几个常用的国内外云笔记平台，比较常用的应该是印象、有道、石墨，有一些国外的访问速度比较慢，影响体验。</p><p>现在用云笔记的人应该蛮多的，可以总结归纳自己的一些知识储备或者相关的业务资料，加上他们自带的跨平台特性，用起来还是很方便的。</p><p>印象笔记：<a href="https://www.yinxiang.com/" target="_blank" rel="noopener">https://www.yinxiang.com/</a></p><p>有道笔记：<a href="https://note.youdao.com/" target="_blank" rel="noopener">https://note.youdao.com/</a></p><p>OneNote：<a href="https://www.onenote.com/" target="_blank" rel="noopener">https://www.onenote.com/</a></p><p>幕布：<a href="https://mubu.com/" target="_blank" rel="noopener">https://mubu.com/</a></p><p>为知笔记：<a href="https://www.wiz.cn/" target="_blank" rel="noopener">https://www.wiz.cn/</a></p><p>石墨文档：<a href="https://shimo.im/" target="_blank" rel="noopener">https://shimo.im/</a></p><p>Google keep：<a href="https://keep.google.com/" target="_blank" rel="noopener">https://keep.google.com/</a></p><p>Simplenote：<a href="https://simplenote.com/" target="_blank" rel="noopener">https://simplenote.com/</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>小技巧</tag>
      
      <tag>工具</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java比较两个List集合的方法</title>
    <link href="/blog/2020/06/08/Java%E5%AE%9E%E7%8E%B0%E6%AF%94%E8%BE%83%E4%B8%A4%E4%B8%AAList%E9%9B%86%E5%90%88%E6%98%AF%E5%90%A6%E7%9B%B8%E7%AD%89/"/>
    <url>/blog/2020/06/08/Java%E5%AE%9E%E7%8E%B0%E6%AF%94%E8%BE%83%E4%B8%A4%E4%B8%AAList%E9%9B%86%E5%90%88%E6%98%AF%E5%90%A6%E7%9B%B8%E7%AD%89/</url>
    
    <content type="html"><![CDATA[<a id="more"></a><div class="hljs"><pre><code class="hljs java"><span class="hljs-comment">/**</span><span class="hljs-comment"> * 比较两个List集合是否相等</span><span class="hljs-comment"> * &lt;p&gt;注：1. 如果一个List的引用为&lt;code&gt;null&lt;/code&gt;，或者其包含的元素个数为0，那么该List在本逻辑处理中都算作空；</span><span class="hljs-comment"> * &lt;p&gt;2. 泛型参数E涉及到对象，所以需要确保正确实现了对应对象的&lt;code&gt;equal()&lt;/code&gt;方法。</span><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> list1</span><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> list2</span><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><span class="hljs-comment"> */</span><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> &lt;E&gt;<span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">isListEqual</span><span class="hljs-params">(List&lt;E&gt; list1, List&lt;E&gt; list2)</span> </span>{<span class="hljs-comment">// 两个list引用相同（包括两者都为空指针的情况）</span><span class="hljs-keyword">if</span> (list1 == list2) {<span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;}<span class="hljs-comment">// 两个list都为空（包括空指针、元素个数为0）</span><span class="hljs-keyword">if</span> ((list1 == <span class="hljs-keyword">null</span> &amp;&amp; list2 != <span class="hljs-keyword">null</span> &amp;&amp; list2.size() == <span class="hljs-number">0</span>)|| (list2 == <span class="hljs-keyword">null</span> &amp;&amp; list1 != <span class="hljs-keyword">null</span> &amp;&amp; list1.size() == <span class="hljs-number">0</span>)) {<span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;}<span class="hljs-comment">// 两个list元素个数不相同</span><span class="hljs-keyword">if</span> (list1.size() != list2.size()) {<span class="hljs-keyword">return</span> <span class="hljs-keyword">false</span>;}<span class="hljs-comment">// 两个list元素个数已经相同，再比较两者内容</span><span class="hljs-comment">// 采用这种可以忽略list中的元素的顺序</span><span class="hljs-comment">// 涉及到对象的比较是否相同时，确保实现了equals()方法</span><span class="hljs-keyword">if</span> (!list1.containsAll(list2)) {<span class="hljs-keyword">return</span> <span class="hljs-keyword">false</span>;}<span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>; }</code></pre></div><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>参考文章<a href="https://blog.csdn.net/zc274456223/article/details/77943156" target="_blank" rel="noopener">两个List比较内容是否一样</a>和<a href="https://www.jb51.net/article/149311.htm" target="_blank" rel="noopener">Java判断2个List集合是否相等(不考虑元素的顺序)</a>写的，主要对文章讲到的比较算法的具体实现进行了完善改造。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java比较两个List集合的方法</title>
    <link href="/blog/2020/06/08/Java%E6%AF%94%E8%BE%83%E4%B8%A4%E4%B8%AAList%E9%9B%86%E5%90%88%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <url>/blog/2020/06/08/Java%E6%AF%94%E8%BE%83%E4%B8%A4%E4%B8%AAList%E9%9B%86%E5%90%88%E7%9A%84%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<a id="more"></a><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.ArrayList;<span class="hljs-keyword">import</span> java.util.Arrays;<span class="hljs-keyword">import</span> java.util.Collection;<span class="hljs-keyword">import</span> java.util.HashSet;<span class="hljs-keyword">import</span> java.util.List;<span class="hljs-keyword">import</span> java.util.Set;<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">FindNumber</span> </span>{<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{<span class="hljs-comment">// 注意：一定要使用创建对象的格式创建数组</span>Integer[] a = <span class="hljs-keyword">new</span> Integer[] { <span class="hljs-number">6</span>, <span class="hljs-number">3</span>, <span class="hljs-number">9</span>, <span class="hljs-number">3</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span> };Integer[] b = <span class="hljs-keyword">new</span> Integer[] { <span class="hljs-number">5</span>, <span class="hljs-number">8</span>, <span class="hljs-number">6</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">9</span> };List _a = Arrays.asList(a);List _b = Arrays.asList(b);<span class="hljs-comment">// 创建集合</span>Collection realA = <span class="hljs-keyword">new</span> ArrayList&lt;Integer&gt;(_a);Collection realB = <span class="hljs-keyword">new</span> ArrayList&lt;Integer&gt;(_b);<span class="hljs-comment">// 求交集</span>realA.retainAll(realB);System.out.println(<span class="hljs-string">"交集结果："</span> + realA);Set result = <span class="hljs-keyword">new</span> HashSet();<span class="hljs-comment">// 求全集</span>result.addAll(_a);result.addAll(_b);System.out.println(<span class="hljs-string">"全集结果："</span> + result);<span class="hljs-comment">// 求差集：结果</span>Collection aa = <span class="hljs-keyword">new</span> ArrayList(realA);Collection bb = <span class="hljs-keyword">new</span> ArrayList(result);bb.removeAll(aa);System.out.println(<span class="hljs-string">"最终结果："</span> + bb);</code></pre></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【LeetCode】192周赛-5428. 重新排列数组</title>
    <link href="/blog/2020/06/07/%E3%80%90LeetCode%E3%80%91192%E5%91%A8%E8%B5%9B-5428.%20%E9%87%8D%E6%96%B0%E6%8E%92%E5%88%97%E6%95%B0%E7%BB%84/"/>
    <url>/blog/2020/06/07/%E3%80%90LeetCode%E3%80%91192%E5%91%A8%E8%B5%9B-5428.%20%E9%87%8D%E6%96%B0%E6%8E%92%E5%88%97%E6%95%B0%E7%BB%84/</url>
    
    <content type="html"><![CDATA[<p>题目来自【192场周赛】</p><h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><ol start="5428"><li>重新排列数组 </li></ol><p>题目难度：Easy</p><p>给你一个数组 nums ，数组中有 2n 个元素，按 [x1,x2,…,xn,y1,y2,…,yn] 的格式排列。</p><p>请你将数组按 [x1,y1,x2,y2,…,xn,yn] 格式重新排列，返回重排后的数组。</p><p>示例 1：</p><div class="hljs"><pre><code class="hljs angelscript">输入：nums = [<span class="hljs-number">2</span>,<span class="hljs-number">5</span>,<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">7</span>], n = <span class="hljs-number">3</span>输出：[<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">4</span>,<span class="hljs-number">1</span>,<span class="hljs-number">7</span>] 解释：由于 x1=<span class="hljs-number">2</span>, x2=<span class="hljs-number">5</span>, x3=<span class="hljs-number">1</span>, y1=<span class="hljs-number">3</span>, y2=<span class="hljs-number">4</span>, y3=<span class="hljs-number">7</span> ，所以答案为 [<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">4</span>,<span class="hljs-number">1</span>,<span class="hljs-number">7</span>]</code></pre></div><p>示例 2：</p><div class="hljs"><pre><code class="hljs angelscript">输入：nums = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">4</span>,<span class="hljs-number">3</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>], n = <span class="hljs-number">4</span>输出：[<span class="hljs-number">1</span>,<span class="hljs-number">4</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>,<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">1</span>]</code></pre></div><p>示例 3：</p><div class="hljs"><pre><code class="hljs angelscript">输入：nums = [<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>], n = <span class="hljs-number">2</span>输出：[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>]</code></pre></div><p>提示：</p><ul><li>1 &lt;= n &lt;= 500</li><li>nums.length == 2n</li><li>1 &lt;= nums[i] &lt;= 10^3</li></ul><a id="more"></a><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>思路贼简单，直接上代码：</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>{    <span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span>[] shuffle(<span class="hljs-keyword">int</span>[] nums, <span class="hljs-keyword">int</span> n) {        <span class="hljs-keyword">int</span> count = (nums.length)/n; <span class="hljs-comment">// 每轮的元素个数,n轮</span>        <span class="hljs-keyword">int</span>[] res = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[nums.length];        <span class="hljs-keyword">int</span> index = <span class="hljs-number">0</span>;        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) {            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>;j &lt;count; j++) {                res[index] = nums[i + n * j];                ++index;            }        }        <span class="hljs-keyword">return</span> res;    }}</code></pre></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【LeetCode】面试题29. 顺时针打印矩阵</title>
    <link href="/blog/2020/06/05/%E3%80%90LeetCode%E3%80%91%E9%9D%A2%E8%AF%95%E9%A2%9829.%20%E9%A1%BA%E6%97%B6%E9%92%88%E6%89%93%E5%8D%B0%E7%9F%A9%E9%98%B5/"/>
    <url>/blog/2020/06/05/%E3%80%90LeetCode%E3%80%91%E9%9D%A2%E8%AF%95%E9%A2%9829.%20%E9%A1%BA%E6%97%B6%E9%92%88%E6%89%93%E5%8D%B0%E7%9F%A9%E9%98%B5/</url>
    
    <content type="html"><![CDATA[<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字。</p><p>示例 1：</p><div class="hljs"><pre><code class="hljs angelscript">输入：matrix = [[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>],[<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>],[<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>]]输出：[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">6</span>,<span class="hljs-number">9</span>,<span class="hljs-number">8</span>,<span class="hljs-number">7</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>]</code></pre></div><p>示例 2：</p><div class="hljs"><pre><code class="hljs angelscript">输入：matrix = [[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>],[<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>],[<span class="hljs-number">9</span>,<span class="hljs-number">10</span>,<span class="hljs-number">11</span>,<span class="hljs-number">12</span>]]输出：[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">8</span>,<span class="hljs-number">12</span>,<span class="hljs-number">11</span>,<span class="hljs-number">10</span>,<span class="hljs-number">9</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>]</code></pre></div><p>限制：</p><ul><li>0 &lt;= matrix.length &lt;= 100</li><li>0 &lt;= matrix[i].length &lt;= 100<br>注意：本题与主站 54 题相同：<a href="https://leetcode-cn.com/problems/spiral-matrix/" target="_blank" rel="noopener">54. 螺旋矩阵</a></li></ul><a id="more"></a><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>顺时针方向打印无非就是按着“右下左上”的方向进行遍历并打印，碰到边界就拐弯，然后再缩小边界。</p><p>源码有<code>Java</code>、<code>C</code>、<code>C++</code>两种，思路基本差不多。</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>{    <span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span>[] spiralOrder(<span class="hljs-keyword">int</span>[][] matrix) {        <span class="hljs-keyword">if</span>(matrix.length == <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[<span class="hljs-number">0</span>];        <span class="hljs-keyword">int</span> l = <span class="hljs-number">0</span>, r = matrix[<span class="hljs-number">0</span>].length - <span class="hljs-number">1</span>, t = <span class="hljs-number">0</span>, b = matrix.length - <span class="hljs-number">1</span>, x = <span class="hljs-number">0</span>;        <span class="hljs-keyword">int</span>[] res = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[(r + <span class="hljs-number">1</span>) * (b + <span class="hljs-number">1</span>)];        <span class="hljs-keyword">while</span>(<span class="hljs-keyword">true</span>) {            <span class="hljs-comment">// left to right.</span>            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = l; i &lt;= r; i++) res[x++] = matrix[t][i];             <span class="hljs-keyword">if</span>(++t &gt; b) <span class="hljs-keyword">break</span>;            <span class="hljs-comment">// top to bottom.</span>            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = t; i &lt;= b; i++) res[x++] = matrix[i][r];             <span class="hljs-keyword">if</span>(l &gt; --r) <span class="hljs-keyword">break</span>;            <span class="hljs-comment">// right to left.</span>            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = r; i &gt;= l; i--) res[x++] = matrix[b][i];             <span class="hljs-keyword">if</span>(t &gt; --b) <span class="hljs-keyword">break</span>;                        <span class="hljs-comment">// bottom to top.</span>            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = b; i &gt;= t; i--) res[x++] = matrix[i][l];             <span class="hljs-keyword">if</span>(++l &gt; r) <span class="hljs-keyword">break</span>;        }        <span class="hljs-keyword">return</span> res;    }}</code></pre></div><p><img src="https://img2020.cnblogs.com/blog/2013579/202006/2013579-20200605120720952-968301446.png" srcset="/blog/img/loading.gif" alt=""></p><div class="hljs"><pre><code class="hljs c"><span class="hljs-comment">/**</span><span class="hljs-comment"> * Note: The returned array must be malloced, assume caller calls free().</span><span class="hljs-comment"> */</span><span class="hljs-function"><span class="hljs-keyword">int</span>* <span class="hljs-title">spiralOrder</span><span class="hljs-params">(<span class="hljs-keyword">int</span>** matrix, <span class="hljs-keyword">int</span> matrixSize, <span class="hljs-keyword">int</span>* matrixColSize, <span class="hljs-keyword">int</span>* returnSize)</span></span>{    <span class="hljs-keyword">if</span> (matrix == <span class="hljs-literal">NULL</span> || matrixSize == <span class="hljs-number">0</span>) {        *returnSize = <span class="hljs-number">0</span>;        <span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span>;    }    *returnSize = matrixSize * matrixColSize[<span class="hljs-number">0</span>];    <span class="hljs-keyword">int</span> *res = <span class="hljs-built_in">calloc</span>(*returnSize, <span class="hljs-keyword">sizeof</span>(<span class="hljs-keyword">int</span>));    <span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>;    <span class="hljs-keyword">int</span> urow, rcol, drow, lcol, r, c;    urow = <span class="hljs-number">-1</span>;    lcol = <span class="hljs-number">-1</span>;    drow = matrixSize;    rcol = matrixColSize[<span class="hljs-number">0</span>];    <span class="hljs-keyword">while</span> (i &lt; *returnSize) {        <span class="hljs-comment">//right</span>        r = urow + <span class="hljs-number">1</span>;        <span class="hljs-keyword">for</span> (c = lcol + <span class="hljs-number">1</span>; i &lt; *returnSize &amp;&amp; c &lt; rcol; c++) {            res[i] = matrix[r][c];            i++;        }        urow++;        <span class="hljs-comment">//down</span>        c = rcol - <span class="hljs-number">1</span>;        <span class="hljs-keyword">for</span> (r = urow + <span class="hljs-number">1</span>; i &lt; *returnSize &amp;&amp; r &lt; drow; r++) {            res[i] = matrix[r][c];            i++;        }        rcol--;        <span class="hljs-comment">//left</span>        r = drow - <span class="hljs-number">1</span>;        <span class="hljs-keyword">for</span> (c = rcol - <span class="hljs-number">1</span>; i &lt; *returnSize &amp;&amp; c &gt; lcol; c--) {            res[i] = matrix[r][c];            i++;        }        drow--;        <span class="hljs-comment">//up</span>        c = lcol + <span class="hljs-number">1</span>;        <span class="hljs-keyword">for</span> (r = drow - <span class="hljs-number">1</span>; i &lt; *returnSize &amp;&amp; r &gt; urow; r--) {            res[i] = matrix[r][c];            i++;        }        lcol++;    }    <span class="hljs-keyword">return</span> res;}</code></pre></div><p><img src="https://img2020.cnblogs.com/blog/2013579/202006/2013579-20200605120804908-1179189610.png" srcset="/blog/img/loading.gif" alt=""></p><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> {</span><span class="hljs-keyword">public</span>:    <span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; spiralOrder(<span class="hljs-built_in">vector</span>&lt;<span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt;&gt;&amp; matrix) {        <span class="hljs-comment">// 边界情况</span>        <span class="hljs-keyword">auto</span> height = matrix.size();        <span class="hljs-keyword">if</span> (!height) <span class="hljs-keyword">return</span> {};        <span class="hljs-keyword">auto</span> width = matrix[<span class="hljs-number">0</span>].size();        <span class="hljs-keyword">if</span> (!width) <span class="hljs-keyword">return</span> {};        <span class="hljs-comment">// 至少有一个元素</span>        <span class="hljs-keyword">int</span> dx[<span class="hljs-number">4</span>]{<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">-1</span>, <span class="hljs-number">0</span>}; <span class="hljs-comment">// 代表 4 个变化方向</span>        <span class="hljs-keyword">int</span> dy[<span class="hljs-number">4</span>]{<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">-1</span>}; <span class="hljs-comment">// 同上</span>        <span class="hljs-keyword">int</span> d = <span class="hljs-number">0</span>;         <span class="hljs-comment">// 记录当前方向</span>        <span class="hljs-keyword">int</span> h = <span class="hljs-number">0</span>, w = <span class="hljs-number">0</span>;  <span class="hljs-comment">// 记录当前索引</span>        <span class="hljs-keyword">int</span> cycle = <span class="hljs-number">0</span>;     <span class="hljs-comment">// 记录当前是第几轮</span>        <span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; ans;        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i != height * width; ++i) {            <span class="hljs-comment">// 到达右边界</span>            <span class="hljs-keyword">if</span> (!d &amp;&amp; w &gt;= width - <span class="hljs-number">1</span> - cycle) d = ++d % <span class="hljs-number">4</span>;            <span class="hljs-comment">// 到达下边界</span>            <span class="hljs-keyword">if</span> (d == <span class="hljs-number">1</span> &amp;&amp; h &gt;= height - <span class="hljs-number">1</span> - cycle) d = ++d % <span class="hljs-number">4</span>;            <span class="hljs-comment">// 到达左边界</span>            <span class="hljs-keyword">if</span> (d == <span class="hljs-number">2</span> &amp;&amp; w &lt;= cycle) d = ++d % <span class="hljs-number">4</span>;            <span class="hljs-comment">// 到达上边界</span>            <span class="hljs-keyword">if</span> (d == <span class="hljs-number">3</span> &amp;&amp; h &lt;= cycle + <span class="hljs-number">1</span>) {                d = ++d % <span class="hljs-number">4</span>;                <span class="hljs-comment">// 进入下一轮</span>                ++cycle;            }            ans.push_back(matrix[h][w]);            h += dy[d];            w += dx[d];        }        <span class="hljs-keyword">return</span> ans;    }};</code></pre></div><p><img src="https://img2020.cnblogs.com/blog/2013579/202006/2013579-20200605120353543-1048641385.png" srcset="/blog/img/loading.gif" alt=""></p><h1 id="推荐"><a href="#推荐" class="headerlink" title="推荐"></a>推荐</h1><p>极力推荐两个我喜欢的算法公众号的文章：</p><ol><li><a href="https://mp.weixin.qq.com/s/JB9MrVwITD60C1JqTWJapg" target="_blank" rel="noopener">面试题29. 顺时针打印矩阵</a></li><li><a href="https://mp.weixin.qq.com/s/lfM-T6m7KPf9OPEC421lcA" target="_blank" rel="noopener">顺时针打印矩阵</a></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>提高GitHub的访问速度(DNS实现)</title>
    <link href="/blog/2020/06/02/%E6%8F%90%E9%AB%98GitHub%E7%9A%84%E8%AE%BF%E9%97%AE%E9%80%9F%E5%BA%A6(DNS%E5%AE%9E%E7%8E%B0)/"/>
    <url>/blog/2020/06/02/%E6%8F%90%E9%AB%98GitHub%E7%9A%84%E8%AE%BF%E9%97%AE%E9%80%9F%E5%BA%A6(DNS%E5%AE%9E%E7%8E%B0)/</url>
    
    <content type="html"><![CDATA[<p>通过修改Hosts，文件路径<code>C:\Windows\System32\drivers\etc\hosts</code></p><blockquote><p>Linux 系统：/etc/hosts<br>Android（安卓）系统：/system/etc/hosts</p></blockquote><p>复制、粘贴：</p><div class="hljs"><pre><code class="hljs bash"><span class="hljs-comment"># GitHub520 Host Start</span>185.199.108.154                                   github.githubassets.com199.232.68.133                                    camo.githubusercontent.com199.232.68.133                                    github.map.fastly.net199.232.69.194                                    github.global.ssl.fastly.net140.82.112.3                                      github.com140.82.114.5                                      api.github.com199.232.68.133                                    raw.githubusercontent.com199.232.68.133                                    favicons.githubusercontent.com199.232.68.133                                    avatars5.githubusercontent.com199.232.68.133                                    avatars4.githubusercontent.com199.232.68.133                                    avatars3.githubusercontent.com199.232.68.133                                    avatars2.githubusercontent.com199.232.68.133                                    avatars1.githubusercontent.com199.232.68.133                                    avatars0.githubusercontent.com<span class="hljs-comment"># GitHub520 Host End</span></code></pre></div><p>一般是立刻生效。<br>没有的话，手动在 CMD 敲入：<code>ipconfig /flushdns</code></p><h1 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h1><p>前往GitHub<a href="https://github.com/melodyjerry/GitHub520" target="_blank" rel="noopener">让你“爱”上 GitHub，解决访问时图裂、加载慢的问题。</a></p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>小技巧</tag>
      
      <tag>Github</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【LeetCode】面试题64. 求1+2+…+n</title>
    <link href="/blog/2020/06/02/%E3%80%90LeetCode%E3%80%91%E9%9D%A2%E8%AF%95%E9%A2%9864.%20%E6%B1%821+2+%E2%80%A6+n/"/>
    <url>/blog/2020/06/02/%E3%80%90LeetCode%E3%80%91%E9%9D%A2%E8%AF%95%E9%A2%9864.%20%E6%B1%821+2+%E2%80%A6+n/</url>
    
    <content type="html"><![CDATA[<p>来自<a href="https://www.jianshu.com/p/62cf4055617d" target="_blank" rel="noopener">《剑指Offer（第二版）》</a></p><h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>求 1+2+…+n ，要求<strong>不能使用<em>乘除法</em>、<code>for</code>、<code>while</code>、<code>if</code>、<code>else</code>、<code>switch</code>、<code>case</code>等关键字及<em>条件判断语句</em>（<code>A?B:C</code>）。</strong></p><p>示例 1：</p><div class="hljs"><pre><code class="hljs angelscript">输入: n = <span class="hljs-number">3</span>输出: <span class="hljs-number">6</span></code></pre></div><p>示例 2：</p><div class="hljs"><pre><code class="hljs angelscript">输入: n = <span class="hljs-number">9</span>输出: <span class="hljs-number">45</span></code></pre></div><p>限制：</p><ul><li>1 &lt;= n &lt;= 10000</li></ul><a id="more"></a><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><h2 id="逻辑-短路-与"><a href="#逻辑-短路-与" class="headerlink" title="逻辑(短路)与"></a>逻辑(短路)与</h2><p>看完标题，发现这是一道<strong>面试题</strong>！！！</p><p>看到第一行的“要求不能使用……”，我人傻了，没错，就是人傻了~~</p><p>想用“<strong>递归</strong>”，但是乘除法不能用、条件判断也不能用🤣🤣🤣</p><p>这要怎么做啊？！</p><p>等等，没说不能用运算符哦！！！</p><p>试试看呗~~</p><p>直接写写源码~~</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>{    <span class="hljs-comment">// int res = 0;</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">sumNums</span><span class="hljs-params">(<span class="hljs-keyword">int</span> n)</span> </span>{        <span class="hljs-comment">// boolean x = n &gt; 1 &amp;&amp; sumNums(n - 1) &gt; 0;</span>        <span class="hljs-keyword">boolean</span> x = n &gt; <span class="hljs-number">1</span> &amp;&amp; (n += sumNums(n - <span class="hljs-number">1</span>)) &gt; <span class="hljs-number">0</span>;        <span class="hljs-comment">// res += n;</span>        <span class="hljs-comment">// return res;</span>        <span class="hljs-keyword">return</span> n;    }}</code></pre></div><p>思路吗？就直接看源码就懂了！！！</p><p>不懂，那就看多几次！！！</p><p><img src="https://img2020.cnblogs.com/blog/2013579/202006/2013579-20200602150703222-270823013.png" srcset="/blog/img/loading.gif" alt=""></p><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>逻辑运算符的短路效应：<br>常见的逻辑运算符有三种，即 “与 <code>&amp;&amp;</code> ”，“或 <code>∣∣</code> ”，“非 <code>!</code> ” ；<br>而其有重要的短路效应，如下所示：</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">if</span>(A &amp;&amp; B)  <span class="hljs-comment">// 若 A 为 false ，则 B 的判断不会执行（即短路），直接判定 A &amp;&amp; B 为 false</span><span class="hljs-keyword">if</span>(A || B) <span class="hljs-comment">// 若 A 为 true ，则 B 的判断不会执行（即短路），直接判定 A || B 为 true</span></code></pre></div><p>本题需要实现 “当 n = 1n=1 时终止递归” 的需求，可通过短路效应实现。</p><div class="hljs"><pre><code class="hljs java">n &gt; <span class="hljs-number">1</span> &amp;&amp; sumNums(n - <span class="hljs-number">1</span>) <span class="hljs-comment">// 当 n = 1 时 n &gt; 1 不成立 ，此时 “短路” ，终止后续递归</span></code></pre></div><h2 id="异常捕获"><a href="#异常捕获" class="headerlink" title="异常捕获"></a>异常捕获</h2><p><img src="https://img2020.cnblogs.com/blog/2013579/202006/2013579-20200602151302946-1679529402.png" srcset="/blog/img/loading.gif" alt=""><br>这个方法会超时，但是确实是可以。</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>{    <span class="hljs-keyword">int</span>[] test=<span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[]{<span class="hljs-number">0</span>};    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">sumNums</span><span class="hljs-params">(<span class="hljs-keyword">int</span> n)</span> </span>{        <span class="hljs-keyword">try</span>{            <span class="hljs-keyword">return</span> test[n];        }<span class="hljs-keyword">catch</span>(Exception e){            <span class="hljs-keyword">return</span> n+sumNums(n-<span class="hljs-number">1</span>);        }    }}</code></pre></div><h2 id="移位运算符"><a href="#移位运算符" class="headerlink" title="移位运算符"></a>移位运算符</h2><p>移位运算符确实可以解，但是好像不是很多人用它写。</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>{    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">sumNums</span><span class="hljs-params">(<span class="hljs-keyword">int</span> n)</span> </span>{        <span class="hljs-keyword">int</span> ans = <span class="hljs-number">0</span>, A = n, B = n + <span class="hljs-number">1</span>;        <span class="hljs-keyword">boolean</span> flag;        flag = ((B &amp; <span class="hljs-number">1</span>) &gt; <span class="hljs-number">0</span>) &amp;&amp; (ans += A) &gt; <span class="hljs-number">0</span>;        A &lt;&lt;= <span class="hljs-number">1</span>;        B &gt;&gt;= <span class="hljs-number">1</span>;        flag = ((B &amp; <span class="hljs-number">1</span>) &gt; <span class="hljs-number">0</span>) &amp;&amp; (ans += A) &gt; <span class="hljs-number">0</span>;        A &lt;&lt;= <span class="hljs-number">1</span>;        B &gt;&gt;= <span class="hljs-number">1</span>;        flag = ((B &amp; <span class="hljs-number">1</span>) &gt; <span class="hljs-number">0</span>) &amp;&amp; (ans += A) &gt; <span class="hljs-number">0</span>;        A &lt;&lt;= <span class="hljs-number">1</span>;        B &gt;&gt;= <span class="hljs-number">1</span>;        flag = ((B &amp; <span class="hljs-number">1</span>) &gt; <span class="hljs-number">0</span>) &amp;&amp; (ans += A) &gt; <span class="hljs-number">0</span>;        A &lt;&lt;= <span class="hljs-number">1</span>;        B &gt;&gt;= <span class="hljs-number">1</span>;        flag = ((B &amp; <span class="hljs-number">1</span>) &gt; <span class="hljs-number">0</span>) &amp;&amp; (ans += A) &gt; <span class="hljs-number">0</span>;        A &lt;&lt;= <span class="hljs-number">1</span>;        B &gt;&gt;= <span class="hljs-number">1</span>;        flag = ((B &amp; <span class="hljs-number">1</span>) &gt; <span class="hljs-number">0</span>) &amp;&amp; (ans += A) &gt; <span class="hljs-number">0</span>;        A &lt;&lt;= <span class="hljs-number">1</span>;        B &gt;&gt;= <span class="hljs-number">1</span>;        flag = ((B &amp; <span class="hljs-number">1</span>) &gt; <span class="hljs-number">0</span>) &amp;&amp; (ans += A) &gt; <span class="hljs-number">0</span>;        A &lt;&lt;= <span class="hljs-number">1</span>;        B &gt;&gt;= <span class="hljs-number">1</span>;        flag = ((B &amp; <span class="hljs-number">1</span>) &gt; <span class="hljs-number">0</span>) &amp;&amp; (ans += A) &gt; <span class="hljs-number">0</span>;        A &lt;&lt;= <span class="hljs-number">1</span>;        B &gt;&gt;= <span class="hljs-number">1</span>;        flag = ((B &amp; <span class="hljs-number">1</span>) &gt; <span class="hljs-number">0</span>) &amp;&amp; (ans += A) &gt; <span class="hljs-number">0</span>;        A &lt;&lt;= <span class="hljs-number">1</span>;        B &gt;&gt;= <span class="hljs-number">1</span>;        flag = ((B &amp; <span class="hljs-number">1</span>) &gt; <span class="hljs-number">0</span>) &amp;&amp; (ans += A) &gt; <span class="hljs-number">0</span>;        A &lt;&lt;= <span class="hljs-number">1</span>;        B &gt;&gt;= <span class="hljs-number">1</span>;        flag = ((B &amp; <span class="hljs-number">1</span>) &gt; <span class="hljs-number">0</span>) &amp;&amp; (ans += A) &gt; <span class="hljs-number">0</span>;        A &lt;&lt;= <span class="hljs-number">1</span>;        B &gt;&gt;= <span class="hljs-number">1</span>;        flag = ((B &amp; <span class="hljs-number">1</span>) &gt; <span class="hljs-number">0</span>) &amp;&amp; (ans += A) &gt; <span class="hljs-number">0</span>;        A &lt;&lt;= <span class="hljs-number">1</span>;        B &gt;&gt;= <span class="hljs-number">1</span>;        flag = ((B &amp; <span class="hljs-number">1</span>) &gt; <span class="hljs-number">0</span>) &amp;&amp; (ans += A) &gt; <span class="hljs-number">0</span>;        A &lt;&lt;= <span class="hljs-number">1</span>;        B &gt;&gt;= <span class="hljs-number">1</span>;        flag = ((B &amp; <span class="hljs-number">1</span>) &gt; <span class="hljs-number">0</span>) &amp;&amp; (ans += A) &gt; <span class="hljs-number">0</span>;        A &lt;&lt;= <span class="hljs-number">1</span>;        B &gt;&gt;= <span class="hljs-number">1</span>;        <span class="hljs-keyword">return</span> ans &gt;&gt; <span class="hljs-number">1</span>;    }}</code></pre></div><p><img src="https://img2020.cnblogs.com/blog/2013579/202006/2013579-20200602150927712-1897130525.png" srcset="/blog/img/loading.gif" alt=""></p><p>我在题解区看到了“你是我见过最变态的题解”，不信就看👇<br>原帖是<a href="https://leetcode-cn.com/problems/qiu-12n-lcof/solution/jie-guo-zui-bian-tai-de-yi-dao-ti-by-qiang_zi/" target="_blank" rel="noopener">解过最变态的一道题</a><br><img src="https://img2020.cnblogs.com/blog/2013579/202006/2013579-20200602151433172-465447551.png" srcset="/blog/img/loading.gif" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用云函数自动完成网易云每日打卡</title>
    <link href="/blog/2020/06/01/%E4%BD%BF%E7%94%A8%E4%BA%91%E5%87%BD%E6%95%B0%E8%87%AA%E5%8A%A8%E5%AE%8C%E6%88%90%E7%BD%91%E6%98%93%E4%BA%91%E6%AF%8F%E6%97%A5%E6%89%93%E5%8D%A1/"/>
    <url>/blog/2020/06/01/%E4%BD%BF%E7%94%A8%E4%BA%91%E5%87%BD%E6%95%B0%E8%87%AA%E5%8A%A8%E5%AE%8C%E6%88%90%E7%BD%91%E6%98%93%E4%BA%91%E6%AF%8F%E6%97%A5%E6%89%93%E5%8D%A1/</url>
    
    <content type="html"><![CDATA[<a id="more"></a><p>搜索云函数<br><img src="https://img2020.cnblogs.com/blog/2013579/202006/2013579-20200611224206930-857695626.png" srcset="/blog/img/loading.gif" alt=""></p><p>新建一个函数 名称随意 环境 PHP 7.2 空白函数 下一步<br><img src="https://img2020.cnblogs.com/blog/2013579/202006/2013579-20200611224213068-41609282.png" srcset="/blog/img/loading.gif" alt=""></p><p>然后会出现这个界面 把 index.php 里面的内容全部删掉<br><img src="https://img2020.cnblogs.com/blog/2013579/202006/2013579-20200611224219289-1849258982.png" srcset="/blog/img/loading.gif" alt=""></p><p>替换为下面这些代码 记得填写手机号和密码</p><p>代码有两个版本，第一个是以前在用的，第二个未测试。</p><p>现在两个版本已经有段实践没有去运行测试了，难以保证可行性。（日后有再补新的API）</p><h1 id="版本①"><a href="#版本①" class="headerlink" title="版本①"></a>版本①</h1><div class="hljs"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span>$localurl = <span class="hljs-string">"http://neteasecloudmusicapi.zhaoboy.com"</span>;$username = <span class="hljs-string">"手机号"</span>;$password = <span class="hljs-string">"密码"</span>;$SCKEY = <span class="hljs-string">""</span>;<span class="hljs-comment">//可选</span><span class="hljs-comment">//访问链接</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getcurl</span><span class="hljs-params">($url,$cookies,$headid)</span></span>{    $ch = curl_init();curl_setopt($ch, CURLOPT_COOKIE, $cookies);    curl_setopt($ch, CURLOPT_URL, $url);    curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="hljs-number">1</span>);    curl_setopt($ch, CURLOPT_HEADER, $headid);    $output = curl_exec($ch);    curl_close($ch);<span class="hljs-keyword">return</span> $output;}<span class="hljs-comment">//获取日推歌单</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">get_rec_res</span><span class="hljs-params">($cookies)</span></span>{<span class="hljs-keyword">global</span> $localurl;$url = $localurl.<span class="hljs-string">"/recommend/resource"</span>;<span class="hljs-keyword">return</span> json_decode(getcurl($url,$cookies,<span class="hljs-number">0</span>),<span class="hljs-keyword">true</span>);}<span class="hljs-comment">//获取歌单中歌曲</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">get_song</span><span class="hljs-params">($cookies,$id)</span></span>{<span class="hljs-keyword">global</span> $localurl;$url = $localurl.<span class="hljs-string">"/playlist/detail?id={$id}"</span>;<span class="hljs-keyword">return</span> json_decode(getcurl($url,$cookies,<span class="hljs-number">0</span>),<span class="hljs-keyword">true</span>);}<span class="hljs-comment">//打卡歌曲</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">daka</span><span class="hljs-params">($cookies,$id)</span></span>{<span class="hljs-keyword">global</span> $localurl;$url = $localurl.<span class="hljs-string">"/scrobble?id={$id}&amp;time=71&amp;timestamp="</span>.rand(<span class="hljs-number">1</span>, <span class="hljs-number">100000</span>);getcurl($url,$cookies,<span class="hljs-number">0</span>);}<span class="hljs-comment">//签到</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">qiandao</span><span class="hljs-params">($cookies)</span></span>{<span class="hljs-keyword">global</span> $localurl;$urland = $localurl.<span class="hljs-string">"/daily_signin"</span>;    $urlpc = $localurl.<span class="hljs-string">"/daily_signin?type=1"</span>;getcurl($urland,$cookies,<span class="hljs-number">0</span>);    getcurl($urlpc,$cookies,<span class="hljs-number">0</span>);}<span class="hljs-comment">//登录</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">login</span><span class="hljs-params">($username,$password)</span></span>{<span class="hljs-keyword">global</span> $localurl;$url = $localurl.<span class="hljs-string">"/login/cellphone?phone={$username}&amp;password={$password}"</span>;$data = getcurl($url,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>);<span class="hljs-keyword">if</span>(preg_match_all(<span class="hljs-string">'/Set-Cookie:(.*);/iU'</span>,$data,$str)==<span class="hljs-number">0</span>)<span class="hljs-keyword">die</span>($data);$cookies = $str[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>].<span class="hljs-string">";"</span>.$str[<span class="hljs-number">1</span>][<span class="hljs-number">1</span>].<span class="hljs-string">";"</span>.$str[<span class="hljs-number">1</span>][<span class="hljs-number">2</span>].<span class="hljs-string">";"</span>;<span class="hljs-keyword">return</span> $cookies;}<span class="hljs-comment">//获取用户id</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">get_id</span><span class="hljs-params">($cookies)</span></span>{<span class="hljs-keyword">global</span> $localurl;$url = $localurl.<span class="hljs-string">"/login/status"</span>;$state = json_decode(getcurl($url,$cookies,<span class="hljs-number">0</span>),<span class="hljs-keyword">true</span>);<span class="hljs-keyword">return</span> $state[<span class="hljs-string">"bindings"</span>][<span class="hljs-number">0</span>][<span class="hljs-string">"userId"</span>];}<span class="hljs-comment">//听歌量</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">get_listenSongs</span><span class="hljs-params">($cookies)</span></span>{<span class="hljs-keyword">global</span> $localurl;$userid = get_id($cookies);$url = $localurl.<span class="hljs-string">"/user/detail?uid={$userid}&amp;timestamp="</span>.rand(<span class="hljs-number">1</span>, <span class="hljs-number">100000</span>);$detail = json_decode(getcurl($url,$cookies,<span class="hljs-number">0</span>),<span class="hljs-keyword">true</span>);<span class="hljs-keyword">return</span> $detail[<span class="hljs-string">"listenSongs"</span>];}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">run</span><span class="hljs-params">($username,$password)</span></span>{<span class="hljs-keyword">global</span> $localurl;    <span class="hljs-keyword">global</span> $SCKEY;$cookies = login($username,$password);qiandao($cookies);$songslist = get_rec_res($cookies);<span class="hljs-keyword">for</span>($k=<span class="hljs-number">0</span>;$k&lt;(count($songslist[<span class="hljs-string">"recommend"</span>]));$k++){$songlist = get_song($cookies,$songslist[<span class="hljs-string">"recommend"</span>][$k][<span class="hljs-string">"id"</span>]);<span class="hljs-keyword">for</span>($j=<span class="hljs-number">0</span>;$j&lt;(count($songlist[<span class="hljs-string">"privileges"</span>]));$j++){daka($cookies,$songlist[<span class="hljs-string">"privileges"</span>][$j][<span class="hljs-string">"id"</span>]);<span class="hljs-keyword">if</span>(($j/<span class="hljs-number">10</span>)==<span class="hljs-number">0</span>){sleep(<span class="hljs-number">1</span>);}<span class="hljs-keyword">if</span>(($j==(count($songlist[<span class="hljs-string">"privileges"</span>])<span class="hljs-number">-1</span>))||$j==<span class="hljs-number">300</span>){                <span class="hljs-keyword">echo</span> <span class="hljs-string">"执行 {$j} 首\n"</span>;                sleep(<span class="hljs-number">10</span>);<span class="hljs-keyword">break</span> <span class="hljs-number">1</span>;}}}<span class="hljs-keyword">if</span>($SCKEY){        $number = get_listenSongs($cookies);        <span class="hljs-keyword">echo</span> $number;        $url = <span class="hljs-string">"https://sc.ftqq.com/"</span>.$SCKEY.<span class="hljs-string">".send?text="</span>.urlencode($username.<span class="hljs-string">" 当前听歌量 "</span>.$number);getcurl($url,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);}}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">main_handler</span><span class="hljs-params">($event, $context)</span> </span>{    <span class="hljs-keyword">global</span> $username;    <span class="hljs-keyword">global</span> $password;    run($username,$password);    <span class="hljs-keyword">return</span> <span class="hljs-string">" 任务完成 "</span>;}<span class="hljs-meta">?&gt;</span></code></pre></div><h1 id="版本②"><a href="#版本②" class="headerlink" title="版本②"></a>版本②</h1><div class="hljs"><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span>$localurl = <span class="hljs-string">"http://wyyapi.aar0n.cn"</span>;$username = <span class="hljs-string">"你的手机号"</span>;$password = <span class="hljs-string">"你的密码"</span>;<span class="hljs-comment">//访问链接</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getcurl</span><span class="hljs-params">($url,$cookies,$headid)</span></span>{$ch = curl_init();  curl_setopt($ch, CURLOPT_COOKIE, $cookies);curl_setopt($ch, CURLOPT_URL, $url);curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="hljs-number">1</span>);curl_setopt($ch, CURLOPT_HEADER, $headid);$output = curl_exec($ch);curl_close($ch);<span class="hljs-keyword">return</span> $output;}<span class="hljs-comment">//获取日推歌单</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">get_rec_res</span><span class="hljs-params">($cookies)</span></span>{<span class="hljs-keyword">global</span> $localurl;$url = $localurl.<span class="hljs-string">"/recommend/resource"</span>;<span class="hljs-keyword">return</span> json_decode(getcurl($url,$cookies,<span class="hljs-number">0</span>),<span class="hljs-keyword">true</span>);}<span class="hljs-comment">//获取歌单中歌曲</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">get_song</span><span class="hljs-params">($cookies,$id)</span></span>{<span class="hljs-keyword">global</span> $localurl;$url = $localurl.<span class="hljs-string">"/playlist/detail?id={$id}"</span>;<span class="hljs-keyword">return</span> json_decode(getcurl($url,$cookies,<span class="hljs-number">0</span>),<span class="hljs-keyword">true</span>);}<span class="hljs-comment">//打卡歌曲</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">daka</span><span class="hljs-params">($cookies,$id)</span></span>{<span class="hljs-keyword">global</span> $localurl;$url = $localurl.<span class="hljs-string">"/scrobble?id={$id}&amp;time=71&amp;timestamp="</span>.rand(<span class="hljs-number">1</span>, <span class="hljs-number">100000</span>);getcurl($url,$cookies,<span class="hljs-number">0</span>);}<span class="hljs-comment">//签到</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">qiandao</span><span class="hljs-params">($cookies)</span></span>{<span class="hljs-keyword">global</span> $localurl;$urland = $localurl.<span class="hljs-string">"/daily_signin"</span>;$urlpc = $localurl.<span class="hljs-string">"/daily_signin?type=1"</span>;getcurl($urland,$cookies,<span class="hljs-number">0</span>);getcurl($urlpc,$cookies,<span class="hljs-number">0</span>);}<span class="hljs-comment">//登录</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">login</span><span class="hljs-params">($username,$password)</span></span>{<span class="hljs-keyword">global</span> $localurl;$url = $localurl.<span class="hljs-string">"/login/cellphone?phone={$username}&amp;password={$password}"</span>;$data = getcurl($url,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>);<span class="hljs-keyword">if</span>(preg_match_all(<span class="hljs-string">'/Set-Cookie:(.*);/iU'</span>,$data,$str)==<span class="hljs-number">0</span>)<span class="hljs-keyword">die</span>($data);$cookies = $str[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>].<span class="hljs-string">";"</span>.$str[<span class="hljs-number">1</span>][<span class="hljs-number">1</span>].<span class="hljs-string">";"</span>.$str[<span class="hljs-number">1</span>][<span class="hljs-number">2</span>].<span class="hljs-string">";"</span>;<span class="hljs-keyword">return</span> $cookies;}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">run</span><span class="hljs-params">($username,$password)</span></span>{<span class="hljs-keyword">global</span> $localurl;$cookies = login($username,$password);qiandao($cookies);$songslist = get_rec_res($cookies);<span class="hljs-keyword">for</span>($k=<span class="hljs-number">0</span>;$k&lt;(count($songslist[<span class="hljs-string">"recommend"</span>]));$k++){$songlist = get_song($cookies,$songslist[<span class="hljs-string">"recommend"</span>][$k][<span class="hljs-string">"id"</span>]);<span class="hljs-keyword">for</span>($j=<span class="hljs-number">0</span>;$j&lt;(count($songlist[<span class="hljs-string">"privileges"</span>]));$j++){daka($cookies,$songlist[<span class="hljs-string">"privileges"</span>][$j][<span class="hljs-string">"id"</span>]);<span class="hljs-keyword">if</span>(($j/<span class="hljs-number">10</span>)==<span class="hljs-number">0</span>){sleep(<span class="hljs-number">1</span>);}<span class="hljs-keyword">if</span>(($j==(count($songlist[<span class="hljs-string">"privileges"</span>])<span class="hljs-number">-1</span>))||$j==<span class="hljs-number">300</span>){<span class="hljs-keyword">echo</span> <span class="hljs-string">"执行 {$j} 首\n"</span>;sleep(<span class="hljs-number">10</span>);<span class="hljs-keyword">break</span> <span class="hljs-number">1</span>;}}}}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">main_handler</span><span class="hljs-params">($event, $context)</span> </span>{<span class="hljs-keyword">global</span> $username;<span class="hljs-keyword">global</span> $password;run($username,$password);<span class="hljs-keyword">return</span> <span class="hljs-string">"ok"</span>; }<span class="hljs-meta">?&gt;</span></code></pre></div><p>记得修改手机号和密码哦～<br><img src="https://img2020.cnblogs.com/blog/2013579/202006/2013579-20200611224557622-1878214118.png" srcset="/blog/img/loading.gif" alt=""></p><p>点击编辑 超时时间 改为900 点击保存<br><img src="https://img2020.cnblogs.com/blog/2013579/202006/2013579-20200611224604699-862559156.png" srcset="/blog/img/loading.gif" alt=""></p><p>找到触发方式 添加触发方式<br><img src="https://img2020.cnblogs.com/blog/2013579/202006/2013579-20200611224610131-418280037.png" srcset="/blog/img/loading.gif" alt=""></p><p>定时触发 corn 表达式  每天八点自动打卡</p><div class="hljs"><pre><code class="hljs basic"><span class="hljs-symbol">0 </span><span class="hljs-number">0</span> <span class="hljs-number">8</span> */<span class="hljs-number">1</span> * * *</code></pre></div><p><img src="https://img2020.cnblogs.com/blog/2013579/202006/2013579-20200611224639901-265684028.png" srcset="/blog/img/loading.gif" alt=""></p><p>点击保存 这样就可以了  就可以享受每天纯自动打卡了 美滋滋啊<br><img src="https://img2020.cnblogs.com/blog/2013579/202006/2013579-20200611224645798-221117936.png" srcset="/blog/img/loading.gif" alt=""></p><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>你过你对它感兴趣 还可以去研究研究其他的 API<br>他是个开源项目<br>地址：<a href="https://binaryify.github.io/NeteaseCloudMusicApi/#/" target="_blank" rel="noopener">https://binaryify.github.io/NeteaseCloudMusicApi/#/</a><br><img src="https://img2020.cnblogs.com/blog/2013579/202006/2013579-20200611224907876-862017044.png" srcset="/blog/img/loading.gif" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>小技巧</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【LeetCode】1431. 拥有最多糖果的孩子</title>
    <link href="/blog/2020/06/01/%E3%80%90LeetCode%E3%80%911431.%20%E6%8B%A5%E6%9C%89%E6%9C%80%E5%A4%9A%E7%B3%96%E6%9E%9C%E7%9A%84%E5%AD%A9%E5%AD%90/"/>
    <url>/blog/2020/06/01/%E3%80%90LeetCode%E3%80%911431.%20%E6%8B%A5%E6%9C%89%E6%9C%80%E5%A4%9A%E7%B3%96%E6%9E%9C%E7%9A%84%E5%AD%A9%E5%AD%90/</url>
    
    <content type="html"><![CDATA[<p>首先祝Jerry生日快乐！<br><img src="https://img2020.cnblogs.com/blog/2013579/202006/2013579-20200601144625133-1492316422.png" srcset="/blog/img/loading.gif" alt=""></p><p>今天这个打卡题是关于“糖果”的，恰好六一儿童节。<br><img src="https://img2020.cnblogs.com/blog/2013579/202006/2013579-20200601144837678-528807032.png" srcset="/blog/img/loading.gif" alt=""></p><h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>给你一个数组 <code>candies</code> 和一个整数 <code>extraCandies</code> ，其中 <code>candies[i]</code> 代表第 <code>i</code> 个孩子拥有的糖果数目。</p><p>对每一个孩子，检查是否存在一种方案，将额外的 <code>extraCandies</code> 个糖果分配给孩子们之后，此孩子有 最多 的糖果。</p><p><strong>注意，允许有多个孩子同时拥有 最多 的糖果数目。</strong></p><p>示例 1：</p><div class="hljs"><pre><code class="hljs angelscript">输入：candies = [<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">1</span>,<span class="hljs-number">3</span>], extraCandies = <span class="hljs-number">3</span>输出：[<span class="hljs-literal">true</span>,<span class="hljs-literal">true</span>,<span class="hljs-literal">true</span>,<span class="hljs-literal">false</span>,<span class="hljs-literal">true</span>] 解释：孩子 <span class="hljs-number">1</span> 有 <span class="hljs-number">2</span> 个糖果，如果他得到所有额外的糖果（<span class="hljs-number">3</span>个），那么他总共有 <span class="hljs-number">5</span> 个糖果，他将成为拥有最多糖果的孩子。孩子 <span class="hljs-number">2</span> 有 <span class="hljs-number">3</span> 个糖果，如果他得到至少 <span class="hljs-number">2</span> 个额外糖果，那么他将成为拥有最多糖果的孩子。孩子 <span class="hljs-number">3</span> 有 <span class="hljs-number">5</span> 个糖果，他已经是拥有最多糖果的孩子。孩子 <span class="hljs-number">4</span> 有 <span class="hljs-number">1</span> 个糖果，即使他得到所有额外的糖果，他也只有 <span class="hljs-number">4</span> 个糖果，无法成为拥有糖果最多的孩子。孩子 <span class="hljs-number">5</span> 有 <span class="hljs-number">3</span> 个糖果，如果他得到至少 <span class="hljs-number">2</span> 个额外糖果，那么他将成为拥有最多糖果的孩子。</code></pre></div><p>示例 2：</p><div class="hljs"><pre><code class="hljs angelscript">输入：candies = [<span class="hljs-number">4</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>], extraCandies = <span class="hljs-number">1</span>输出：[<span class="hljs-literal">true</span>,<span class="hljs-literal">false</span>,<span class="hljs-literal">false</span>,<span class="hljs-literal">false</span>,<span class="hljs-literal">false</span>] 解释：只有 <span class="hljs-number">1</span> 个额外糖果，所以不管额外糖果给谁，只有孩子 <span class="hljs-number">1</span> 可以成为拥有糖果最多的孩子。</code></pre></div><p>示例 3：</p><div class="hljs"><pre><code class="hljs angelscript">输入：candies = [<span class="hljs-number">12</span>,<span class="hljs-number">1</span>,<span class="hljs-number">12</span>], extraCandies = <span class="hljs-number">10</span>输出：[<span class="hljs-literal">true</span>,<span class="hljs-literal">false</span>,<span class="hljs-literal">true</span>]</code></pre></div><p>提示：</p><ul><li>2 &lt;= candies.length &lt;= 100</li><li>1 &lt;= candies[i] &lt;= 100</li><li>1 &lt;= extraCandies &lt;= 50</li></ul><a id="more"></a><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>因为题目有这个关键信息“允许有多个孩子同时拥有 最多 的糖果数目”，这样直接减少了很多麻烦。</p><p>题解就“<strong>暴力枚举</strong>”，两个步骤，两次数组遍历：</p><ol><li><p>找到数组中最大的元素</p></li><li><p>判断每个元素加上<code>extraCandies</code>能否达到最大值</p></li></ol><p>直接上源码：</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>{    <span class="hljs-function"><span class="hljs-keyword">public</span> List&lt;Boolean&gt; <span class="hljs-title">kidsWithCandies</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] candies, <span class="hljs-keyword">int</span> extraCandies)</span> </span>{        List&lt;Boolean&gt; ans = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();        <span class="hljs-comment">// 定义 max 记录数组的最大值，初始化为 0 </span>        <span class="hljs-keyword">int</span> max = <span class="hljs-number">0</span>;        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> c : candies) { max = Math.max(max, c); }        <span class="hljs-comment">// 依次遍历数组，判断元素加上额外糖果大于等于最大值则可以符合条件，否则不可以</span>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> c : candies) { ans.add(c + extraCandies &gt;= max); }        <span class="hljs-keyword">return</span> ans;    }}</code></pre></div><h1 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h1><p><img src="https://img2020.cnblogs.com/blog/2013579/202006/2013579-20200601145836414-510948292.png" srcset="/blog/img/loading.gif" alt=""></p><h1 id="题后感想"><a href="#题后感想" class="headerlink" title="题后感想"></a>题后感想</h1><p>五月已逝，六月努力的💪</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java队列的部分调用方法</title>
    <link href="/blog/2020/05/31/Java%E9%98%9F%E5%88%97%E7%9A%84%E9%83%A8%E5%88%86%E8%B0%83%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <url>/blog/2020/05/31/Java%E9%98%9F%E5%88%97%E7%9A%84%E9%83%A8%E5%88%86%E8%B0%83%E7%94%A8%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="Java队列的部分调用方法"><a href="#Java队列的部分调用方法" class="headerlink" title="Java队列的部分调用方法"></a>Java队列的部分调用方法</h1><table><thead><tr><th>方法</th><th>作用</th><th>说明</th></tr></thead><tbody><tr><td>add()</td><td>增加一个元素</td><td>如果队列已满，则抛出一个IIIegaISlabEepeplian异常</td></tr><tr><td>remove()</td><td>移除并返回队列头部的元素</td><td>如果队列为空，则抛出一个NoSuchElementException异常</td></tr><tr><td>element()</td><td>返回队列头部的元素</td><td>如果队列为空，则抛出一个NoSuchElementException异常</td></tr><tr><td>offer()</td><td>添加一个元素并返回true</td><td>如果队列已满，则返回false</td></tr><tr><td>poll()</td><td>移除并返问队列头部的元素</td><td>如果队列为空，则返回null</td></tr><tr><td>peek()</td><td>返回队列头部的元素</td><td>如果队列为空，则返回null</td></tr><tr><td>put()</td><td>添加一个元素</td><td>如果队列满，则阻塞</td></tr><tr><td>take()</td><td>移除并返回队列头部的元素</td><td>如果队列为空，则阻塞</td></tr></tbody></table><blockquote><p>关于Java队列更多详见：<a href="https://www.cnblogs.com/lemon-flm/p/7877898.html" target="_blank" rel="noopener">java队列——queue详细分析</a></p></blockquote><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【LeetCode】101. 对称二叉树</title>
    <link href="/blog/2020/05/31/%E3%80%90LeetCode%E3%80%91101.%20%E5%AF%B9%E7%A7%B0%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    <url>/blog/2020/05/31/%E3%80%90LeetCode%E3%80%91101.%20%E5%AF%B9%E7%A7%B0%E4%BA%8C%E5%8F%89%E6%A0%91/</url>
    
    <content type="html"><![CDATA[<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>给定一个二叉树，检查它是否是镜像对称的。</p><p>例如，二叉树 <code>[1,2,2,3,4,4,3]</code> 是对称的。</p><div class="hljs"><pre><code class="hljs angelscript">    <span class="hljs-number">1</span>   / \  <span class="hljs-number">2</span>   <span class="hljs-number">2</span> / \ / \<span class="hljs-number">3</span>  <span class="hljs-number">4</span> <span class="hljs-number">4</span>  <span class="hljs-number">3</span></code></pre></div><p>但是下面这个 <code>[1,2,2,null,3,null,3]</code> 则不是镜像对称的:</p><div class="hljs"><pre><code class="hljs angelscript">  <span class="hljs-number">1</span> / \<span class="hljs-number">2</span>   <span class="hljs-number">2</span> \   \ <span class="hljs-number">3</span>    <span class="hljs-number">3</span></code></pre></div><p>进阶：</p><ul><li>你可以运用<strong>递归</strong>和<strong>迭代</strong>两种方法解决这个问题吗？</li></ul><a id="more"></a><h1 id="题解思路"><a href="#题解思路" class="headerlink" title="题解思路"></a>题解思路</h1><p>阅读完题目，脑子里先是想到了<strong>栈</strong>这种数据结构。</p><p><strong>栈的一个特性：先进后出、后进先出。</strong></p><p>根据这个特性，很容易地搞定递归实现。</p><p>但是迭代地话，用队列更容易理解。</p><p><strong>队列的一个特性：先进先出，后进后出。</strong></p><p>这题比较容易，直接看代码和注释即可。</p><h2 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h2><div class="hljs"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>{    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">isSymmetric</span><span class="hljs-params">(TreeNode root)</span> </span>{        <span class="hljs-comment">// 两树都为null，肯定对称</span>        <span class="hljs-keyword">if</span> (root == <span class="hljs-keyword">null</span>) { <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>; }        <span class="hljs-comment">// 比较 左子树root.left 与 右子树root.right 这两棵子树是否对称</span>        <span class="hljs-keyword">return</span> compareTree(root.left, root.right);    }    <span class="hljs-comment">/* 递归实现 */</span>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">compareTree</span><span class="hljs-params">(TreeNode node1, TreeNode node2)</span> </span>{        <span class="hljs-comment">// 首先比较 node1 与 node2 这两个节点的值是否相等</span>        <span class="hljs-comment">// 两节点均同时为null时</span>        <span class="hljs-keyword">if</span> (node1 == <span class="hljs-keyword">null</span> &amp;&amp; node2 == <span class="hljs-keyword">null</span>) {            <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;        }        <span class="hljs-comment">// 最多一个节点为null时，当然还得考虑“值不空但不同”的情况</span>        <span class="hljs-keyword">if</span> (node1 == <span class="hljs-keyword">null</span> || node2 == <span class="hljs-keyword">null</span> || node1.val != node2.val) { <span class="hljs-comment">// TreeNode.val返回的是该节点的值</span>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">false</span>;        }        <span class="hljs-comment">// 再递归比较 node1 的左子树与 node2 的右子树是否对称，node1 的右子树与 node2 的左子树是否对称</span>        <span class="hljs-keyword">return</span> compareTree(node1.left, node2.right) &amp;&amp; compareTree(node1.right, node2.left);    }}</code></pre></div><p><img src="https://img2020.cnblogs.com/blog/2013579/202005/2013579-20200531143714684-1192750148.png" srcset="/blog/img/loading.gif" alt=""></p><h2 id="迭代"><a href="#迭代" class="headerlink" title="迭代"></a>迭代</h2><div class="hljs"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>{    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">isSymmetric</span><span class="hljs-params">(TreeNode root)</span> </span>{        <span class="hljs-comment">// 两树都为null，肯定对称</span>        <span class="hljs-keyword">if</span> (root == <span class="hljs-keyword">null</span>) { <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>; }                Queue&lt;TreeNode&gt; queue = <span class="hljs-keyword">new</span> LinkedList&lt;&gt;();        queue.add(root.left);        queue.add(root.right);        <span class="hljs-keyword">while</span> (!queue.isEmpty()) {            <span class="hljs-comment">// 每次出队两个节点 node1 和 node2</span>            TreeNode node1 = queue.poll();            TreeNode node2 = queue.poll();                        <span class="hljs-comment">// 首先比较 node1 与 node2 这两个节点的值是否相等</span>            <span class="hljs-keyword">if</span> (node1 == <span class="hljs-keyword">null</span> &amp;&amp; node2 == <span class="hljs-keyword">null</span>) {                <span class="hljs-keyword">continue</span>;            }            <span class="hljs-comment">// 最多一个节点为null时，当然还得考虑“值不空但不同”的情况</span>            <span class="hljs-keyword">if</span> (node1 == <span class="hljs-keyword">null</span> || node2 == <span class="hljs-keyword">null</span> || node1.val != node2.val) { <span class="hljs-comment">// TreeNode.val返回的是该节点的值</span>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">false</span>;            }            <span class="hljs-comment">// 再将 node1 的左节点与 node2 的右节点一起入队（以便两节点一起出队，进行比较）</span>            queue.add(node1.left);            queue.add(node2.right);            <span class="hljs-comment">// 再将 node1 的右节点与 node2 的左节点一起入队（以便两节点一起出队，进行比较）</span>            queue.add(node1.right);            queue.add(node2.left);        }        <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;    }}</code></pre></div><p><img src="https://img2020.cnblogs.com/blog/2013579/202005/2013579-20200531151524741-617752733.png" srcset="/blog/img/loading.gif" alt=""></p><h1 id="复杂度分析"><a href="#复杂度分析" class="headerlink" title="复杂度分析"></a>复杂度分析</h1><p>无论是递归，还是迭代，</p><p><strong>时间复杂度均为：O(n)</strong></p><p><strong>空间复杂度均为：O(n)</strong></p><h1 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h1><p><a href="https://www.cnblogs.com/melodyjerry/p/13018920.html" target="_blank" rel="noopener">Java 队列的<code>add()</code>方法和<code>offer()</code>方法的区别</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java 队列的add()方法和offer()方法的区别</title>
    <link href="/blog/2020/05/31/Java%20%E9%98%9F%E5%88%97%E7%9A%84add()%E6%96%B9%E6%B3%95%E5%92%8Coffer()%E6%96%B9%E6%B3%95%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <url>/blog/2020/05/31/Java%20%E9%98%9F%E5%88%97%E7%9A%84add()%E6%96%B9%E6%B3%95%E5%92%8Coffer()%E6%96%B9%E6%B3%95%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
    
    <content type="html"><![CDATA[<p>查阅API文档，找到</p><p><code>add()</code>：增加一个元素。如果队列已满，则抛出一个<code>IIIegaISlabEepeplian</code>异常</p><div class="hljs"><pre><code class="hljs oxygene">Inserts the specified element at the tail <span class="hljs-keyword">of</span> this queue. <span class="hljs-keyword">As</span> the queue <span class="hljs-keyword">is</span> unbounded, this <span class="hljs-function"><span class="hljs-keyword">method</span> <span class="hljs-title">will</span> <span class="hljs-title">never</span> <span class="hljs-title">throw</span> <span class="hljs-title">IllegalStateException</span> <span class="hljs-title">or</span> <span class="hljs-title">return</span> <span class="hljs-title">false</span>.</span></code></pre></div><p><code>offer()</code>：添加一个元素并返回<code>true</code>。如果队列已满，则返回<code>false</code></p><div class="hljs"><pre><code class="hljs oxygene">Inserts the specified element at the tail <span class="hljs-keyword">of</span> this queue. <span class="hljs-keyword">As</span> the queue <span class="hljs-keyword">is</span> unbounded, this <span class="hljs-function"><span class="hljs-keyword">method</span> <span class="hljs-title">will</span> <span class="hljs-title">never</span> <span class="hljs-title">return</span> <span class="hljs-title">false</span>.</span></code></pre></div><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><ul><li>两者都是往队列尾部插入元素</li><li>当超出队列界限的时候，<code>add()</code>方法是<strong>抛出异常让你处理</strong>，而<code>offer()</code>方法是<strong>直接返回false</strong></li></ul><h1 id="Java队列的部分调用方法"><a href="#Java队列的部分调用方法" class="headerlink" title="Java队列的部分调用方法"></a>Java队列的部分调用方法</h1><table><thead><tr><th>方法</th><th>作用</th><th>说明</th></tr></thead><tbody><tr><td>add()</td><td>增加一个元素</td><td>如果队列已满，则抛出一个IIIegaISlabEepeplian异常</td></tr><tr><td>remove()</td><td>移除并返回队列头部的元素</td><td>如果队列为空，则抛出一个NoSuchElementException异常</td></tr><tr><td>element()</td><td>返回队列头部的元素</td><td>如果队列为空，则抛出一个NoSuchElementException异常</td></tr><tr><td>offer()</td><td>添加一个元素并返回true</td><td>如果队列已满，则返回false</td></tr><tr><td>poll()</td><td>移除并返问队列头部的元素</td><td>如果队列为空，则返回null</td></tr><tr><td>peek()</td><td>返回队列头部的元素</td><td>如果队列为空，则返回null</td></tr><tr><td>put()</td><td>添加一个元素</td><td>如果队列满，则阻塞</td></tr><tr><td>take()</td><td>移除并返回队列头部的元素</td><td>如果队列为空，则阻塞</td></tr></tbody></table><blockquote><p>关于Java队列更多详见：<a href="https://www.cnblogs.com/lemon-flm/p/7877898.html" target="_blank" rel="noopener">java队列——queue详细分析</a></p></blockquote><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>运行IDEA时报错Internal error</title>
    <link href="/blog/2020/05/30/%E8%BF%90%E8%A1%8CIDEA%E6%97%B6%E6%8A%A5%E9%94%99Internal%20error/"/>
    <url>/blog/2020/05/30/%E8%BF%90%E8%A1%8CIDEA%E6%97%B6%E6%8A%A5%E9%94%99Internal%20error/</url>
    
    <content type="html"><![CDATA[<p>运行IDEA时，报错<code>Internal error</code><br><img src="https://img2020.cnblogs.com/blog/2013579/202005/2013579-20200530231346564-772115819.png" srcset="/blog/img/loading.gif" alt=""></p><p>下面有两种解决办法，优先选择第①种，不行再第②种。<br>我的电脑试了前面两种都不行，所以有了第③种。</p><a id="more"></a><h1 id="解决①"><a href="#解决①" class="headerlink" title="解决①"></a>解决①</h1><p>找到intellij的配置目录，windows系统一般是在用户目录下，<br>即<code>C:\Users\username\.IntelliJIdea2019.3</code>，<br>重命名或删除这个文件夹，<br>再次打开intellij时会提示是否加载以前的配置，<br>选择一个较早的版本或者不加载，<br>就能正常打开软件了。<br><img src="https://img2020.cnblogs.com/blog/2013579/202005/2013579-20200530232054977-382075668.png" srcset="/blog/img/loading.gif" alt=""></p><h1 id="解决②"><a href="#解决②" class="headerlink" title="解决②"></a>解决②</h1><ol><li>管理员模式的命令行cmd/PowerShell</li><li>输入<code>netsh winsock reset</code></li><li>重启电脑<br><img src="https://img2020.cnblogs.com/blog/2013579/202005/2013579-20200530231605959-1735280540.png" srcset="/blog/img/loading.gif" alt=""></li></ol><h1 id="解决③"><a href="#解决③" class="headerlink" title="解决③"></a>解决③</h1><p>禁用<code>Hyper-V</code>和<code>Windows 沙盒</code>即可。<br><img src="https://img2020.cnblogs.com/blog/2013579/202005/2013579-20200531102649433-1032882284.png" srcset="/blog/img/loading.gif" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>IDEA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【LeetCode】198. 打家劫舍</title>
    <link href="/blog/2020/05/29/%E3%80%90LeetCode%E3%80%91198.%20%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D/"/>
    <url>/blog/2020/05/29/%E3%80%90LeetCode%E3%80%91198.%20%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D/</url>
    
    <content type="html"><![CDATA[<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>你是一个专业的小偷，计划偷窃沿街的房屋。每间房内都藏有一定的现金，影响你偷窃的唯一制约因素就是<strong>相邻的房屋装有相互连通的防盗系统，如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警。</strong></p><p>给定一个代表每个房屋存放金额的非负整数数组，计算你 不触动警报装置的情况下 ，一夜之内能够偷窃到的最高金额。</p><p>示例 1:</p><div class="hljs"><pre><code class="hljs angelscript">输入: [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>]输出: <span class="hljs-number">4</span>解释: 偷窃 <span class="hljs-number">1</span> 号房屋 (金额 = <span class="hljs-number">1</span>) ，然后偷窃 <span class="hljs-number">3</span> 号房屋 (金额 = <span class="hljs-number">3</span>)。     偷窃到的最高金额 = <span class="hljs-number">1</span> + <span class="hljs-number">3</span> = <span class="hljs-number">4</span> 。</code></pre></div><p>示例 2:</p><div class="hljs"><pre><code class="hljs angelscript">输入: [<span class="hljs-number">2</span>,<span class="hljs-number">7</span>,<span class="hljs-number">9</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>]输出: <span class="hljs-number">12</span>解释: 偷窃 <span class="hljs-number">1</span> 号房屋 (金额 = <span class="hljs-number">2</span>), 偷窃 <span class="hljs-number">3</span> 号房屋 (金额 = <span class="hljs-number">9</span>)，接着偷窃 <span class="hljs-number">5</span> 号房屋 (金额 = <span class="hljs-number">1</span>)。     偷窃到的最高金额 = <span class="hljs-number">2</span> + <span class="hljs-number">9</span> + <span class="hljs-number">1</span> = <span class="hljs-number">12</span> 。</code></pre></div><a id="more"></a><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><h2 id="优化奇偶求和"><a href="#优化奇偶求和" class="headerlink" title="优化奇偶求和"></a>优化奇偶求和</h2><p>阅读完题目，刚冒出的想法就是“这不就是奇偶数求和吗？”<br>但是第一次提交代码后，提示报错，来看看用例：</p><div class="hljs"><pre><code class="hljs angelscript">输入:[<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>]输出<span class="hljs-number">3</span>预期结果<span class="hljs-number">4</span></code></pre></div><p>为什么会这样呢？<br>因为不是<strong>最优解</strong>。</p><p>以为是奇偶数求和，但是这个用例中，最大值是下标0、3的求和。</p><p>因此必须优化一下，每次奇偶数求和时，除了奇数/偶数下标的求和，还要更新另一边偶数/奇数的求和的值。</p><p>多说不好理解，来看看这个对比：</p><div class="hljs"><pre><code class="hljs angelscript">indexx  <span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span>nums   [<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>] → <span class="hljs-number">4</span>优化前：sumEven <span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">3</span>sumOdd  <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span>优化后：sumEven <span class="hljs-number">0</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">4</span>sumOdd  <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span></code></pre></div><p>这一比较，应该就好理解了。</p><p>以下为Java代码：</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>{    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">rob</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] nums)</span> </span>{        <span class="hljs-keyword">int</span> sumEven = <span class="hljs-number">0</span>; <span class="hljs-comment">// 偶数 </span>        <span class="hljs-keyword">int</span> sumOdd = <span class="hljs-number">0</span>;  <span class="hljs-comment">// 奇数</span>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; nums.length; i++) {            <span class="hljs-keyword">if</span>(i % <span class="hljs-number">2</span> ==<span class="hljs-number">0</span>) {                sumEven += nums[i];                <span class="hljs-comment">// 不是纯粹的偶数和</span>                sumEven = Math.max(sumOdd, sumEven);            } <span class="hljs-keyword">else</span> {                sumOdd += nums[i];                <span class="hljs-comment">// 也不是纯粹的奇数和</span>                sumOdd = Math.max(sumOdd, sumEven);            }        }        <span class="hljs-keyword">return</span> Math.max(sumEven, sumOdd);    }}</code></pre></div><p>提交后：<br><img src="https://img2020.cnblogs.com/blog/2013579/202005/2013579-20200529160306290-829235992.png" srcset="/blog/img/loading.gif" alt=""></p><h2 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h2><p>成功解决后，突然想到“能不能用别的办法？比如dp动态规划？”</p><p>我试着找了动态规划方程，还真找到了。</p><p>动态规划方程：<code>dp[n] = max(dp[n-2] + nums[n], dp[n-1])</code></p><p>使用上边的用例<code>[2,1,1,2] → 4</code>来验证</p><div class="hljs"><pre><code class="hljs angelscript">n 为数组 nums 的长度初始：dp[<span class="hljs-number">0</span>] = <span class="hljs-number">0</span> <span class="hljs-comment">//必须初始化为0</span>dp[<span class="hljs-number">1</span>] = nums[<span class="hljs-number">0</span>] = <span class="hljs-number">2</span> <span class="hljs-comment">//初始为nums[0]</span>n&gt;=<span class="hljs-number">2</span>时：dp[<span class="hljs-number">2</span>] = max(dp[<span class="hljs-number">0</span>]+nums[<span class="hljs-number">1</span>], dp[<span class="hljs-number">1</span>]) = max(<span class="hljs-number">0</span>+<span class="hljs-number">1</span>, <span class="hljs-number">2</span>) = <span class="hljs-number">2</span>dp[<span class="hljs-number">3</span>] = max(dp[<span class="hljs-number">1</span>]+nums[<span class="hljs-number">2</span>], dp[<span class="hljs-number">2</span>]) = max(<span class="hljs-number">2</span>+<span class="hljs-number">1</span>, <span class="hljs-number">2</span>) = <span class="hljs-number">3</span>dp[<span class="hljs-number">4</span>] = max(dp[<span class="hljs-number">2</span>]+nums[<span class="hljs-number">3</span>], dp[<span class="hljs-number">3</span>]) = max(<span class="hljs-number">2</span>+<span class="hljs-number">2</span>, <span class="hljs-number">3</span>) = <span class="hljs-number">4</span></code></pre></div><p>代码：</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>{    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">rob</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] nums)</span> </span>{        <span class="hljs-keyword">int</span> len = nums.length;        <span class="hljs-keyword">if</span>(len == <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;        <span class="hljs-keyword">int</span>[] dp = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[len + <span class="hljs-number">1</span>]; <span class="hljs-comment">//dp[len] 存储最终结果</span>        dp[<span class="hljs-number">0</span>] = <span class="hljs-number">0</span>; <span class="hljs-comment">//必须初始化为0</span>        dp[<span class="hljs-number">1</span>] = nums[<span class="hljs-number">0</span>]; <span class="hljs-comment">//初始为数组的第一个元素</span>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">2</span>; i &lt;= len; i++) {            <span class="hljs-comment">//动态规划方程</span>            dp[i] = Math.max(dp[i-<span class="hljs-number">1</span>], dp[i-<span class="hljs-number">2</span>] + nums[i-<span class="hljs-number">1</span>]);        }        <span class="hljs-keyword">return</span> dp[len];    }}</code></pre></div><p>提交：<br><img src="https://img2020.cnblogs.com/blog/2013579/202005/2013579-20200529163908973-1319090454.png" srcset="/blog/img/loading.gif" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【LeetCode】198. 打家劫舍</title>
    <link href="/blog/2020/05/29/%E8%A7%A3%E5%86%B3Win10%E5%BC%80%E5%A7%8B%E8%8F%9C%E5%8D%95%E5%92%8C%E6%90%9C%E7%B4%A2%E6%A1%86%E6%8C%A1%E9%87%8D%E5%8F%A0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <url>/blog/2020/05/29/%E8%A7%A3%E5%86%B3Win10%E5%BC%80%E5%A7%8B%E8%8F%9C%E5%8D%95%E5%92%8C%E6%90%9C%E7%B4%A2%E6%A1%86%E6%8C%A1%E9%87%8D%E5%8F%A0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>你是一个专业的小偷，计划偷窃沿街的房屋。每间房内都藏有一定的现金，影响你偷窃的唯一制约因素就是<strong>相邻的房屋装有相互连通的防盗系统，如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警。</strong></p><p>给定一个代表每个房屋存放金额的非负整数数组，计算你 不触动警报装置的情况下 ，一夜之内能够偷窃到的最高金额。</p><p>示例 1:</p><div class="hljs"><pre><code class="hljs angelscript">输入: [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>]输出: <span class="hljs-number">4</span>解释: 偷窃 <span class="hljs-number">1</span> 号房屋 (金额 = <span class="hljs-number">1</span>) ，然后偷窃 <span class="hljs-number">3</span> 号房屋 (金额 = <span class="hljs-number">3</span>)。     偷窃到的最高金额 = <span class="hljs-number">1</span> + <span class="hljs-number">3</span> = <span class="hljs-number">4</span> 。</code></pre></div><p>示例 2:</p><div class="hljs"><pre><code class="hljs angelscript">输入: [<span class="hljs-number">2</span>,<span class="hljs-number">7</span>,<span class="hljs-number">9</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>]输出: <span class="hljs-number">12</span>解释: 偷窃 <span class="hljs-number">1</span> 号房屋 (金额 = <span class="hljs-number">2</span>), 偷窃 <span class="hljs-number">3</span> 号房屋 (金额 = <span class="hljs-number">9</span>)，接着偷窃 <span class="hljs-number">5</span> 号房屋 (金额 = <span class="hljs-number">1</span>)。     偷窃到的最高金额 = <span class="hljs-number">2</span> + <span class="hljs-number">9</span> + <span class="hljs-number">1</span> = <span class="hljs-number">12</span> 。</code></pre></div><a id="more"></a><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><h2 id="优化奇偶求和"><a href="#优化奇偶求和" class="headerlink" title="优化奇偶求和"></a>优化奇偶求和</h2><p>阅读完题目，刚冒出的想法就是“这不就是奇偶数求和吗？”<br>但是第一次提交代码后，提示报错，来看看用例：</p><div class="hljs"><pre><code class="hljs angelscript">输入:[<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>]输出<span class="hljs-number">3</span>预期结果<span class="hljs-number">4</span></code></pre></div><p>为什么会这样呢？<br>因为不是<strong>最优解</strong>。</p><p>以为是奇偶数求和，但是这个用例中，最大值是下标0、3的求和。</p><p>因此必须优化一下，每次奇偶数求和时，除了奇数/偶数下标的求和，还要更新另一边偶数/奇数的求和的值。</p><p>多说不好理解，来看看这个对比：</p><div class="hljs"><pre><code class="hljs angelscript">indexx  <span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span>nums   [<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>] → <span class="hljs-number">4</span>优化前：sumEven <span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">3</span>sumOdd  <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span>优化后：sumEven <span class="hljs-number">0</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">4</span>sumOdd  <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span></code></pre></div><p>这一比较，应该就好理解了。</p><p>以下为Java代码：</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>{    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">rob</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] nums)</span> </span>{        <span class="hljs-keyword">int</span> sumEven = <span class="hljs-number">0</span>; <span class="hljs-comment">// 偶数 </span>        <span class="hljs-keyword">int</span> sumOdd = <span class="hljs-number">0</span>;  <span class="hljs-comment">// 奇数</span>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; nums.length; i++) {            <span class="hljs-keyword">if</span>(i % <span class="hljs-number">2</span> ==<span class="hljs-number">0</span>) {                sumEven += nums[i];                <span class="hljs-comment">// 不是纯粹的偶数和</span>                sumEven = Math.max(sumOdd, sumEven);            } <span class="hljs-keyword">else</span> {                sumOdd += nums[i];                <span class="hljs-comment">// 也不是纯粹的奇数和</span>                sumOdd = Math.max(sumOdd, sumEven);            }        }        <span class="hljs-keyword">return</span> Math.max(sumEven, sumOdd);    }}</code></pre></div><p>提交后：<br><img src="https://img2020.cnblogs.com/blog/2013579/202005/2013579-20200529160306290-829235992.png" srcset="/blog/img/loading.gif" alt=""></p><h2 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h2><p>成功解决后，突然想到“能不能用别的办法？比如dp动态规划？”</p><p>我试着找了动态规划方程，还真找到了。</p><p>动态规划方程：<code>dp[n] = max(dp[n-2] + nums[n], dp[n-1])</code></p><p>使用上边的用例<code>[2,1,1,2] → 4</code>来验证</p><div class="hljs"><pre><code class="hljs angelscript">n 为数组 nums 的长度初始：dp[<span class="hljs-number">0</span>] = <span class="hljs-number">0</span> <span class="hljs-comment">//必须初始化为0</span>dp[<span class="hljs-number">1</span>] = nums[<span class="hljs-number">0</span>] = <span class="hljs-number">2</span> <span class="hljs-comment">//初始为nums[0]</span>n&gt;=<span class="hljs-number">2</span>时：dp[<span class="hljs-number">2</span>] = max(dp[<span class="hljs-number">0</span>]+nums[<span class="hljs-number">1</span>], dp[<span class="hljs-number">1</span>]) = max(<span class="hljs-number">0</span>+<span class="hljs-number">1</span>, <span class="hljs-number">2</span>) = <span class="hljs-number">2</span>dp[<span class="hljs-number">3</span>] = max(dp[<span class="hljs-number">1</span>]+nums[<span class="hljs-number">2</span>], dp[<span class="hljs-number">2</span>]) = max(<span class="hljs-number">2</span>+<span class="hljs-number">1</span>, <span class="hljs-number">2</span>) = <span class="hljs-number">3</span>dp[<span class="hljs-number">4</span>] = max(dp[<span class="hljs-number">2</span>]+nums[<span class="hljs-number">3</span>], dp[<span class="hljs-number">3</span>]) = max(<span class="hljs-number">2</span>+<span class="hljs-number">2</span>, <span class="hljs-number">3</span>) = <span class="hljs-number">4</span></code></pre></div><p>代码：</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>{    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">rob</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] nums)</span> </span>{        <span class="hljs-keyword">int</span> len = nums.length;        <span class="hljs-keyword">if</span>(len == <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;        <span class="hljs-keyword">int</span>[] dp = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[len + <span class="hljs-number">1</span>]; <span class="hljs-comment">//dp[len] 存储最终结果</span>        dp[<span class="hljs-number">0</span>] = <span class="hljs-number">0</span>; <span class="hljs-comment">//必须初始化为0</span>        dp[<span class="hljs-number">1</span>] = nums[<span class="hljs-number">0</span>]; <span class="hljs-comment">//初始为数组的第一个元素</span>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">2</span>; i &lt;= len; i++) {            <span class="hljs-comment">//动态规划方程</span>            dp[i] = Math.max(dp[i-<span class="hljs-number">1</span>], dp[i-<span class="hljs-number">2</span>] + nums[i-<span class="hljs-number">1</span>]);        }        <span class="hljs-keyword">return</span> dp[len];    }}</code></pre></div><p>提交：<br><img src="https://img2020.cnblogs.com/blog/2013579/202005/2013579-20200529163908973-1319090454.png" srcset="/blog/img/loading.gif" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>自定义返回顶部小火箭</title>
    <link href="/blog/2020/05/27/%E8%87%AA%E5%AE%9A%E4%B9%89%E8%BF%94%E5%9B%9E%E9%A1%B6%E9%83%A8%E5%B0%8F%E7%81%AB%E7%AE%AD/"/>
    <url>/blog/2020/05/27/%E8%87%AA%E5%AE%9A%E4%B9%89%E8%BF%94%E5%9B%9E%E9%A1%B6%E9%83%A8%E5%B0%8F%E7%81%AB%E7%AE%AD/</url>
    
    <content type="html"><![CDATA[<a id="more"></a><div class="hljs"><pre><code class="hljs html"><span class="hljs-comment">&lt;!--自定义返回顶部小火箭--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"><span class="hljs-selector-id">#back-top</span> {</span>     position: fixed;     bottom: 10px;     right: 5px;     z-index: 99;}<span class="css"><span class="hljs-selector-id">#back-top</span> <span class="hljs-selector-tag">span</span> {</span>     width: 50px;     height: 64px;     display: block;     background:url(http://images.cnblogs.com/cnblogs_com/seanshao/855033/o_rocket.png) no-repeat center center;}<span class="css"><span class="hljs-selector-id">#back-top</span> <span class="hljs-selector-tag">a</span>{<span class="hljs-attribute">outline</span>:none}</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span>&gt;</span><span class="javascript">$(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{</span><span class="actionscript"><span class="hljs-comment">// hide #back-top first</span></span><span class="javascript">$(<span class="hljs-string">"#back-top"</span>).hide();</span><span class="actionscript"><span class="hljs-comment">// fade in #back-top</span></span><span class="javascript">$(<span class="hljs-built_in">window</span>).scroll(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{</span><span class="javascript"><span class="hljs-keyword">if</span> ($(<span class="hljs-keyword">this</span>).scrollTop() &gt; <span class="hljs-number">500</span>) {</span><span class="javascript">$(<span class="hljs-string">'#back-top'</span>).fadeIn();</span><span class="actionscript">} <span class="hljs-keyword">else</span> {</span><span class="javascript">$(<span class="hljs-string">'#back-top'</span>).fadeOut();</span>}});<span class="actionscript"><span class="hljs-comment">// scroll body to 0px on click</span></span><span class="javascript">$(<span class="hljs-string">'#back-top a'</span>).click(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{</span><span class="javascript">$(<span class="hljs-string">'body,html'</span>).animate({</span>scrollTop: 0}, 800);<span class="actionscript"><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;</span>});});<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"back-top"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"display:none"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#top"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></code></pre></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>小技巧</tag>
      
      <tag>博客</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>为CSDN博客添加站内搜索栏目</title>
    <link href="/blog/2020/05/27/%E4%B8%BACSDN%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E7%AB%99%E5%86%85%E6%90%9C%E7%B4%A2%E6%A0%8F%E7%9B%AE/"/>
    <url>/blog/2020/05/27/%E4%B8%BACSDN%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E7%AB%99%E5%86%85%E6%90%9C%E7%B4%A2%E6%A0%8F%E7%9B%AE/</url>
    
    <content type="html"><![CDATA[<p>栏目代码<br><img src="https://img2020.cnblogs.com/blog/2013579/202005/2013579-20200527144442841-211229813.png" srcset="/blog/img/loading.gif" alt=""></p><div class="hljs"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"panel_Search"</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"http://img.blog.csdn.net/20170719024744725?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQva3hwOTU0NQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">"https://www.google.com/search"</span> <span class="hljs-attr">method</span>=<span class="hljs-string">"get"</span> <span class="hljs-attr">target</span>=<span class="hljs-string">"_blank"</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"blogsearch"</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"请输入关键字"</span>  <span class="hljs-attr">id</span>=<span class="hljs-string">"inputSearch"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"使用Google搜索本博客"</span> <span class="hljs-attr">autofocus</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"q"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"hidden"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"hl"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"zh-CN"</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"hidden"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"sitesearch"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"blog.csdn.net/kxp9545"</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"btnSubmit"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"submit"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"搜索 "</span>&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></div><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>小技巧</tag>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Win10 沉浸式搜索框居中显示</title>
    <link href="/blog/2020/05/27/Win10%20%E6%B2%89%E6%B5%B8%E5%BC%8F%E6%90%9C%E7%B4%A2%E6%A1%86%E5%B1%85%E4%B8%AD%E6%98%BE%E7%A4%BA/"/>
    <url>/blog/2020/05/27/Win10%20%E6%B2%89%E6%B5%B8%E5%BC%8F%E6%90%9C%E7%B4%A2%E6%A1%86%E5%B1%85%E4%B8%AD%E6%98%BE%E7%A4%BA/</url>
    
    <content type="html"><![CDATA[<p>Windows 10 沉浸式搜索栏居中显示设置，可直接对注册表进行修改从而实现。导入注册表，重启 Windows 资源管理器即可。然后使用 Win + S 快捷键即可看到沉浸式搜索栏已在屏幕中央进行居中显示，复制下方命令，粘贴在记事本中，另存为 修改.reg 后双击运行导入使用。</p><p><img src="https://img2020.cnblogs.com/blog/2013579/202005/2013579-20200527143616762-1190795530.png" srcset="/blog/img/loading.gif" alt=""></p><a id="more"></a><div class="hljs"><pre><code class="hljs taggerscript">Windows Registry Editor Version 5.00 [HKEY_CURRENT_USER<span class="hljs-symbol">\S</span>oftware<span class="hljs-symbol">\M</span>icrosoft<span class="hljs-symbol">\W</span>indows<span class="hljs-symbol">\C</span>urrentVersion<span class="hljs-symbol">\S</span>earch]"ImmersiveSearch"=dword:00000001 [HKEY_CURRENT_USER<span class="hljs-symbol">\S</span>oftware<span class="hljs-symbol">\M</span>icrosoft<span class="hljs-symbol">\W</span>indows<span class="hljs-symbol">\C</span>urrentVersion<span class="hljs-symbol">\S</span>earch<span class="hljs-symbol">\F</span>lighting<span class="hljs-symbol">\O</span>verride]"ImmersiveSearchFull"=dword:00000001"CenterScreenRoundedCornerRadius"=dword:00000009</code></pre></div><p>动图操作示范</p><p><img src="https://bincode.cc/wp-content/uploads/2019/11/floating-immersive-search-bar-windows-10.gif" srcset="/blog/img/loading.gif" alt="img"></p><p>如果不想用了，可以删除注册表就能恢复Windows10默认搜索样式。</p><div class="hljs"><pre><code class="hljs taggerscript">Windows Registry Editor Version 5.00 [HKEY_CURRENT_USER<span class="hljs-symbol">\S</span>oftware<span class="hljs-symbol">\M</span>icrosoft<span class="hljs-symbol">\W</span>indows<span class="hljs-symbol">\C</span>urrentVersion<span class="hljs-symbol">\S</span>earch]"ImmersiveSearch"=- [-HKEY_CURRENT_USER<span class="hljs-symbol">\S</span>oftware<span class="hljs-symbol">\M</span>icrosoft<span class="hljs-symbol">\W</span>indows<span class="hljs-symbol">\C</span>urrentVersion<span class="hljs-symbol">\S</span>earch<span class="hljs-symbol">\F</span>lighting<span class="hljs-symbol">\O</span>verride]"ImmersiveSearchFull"=dword:00000001"CenterScreenRoundedCornerRadius"=dword:00000009</code></pre></div><p>关于注册表文件的删除语法</p><div class="hljs"><pre><code class="hljs css">要使用 <span class="hljs-selector-class">.reg</span> 文件删除注册表项，将 <span class="hljs-selector-class">.reg</span> 文件中的 <span class="hljs-selector-tag">RegistryPath</span> 的前面放一个连字符 （<span class="hljs-selector-tag">-</span>）。要使用 <span class="hljs-selector-class">.reg</span> 文件删除注册表值，将 <span class="hljs-selector-class">.reg</span> 文件中的 <span class="hljs-selector-tag">DataItemName</span> 的等号后放一个连字符 （<span class="hljs-selector-tag">-</span>）。</code></pre></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>小技巧</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>免费域名注册</title>
    <link href="/blog/2020/05/27/%E5%85%8D%E8%B4%B9%E5%9F%9F%E5%90%8D%E6%B3%A8%E5%86%8C/"/>
    <url>/blog/2020/05/27/%E5%85%8D%E8%B4%B9%E5%9F%9F%E5%90%8D%E6%B3%A8%E5%86%8C/</url>
    
    <content type="html"><![CDATA[<blockquote><p>Freenom offers a free domain name service for casual users.The Freenom domain name is free for one year and can be renewed manually before expiration.</p></blockquote><a id="more"></a><p>1、访问 freenom 官网，然后在输入框内直接输入想要注册的域名地址，输入完成后点击后面的 检查可用性 ；</p><p>2、在列表内选择自己想要的域名后缀，然后点击 Get it now 进行选择，然后待列表右上方出现 check out 直接点击进入确认界面；</p><p>3、在已选的域名地址列表后方的下拉菜单内选择 12 Months @ FREE ，有效期 12 个月可免费使用，然后再输入自己的 QQ 邮箱，点击 Verify My Email Address ；</p><p>4、下方弹出提示验证邮箱，打开我们的QQ邮箱接收验证邮件，点击邮件内的链接进行验证，在打开的页面内输入个人信息并保存即可完成账户的创建；</p><p>5、点击按钮进入登陆界面，输入注册的账户及密码，点击 Login 进行登陆，然后在 Services – My Domains 查看自己注册的域名，已注册域名即在下方显示，点击 Manage Domain 即可进入域名管理；</p><p>6、在域名设置界面内，点击 Manage Freenom DNS 进入域名解析设置，Name 处填写 www 后面的 Target 处填写需要解析的 IP 地址即可，再点击 More Records 添加一行，Name 为空 后面的 Target 处再次填写需要解析的 IP 地址，详细的设置可以百度 域名解析设置 进行了解，配置完成后点击 Save Changes 保存，待使用 ping 域名返回服务器正确的 IP 则说明解析成功。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>小技巧</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【LeetCode】287. 寻找重复数</title>
    <link href="/blog/2020/05/26/%E3%80%90LeetCode%E3%80%91287.%20%E5%AF%BB%E6%89%BE%E9%87%8D%E5%A4%8D%E6%95%B0/"/>
    <url>/blog/2020/05/26/%E3%80%90LeetCode%E3%80%91287.%20%E5%AF%BB%E6%89%BE%E9%87%8D%E5%A4%8D%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>给定一个包含 n + 1 个整数的数组 nums，其数字都在 1 到 n 之间（包括 1 和 n），可知至少存在一个重复的整数。假设只有一个重复的整数，找出这个重复的数。</p><p>示例 1:</p><div class="hljs"><pre><code class="hljs angelscript">输入: [<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>]输出: <span class="hljs-number">2</span></code></pre></div><p>示例 2:</p><div class="hljs"><pre><code class="hljs angelscript">输入: [<span class="hljs-number">3</span>,<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">2</span>]输出: <span class="hljs-number">3</span></code></pre></div><p>说明：</p><blockquote><p>不能更改原数组（假设数组是只读的）。<br>只能使用额外的 O(1) 的空间。<br>时间复杂度小于 O(n^2) 。<br>数组中只有一个重复的数字，但它可能不止重复出现一次。</p></blockquote><a id="more"></a><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>本题目限定了元素的取值范围”其数字都在 1 到 n 之间（包括 1 和 n）”。</p><p>另外，“说明”里的也特别重要~</p><div class="hljs"><pre><code class="hljs markdown">说明：<span class="hljs-quote">&gt; 不能更改原数组（假设数组是只读的）。</span><span class="hljs-quote">&gt; 只能使用额外的 O(1) 的空间。</span><span class="hljs-quote">&gt; 时间复杂度小于 O(n^2) 。</span><span class="hljs-quote">&gt; 数组中只有一个重复的数字，但它可能不止重复出现一次。</span></code></pre></div><p>最后解决的思路很简单，就是使用双指针，直接看代码注释即可。</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><div class="hljs"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>{    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">findDuplicate</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] nums)</span> </span>{        <span class="hljs-comment">// 如果数组就只有两个元素，直接返回即可</span>        <span class="hljs-keyword">if</span>(nums.length &lt;= <span class="hljs-number">2</span>) { <span class="hljs-keyword">return</span> nums[<span class="hljs-number">0</span>]; }                <span class="hljs-keyword">int</span> q = <span class="hljs-number">0</span>, s = <span class="hljs-number">0</span>;        <span class="hljs-keyword">int</span> indexStart = <span class="hljs-number">0</span>; <span class="hljs-comment">// indexStart用以记录起步位置</span>                <span class="hljs-comment">// 初始化q、s应该指向[第一个index!=nums[index]的元素],不应该为0</span>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> index = <span class="hljs-number">0</span>; index &lt; nums.length; index++) {            <span class="hljs-keyword">if</span>(index != nums[index]) {                q = index;                s = index;                indexStart = index; <span class="hljs-comment">// 保存起步位置</span>                <span class="hljs-keyword">break</span>;            }        }        <span class="hljs-comment">// 快慢指针从同一位置(index)起步</span>        <span class="hljs-keyword">while</span>(<span class="hljs-keyword">true</span>) {            <span class="hljs-comment">// 快指针q的步长=2</span>            q = nums[nums[q]];            <span class="hljs-comment">// 慢指针s的步长=1</span>            s = nums[s];            <span class="hljs-comment">// 两指针相遇,结束第一次循环</span>            <span class="hljs-keyword">if</span>(q == s) {                <span class="hljs-comment">// 慢指针回到初始起步点indexStart</span>                s = indexStart;                <span class="hljs-keyword">break</span>;            }        }        <span class="hljs-comment">// 快慢指针继续一起移动,但要修改快指针的步长</span>        <span class="hljs-comment">// 快慢指针再相遇的元素,即所要的结果</span>        <span class="hljs-keyword">while</span>(<span class="hljs-keyword">true</span>) {            <span class="hljs-comment">// 快指针q的步长=1</span>            q = nums[q];            <span class="hljs-comment">// 慢指针s的步长=1</span>            s = nums[s];            <span class="hljs-comment">// 两指针相遇,结束循环</span>            <span class="hljs-keyword">if</span>(q == s) { <span class="hljs-keyword">break</span>; }        }        <span class="hljs-keyword">return</span> s;    }}</code></pre></div><h1 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h1><p><img src="https://img2020.cnblogs.com/blog/2013579/202005/2013579-20200527104448669-1146765142.png" srcset="/blog/img/loading.gif" alt=""></p><h1 id="题后"><a href="#题后" class="headerlink" title="题后"></a>题后</h1><p>今天这“每日一题”和《<a href="https://www.cnblogs.com/melodyjerry/p/12944851.html" target="_blank" rel="noopener">【LeetCode】面试题03. 数组中重复的数字</a>》有些类似。<br>不同的是，今天这题限定了一些特别的条件，比如：</p><ul><li>不能更改原数组（假设数组是只读的）</li><li><strong>只能使用额外的 O(1) 的空间</strong></li><li>*<em>时间复杂度小于 O(n^2) *</em><br>尤其是对复杂对的要求，这就提高了算法设计的难度。</li></ul><p><img src="https://img2020.cnblogs.com/blog/2013579/202005/2013579-20200527104659809-1417165961.png" srcset="/blog/img/loading.gif" alt=""><br>我想着各种优化方法，很艰难地，最后找到了这种。<br>哇地一声就哭出来了，太难了/(ㄒoㄒ)/~~</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>通过css样式实现动态背景</title>
    <link href="/blog/2020/05/25/%E9%80%9A%E8%BF%87css%E6%A0%B7%E5%BC%8F%E5%AE%9E%E7%8E%B0%E5%8A%A8%E6%80%81%E8%83%8C%E6%99%AF/"/>
    <url>/blog/2020/05/25/%E9%80%9A%E8%BF%87css%E6%A0%B7%E5%BC%8F%E5%AE%9E%E7%8E%B0%E5%8A%A8%E6%80%81%E8%83%8C%E6%99%AF/</url>
    
    <content type="html"><![CDATA[<p>分享一张可以用来做动态背景的gif<br><img src="https://blog-static.cnblogs.com/files/melodyjerry/%E8%93%9D%E8%89%B2%E7%A2%8E%E7%89%87%E9%A3%9E%E8%88%9E.gif" srcset="/blog/img/loading.gif" alt="蓝色碎片飞舞"></p><p>通过css样式可实现👇</p><a id="more"></a><div class="hljs"><pre><code class="hljs css">&lt;style type = "text/css"&gt;     @<span class="hljs-keyword">media</span>(<span class="hljs-keyword">prefers</span> - color - scheme: dark) {<span class="hljs-selector-class">.js_darkmode__0</span> {        <span class="hljs-attribute">color</span>: <span class="hljs-built_in">rgba</span>(0, 0, 0, 0.9) ! important;        background - image: linear - gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.1)),        url("https://blog-static.cnblogs.com/files/melodyjerry/%E8%93%9D%E8%89%B2%E7%A2%8E%E7%89%87%E9%A3%9E%E8%88%9E.gif") ! important;    }<span class="hljs-selector-class">.js_darkmode__1</span> {        <span class="hljs-attribute">color</span>: <span class="hljs-built_in">rgba</span>(0, 0, 0, 0.9) ! important;    }<span class="hljs-selector-class">.js_darkmode__bg__0</span> {        background - image: linear - gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.1)),        url("https://blog-static.cnblogs.com/files/melodyjerry/%E8%93%9D%E8%89%B2%E7%A2%8E%E7%89%87%E9%A3%9E%E8%88%9E.gif"),        <span class="hljs-selector-tag">linear</span> <span class="hljs-selector-tag">-</span> <span class="hljs-selector-tag">gradient</span>(<span class="hljs-selector-id">#fff</span>, <span class="hljs-selector-id">#fff</span>) ! <span class="hljs-selector-tag">important</span>;    }<span class="hljs-selector-class">.js_darkmode__bg__1</span> {        background - image: -webkit - linear - gradient(left, transparent, rgb(153, 153, 152), transparent) ! important;    }} &lt;/style&gt;</code></pre></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>CSS</tag>
      
      <tag>HTML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【LeetCode】4. 寻找两个正序数组的中位数</title>
    <link href="/blog/2020/05/24/%E3%80%90LeetCode%E3%80%914.%20%E5%AF%BB%E6%89%BE%E4%B8%A4%E4%B8%AA%E6%AD%A3%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/"/>
    <url>/blog/2020/05/24/%E3%80%90LeetCode%E3%80%914.%20%E5%AF%BB%E6%89%BE%E4%B8%A4%E4%B8%AA%E6%AD%A3%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>给定两个大小为 m 和 n 的正序（从小到大）数组 nums1 和 nums2。</p><p>请你找出这两个正序数组的中位数，并且要求<strong>算法的时间复杂度为 O(log(m + n))。</strong></p><p>你可以假设 nums1 和 nums2 不会同时为空。</p><p>示例 1:</p><div class="hljs"><pre><code class="hljs angelscript">nums1 = [<span class="hljs-number">1</span>, <span class="hljs-number">3</span>]nums2 = [<span class="hljs-number">2</span>]则中位数是 <span class="hljs-number">2.0</span></code></pre></div><p>示例 2:</p><div class="hljs"><pre><code class="hljs angelscript">nums1 = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>]nums2 = [<span class="hljs-number">3</span>, <span class="hljs-number">4</span>]则中位数是 (<span class="hljs-number">2</span> + <span class="hljs-number">3</span>)/<span class="hljs-number">2</span> = <span class="hljs-number">2.5</span></code></pre></div><a id="more"></a><h1 id="题解代码"><a href="#题解代码" class="headerlink" title="题解代码"></a>题解代码</h1><div class="hljs"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>{    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">double</span> <span class="hljs-title">findMedianSortedArrays</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] nums1, <span class="hljs-keyword">int</span>[] nums2)</span> </span>{         <span class="hljs-comment">// 若仅当nums1为空</span>        <span class="hljs-keyword">if</span> (nums1 == <span class="hljs-keyword">null</span> || nums1.length == <span class="hljs-number">0</span>) {            <span class="hljs-keyword">int</span> length = nums2.length;            <span class="hljs-keyword">int</span> middle = length / <span class="hljs-number">2</span>;            <span class="hljs-keyword">if</span> (length % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>) {                <span class="hljs-keyword">return</span> (nums2[middle] + nums2[middle - <span class="hljs-number">1</span>]) / <span class="hljs-number">2.0</span>;            } <span class="hljs-keyword">else</span> {                <span class="hljs-keyword">return</span> nums2[middle];            }        }        <span class="hljs-comment">// 若仅当nums2为空</span>        <span class="hljs-keyword">if</span> (nums2 == <span class="hljs-keyword">null</span> || nums2.length == <span class="hljs-number">0</span>) {            <span class="hljs-keyword">int</span> length = nums1.length;            <span class="hljs-keyword">int</span> middle = length / <span class="hljs-number">2</span>;            <span class="hljs-keyword">if</span> (length % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>) {                <span class="hljs-keyword">return</span> (nums1[middle] + nums1[middle - <span class="hljs-number">1</span>]) / <span class="hljs-number">2.0</span>;            } <span class="hljs-keyword">else</span> {                <span class="hljs-keyword">return</span> nums1[middle];            }        }        <span class="hljs-keyword">int</span> len1 = nums1.length;        <span class="hljs-keyword">int</span> len2 = nums2.length;        <span class="hljs-keyword">int</span> middle = (len1+len2)/<span class="hljs-number">2</span>;        <span class="hljs-keyword">int</span> currentIndex = <span class="hljs-number">0</span>;        <span class="hljs-keyword">int</span> i1 = <span class="hljs-number">0</span>, i2 = <span class="hljs-number">0</span>;        <span class="hljs-keyword">int</span> last = <span class="hljs-number">0</span>, current = <span class="hljs-number">0</span>;        <span class="hljs-keyword">while</span>(currentIndex &lt;= middle){            currentIndex++;            last = current;            <span class="hljs-comment">/**</span><span class="hljs-comment">             * 注意越界情况：</span><span class="hljs-comment">             * 比如，</span><span class="hljs-comment">             * 1 2 3 4</span><span class="hljs-comment">             * 5 6 7 7 8 9</span><span class="hljs-comment">             * 当然，数组为空的情况也包含在这里面</span><span class="hljs-comment">             */</span>            <span class="hljs-comment">// i1越界</span>            <span class="hljs-keyword">if</span>(i1 == len1){                current = nums2[i2];                i2++;                <span class="hljs-keyword">continue</span>;            }            <span class="hljs-comment">// i2越界</span>            <span class="hljs-keyword">if</span>(i2 == len2){                current = nums1[i1];                i1++;                <span class="hljs-keyword">continue</span>;            }            <span class="hljs-comment">// 正常操作</span>            <span class="hljs-keyword">if</span>(nums1[i1] &lt;= nums2[i2]){                current = nums1[i1];                i1++;            } <span class="hljs-keyword">else</span> {                current = nums2[i2];                i2++;            }        }        <span class="hljs-comment">// 分奇偶情况</span>        <span class="hljs-keyword">if</span>((len1+len2) % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>){            <span class="hljs-keyword">return</span> (last + current) / <span class="hljs-number">2.0</span>;        } <span class="hljs-keyword">else</span> {            <span class="hljs-keyword">return</span> current;        }    }}</code></pre></div><h1 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h1><p><img src="https://img2020.cnblogs.com/blog/2013579/202005/2013579-20200524105737241-1489148430.png" srcset="/blog/img/loading.gif" alt=""></p><h1 id="更多题解"><a href="#更多题解" class="headerlink" title="更多题解"></a>更多题解</h1><p><a href="https://leetcode-cn.com/problems/median-of-two-sorted-arrays/solution/xiang-xi-tong-su-de-si-lu-fen-xi-duo-jie-fa-by-w-2/" target="_blank" rel="noopener">详细通俗的思路分析，多解法</a><br><a href="https://leetcode-cn.com/problems/median-of-two-sorted-arrays/solution/4-xun-zhao-liang-ge-you-xu-shu-zu-de-zhong-wei-shu/" target="_blank" rel="noopener">寻找两个有序数组的中位数 C / C++</a><br><a href="https://leetcode-cn.com/problems/median-of-two-sorted-arrays/solution/shuang-zhi-zhen-by-powcai/" target="_blank" rel="noopener">中位数的小技巧</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Web开发技术&amp;API 接口参考</title>
    <link href="/blog/2020/05/24/Web%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF&amp;API%20%E6%8E%A5%E5%8F%A3%E5%8F%82%E8%80%83/"/>
    <url>/blog/2020/05/24/Web%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF&amp;API%20%E6%8E%A5%E5%8F%A3%E5%8F%82%E8%80%83/</url>
    
    <content type="html"><![CDATA[<p>Web 开发技术<br><a href="https://developer.mozilla.org/zh-CN/docs/Web" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web</a></p><p>Web API 接口参考<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/API" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/API</a></p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Web</tag>
      
      <tag>API</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在VS Code上刷LeetCode</title>
    <link href="/blog/2020/05/24/%E5%9C%A8VS%20Code%E4%B8%8A%E5%88%B7LeetCode/"/>
    <url>/blog/2020/05/24/%E5%9C%A8VS%20Code%E4%B8%8A%E5%88%B7LeetCode/</url>
    
    <content type="html"><![CDATA[<p>插件说明</p><blockquote><p>该插件需要用户本地拥有Node.js 8+运行环境。读者可以通过在命令行中输入<strong>node -v</strong>查看。</p></blockquote><p><img src="https://s1.ax1x.com/2020/05/24/YzwCIU.png" srcset="/blog/img/loading.gif" alt="YzwCIU.png"></p><p>安装插件之后，可以在 LeetCode 插件的浏览器中找到登录按钮：</p><p><img src="https://s1.ax1x.com/2020/05/24/YzdQvn.png" srcset="/blog/img/loading.gif" alt="YzdQvn.png"></p><p>登录完成后，浏览器内就会显示出所有问题，并且问题将会按照难度，算法类型，公司进行分类，方便使用者进行针对性训练。</p><hr><p>插件同时支持中文及英文版LeetCode，可以通过点击导航栏中的切换按钮（ 图案）进行切换：</p><p><img src="https://s1.ax1x.com/2020/05/24/YzdyVK.png" srcset="/blog/img/loading.gif" alt="YzdyVK.png"></p><hr><p>右键点击某一个题目并选择 <strong>Show Problem</strong> 会生成答题文件，接着我们就可以开始刷题了。也可以点击 <strong>Preview Problem</strong> 先查看一下题目内容：</p><p><img src="https://s1.ax1x.com/2020/05/24/YzdfxA.png" srcset="/blog/img/loading.gif" alt="YzdfxA.png"></p><hr><p>写完后，可以点击文件最下方的 “Submit” 提交答案，或者“Test”执行测试：</p><p><img src="https://s1.ax1x.com/2020/05/24/YzdLGQ.png" srcset="/blog/img/loading.gif" alt="YzdLGQ.png"></p><hr><p>另外，插件还支持<a href="https://link.zhihu.com/?target=https%3A//github.com/jdneo/vscode-leetcode/blob/master/docs/README_zh-CN.md%23%E9%80%9A%E8%BF%87%E5%85%B3%E9%94%AE%E5%AD%97%E6%90%9C%E7%B4%A2%E9%A2%98%E7%9B%AE">题目搜索</a>，<a href="https://link.zhihu.com/?target=https%3A//github.com/jdneo/vscode-leetcode/blob/master/docs/README_zh-CN.md%23%E7%AE%A1%E7%90%86%E5%AD%98%E6%A1%A3">存档管理</a>等功能。更多详细的插件使用介绍可以前往<a href="https://github.com/jdneo/vscode-leetcode" target="_blank" rel="noopener">GitHub项目主页</a>查看。</p><hr><p>参考文章：<br><a href="https://blog.csdn.net/lzuacm/article/details/103375905" target="_blank" rel="noopener">https://blog.csdn.net/lzuacm/article/details/103375905</a></p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>小技巧</tag>
      
      <tag>IDEA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>复制文字时自动加版权</title>
    <link href="/blog/2020/05/24/%E5%A4%8D%E5%88%B6%E6%96%87%E5%AD%97%E6%97%B6%E8%87%AA%E5%8A%A8%E5%8A%A0%E7%89%88%E6%9D%83/"/>
    <url>/blog/2020/05/24/%E5%A4%8D%E5%88%B6%E6%96%87%E5%AD%97%E6%97%B6%E8%87%AA%E5%8A%A8%E5%8A%A0%E7%89%88%E6%9D%83/</url>
    
    <content type="html"><![CDATA[<ol><li><a href="https://www.cnblogs.com/enjoy233/p/10328361.html#%E5%A4%8D%E5%88%B6%E6%AD%A3%E6%96%87%E6%96%87%E5%AD%97%E6%97%B6%E8%87%AA%E5%8A%A8%E5%8A%A0%E7%89%88%E6%9D%83" target="_blank" rel="noopener">复制正文文字时自动加版权</a></li><li><a href="https://segmentfault.com/q/1010000003986612" target="_blank" rel="noopener">在知乎复制的文本为什么会自带一些版权声明，这个功能是如何实现的?</a></li><li><a href="https://www.zhihu.com/question/38685128" target="_blank" rel="noopener">知乎上复制回答，剪贴板里自动加上版权出处的技术js如何实现？</a></li><li><a href="https://blog.csdn.net/sinat_23880167/article/details/79418505" target="_blank" rel="noopener">在知乎复制的文本为什么会自带一些版权声明，这个功能是如何实现的?</a></li></ol><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux安装Docker</title>
    <link href="/blog/2020/05/24/Linux%E5%AE%89%E8%A3%85Docker/"/>
    <url>/blog/2020/05/24/Linux%E5%AE%89%E8%A3%85Docker/</url>
    
    <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><blockquote><p>来自百度百科的介绍<br><img src="https://img2020.cnblogs.com/blog/2013579/202005/2013579-20200517105913934-2136525909.png" srcset="/blog/img/loading.gif" alt=""></p></blockquote><p>Docker的三大核心概念：<strong>镜像、容器、仓库</strong></p><ul><li><p>镜像：类似虚拟机的镜像、用俗话说就是安装文件。</p></li><li><p>容器：类似一个轻量级的沙箱，容器是从镜像创建应用运行实例，可以将其启动、开始、停止、删除、而这些容器都是相互隔离、互不可见的。</p></li><li><p>仓库：类似代码仓库，是Docker集中存放镜像文件的场所。</p></li></ul><h1 id="是收费软件？"><a href="#是收费软件？" class="headerlink" title="是收费软件？"></a>是收费软件？</h1><p>就目前来讲，docker有两个版本Docker CE和Docker EE，CE是社区版的免费软件，EE是企业版的收费软件。</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="使用脚本来安装"><a href="#使用脚本来安装" class="headerlink" title="使用脚本来安装"></a>使用脚本来安装</h2><ol><li><p>查询内核</p><div class="hljs"><pre><code class="hljs uname">![Y2PztK.png](https://s1.ax1x.com/2020/05/17/Y2PztK.png)2. 使用root用户登录linux系统后，将yum包更新到最新：关于root模式，见[Linux root 模式](https://www.cnblogs.com/melodyjerry/p/12904792.html)```$ yum update</code></pre></div></li><li><p>执行docker安装脚本(因curl命令需要一个网址，网址被禁止发布，此处不能列出)</p><div class="hljs"><pre><code class="hljs curl">```sh get-docker.sh</code></pre></div></li><li><p>启动docker进程 systemctl start docker</p></li><li><p>验证docker是否安装成功：docker run hello-world</p></li></ol><h1 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h1><p>使用yum命令</p><div class="hljs"><pre><code class="hljs yum">然后将docker的安装目录删除```rm -rf /var/lib/docker</code></pre></div><p>就可以了。</p><h1 id="参考阅读"><a href="#参考阅读" class="headerlink" title="参考阅读"></a>参考阅读</h1><p><a href="https://www.runoob.com/docker/centos-docker-install.html" target="_blank" rel="noopener">菜鸟教程-CentOS Docker 安装</a></p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【LeetCode】面试题03. 数组中重复的数字</title>
    <link href="/blog/2020/05/23/%E3%80%90LeetCode%E3%80%91%E9%9D%A2%E8%AF%95%E9%A2%9803.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E5%AD%97/"/>
    <url>/blog/2020/05/23/%E3%80%90LeetCode%E3%80%91%E9%9D%A2%E8%AF%95%E9%A2%9803.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E5%AD%97/</url>
    
    <content type="html"><![CDATA[<h1 id="题目来源"><a href="#题目来源" class="headerlink" title="题目来源"></a>题目来源</h1><p><a href="https://leetcode-cn.com/problemset/lcof/" target="_blank" rel="noopener">《剑指 Offer（第 2 版）》</a></p><h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>找出数组中重复的数字。</p><p>在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1 的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。</p><p>示例 1：</p><div class="hljs"><pre><code class="hljs angelscript">输入：[<span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">5</span>, <span class="hljs-number">3</span>]输出：<span class="hljs-number">2</span> 或 <span class="hljs-number">3</span></code></pre></div><p>限制：</p><blockquote><p>2 &lt;= n &lt;= 100000</p></blockquote><a id="more"></a><h1 id="题解思路"><a href="#题解思路" class="headerlink" title="题解思路"></a>题解思路</h1><p>题目中有2句很重要的话“在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1 的范围内”、“任意一个重复的数字”，前者限定了元素的取值范围；而后者要求只要找到了重复数字就可以直接return了。</p><p>本题的关键是“重复”！！！</p><p>既然是“重复”，那第一会想到什么？<br>Set 集合！</p><p><strong>Set集合有个重要的特性：不能存储相同的元素。</strong></p><p>利用Set集合就很好解决了，操作步骤如下：</p><ol><li>初始化一个set</li><li>遍历数组</li><li>将元素加入到set中，并判断是否加入成功<ul><li>若成功了，就继续遍历</li><li>若失败了，说明该元素已经再该集合中<div class="hljs"><pre><code>- 直接break，并return该元素的值</code></pre></div></li></ul></li><li>若没有重复元素，就return -1</li></ol><blockquote><p>关于Set集合见<a href="https://www.cnblogs.com/melodyjerry/p/12944335.html" target="_blank" rel="noopener">Java集合-Set（含转载）</a></p></blockquote><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><div class="hljs"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>{    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">findRepeatNumber</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] nums)</span> </span>{        Set&lt;Integer&gt; set = <span class="hljs-keyword">new</span> HashSet&lt;Integer&gt;();        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> num : nums){            <span class="hljs-comment">/* 若添加失败，说明该元素已经在集合中，因此该元素是重复元素 */</span>            <span class="hljs-keyword">if</span>(!set.add(num)){                <span class="hljs-keyword">return</span> num;            }        }        <span class="hljs-comment">// 若没有重复元素，直接返回-1</span>        <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;    }}</code></pre></div><h1 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h1><p><img src="https://img2020.cnblogs.com/blog/2013579/202005/2013579-20200523214846276-2016199095.png" srcset="/blog/img/loading.gif" alt=""></p><h1 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h1><p>评论里第一条是👇，可以当作这次拓展内容补充补充。<br><img src="https://img2020.cnblogs.com/blog/2013579/202005/2013579-20200523215537937-235728693.png" srcset="/blog/img/loading.gif" alt=""></p><div class="hljs"><pre><code class="hljs c"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span>:</span>    def findRepeatNumber(self, nums: List[int]) -&gt; int:        def count(start,end):            c,i=<span class="hljs-number">0</span>,<span class="hljs-number">0</span>            <span class="hljs-keyword">while</span> i&lt;len(nums):                <span class="hljs-keyword">if</span> start&lt;=nums[i]&lt;=<span class="hljs-built_in">end</span>:                    c+=<span class="hljs-number">1</span>                i+=<span class="hljs-number">1</span>             <span class="hljs-keyword">return</span> c        left,right = <span class="hljs-number">0</span>,len(nums)<span class="hljs-number">-1</span>        <span class="hljs-keyword">if</span> right&lt;<span class="hljs-number">1</span>:<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>        <span class="hljs-keyword">while</span> left+<span class="hljs-number">1</span>&lt;right:            mid = (left+right)<span class="hljs-comment">//2</span>            <span class="hljs-keyword">if</span> count(left,mid)&gt;mid-left+<span class="hljs-number">1</span>:                right = mid            <span class="hljs-keyword">else</span>:                left = mid        <span class="hljs-keyword">if</span> count(nums[left],nums[left])&gt;<span class="hljs-number">1</span>:<span class="hljs-keyword">return</span> nums[left]        <span class="hljs-keyword">if</span> count(nums[right],nums[right])&gt;<span class="hljs-number">1</span>:<span class="hljs-keyword">return</span> nums[right]        <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span></code></pre></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java集合-Set（含转载）</title>
    <link href="/blog/2020/05/23/Java%E9%9B%86%E5%90%88-Set%EF%BC%88%E5%90%AB%E8%BD%AC%E8%BD%BD%EF%BC%89/"/>
    <url>/blog/2020/05/23/Java%E9%9B%86%E5%90%88-Set%EF%BC%88%E5%90%AB%E8%BD%AC%E8%BD%BD%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="Set概述"><a href="#Set概述" class="headerlink" title="Set概述"></a>Set概述</h1><p>set集合不能存储相同的元素</p><p><strong>同时因为其是一个抽象的接口：所以不能直接实例化一个set对象。</strong></p><blockquote><p><code>Set s = new Set()</code> ：×</p></blockquote><p>该接口主要<strong>继承于Collections接口</strong>，所以具有Collection的一些常见的方法。</p><h1 id="常见用法"><a href="#常见用法" class="headerlink" title="常见用法"></a>常见用法</h1><table><thead><tr><th align="left">Sr.No.</th><th align="left">Method</th><th>Description</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">add( )</td><td>向集合中添加元素</td></tr><tr><td align="left">2</td><td align="left">clear( )</td><td>去掉集合中所有的元素</td></tr><tr><td align="left">3</td><td align="left">contains( )</td><td>判断集合中是否包含某一个元素</td></tr><tr><td align="left">4</td><td align="left">isEmpty( )</td><td>判断集合是否为空</td></tr><tr><td align="left">5</td><td align="left">iterator( )</td><td>主要用于递归集合，返回一个Iterator()对象</td></tr><tr><td align="left">6</td><td align="left">remove( )</td><td>从集合中去掉特定的对象</td></tr><tr><td align="left">7</td><td align="left">size( )</td><td>返回集合的大小</td></tr></tbody></table><p>Set接口最长用的两大实现：</p><ul><li>HashSet</li><li>TreeSet</li></ul><a id="more"></a><h1 id="HashSet类（散列存放）"><a href="#HashSet类（散列存放）" class="headerlink" title="HashSet类（散列存放）"></a>HashSet类（散列存放）</h1><p>Java.util.HashSet类实现了Java.util.Set接口。</p><ul><li><p>它不允许出现重复元素；</p></li><li><p>不保证和政集合中元素的顺序</p></li><li><p>允许包含值为null的元素，但最多只能有一个null元素。</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.Date;<span class="hljs-keyword">import</span> java.util.HashSet;<span class="hljs-keyword">import</span> java.util.Iterator; <span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TestHashSet</span></span><span class="hljs-class"></span>{    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String [] args)</span></span><span class="hljs-function">    </span>{       HashSet h=<span class="hljs-keyword">new</span> HashSet();       h.add(<span class="hljs-string">"1st"</span>);       h.add(<span class="hljs-string">"2nd"</span>);       h.add(<span class="hljs-keyword">new</span> Integer(<span class="hljs-number">3</span>));       h.add(<span class="hljs-keyword">new</span> Double(<span class="hljs-number">4.0</span>));       h.add(<span class="hljs-string">"2nd"</span>);            <span class="hljs-comment">//重复元素，未被添加</span>       h.add(<span class="hljs-keyword">new</span> Integer(<span class="hljs-number">3</span>));      <span class="hljs-comment">//重复元素，未被添加</span>       h.add(<span class="hljs-keyword">new</span> Date());       System.out.println(<span class="hljs-string">"开始：size="</span>+h.size());       Iterator it=h.iterator();       <span class="hljs-keyword">while</span>(it.hasNext())       {           Object o=it.next();           System.out.println(o);       }        h.remove(<span class="hljs-string">"2nd"</span>);       System.out.println(<span class="hljs-string">"移除元素后：size="</span>+h.size());       System.out.println(h);    }}</code></pre></div><h1 id="TreeSet（有序存放）"><a href="#TreeSet（有序存放）" class="headerlink" title="TreeSet（有序存放）"></a>TreeSet（有序存放）</h1></li></ul><p>TreeSet描述的是Set的一种变体 ———— 可以实现<strong>排序</strong>等功能的集合，它在讲对象元素添加到集合中时会自动按照某种比较规则将其插入到有序的对象序列中，并保证该集合元素组成的读uixiangxulie时刻按照“升序”排列。</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.TreeSet;<span class="hljs-keyword">import</span> java.util.Iterator; <span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TestTreeSet</span></span><span class="hljs-class"></span>{    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String [] args)</span></span><span class="hljs-function">    </span>{       TreeSet ts=<span class="hljs-keyword">new</span> TreeSet();       ts.add(<span class="hljs-string">"orange"</span>);       ts.add(<span class="hljs-string">"apple"</span>);       ts.add(<span class="hljs-string">"banana"</span>);       ts.add(<span class="hljs-string">"grape"</span>);       Iterator it=ts.iterator();       <span class="hljs-keyword">while</span>(it.hasNext())       {           String fruit=(String)it.next();           System.out.println(fruit);       }    }}</code></pre></div><p><a href="https://cloud.tencent.com/developer/article/1045683" target="_blank" rel="noopener">Java中三种Set类型用法、性能大比拼 - 云+社区 - 腾讯云</a></p><hr><h1 id="转载内容"><a href="#转载内容" class="headerlink" title="转载内容"></a>转载内容</h1><p>转载学习一份关于Java Set集合的基础笔记，一下内容来自~</p><blockquote><p>作者：贾博岩<br>链接：<a href="https://www.jianshu.com/p/b48c47a42916" target="_blank" rel="noopener">https://www.jianshu.com/p/b48c47a42916</a><br>来源：简书</p></blockquote><hr><h2 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h2><p><a href="https://www.jianshu.com/p/25aa92f8d681" target="_blank" rel="noopener">上一篇</a>，我们介绍Java中的List集合。本篇，让我们继续学习，来了解下Set集合；</p><p>Set继承于Collection接口，是一个不允许出现重复元素，并且无序的集合，主要有HashSet和TreeSet两大实现类。</p><p>在判断重复元素的时候，Set集合会调用hashCode()和equal()方法来实现。</p><p>HashSet是哈希表结构，主要利用HashMap的key来存储元素，计算插入元素的hashCode来获取元素在集合中的位置；</p><p>TreeSet是红黑树结构，每一个元素都是树中的一个节点，插入的元素都会进行排序；</p><p>Set集合框架结构：</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWcyMDIwLmNuYmxvZ3MuY29tL2Jsb2cvMjAxMzU3OS8yMDIwMDUvMjAxMzU3OS0yMDIwMDUyMzIwMzc0ODQ5NS0xNDg0OTY4ODQ0LnBuZw?x-oss-process=image/format,png" srcset="/blog/img/loading.gif" alt=""></p><h3 id="Set常用方法"><a href="#Set常用方法" class="headerlink" title="Set常用方法"></a>Set常用方法</h3><p>与List接口一样，Set接口也提供了集合操作的基本方法。</p><p>但与List不同的是，Set还提供了equals(Object o)和hashCode()，供其子类重写，以实现对集合中插入重复元素的处理；</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">Set</span>&lt;<span class="hljs-title">E</span>&gt; <span class="hljs-keyword">extends</span> <span class="hljs-title">Collection</span>&lt;<span class="hljs-title">E</span>&gt; </span>{    A:添加功能    <span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">add</span><span class="hljs-params">(E e)</span></span>;    <span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">addAll</span><span class="hljs-params">(Collection&lt;? extends E&gt; c)</span></span>;    B:删除功能    <span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">remove</span><span class="hljs-params">(Object o)</span></span>;    <span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">removeAll</span><span class="hljs-params">(Collection&lt;?&gt; c)</span></span>;    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">clear</span><span class="hljs-params">()</span></span>;    C:长度功能    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">size</span><span class="hljs-params">()</span></span>;    D:判断功能    <span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">isEmpty</span><span class="hljs-params">()</span></span>;    <span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">contains</span><span class="hljs-params">(Object o)</span></span>;    <span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">containsAll</span><span class="hljs-params">(Collection&lt;?&gt; c)</span></span>;    <span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">retainAll</span><span class="hljs-params">(Collection&lt;?&gt; c)</span></span>;     E:获取Set集合的迭代器：    <span class="hljs-function">Iterator&lt;E&gt; <span class="hljs-title">iterator</span><span class="hljs-params">()</span></span>;    F:把集合转换成数组    Object[] toArray();    &lt;T&gt; T[] toArray(T[] a);    <span class="hljs-comment">//判断元素是否重复，为子类提高重写方法</span>    <span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">equals</span><span class="hljs-params">(Object o)</span></span>;    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">hashCode</span><span class="hljs-params">()</span></span>;}</code></pre></div><h2 id="HashSet"><a href="#HashSet" class="headerlink" title="HashSet"></a>HashSet</h2><p>HashSet实现Set接口，底层由HashMap(后面讲解)来实现，为哈希表结构，新增元素相当于HashMap的key，value默认为一个固定的Object。在我看来，HashSet相当于一个阉割版的HashMap;</p><p>当有元素插入的时候，会计算元素的hashCode值，将元素插入到哈希表对应的位置中来；</p><p>它继承于AbstractSet，实现了Set, Cloneable, Serializable接口。</p><p>(1)HashSet继承AbstractSet类，获得了Set接口大部分的实现，减少了实现此接口所需的工作，实际上是又继承了AbstractCollection类；</p><p>(2)HashSet实现了Set接口，获取Set接口的方法，可以自定义具体实现，也可以继承AbstractSet类中的实现；</p><p>(3)HashSet实现Cloneable，得到了clone()方法，可以实现克隆功能；</p><p>(4)HashSet实现Serializable，表示可以被序列化，通过序列化去传输，典型的应用就是hessian协议。</p><p>具有如下特点：</p><ul><li>不允许出现重复因素；</li><li>允许插入Null值；</li><li>元素无序（添加顺序和遍历顺序不一致）；</li><li>线程不安全，若2个线程同时操作HashSet，必须通过代码实现同步；</li></ul><h3 id="HashSet基本操作"><a href="#HashSet基本操作" class="headerlink" title="HashSet基本操作"></a>HashSet基本操作</h3><p>HashSet底层由HashMap实现，插入的元素被当做是HashMap的key，根据hashCode值来确定集合中的位置，由于Set集合中并没有角标的概念，所以并没有像List一样提供get（）方法。当获取HashSet中某个元素时，只能通过遍历集合的方式进行equals()比较来实现；</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HashSetTest</span> </span>{    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] agrs)</span></span>{        <span class="hljs-comment">//创建HashSet集合：</span>        Set&lt;String&gt; hashSet = <span class="hljs-keyword">new</span> HashSet&lt;String&gt;();        System.out.println(<span class="hljs-string">"HashSet初始容量大小："</span>+hashSet.size());        <span class="hljs-comment">//元素添加：</span>        hashSet.add(<span class="hljs-string">"my"</span>);        hashSet.add(<span class="hljs-string">"name"</span>);        hashSet.add(<span class="hljs-string">"is"</span>);        hashSet.add(<span class="hljs-string">"jiaboyan"</span>);        hashSet.add(<span class="hljs-string">","</span>);        hashSet.add(<span class="hljs-string">"hello"</span>);        hashSet.add(<span class="hljs-string">"world"</span>);        hashSet.add(<span class="hljs-string">"!"</span>);        System.out.println(<span class="hljs-string">"HashSet容量大小："</span>+hashSet.size());        <span class="hljs-comment">//迭代器遍历：</span>        Iterator&lt;String&gt; iterator = hashSet.iterator();        <span class="hljs-keyword">while</span> (iterator.hasNext()){            String str = iterator.next();            System.out.println(str);        }        <span class="hljs-comment">//增强for循环</span>        <span class="hljs-keyword">for</span>(String str:hashSet){            <span class="hljs-keyword">if</span>(<span class="hljs-string">"jiaboyan"</span>.equals(str)){                System.out.println(<span class="hljs-string">"你就是我想要的元素:"</span>+str);            }            System.out.println(str);        }        <span class="hljs-comment">//元素删除：</span>        hashSet.remove(<span class="hljs-string">"jiaboyan"</span>);        System.out.println(<span class="hljs-string">"HashSet元素大小："</span> + hashSet.size());        hashSet.clear();        System.out.println(<span class="hljs-string">"HashSet元素大小："</span> + hashSet.size());        <span class="hljs-comment">//集合判断：</span>        <span class="hljs-keyword">boolean</span> isEmpty = hashSet.isEmpty();        System.out.println(<span class="hljs-string">"HashSet是否为空："</span> + isEmpty);        <span class="hljs-keyword">boolean</span> isContains = hashSet.contains(<span class="hljs-string">"hello"</span>);        System.out.println(<span class="hljs-string">"HashSet是否为空："</span> + isContains);    }}</code></pre></div><h3 id="HashSet元素添加分析"><a href="#HashSet元素添加分析" class="headerlink" title="HashSet元素添加分析"></a>HashSet元素添加分析</h3><p>Set集合不允许添加重复元素，那么到底是个怎么情况呢？</p><p>来看一个简单的例子：</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HashSetTest</span> </span>{    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] agrs)</span></span>{        <span class="hljs-comment">//hashCode() 和 equals()测试：</span>        hashCodeAndEquals();    }    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">hashCodeAndEquals</span><span class="hljs-params">()</span></span>{        <span class="hljs-comment">//第一个 Set集合：</span>        Set&lt;String&gt; set1 = <span class="hljs-keyword">new</span> HashSet&lt;String&gt;();        String str1 = <span class="hljs-keyword">new</span> String(<span class="hljs-string">"jiaboyan"</span>);        String str2 = <span class="hljs-keyword">new</span> String(<span class="hljs-string">"jiaboyan"</span>);        set1.add(str1);        set1.add(str2);        System.out.println(<span class="hljs-string">"长度："</span>+set1.size()+<span class="hljs-string">",内容为："</span>+set1);        <span class="hljs-comment">//第二个 Set集合：</span>        Set&lt;App&gt; set2 = <span class="hljs-keyword">new</span> HashSet&lt;App&gt;();        App app1 = <span class="hljs-keyword">new</span> App();        app1.setName(<span class="hljs-string">"jiaboyan"</span>);        App app2 = <span class="hljs-keyword">new</span> App();        app2.setName(<span class="hljs-string">"jiaboyan"</span>);        set2.add(app1);        set2.add(app2);        System.out.println(<span class="hljs-string">"长度："</span>+set2.size()+<span class="hljs-string">",内容为："</span>+set2);        <span class="hljs-comment">//第三个 Set集合：</span>        Set&lt;App&gt; set3 = <span class="hljs-keyword">new</span> HashSet&lt;App&gt;();        App app3 = <span class="hljs-keyword">new</span> App();        app3.setName(<span class="hljs-string">"jiaboyan"</span>);        set3.add(app3);        set3.add(app3);        System.out.println(<span class="hljs-string">"长度："</span>+set3.size()+<span class="hljs-string">",内容为："</span>+set3);    }}</code></pre></div><p>测试结果：</p><div class="hljs"><pre><code class="hljs java">长度：<span class="hljs-number">1</span>,内容为：[jiaboyan]长度：<span class="hljs-number">2</span>,内容为：[com.jiaboyan.collection.App<span class="hljs-meta">@efb</span>78af, com.jiaboyan.collection.App@<span class="hljs-number">5f</span>3306ad]长度：<span class="hljs-number">1</span>,内容为：[com.jiaboyan.collection.App@<span class="hljs-number">1f</span>b030d8]</code></pre></div><p>可以看到，第一个Set集合中最终只有一个元素；第二个Set集合保留了2个元素；第三个集合也只有1个元素；</p><p>究竟是什么原因呢？</p><p>让我们来看看<strong>HashSet</strong>的add(E e)方法：</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">add</span><span class="hljs-params">(E e)</span> </span>{    <span class="hljs-keyword">return</span> map.put(e, PRESENT)==<span class="hljs-keyword">null</span>;}</code></pre></div><p>在底层HashSet调用了<strong>HashMap</strong>的put(K key, V value)方法:</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> V <span class="hljs-title">put</span><span class="hljs-params">(K key, V value)</span> </span>{    <span class="hljs-keyword">if</span> (table == EMPTY_TABLE) {        inflateTable(threshold);    }    <span class="hljs-keyword">if</span> (key == <span class="hljs-keyword">null</span>)        <span class="hljs-keyword">return</span> putForNullKey(value);    <span class="hljs-keyword">int</span> hash = hash(key);    <span class="hljs-keyword">int</span> i = indexFor(hash, table.length);    <span class="hljs-keyword">for</span> (Entry&lt;K,V&gt; e = table[i]; e != <span class="hljs-keyword">null</span>; e = e.next) {        Object k;        <span class="hljs-keyword">if</span> (e.hash == hash &amp;&amp; ((k = e.key) == key || key.equals(k))) {            V oldValue = e.value;            e.value = value;            e.recordAccess(<span class="hljs-keyword">this</span>);            <span class="hljs-keyword">return</span> oldValue;        }    }    modCount++;    addEntry(hash, key, value, i);    <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;}</code></pre></div><p>通过查看以上的源码，我们可以了解到：实际的逻辑都是在HashMap的put()方法中。</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">int</span> hash = hash(key) 对传入的key计算hash值；<span class="hljs-keyword">int</span> i = indexFor(hash, table.length) 对hash值进行转换，转换成数组的index(HashMap中底层存储使用了Entry&lt;K,V&gt;[]数组)；<span class="hljs-keyword">for</span> (Entry&lt;K,V&gt; e = table[i]; e != <span class="hljs-keyword">null</span>; e = e.next) 判断对应index下是否存在元素；如果存在，则<span class="hljs-keyword">if</span>(e.hash == hash &amp;&amp; ((k = e.key) == key || key.equals(k)))判断；如果不存在，则addEntry(hash, key, value, i)直接添加；</code></pre></div><p>简单概括如下：</p><p>在向HashMap中添加元素时，先判断key的hashCode值是否相同，如果相同，则调用equals()、==进行判断，若相同则覆盖原有元素；如果不同，则直接向Map中添加元素；</p><p>反过来，我们在看下上面的例子：</p><p>在第一个Set集合中，我们new了两个String对象，赋了相同的值。当传入到HashMap中时，key均为“jiaboyan”，所以hash和i的值都相同。进行if (e.hash == hash &amp;&amp; ((k = e.key) == key || key.equals(k)))判断，由于String对象重写了equals()方法，所以在((k = e.key) == key || key.equals(k))判断时，返回了true，所以第二次的插入并不会增加Set集合的长度；</p><p>第二个Set集合中，也是new了两个对象，但没有重写equals()方法（底层调用的Object的equals()，也就是==判断），所以会增加2个元素；</p><p>第三个Set集合中，只new了一个对象，调用的两次add方法都添加的这个新new的对象，所以也只是保留了1个元素；</p><h2 id="TreeSet"><a href="#TreeSet" class="headerlink" title="TreeSet"></a>TreeSet</h2><p>从名字上可以看出，此集合的实现和树结构有关。与HashSet集合类似，TreeSet也是基于Map来实现，具体实现<strong>TreeMap</strong>(后面讲解)，其底层结构为<strong>红黑树</strong>（特殊的二叉查找树）；</p><p>与HashSet不同的是，TreeSet具有排序功能，分为自然排序(123456)和自定义排序两类，默认是自然排序；在程序中，我们可以按照任意顺序将元素插入到集合中，等到遍历时TreeSet会按照一定顺序输出–倒序或者升序；</p><p>它继承AbstractSet，实现NavigableSet, Cloneable, Serializable接口。</p><p>（1）与HashSet同理，TreeSet继承AbstractSet类，获得了Set集合基础实现操作；</p><p>（2）TreeSet实现NavigableSet接口，而NavigableSet又扩展了SortedSet接口。这两个接口主要定义了搜索元素的能力，例如给定某个元素，查找该集合中比给定元素大于、小于、等于的元素集合，或者比给定元素大于、小于、等于的元素个数；简单地说，实现NavigableSet接口使得TreeSet具备了元素搜索功能；</p><p>（3）TreeSet实现Cloneable接口，意味着它也可以被克隆；</p><p>（4）TreeSet实现了Serializable接口，可以被序列化，可以使用hessian协议来传输；</p><p>具有如下特点：</p><ul><li>对插入的元素进行排序，是一个有序的集合（主要与HashSet的区别）;</li><li>底层使用红黑树结构，而不是哈希表结构；</li><li>允许插入Null值；</li><li>不允许插入重复元素；</li><li>线程不安全；</li></ul><h3 id="TreeSet基本操作"><a href="#TreeSet基本操作" class="headerlink" title="TreeSet基本操作"></a>TreeSet基本操作</h3><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TreeSetTest</span> </span>{    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] agrs)</span></span>{        TreeSet&lt;String&gt; treeSet = <span class="hljs-keyword">new</span> TreeSet&lt;String&gt;();        System.out.println(<span class="hljs-string">"TreeSet初始化容量大小："</span>+treeSet.size());        <span class="hljs-comment">//元素添加：</span>        treeSet.add(<span class="hljs-string">"my"</span>);        treeSet.add(<span class="hljs-string">"name"</span>);        treeSet.add(<span class="hljs-string">"jiaboyan"</span>);        treeSet.add(<span class="hljs-string">"hello"</span>);        treeSet.add(<span class="hljs-string">"world"</span>);        treeSet.add(<span class="hljs-string">"1"</span>);        treeSet.add(<span class="hljs-string">"2"</span>);        treeSet.add(<span class="hljs-string">"3"</span>);        System.out.println(<span class="hljs-string">"TreeSet容量大小："</span> + treeSet.size());        System.out.println(<span class="hljs-string">"TreeSet元素顺序为："</span> + treeSet.toString());        <span class="hljs-comment">//增加for循环遍历：</span>        <span class="hljs-keyword">for</span>(String str:treeSet){            System.out.println(<span class="hljs-string">"遍历元素："</span>+str);        }        <span class="hljs-comment">//迭代器遍历：升序</span>        Iterator&lt;String&gt; iteratorAesc = treeSet.iterator();        <span class="hljs-keyword">while</span>(iteratorAesc.hasNext()){            String str = iteratorAesc.next();            System.out.println(<span class="hljs-string">"遍历元素升序："</span>+str);        }        <span class="hljs-comment">//迭代器遍历：降序</span>        Iterator&lt;String&gt; iteratorDesc = treeSet.descendingIterator();        <span class="hljs-keyword">while</span>(iteratorDesc.hasNext()){            String str = iteratorDesc.next();            System.out.println(<span class="hljs-string">"遍历元素降序："</span>+str);        }        <span class="hljs-comment">//元素获取:实现NavigableSet接口</span>        String firstEle = treeSet.first();<span class="hljs-comment">//获取TreeSet头节点：</span>        System.out.println(<span class="hljs-string">"TreeSet头节点为："</span> + firstEle);        <span class="hljs-comment">// 获取指定元素之前的所有元素集合：(不包含指定元素)</span>        SortedSet&lt;String&gt; headSet = treeSet.headSet(<span class="hljs-string">"jiaboyan"</span>);        System.out.println(<span class="hljs-string">"jiaboyan节点之前的元素为："</span>+headSet.toString());        <span class="hljs-comment">//获取给定元素之间的集合：（包含头，不包含尾）</span>        SortedSet subSet = treeSet.subSet(<span class="hljs-string">"1"</span>,<span class="hljs-string">"world"</span>);        System.out.println(<span class="hljs-string">"1--jiaboan之间节点元素为："</span>+subSet.toString());        <span class="hljs-comment">//集合判断：</span>        <span class="hljs-keyword">boolean</span> isEmpty = treeSet.isEmpty();        System.out.println(<span class="hljs-string">"TreeSet是否为空："</span>+isEmpty);        <span class="hljs-keyword">boolean</span> isContain = treeSet.contains(<span class="hljs-string">"who"</span>);        System.out.println(<span class="hljs-string">"TreeSet是否包含who元素："</span>+isContain);        <span class="hljs-comment">//元素删除：</span>        <span class="hljs-keyword">boolean</span> jiaboyanRemove = treeSet.remove(<span class="hljs-string">"jiaboyan"</span>);        System.out.println(<span class="hljs-string">"jiaboyan元素是否被删除"</span>+jiaboyanRemove);        <span class="hljs-comment">//集合中不存在的元素，删除返回false</span>        <span class="hljs-keyword">boolean</span> whoRemove = treeSet.remove(<span class="hljs-string">"who"</span>);        System.out.println(<span class="hljs-string">"who元素是否被删除"</span>+whoRemove);       <span class="hljs-comment">//删除并返回第一个元素：如果set集合不存在元素，则返回null</span>        String pollFirst = treeSet.pollFirst();        System.out.println(<span class="hljs-string">"删除的第一个元素："</span>+pollFirst);        <span class="hljs-comment">//删除并返回最后一个元素：如果set集合不存在元素，则返回null</span>        String pollLast = treeSet.pollLast();        System.out.println(<span class="hljs-string">"删除的最后一个元素："</span>+pollLast);        treeSet.clear();<span class="hljs-comment">//清空集合:</span>    }}</code></pre></div><h3 id="TreeSet元素排序"><a href="#TreeSet元素排序" class="headerlink" title="TreeSet元素排序"></a>TreeSet元素排序</h3><p>在前面的章节，我们讲到了TreeSet是一个有序集合，可以对集合元素排序，其中分为自然排序和自定义排序，那么这两种方式如何实现呢？</p><p>首先，我们通过JDK提供的对象来展示，我们使用String、Integer：</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TreeSetTest</span> </span>{    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] agrs)</span></span>{        naturalSort();    }    <span class="hljs-comment">//自然排序顺序：升序</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">naturalSort</span><span class="hljs-params">()</span></span>{        TreeSet&lt;String&gt; treeSetString = <span class="hljs-keyword">new</span> TreeSet&lt;String&gt;();        treeSetString.add(<span class="hljs-string">"a"</span>);        treeSetString.add(<span class="hljs-string">"z"</span>);        treeSetString.add(<span class="hljs-string">"d"</span>);        treeSetString.add(<span class="hljs-string">"b"</span>);        System.out.println(<span class="hljs-string">"字母顺序："</span> + treeSetString.toString());        TreeSet&lt;Integer&gt; treeSetInteger = <span class="hljs-keyword">new</span> TreeSet&lt;Integer&gt;();        treeSetInteger.add(<span class="hljs-number">1</span>);        treeSetInteger.add(<span class="hljs-number">24</span>);        treeSetInteger.add(<span class="hljs-number">23</span>);        treeSetInteger.add(<span class="hljs-number">6</span>);        System.out.println(treeSetInteger.toString());        System.out.println(<span class="hljs-string">"数字顺序："</span> + treeSetString.toString());    }}</code></pre></div><p>测试结果：</p><div class="hljs"><pre><code class="hljs java">字母顺序：[a, b, d, z]数字顺序：[<span class="hljs-number">1</span>, <span class="hljs-number">6</span>, <span class="hljs-number">23</span>, <span class="hljs-number">24</span>]</code></pre></div><p>接下来，我们自定义对象，看能否实现：</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">App</span></span>{    <span class="hljs-keyword">private</span> String name;    <span class="hljs-keyword">private</span> Integer age;    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">App</span><span class="hljs-params">()</span></span>{}    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">App</span><span class="hljs-params">(String name,Integer age)</span></span>{        <span class="hljs-keyword">this</span>.name = name;        <span class="hljs-keyword">this</span>.age = age;    }    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getName</span><span class="hljs-params">()</span> </span>{        <span class="hljs-keyword">return</span> name;    }    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setName</span><span class="hljs-params">(String name)</span> </span>{        <span class="hljs-keyword">this</span>.name = name;    }    <span class="hljs-function"><span class="hljs-keyword">public</span> Integer <span class="hljs-title">getAge</span><span class="hljs-params">()</span> </span>{        <span class="hljs-keyword">return</span> age;    }    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setAge</span><span class="hljs-params">(Integer age)</span> </span>{        <span class="hljs-keyword">this</span>.age = age;    }    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args )</span></span>{        System.out.println( <span class="hljs-string">"Hello World!"</span> );    }}<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TreeSetTest</span> </span>{    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] agrs)</span></span>{        customSort();    }     <span class="hljs-comment">//自定义排序顺序：升序</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">customSort</span><span class="hljs-params">()</span></span>{        TreeSet&lt;App&gt; treeSet = <span class="hljs-keyword">new</span> TreeSet&lt;App&gt;();        <span class="hljs-comment">//排序对象：</span>        App app1 = <span class="hljs-keyword">new</span> App(<span class="hljs-string">"hello"</span>,<span class="hljs-number">10</span>);        App app2 = <span class="hljs-keyword">new</span> App(<span class="hljs-string">"world"</span>,<span class="hljs-number">20</span>);        App app3 = <span class="hljs-keyword">new</span> App(<span class="hljs-string">"my"</span>,<span class="hljs-number">15</span>);        App app4 = <span class="hljs-keyword">new</span> App(<span class="hljs-string">"name"</span>,<span class="hljs-number">25</span>);        <span class="hljs-comment">//添加到集合：</span>        treeSet.add(app1);        treeSet.add(app2);        treeSet.add(app3);        treeSet.add(app4);        System.out.println(<span class="hljs-string">"TreeSet集合顺序为："</span>+treeSet);    }}</code></pre></div><p>测试结果：</p><div class="hljs"><pre><code class="hljs java">抛出异常：提示App不能转换为Comparable对象：Exception in thread <span class="hljs-string">"main"</span> java.lang.ClassCastException: com.jiaboyan.collection.App cannot be cast to java.lang.Comparable</code></pre></div><p>为什么会报错呢？</p><div class="hljs"><pre><code class="hljs java">compare(key, key); <span class="hljs-comment">// type (and possibly null) check</span><span class="hljs-function"><span class="hljs-keyword">final</span> <span class="hljs-keyword">int</span> <span class="hljs-title">compare</span><span class="hljs-params">(Object k1, Object k2)</span> </span>{    <span class="hljs-keyword">return</span> comparator==<span class="hljs-keyword">null</span> ? ((Comparable&lt;? <span class="hljs-keyword">super</span> K&gt;)k1).compareTo((K)k2)        : comparator.compare((K)k1, (K)k2);}</code></pre></div><p>通过查看源码发现，在TreeSet调用add方法时，会调用到底层TreeMap的put方法，在put方法中会调用到compare(key, key)方法，进行key大小的比较；</p><p>在比较的时候，会将传入的key进行类型强转，所以当我们自定义的App类进行比较的时候，自然就会抛出异常，因为App类并没有实现Comparable接口；</p><p>将App实现Comparable接口，在做比较:</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">App</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">Comparable</span>&lt;<span class="hljs-title">App</span>&gt;</span>{    <span class="hljs-keyword">private</span> String name;    <span class="hljs-keyword">private</span> Integer age;    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">App</span><span class="hljs-params">()</span></span>{}    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">App</span><span class="hljs-params">(String name,Integer age)</span></span>{        <span class="hljs-keyword">this</span>.name = name;        <span class="hljs-keyword">this</span>.age = age;    }    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getName</span><span class="hljs-params">()</span> </span>{        <span class="hljs-keyword">return</span> name;    }    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setName</span><span class="hljs-params">(String name)</span> </span>{        <span class="hljs-keyword">this</span>.name = name;    }    <span class="hljs-function"><span class="hljs-keyword">public</span> Integer <span class="hljs-title">getAge</span><span class="hljs-params">()</span> </span>{        <span class="hljs-keyword">return</span> age;    }    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setAge</span><span class="hljs-params">(Integer age)</span> </span>{        <span class="hljs-keyword">this</span>.age = age;    }    <span class="hljs-comment">//自定义比较：先比较name的长度，在比较age的大小；</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">compareTo</span><span class="hljs-params">(App app)</span> </span>{        <span class="hljs-comment">//比较name的长度：</span>        <span class="hljs-keyword">int</span> num = <span class="hljs-keyword">this</span>.name.length() - app.name.length();        <span class="hljs-comment">//如果name长度一样，则比较年龄的大小：</span>        <span class="hljs-keyword">return</span> num == <span class="hljs-number">0</span> ? <span class="hljs-keyword">this</span>.age - app.age : num;    }    <span class="hljs-meta">@Override</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">toString</span><span class="hljs-params">()</span> </span>{        <span class="hljs-keyword">return</span> <span class="hljs-string">"App{"</span> +                <span class="hljs-string">"name='"</span> + name + <span class="hljs-string">'\''</span> +                <span class="hljs-string">", age="</span> + age +                <span class="hljs-string">'}'</span>;    }}</code></pre></div><p>测试结果如下：</p><div class="hljs"><pre><code class="hljs java">TreeSet集合顺序为：[App{name=<span class="hljs-string">'my'</span>, age=<span class="hljs-number">15</span>}, App{name=<span class="hljs-string">'name'</span>, age=<span class="hljs-number">25</span>}, App{name=<span class="hljs-string">'hello'</span>, age=<span class="hljs-number">10</span>}, App{name=<span class="hljs-string">'world'</span>, age=<span class="hljs-number">20</span>}]</code></pre></div><p>此外，还有另一种方式，那就是实现Comparetor<t>接口，并重写compare方法；</t></p><div class="hljs"><pre><code class="hljs java"><span class="hljs-comment">//自定义App类的比较器：</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComparator</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">Comparator</span>&lt;<span class="hljs-title">App</span>&gt; </span>{    <span class="hljs-comment">//比较方法：先比较年龄，年龄若相同在比较名字长度；</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">compare</span><span class="hljs-params">(App app1, App app2)</span> </span>{        <span class="hljs-keyword">int</span> num = app1.getAge() - app2.getAge();        <span class="hljs-keyword">return</span> num == <span class="hljs-number">0</span> ? app1.getName().length() - app2.getName().length() : num;    }}</code></pre></div><p>此时，App不用在实现Comparerable接口了，单纯的定义一个类即可；</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">App</span></span>{    <span class="hljs-keyword">private</span> String name;    <span class="hljs-keyword">private</span> Integer age;    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">App</span><span class="hljs-params">()</span></span>{}    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">App</span><span class="hljs-params">(String name,Integer age)</span></span>{        <span class="hljs-keyword">this</span>.name = name;        <span class="hljs-keyword">this</span>.age = age;    }    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getName</span><span class="hljs-params">()</span> </span>{        <span class="hljs-keyword">return</span> name;    }    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setName</span><span class="hljs-params">(String name)</span> </span>{        <span class="hljs-keyword">this</span>.name = name;    }    <span class="hljs-function"><span class="hljs-keyword">public</span> Integer <span class="hljs-title">getAge</span><span class="hljs-params">()</span> </span>{        <span class="hljs-keyword">return</span> age;    }    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setAge</span><span class="hljs-params">(Integer age)</span> </span>{        <span class="hljs-keyword">this</span>.age = age;    }    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args )</span></span>{        System.out.println( <span class="hljs-string">"Hello World!"</span> );    }}<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TreeSetTest</span> </span>{    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] agrs)</span></span>{        customSort();    }    <span class="hljs-comment">//自定义比较器：升序</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">customComparatorSort</span><span class="hljs-params">()</span></span>{        TreeSet&lt;App&gt; treeSet = <span class="hljs-keyword">new</span> TreeSet&lt;App&gt;(<span class="hljs-keyword">new</span> AppComparator());        <span class="hljs-comment">//排序对象：</span>        App app1 = <span class="hljs-keyword">new</span> App(<span class="hljs-string">"hello"</span>,<span class="hljs-number">10</span>);        App app2 = <span class="hljs-keyword">new</span> App(<span class="hljs-string">"world"</span>,<span class="hljs-number">20</span>);        App app3 = <span class="hljs-keyword">new</span> App(<span class="hljs-string">"my"</span>,<span class="hljs-number">15</span>);        App app4 = <span class="hljs-keyword">new</span> App(<span class="hljs-string">"name"</span>,<span class="hljs-number">25</span>);        <span class="hljs-comment">//添加到集合：</span>        treeSet.add(app1);        treeSet.add(app2);        treeSet.add(app3);        treeSet.add(app4);        System.out.println(<span class="hljs-string">"TreeSet集合顺序为："</span>+treeSet);    }}</code></pre></div><p>测试结果：</p><div class="hljs"><pre><code class="hljs java">TreeSet集合顺序为：[App{name=<span class="hljs-string">'hello'</span>, age=<span class="hljs-number">10</span>}, App{name=<span class="hljs-string">'my'</span>, age=<span class="hljs-number">15</span>}, App{name=<span class="hljs-string">'world'</span>, age=<span class="hljs-number">20</span>}, App{name=<span class="hljs-string">'name'</span>, age=<span class="hljs-number">25</span>}]</code></pre></div><p>最后，在说下关于compareTo()、compare()方法：</p><div class="hljs"><pre><code class="hljs java">结果返回大于<span class="hljs-number">0</span>时，方法前面的值大于方法中的值；结果返回等于<span class="hljs-number">0</span>时，方法前面的值等于方法中的值；结果返回小于<span class="hljs-number">0</span>时，方法前面的值小于方法中的值；</code></pre></div><p>集合排序方法</p><div class="hljs"><pre><code class="hljs java">   <span class="hljs-meta">@Test</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testFor</span><span class="hljs-params">()</span> </span>{        String orderId1 = <span class="hljs-string">"2321837281372913"</span>;        String userId1 = <span class="hljs-string">"20180701001"</span>;        String orderId2 = <span class="hljs-string">"2321837281372914"</span>;        String userId2 = <span class="hljs-string">"20180701002"</span>;        String orderId3 = <span class="hljs-string">"2321837281372912"</span>;        String userId3 = <span class="hljs-string">"20180701003"</span>;        String orderId4 = <span class="hljs-string">"2321837281372918"</span>;        String userId4 = <span class="hljs-string">"20180701005"</span>;        String orderId5 = <span class="hljs-string">"2321837281372918"</span>;        String userId5 = <span class="hljs-string">"20180701004"</span>;        Order order = <span class="hljs-keyword">new</span> Order();        order.setUserId(userId1);        order.setOrderId(orderId1);        Order order1 = <span class="hljs-keyword">new</span> Order();        order1.setOrderId(orderId2);        order1.setUserId(userId2);        Order order2 = <span class="hljs-keyword">new</span> Order();        order2.setOrderId(orderId3);        order2.setUserId(userId3);        Order order3 = <span class="hljs-keyword">new</span> Order();        order3.setOrderId(orderId4);        order3.setUserId(userId4);        Order order4 = <span class="hljs-keyword">new</span> Order();        order4.setOrderId(orderId5);        order4.setUserId(userId5);        List&lt;Order&gt; orderList = <span class="hljs-keyword">new</span> ArrayList&lt;Order&gt;();        orderList.add(order);        orderList.add(order1);        orderList.add(order2);        orderList.add(order3);        orderList.add(order4);<span class="hljs-comment">//1.jdk8 lambda排序，带参数类型</span><span class="hljs-comment">//        orderList.sort(( Order ord1, Order ord2) -&gt; ord2.getOrderId().compareTo(ord1.getOrderId()));</span><span class="hljs-comment">//2.jdk8 lambda排序，不带参数类型</span><span class="hljs-comment">//        orderList.sort(( ord1, ord2) -&gt; ord2.getOrderId().compareTo(ord1.getOrderId()));</span><span class="hljs-comment">//3.jdk8 升序排序，Comparator提供的静态方法</span>        Collections.sort(orderList, Comparator.comparing(Order::getOrderId));<span class="hljs-comment">//4.jdk8 降序排序，Comparator提供的静态方法</span><span class="hljs-comment">//        Collections.sort(orderList, Comparator.comparing(Order::getOrderId).reversed());</span><span class="hljs-comment">//5.jdk8 组合排序，Comparator提供的静态方法，先按orderId排序，orderId相同的按userId排序</span><span class="hljs-comment">//        Collections.sort(orderList, Comparator.comparing(Order::getOrderId).reversed().thenComparing(Order::getUserId));</span>        orderList.stream().forEach(str -&gt; System.out.println(str.getOrderId()+<span class="hljs-string">"/"</span> + str.getUserId()));    }</code></pre></div><hr><p>作者：贾博岩<br>链接：<a href="https://www.jianshu.com/p/b48c47a42916" target="_blank" rel="noopener">https://www.jianshu.com/p/b48c47a42916</a><br>来源：简书</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【LeetCode】680. 验证回文字符串 Ⅱ</title>
    <link href="/blog/2020/05/21/%E3%80%90LeetCode%E3%80%91680.%20%E9%AA%8C%E8%AF%81%E5%9B%9E%E6%96%87%E5%AD%97%E7%AC%A6%E4%B8%B2%20%E2%85%A1/"/>
    <url>/blog/2020/05/21/%E3%80%90LeetCode%E3%80%91680.%20%E9%AA%8C%E8%AF%81%E5%9B%9E%E6%96%87%E5%AD%97%E7%AC%A6%E4%B8%B2%20%E2%85%A1/</url>
    
    <content type="html"><![CDATA[<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>给定一个非空字符串 s，<strong>最多删除一个字符</strong>。判断是否能成为回文字符串。</p><p>示例 1:</p><blockquote><p>输入: “aba”<br>输出: True</p></blockquote><p>示例 2:</p><blockquote><p>输入: “abca”<br>输出: True<br>解释: 你可以删除c字符。</p></blockquote><p>注意:</p><blockquote><p>字符串只包含从 a-z 的小写字母。字符串的最大长度是50000。</p></blockquote><a id="more"></a><h1 id="题解思路"><a href="#题解思路" class="headerlink" title="题解思路"></a>题解思路</h1><p>我们先来看看最简单的情况，也就是不删除字符的情况，然后再递进看看删除情况。</p><ol><li>不删除字符的情况</li></ol><p>先考虑如果不允许删除字符，如何判断一个字符串是否是回文串？双指针！！！<br>定义左右指针left、right，初始时分别指向字符串的第一个字符和最后一个字符。<br><strong>每次判断左右指针指向的字符是否相同，如果不相同，则不是回文串；如果相同，则将左右指针都往中间移动一位，直到左右指针相遇，则字符串是回文串。</strong></p><ol start="2"><li>删除1个字符的情况</li></ol><p>在前面不删除的情况下，发现<strong>在找到不相等的元素时，[0, left) 和 (right, len(s) - 1] 这两部分已经判断过是回文</strong>，因此不用再次判断。</p><p><strong>剩下的只需要再判断 [left, right] 区间中的字符串</strong>，即删除 left 或者 right 指向的元素，剩余的区间 (left, right] 或者 [left, right) 是否为回文串。</p><p>若 (left, right] 或者 [left, right) 为回文串，则说明删除了一个字符可以构成回文串。</p><p>注意的是：<strong>若删除过一次，则不是回文串。</strong></p><p>如果左右指针从两端同时向中间走，那么：</p><div class="hljs"><pre><code class="hljs livecodeserver">第一步：<span class="hljs-keyword">a</span>       b       c       <span class="hljs-keyword">a</span>|                       |left                  <span class="hljs-literal">right</span></code></pre></div><div class="hljs"><pre><code class="hljs livecodeserver">第二步：<span class="hljs-keyword">a</span>       b       c       <span class="hljs-keyword">a</span>        |       |        left  <span class="hljs-literal">right</span></code></pre></div><p>第一步，左右指针遇到的元素相等，继续向中间走；<br>第二步，左右指针遇到的元素不等，则必须进行处理：我们必须删除其中的一个字符，然后再判断 剩余的所有字符 是否是回文串。</p><div class="hljs"><pre><code class="hljs livecodeserver">删除 b：<span class="hljs-keyword">a</span>       c       <span class="hljs-keyword">a</span>或者  删除 c：<span class="hljs-keyword">a</span>       b       <span class="hljs-keyword">a</span></code></pre></div><p>即判断 aca 或者 aba 是否为回文字符串。</p><p>看看官方给出的实例，辅助理解：<br><img src="https://img2020.cnblogs.com/blog/2013579/202005/2013579-20200521104025718-1527271787.png" srcset="/blog/img/loading.gif" alt=""></p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><div class="hljs"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>{    <span class="hljs-keyword">int</span> del = <span class="hljs-number">0</span>;  <span class="hljs-comment">// 记录删除节点的次数</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">validPalindrome</span><span class="hljs-params">(String s)</span> </span>{        <span class="hljs-keyword">int</span> left = <span class="hljs-number">0</span>, right = s.length()-<span class="hljs-number">1</span>; <span class="hljs-comment">// left左指针 right右指针</span>        <span class="hljs-keyword">while</span>(left &lt; right){            <span class="hljs-keyword">if</span>(s.charAt(left) == s.charAt(right)){                left++;                right--;            }<span class="hljs-keyword">else</span>{                <span class="hljs-comment">// 不相等的话，若没有删除字符，则删除左边或右边的字符再判断</span>                <span class="hljs-comment">// 若删除过一次，则不是回文串</span>                <span class="hljs-keyword">if</span>(del == <span class="hljs-number">0</span>){                    del++;                    <span class="hljs-keyword">return</span> validPalindrome(s.substring(left, right)) || validPalindrome(s.substring(left+<span class="hljs-number">1</span>, right+<span class="hljs-number">1</span>));                }                <span class="hljs-keyword">return</span> <span class="hljs-keyword">false</span>;            }        }        <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;        <span class="hljs-comment">/* if(left &gt; right) return true; */</span>    }}</code></pre></div><h1 id="复杂度分析"><a href="#复杂度分析" class="headerlink" title="复杂度分析"></a>复杂度分析</h1><p>时间复杂度：O(n)。其中 n 是字符串的长度。判断整个字符串是否是回文字符串的时间复杂度是 O(n)，遇到不同字符时，判断两个子串是否是回文字符串的时间复杂度也都是 O(n)。<br>空间复杂度：O(1)。只需要维护有限的常量空间。</p><h1 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h1><p><img src="https://s1.ax1x.com/2020/05/21/YH0528.png" srcset="/blog/img/loading.gif" alt="YH0528.png"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux root 模式</title>
    <link href="/blog/2020/05/17/Linux%20root%20%E6%A8%A1%E5%BC%8F/"/>
    <url>/blog/2020/05/17/Linux%20root%20%E6%A8%A1%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="第一种方式：sudo（暂时的）"><a href="#第一种方式：sudo（暂时的）" class="headerlink" title="第一种方式：sudo（暂时的）"></a>第一种方式：sudo（暂时的）</h1><ul><li>输入<code>sudo</code>，然后显示可以输入的命令</li></ul><blockquote><p>sudo<br>-b：在后台执行指令<br>-h：帮助<br>-H：将HOME环境变量设为新身份的HOME环境变量<br>-k：结束密码的有效期限，即下次再执行sudo时需要输入密码<br>-l：列出目前用户可执行与无法执行的指令<br>-p：改变询问密码的提示符号<br>-s<shell>：执行指定的shell<br>-u&lt;用户&gt;：以指定的用户作为新的身份<br>-v：延长密码有效期限5分钟<br>-V ：显示版本信息</shell></p></blockquote><ul><li>这里我们输入sudo -i，再输入你的用户密码，就会进入root模式了。</li><li>但是这个方法<strong>持续的时间只有五分钟，想要延长时间可以用sudo -v再延长五分钟。</strong></li></ul><h1 id="第二种方法：root（非暂时的）"><a href="#第二种方法：root（非暂时的）" class="headerlink" title="第二种方法：root（非暂时的）"></a>第二种方法：root（非暂时的）</h1><ul><li><p>输入<code>sudo passwd root</code>（注意passwd的拼写），再输入用户密码，接下来会让你设置root密码，并再次确认。                    </p></li><li><p>接下来输入<code>su</code>，再输入刚刚设置的root密码就可以进入root了。</p><p>之后想要退出输入exit即可。</p></li></ul><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu使用yum</title>
    <link href="/blog/2020/05/17/Ubuntu%E4%BD%BF%E7%94%A8yum/"/>
    <url>/blog/2020/05/17/Ubuntu%E4%BD%BF%E7%94%A8yum/</url>
    
    <content type="html"><![CDATA[<h1 id="yum介绍"><a href="#yum介绍" class="headerlink" title="yum介绍"></a>yum介绍</h1><p>详细转见<a href="https://blog.csdn.net/shuaigexiaobo/article/details/79875730" target="_blank" rel="noopener">yum 命令讲解</a></p><a id="more"></a><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><ol><li>首先打开终端（Ctrl+Alt+T），进入root模式<br><img src="https://s1.ax1x.com/2020/05/17/Y2VYSf.png" srcset="/blog/img/loading.gif" alt="Y2VYSf.png"><blockquote><p>jerry是用户名，也就是你自己起的名字。<br>@是分割的符号<br>jerry-VirtualBox是主机名，也就是你所使用的机器的名称<br><del>是当前目录，”</del>“表示根目录<br>$是提示符，当进入root时，会变成#</p></blockquote></li></ol><p><strong>第一种方式：sudo（暂时的）</strong></p><ul><li>输入<code>sudo</code>，然后显示可以输入的命令</li></ul><blockquote><p>sudo<br>-b：在后台执行指令<br>-h：帮助<br>-H：将HOME环境变量设为新身份的HOME环境变量<br>-k：结束密码的有效期限，即下次再执行sudo时需要输入密码<br>-l：列出目前用户可执行与无法执行的指令<br>-p：改变询问密码的提示符号<br>-s<shell>：执行指定的shell<br>-u&lt;用户&gt;：以指定的用户作为新的身份<br>-v：延长密码有效期限5分钟<br>-V ：显示版本信息</shell></p></blockquote><ul><li>这里我们输入sudo -i，再输入你的用户密码，就会进入root模式了。</li><li>但是这个方法<strong>持续的时间只有五分钟，想要延长时间可以用sudo -v再延长五分钟。</strong></li></ul><p><strong>第二种方法：root（非暂时的）</strong></p><ul><li><p>输入<code>sudo passwd root</code>（注意passwd的拼写），再输入用户密码，接下来会让你设置root密码，并再次确认。                    </p></li><li><p>接下来输入<code>su</code>，再输入刚刚设置的root密码就可以进入root了。</p><p>之后想要退出输入exit即可。</p></li></ul><ol start="2"><li><p>检测是否安装了build-essential程序包</p><div class="hljs"><pre><code class="hljs apt-get">![Y2Vg6U.png](https://s1.ax1x.com/2020/05/17/Y2Vg6U.png)&gt; 如果提示下面这个，就是没进入root模式&gt; ![Y2AWgU.png](https://s1.ax1x.com/2020/05/17/Y2AWgU.png)3. 安装yum```apt-get install yum</code></pre></div><p><img src="https://s1.ax1x.com/2020/05/17/Y2eJsS.png" srcset="/blog/img/loading.gif" alt="Y2eJsS.png"></p></li><li><p>安装成功<br><img src="https://s1.ax1x.com/2020/05/17/Y2mg6f.png" srcset="/blog/img/loading.gif" alt="Y2mg6f.png"></p></li></ol><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>yum的命令形式一般是如下：<br><code>yum [options] [command] [package ...]</code></p><h1 id="添加-yum-仓库"><a href="#添加-yum-仓库" class="headerlink" title="添加 yum 仓库"></a>添加 yum 仓库</h1><p><img src="https://img2020.cnblogs.com/blog/2013579/202005/2013579-20200517123750523-1024820902.png" srcset="/blog/img/loading.gif" alt=""></p><ol><li><p>首先要进入到”<code>/etc/yum.repos.d/</code>“目录中<strong>（因为该目录存放着yum仓库的配置文件）</strong></p></li><li><p>使用vim编辑器创建一个名为<code>docker.repo</code>的新配置文件（<br>命令  </p><blockquote><p>vim /etc/yum.repos.d/docker.repo 文件名称可随意，但后缀必须为repo），逐项写入下面加粗的配置参数并保存退出（不写中文注释）。<br>[rhel-media] yum仓库唯一标识符，避免与其他仓库冲突。<br>name=linuxprobe yum仓库的名称描述，易于识别仓库用处。。<br>baseurl=file:///media/cdrom 提供方式包括FTP（ftp://..）、HTTP（http://..）、本地（file:///..）<br>enabled=1 设置此源是否可用，1为可用，0为禁用。<br>gpgcheck=1 设置此源是否校验文件，1为校验，0为不校验。<br>gpgkey=file:///media/cdrom/RPM-GPG-KEY-redhat-release 若为校验请指定公钥文件地址。</p></blockquote></li></ol><hr><p>在<a href="https://blog.csdn.net/lengfeng92/article/details/26097509?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522158968685319195162502059%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.57693%2522%257D&amp;request_id=158968685319195162502059&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v25-1-26097509.nonecase&amp;utm_term=ubuntu%E4%B8%AD%E6%94%AF%E6%8C%81yum" target="_blank" rel="noopener">原文</a>的基础上略修改。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【LeetCode】560. 和为K的子数组</title>
    <link href="/blog/2020/05/15/%E3%80%90LeetCode%E3%80%91560.%20%E5%92%8C%E4%B8%BAK%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84/"/>
    <url>/blog/2020/05/15/%E3%80%90LeetCode%E3%80%91560.%20%E5%92%8C%E4%B8%BAK%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84/</url>
    
    <content type="html"><![CDATA[<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>给定一个整数数组和一个整数 k，你需要找到该数组中和为 k 的连续的子数组的个数。</p><p>示例 1 :</p><blockquote><p>输入:nums = [1,1,1], k = 2<br>输出: 2 , [1,1] 与 [1,1] 为两种不同的情况。</p></blockquote><p>说明 :</p><blockquote><p>数组的长度为 [1, 20,000]。<br>数组中元素的范围是 [-1000, 1000] ，且整数 k 的范围是 [-1e7, 1e7]。</p></blockquote><a id="more"></a><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>看到这题，我唯一能想到的解决方法就是<strong>暴力法（或枚举法）</strong>。</p><p>定下两个下表start、end，使用两次for循环，外层关于end并依次从0开始向后移动，内层关于start并从end开始向前移动。<br>因为题目中要求的是“连续的子数组”，因此就直接<strong>构造了[start,end]的数组，并对其求和sum。</strong><br>只要sum值等于k值，那我们用计数count记录。<br>最后函数返回count即可。</p><p>方法很简单，这样分析的话，不需要用到什么额外的空间，所以<strong>空间复杂度为O(1)</strong>；时间复杂度方面，由于使用两次for循环对数组进行遍历为O(n^2)，再加上求和时间为O(1)，因此总体的<strong>时间复杂度为O(n^2)</strong>。</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><div class="hljs"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>{    <span class="hljs-comment">//注意题中说的是“连续的子数组”</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">subarraySum</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] nums, <span class="hljs-keyword">int</span> k)</span> </span>{        <span class="hljs-keyword">int</span> count = <span class="hljs-number">0</span>;        <span class="hljs-comment">// 计算[start,end]构成的子数组的和sum</span>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> end = <span class="hljs-number">0</span>; end &lt; nums.length; end++) {            <span class="hljs-keyword">int</span> sum = <span class="hljs-number">0</span>;            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> start = end; start &gt;= <span class="hljs-number">0</span>; start--) {                sum += nums[start];                <span class="hljs-keyword">if</span>(sum == k)                    count++;            }        }        <span class="hljs-keyword">return</span> count;    }    <span class="hljs-comment">/*</span><span class="hljs-comment">        时间复杂度：O(n^2)，n为数组的长度；两层循环O(n^2)+求和时间为O(1)</span><span class="hljs-comment">        空间复杂度：O(1)，无需其他存储空间的使用</span><span class="hljs-comment">    */</span>}</code></pre></div><h1 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h1><p><img src="https://s1.ax1x.com/2020/05/15/Yr1lhq.png" srcset="/blog/img/loading.gif" alt="Yr1lhq.png"></p><h1 id="题后心得"><a href="#题后心得" class="headerlink" title="题后心得"></a>题后心得</h1><p>刚看到这题的时候，注意到难度为“中等”，我想肯定不止有这种方法，而且这种方法过于简单，肯定有更高效的、更有技术含量的算法。<br>于是，去看了他人的算法，发现使用了<font color="red" size="4">哈希表</font>。<br><del>可是，我还不会哈希表啊</del><br>接下来这段时间，得找时间把哈希表这块学一点。</p><p>接下来的话特别有意思、深刻：<br><font color="blue" size="4"><br>提交后，我也顺便看了一下评论，有意思的是，我发现了“老马”。<br><img src="https://s1.ax1x.com/2020/05/15/Yr1wNR.png" srcset="/blog/img/loading.gif" alt="Yr1wNR.png"></font></p><font color="blue" size="4"><p>当然，是假的！！！</p><h1 id="精选题解"><a href="#精选题解" class="headerlink" title="精选题解"></a>精选题解</h1><ol><li><a href="https://leetcode-cn.com/problems/subarray-sum-equals-k/solution/bao-li-jie-fa-qian-zhui-he-qian-zhui-he-you-hua-ja/" target="_blank" rel="noopener">暴力解法、前缀和、前缀和哈希表优化</a></li></ol></font><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【LeetCode】136. 只出现一次的数字</title>
    <link href="/blog/2020/05/14/%E3%80%90LeetCode%E3%80%91136.%20%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97/"/>
    <url>/blog/2020/05/14/%E3%80%90LeetCode%E3%80%91136.%20%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97/</url>
    
    <content type="html"><![CDATA[<p>看到今天的“每日一题”，第一时间发现用<font color="red" size="5">位运算</font>很简单、快速。</p><h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。</p><p>说明：</p><p>你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？</p><p>示例 1:</p><blockquote><p>输入: [2,2,1]<br>输出: 1</p></blockquote><p>示例 2:</p><blockquote><p>输入: [4,1,2,1,2]<br>输出: 4</p></blockquote><a id="more"></a><h1 id="题解思路"><a href="#题解思路" class="headerlink" title="题解思路"></a>题解思路</h1><h2 id="位运算"><a href="#位运算" class="headerlink" title="位运算"></a>位运算</h2><p>首先，来看个例子，比如：a^b<br>假设，a、b的值分别是15、2，<br>a 的值是15，转换成二进制为 1111，<br>b 的值是2，转换成二进制为  0010，<br>这下可以根据<strong>异或</strong>的运算规律，可以得出其结果为 1101，即13。</p><blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;   1 1 1 1<br>⊕&nbsp;  0 0 1 0<br>————————————<br>&nbsp;&nbsp;&nbsp;&nbsp;   1 1 0 1</p></blockquote><p>继续看看，我们可以来看看⊕的运算性质：</p><ul><li>a⊕0 = a</li><li>a⊕a = 0</li><li>a⊕b⊕a = (a⊕a)⊕b = 0⊕b = b</li></ul><p>继续看这道题，输入的数组一定是奇数个，<br>现在我假设一共有 2m+1 个元素，<br>其中，m对元素是成对出现的，唯一1个元素就是将被输出的结果。</p><p>接下来可以根据这个假设，列出这个表达式，<br>(a1⊕a2⊕⋯⊕am)⊕(a1⊕a2⊕⋯⊕am)⊕am+1<br>⇨ (a1​⊕a1​)⊕(a2​⊕a2​)⊕⋯⊕(am​⊕am​)⊕am+1​<br>⇨ 0⊕0⊕⋯⊕0⊕am+1​<br>⇨ am+1​</p><p>下面的代码就是采用<strong>按位异或操作符</strong>来完成的。</p><h2 id="哈希表"><a href="#哈希表" class="headerlink" title="哈希表"></a>哈希表</h2><p>成功提交后，我看了其他其他题解，大部分都是使用异或运算来完成。<br>但是，还有一些是使用哈希表来完成的。<br>对哦，为什么我不用 Hash 表呢？<br><del>因为我还不会 Hash 表啊hhh</del><br>好吧，不会归不会，但也得学学。</p><p>这里就直接小本本上记录两个使用Hash来实现的算法：</p><ol><li><a href="https://leetcode-cn.com/problems/single-number/solution/xue-suan-fa-jie-guo-xiang-dui-yu-guo-cheng-bu-na-y/" target="_blank" rel="noopener">利用 Hash 表，Time: O(n)，Space: O(n)</a></li><li><a href="https://leetcode-cn.com/problems/single-number/solution/cou-yi-pian-ti-jie-hua-shuo-ti-jie-hen-hao-wan-by-/" target="_blank" rel="noopener">解决方案：哈希集（HashSet）</a></li></ol><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><ul><li><p>使用<font color="red" size="5">位运算</font>来完成。</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>{    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">singleNumber</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] nums)</span> </span>{        <span class="hljs-comment">// (a1​⊕a1​)⊕(a2​⊕a2​)⊕⋯⊕(am​⊕am​)⊕am+1​</span>        <span class="hljs-comment">// ⇨ 0⊕0⊕⋯⊕0⊕am+1​=am+1​</span>        <span class="hljs-comment">// 结合三个性质：</span>        <span class="hljs-comment">// 1、a⊕0 = a</span>        <span class="hljs-comment">// 2、a⊕a = 0</span>        <span class="hljs-comment">// 3、a⊕b⊕a = (a⊕a)⊕b = 0⊕b = b</span>        <span class="hljs-keyword">int</span> key = <span class="hljs-number">0</span>;        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> num : nums){            <span class="hljs-comment">// 比如：a^b=13</span>            <span class="hljs-comment">// a 的值是15，转换成二进制为1111，</span>            <span class="hljs-comment">// b 的值是2，转换成二进制为0010，</span>            <span class="hljs-comment">// 根据异或的运算规律，可以得出其结果为1101，即13</span>            key ^= num;        }        <span class="hljs-keyword">return</span> key;    }}</code></pre></div><h1 id="复杂度分析"><a href="#复杂度分析" class="headerlink" title="复杂度分析"></a>复杂度分析</h1></li><li><p>时间复杂度：O(n)，其中 n 是数组长度。因为只需要对数组遍历一次即可</p></li><li><p>空间复杂度：O(1)</p></li></ul><h1 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h1><p><img src="https://img2020.cnblogs.com/blog/2013579/202005/2013579-20200514101928082-1693883268.png" srcset="/blog/img/loading.gif" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【LeetCode】102. 二叉树的层序遍历</title>
    <link href="/blog/2020/05/13/%E3%80%90LeetCode%E3%80%91102.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86/"/>
    <url>/blog/2020/05/13/%E3%80%90LeetCode%E3%80%91102.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86/</url>
    
    <content type="html"><![CDATA[<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>给你一个二叉树，请你返回其按 层序遍历 得到的节点值。 （即逐层地，从左到右访问所有节点）。</p><p>示例：<br>二叉树：[3,9,20,null,null,15,7],</p><div class="hljs"><pre><code class="hljs angelscript">  <span class="hljs-number">3</span> / \<span class="hljs-number">9</span>  <span class="hljs-number">20</span>  /  \ <span class="hljs-number">15</span>   <span class="hljs-number">7</span></code></pre></div><p>返回其层次遍历结果：</p><div class="hljs"><pre><code class="hljs json">[  [<span class="hljs-number">3</span>],  [<span class="hljs-number">9</span>,<span class="hljs-number">20</span>],  [<span class="hljs-number">15</span>,<span class="hljs-number">7</span>]]</code></pre></div><a id="more"></a><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>我想用栈来实现，但是发现有些问题。日后再补充。<br>现在，干脆就直接学习学习他人的优秀算法，顺便记录一下感想。</p><blockquote><p>该算法题解来自~<br>微信公众号：看图学算法<br>链接：<a href="https://mp.weixin.qq.com/s/oI_pmqvaA9AFQUPxKX13vw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/oI_pmqvaA9AFQUPxKX13vw</a></p></blockquote><p>用<strong>广度优先BFS</strong>处理是很直观的，可以想象成是一把刀横着切割了每一层，但是深度优先遍历就不那么直观了。<br><img src="https://pic.leetcode-cn.com/1df38946dbf6129193e35a5d1ade36e3c91fc68c702c37def6e7ee15d973388d-4.jpg" srcset="/blog/img/loading.gif" alt="4.jpg"></p><p>我们开下脑洞，把这个二叉树的样子调整一下，摆成一个田字形的样子。<br><strong>田字形的每一层就对应一个list。</strong><br><img src="https://pic.leetcode-cn.com/367726d56045ab65cd9bf34af1f4b98408dfa02669c0d2bb88b4aeb53143cf1f-5.jpg" srcset="/blog/img/loading.gif" alt="5.jpg"></p><p>按照<strong>深度优先DFS</strong>的处理顺序，会先访问节点1，再访问节点2，接着是节点3。<br>之后是第二列的4和5，最后是第三列的6。<br><strong>每次递归的时候都需要带一个index(表示当前的层数)，也就对应那个田字格子中的第几行，如果当前行对应的list不存在，就加入一个空list进去。</strong></p><p>动态演示如下：<br><img src="https://pic.leetcode-cn.com/aeed09e12573ec00d83663bb4f77562e8904ac58cdb2cbe6e995f2ac33b12934-0203_1.gif" srcset="/blog/img/loading.gif" alt="0203_1.gif"></p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>{    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-keyword">int</span> index,TreeNode root, List&lt;List&lt;Integer&gt;&gt; res)</span> </span>{        <span class="hljs-comment">//每次递归的时候都需要带一个index(表示当前的层数)</span>        <span class="hljs-comment">//如果当前行对应的list不存在，就加入一个空list进去。</span><span class="hljs-comment">//假设res是[ [1],[2,3] ]， index是3，就再插入一个空list放到res中</span><span class="hljs-keyword">if</span>(res.size()&lt;index) {res.add(<span class="hljs-keyword">new</span> ArrayList&lt;Integer&gt;());}<span class="hljs-comment">//将当前节点的值加入到res中，index代表当前层，假设index是3，节点值是99</span><span class="hljs-comment">//res是[ [1],[2,3] [4] ]，加入后res就变为 [ [1],[2,3] [4,99] ]</span>res.get(index-<span class="hljs-number">1</span>).add(root.val);<span class="hljs-comment">//递归的处理左子树，右子树，同时将层数index+1</span><span class="hljs-keyword">if</span>(root.left!=<span class="hljs-keyword">null</span>) {dfs(index+<span class="hljs-number">1</span>, root.left, res);}<span class="hljs-keyword">if</span>(root.right!=<span class="hljs-keyword">null</span>) {dfs(index+<span class="hljs-number">1</span>, root.right, res);}}<span class="hljs-keyword">public</span> List&lt;List&lt;Integer&gt;&gt; levelOrder(TreeNode root) {<span class="hljs-keyword">if</span>(root==<span class="hljs-keyword">null</span>) {<span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> ArrayList&lt;List&lt;Integer&gt;&gt;();}<span class="hljs-comment">//用来存放最终结果</span>List&lt;List&lt;Integer&gt;&gt; res = <span class="hljs-keyword">new</span> ArrayList&lt;List&lt;Integer&gt;&gt;();dfs(<span class="hljs-number">1</span>,root,res);<span class="hljs-keyword">return</span> res;}}</code></pre></div><p>时间复杂度:<strong>O(N)<br>空间复杂度:</strong>O(h)，h是树的高度**</p><h1 id="心得体会"><a href="#心得体会" class="headerlink" title="心得体会"></a>心得体会</h1><p>首先，我绝对不会想到用list，因为我<strong>对集合一是不敏感，二是基础知识掌握不多。</strong><br>第二点是，灵活性的不足，即使我想不到list，但是我也没想过“我们开下脑洞，把这个二叉树的样子调整一下，摆成一个田字形的样子”🤣<br>先前写算法基本都是用C来写，偶尔用C++。<br>有的题目用C写起来轻松，但是有的却用Java轻松。<br>很必要的一点，就是<strong>学会使用两种及以上的语言来写算法。</strong></p><h1 id="其他题解"><a href="#其他题解" class="headerlink" title="其他题解"></a>其他题解</h1><ol><li><a href="https://leetcode-cn.com/problems/binary-tree-level-order-traversal/solution/di-gui-he-die-dai-by-powcai-2/" target="_blank" rel="noopener">【精选】递归和迭代</a></li><li><a href="https://leetcode-cn.com/problems/binary-tree-level-order-traversal/solution/er-cha-shu-de-ceng-xu-bian-li-by-leetcode-solution/" target="_blank" rel="noopener">官方题解</a></li><li><a href="https://leetcode-cn.com/problems/binary-tree-level-order-traversal/solution/er-cha-shu-ceng-ci-bian-li-c-queue-by-bnw7cgeofh/" target="_blank" rel="noopener">二叉树层次遍历</a></li></ol><hr><p><font size="2">图片来源：微信公众号“看图学算法”</font><br><font size="1">学习笔记，待补充…</font></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一些常用的 Emoji 符号（可直接复制）</title>
    <link href="/blog/2020/05/13/%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E7%9A%84%20Emoji%20%E7%AC%A6%E5%8F%B7%EF%BC%88%E5%8F%AF%E7%9B%B4%E6%8E%A5%E5%A4%8D%E5%88%B6%EF%BC%89/"/>
    <url>/blog/2020/05/13/%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E7%9A%84%20Emoji%20%E7%AC%A6%E5%8F%B7%EF%BC%88%E5%8F%AF%E7%9B%B4%E6%8E%A5%E5%A4%8D%E5%88%B6%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="其他方法"><a href="#其他方法" class="headerlink" title="其他方法"></a>其他方法</h1><p><a href="https://blog.csdn.net/u014636245/article/details/82945997" target="_blank" rel="noopener">https://blog.csdn.net/u014636245/article/details/82945997</a></p><h1 id="表情类"><a href="#表情类" class="headerlink" title="表情类"></a>表情类</h1><p>😀 😁 😂 🤣 😃 😄 😅 😆 😉 😊 😋 😎 😍 😘  😗 😙 😚 ☺️ 🙂 🤗 🤩 🤔 🤨 😐 😑 😶 🙄 😏 😣 😥 😮 🤐 😯 😪 😫 😴 😌 😛 😜 😝 🤤 😒 😓 😔 😕 🙃 🤑 😲 ☹️ 🙁 😖 😞 😟 😤 😢 😭 😦 😧 😨 😩 🤯 😬 😰 😱 😳 🤪 😵 😡 😠 🤬 😷 🤒 🤕 🤢 🤮 🤧 😇 🤠 🤡 🤥 🤫 🤭 🧐 🤓 😈 👿 👹 👺 💀 👻 👽 🤖 💩 😺 😸 😹 😻 😼 😽 🙀 😿 😾</p><hr><h1 id="手势类"><a href="#手势类" class="headerlink" title="手势类"></a>手势类</h1><p>🤲 👐 🙌 👏 🤝 👍 👎 👊 ✊ 🤛 🤜 🤞 ✌️ 🤟 🤘 👌 👈 👉 👆 👇 ☝️ ✋ 🤚 🖐 🖖 👋 🤙 💪🖕 ✍️ 🙏</p><hr><h1 id="人物"><a href="#人物" class="headerlink" title="人物"></a>人物</h1><p>👶 👧 🧒 👦 👩 🧑 👨 👵 🧓 👴 👲 👳‍♀️ 👳‍♂️ 🧕 🧔 👱‍♂️ 👱‍♀️<br> 👮‍♀️ 👮‍♂️ 👷‍♀️ 👷‍♂️ 💂‍♀️ 💂‍♂️ 🕵️‍♀️ 🕵️‍♂️ 👩‍⚕️ 👨‍⚕️ 👩‍🌾  👨‍🌾 👩‍🍳 👨‍🍳 👩‍🎓 👨‍🎓 👩‍🎤 👨‍🎤 👩‍🏫 👨‍🏫 👩‍🏭 👨‍🏭 👩‍💻  👨‍💻 👩‍💼 👨‍💼 👩‍🔧 👨‍🔧 👩‍🔬 👨‍🔬 👩‍🎨 👨‍🎨 👩‍🚒 👨‍🚒 👩‍✈️  👨‍✈️ 👩‍🚀 👨‍🚀 👩‍⚖️ 👨‍⚖️ 👰 🤵 👸 🤴 🤶 🎅 🧙‍♀️ 🧙‍♂️ 🧝‍♀️ 🧝‍♂️  🧛‍♀️ 🧛‍♂️ 🧟‍♀️ 🧟‍♂️ 🧞‍♀️ 🧞‍♂️ 🧜‍♀️ 🧜‍♂️ 🧚‍♀️ 🧚‍♂️ 👼 🤰 🤱  🙇‍♀️ 🙇‍♂️ 💁‍♀️ 💁‍♂️ 🙅‍♀️ 🙅‍♂️ 🙆‍♀️ 🙆‍♂️ 🙋‍♀️ 🙋‍♂️ 🤦‍♀️ 🤦‍♂️  🤷‍♀️ 🤷‍♂️ 🙎‍♀️ 🙎‍♂️ 🙍‍♀️ 🙍‍♂️ 💇‍♀️ 💇‍♂️ 💆‍♀️ 💆‍♂️ 🧖‍♀️ 🧖‍♂️  💅 🤳 💃 🕺 👯‍♀️ 👯‍♂️ 🕴 🚶‍♀️ 🚶‍♂️ 🏃‍♀️ 🏃‍♂️ 👫 👭 👬 💑 👩‍❤️‍👩  👨‍❤️‍👨 💏 👩‍❤️‍💋‍👩 👨‍❤️‍💋‍👨 👪 👨‍👩‍👧 👨‍👩‍👧‍👦 👨‍👩‍👦‍👦  👨‍👩‍👧‍👧 👩‍👩‍👦 👩‍👩‍👧 👩‍👩‍👧‍👦 👩‍👩‍👦‍👦 👩‍👩‍👧‍👧  👨‍👨‍👦 👨‍👨‍👧 👨‍👨‍👧‍👦 👨‍👨‍👦‍👦 👨‍👨‍👧‍👧 👩‍👦 👩‍👧  👩‍👧‍👦 👩‍👦‍👦 👩‍👧‍👧 👨‍👦 👨‍👧 👨‍👧‍👦 👨‍👦‍👦 👨‍👧‍👧 </p><hr><h1 id="动植物-自然"><a href="#动植物-自然" class="headerlink" title="动植物  自然"></a>动植物  自然</h1><p>🐶 🐱 🐭 🐹 🐰 🦊 🦝 🐻 🐼 🦘 🦡 🐨 🐯 🦁 🐮 🐷 🐽 🐸  🐵 🙈 🙉 🙊 🐒 🐔 🐧 🐦 🐤 🐣 🐥 🦆 🦢 🦅 🦉 🦚 🦜 🦇 🐺 🐗 🐴 🦄 🐝 🐛  🦋 🐌 🐚 🐞 🐜 🦗 🕷 🕸 🦂 🦟 🦠 🐢 🐍 🦎 🦖 🦕 🐙 🦑 🦐 🦀 🐡 🐠 🐟 🐬  🐳 🐋 🦈 🐊 🐅 🐆 🦓 🦍 🐘 🦏 🦛 🐪 🐫 🦙 🦒 🐃 🐂 🐄 🐎 🐖 🐏 🐑 🐐 🦌  🐕 🐩 🐈 🐓 🦃 🕊 🐇 🐁 🐀 🐿 🦔 🐾 🐉 🐲 🌵 🎄 🌲 🌳 🌴 🌱 🌿 ☘️ 🍀 🎍  🎋 🍃 🍂 🍁 🍄 🌾 💐 🌷 🌹 🥀 🌺 🌸 🌼 🌻 🌞 🌝 🌛 🌜 🌚 🌕 🌖 🌗 🌘 🌑  🌒 🌓 🌔 🌙 🌎 🌍 🌏 💫 ⭐️ 🌟 ✨ ⚡️ ☄️ 💥 🔥 🌪 🌈 ☀️ 🌤 ⛅️ 🌥 ☁️ 🌦 🌧 ⛈ 🌩 🌨 ❄️ ☃️ ⛄️ 🌬 💨 💧 💦 ☔️ ☂️ 🌊 🌫</p><h4 id="十二生肖"><a href="#十二生肖" class="headerlink" title="十二生肖"></a>十二生肖</h4><p>🐁🐂🐅🐇🐉🐍🐎🐐🐒🐓🐕🐖 </p><hr><h3 id="水果-食物"><a href="#水果-食物" class="headerlink" title="水果 食物"></a>水果 食物</h3><p>🍏 🍎 🍐 🍊 🍋 🍌 🍉 🍇 🍓 🍈 🍒 🍑 🍍 🥭 🥥 🥝 🍅 🍆  🥑 🥦 🥒 🥬 🌶 🌽 🥕 🥔 🍠 🥐 🍞 🥖 🥨 🥯 🧀 🥚 🍳 🥞 🥓 🥩 🍗 🍖 🌭 🍔  🍟 🍕 🥪 🥙 🌮 🌯 🥗 🥘 🥫 🍝 🍜 🍲 🍛 🍣 🍱 🥟 🍤 🍙 🍚 🍘 🍥 🥮 🥠 🍢  🍡 🍧 🍨 🍦 🥧 🍰 🎂 🍮 🍭 🍬 🍫 🍿 🧂 🍩 🍪 🌰 🥜 🍯 🥛 🍼 ☕️ 🍵 🥤 🍶  🍺 🍻 🥂 🍷 🥃 🍸 🍹 🍾 🥄 🍴 🍽 🥣 🥡 🥢</p><hr><h1 id="运动-娱乐"><a href="#运动-娱乐" class="headerlink" title="运动 娱乐"></a>运动 娱乐</h1><p>⚽️ 🏀 🏈 ⚾️ 🥎 🏐 🏉 🎾 🥏 🎱 🏓 🏸 🥅 🏒 🏑 🥍 🏏 ⛳️  🏹 🎣 🥊 🥋 🎽 ⛸ 🥌 🛷 🛹 🎿 ⛷ 🏂 🏋️‍♀️ 🏋🏻‍♀️ 🏋🏼‍♀️ 🏋🏽‍♀️ 🏋🏾‍♀️ 🏋🏿‍♀️ 🏋️‍♂️ 🏋🏻‍♂️ 🏋🏼‍♂️ 🏋🏽‍♂️ 🏋🏾‍♂️ 🏋🏿‍♂️ 🤼‍♀️ 🤼‍♂️  🤸‍♀️ 🤸🏻‍♀️ 🤸🏼‍♀️ 🤸🏽‍♀️ 🤸🏾‍♀️ 🤸🏿‍♀️ 🤸‍♂️ 🤸🏻‍♂️ 🤸🏼‍♂️  🤸🏽‍♂️ 🤸🏾‍♂️ 🤸🏿‍♂️ ⛹️‍♀️ ⛹🏻‍♀️ ⛹🏼‍♀️ ⛹🏽‍♀️ ⛹🏾‍♀️ ⛹🏿‍♀️ ⛹️‍♂️  ⛹🏻‍♂️ ⛹🏼‍♂️ ⛹🏽‍♂️ ⛹🏾‍♂️ ⛹🏿‍♂️ 🤺 🤾‍♀️ 🤾🏻‍♀️ 🤾🏼‍♀️ 🤾🏾‍♀️  🤾🏾‍♀️ 🤾🏿‍♀️ 🤾‍♂️ 🤾🏻‍♂️ 🤾🏼‍♂️ 🤾🏽‍♂️ 🤾🏾‍♂️ 🤾🏿‍♂️ 🏌️‍♀️  🏌🏻‍♀️ 🏌🏼‍♀️ 🏌🏽‍♀️ 🏌🏾‍♀️ 🏌🏿‍♀️ 🏌️‍♂️ 🏌🏻‍♂️ 🏌🏼‍♂️ 🏌🏽‍♂️  🏌🏾‍♂️ 🏌🏿‍♂️ 🏇 🏇🏻 🏇🏼 🏇🏽 🏇🏾 🏇🏿 🧘‍♀️ 🧘🏻‍♀️ 🧘🏼‍♀️  🧘🏽‍♀️ 🧘🏾‍♀️ 🧘🏿‍♀️ 🧘‍♂️ 🧘🏻‍♂️ 🧘🏼‍♂️ 🧘🏽‍♂️ 🧘🏾‍♂️ 🧘🏿‍♂️  🏄‍♀️ 🏄🏻‍♀️ 🏄🏼‍♀️ 🏄🏽‍♀️ 🏄🏾‍♀️ 🏄🏿‍♀️ 🏄‍♂️ 🏄🏻‍♂️ 🏄🏼‍♂️  🏄🏽‍♂️ 🏄🏾‍♂️ 🏄🏿‍♂️ 🏊‍♀️ 🏊🏻‍♀️ 🏊🏼‍♀️ 🏊🏽‍♀️ 🏊🏾‍♀️ 🏊🏿‍♀️  🏊‍♂️ 🏊🏻‍♂️ 🏊🏼‍♂️ 🏊🏽‍♂️ 🏊🏾‍♂️ 🏊🏿‍♂️ 🤽‍♀️ 🤽🏻‍♀️ 🤽🏼‍♀️  🤽🏽‍♀️ 🤽🏾‍♀️ 🤽🏿‍♀️ 🤽‍♂️ 🤽🏻‍♂️ 🤽🏼‍♂️ 🤽🏽‍♂️ 🤽🏾‍♂️ 🤽🏿‍♂️  🚣‍♀️ 🚣🏻‍♀️ 🚣🏼‍♀️ 🚣🏽‍♀️ 🚣🏾‍♀️ 🚣🏿‍♀️ 🚣‍♂️ 🚣🏻‍♂️ 🚣🏼‍♂️  🚣🏽‍♂️ 🚣🏾‍♂️ 🚣🏿‍♂️ 🧗‍♀️ 🧗🏻‍♀️ 🧗🏼‍♀️ 🧗🏽‍♀️ 🧗🏾‍♀️ 🧗🏿‍♀️  🧗‍♂️ 🧗🏻‍♂️ 🧗🏼‍♂️ 🧗🏽‍♂️ 🧗🏾‍♂️ 🧗🏿‍♂️ 🚵‍♀️ 🚵🏻‍♀️ 🚵🏼‍♀️  🚵🏽‍♀️ 🚵🏾‍♀️ 🚵🏿‍♀️ 🚵‍♂️ 🚵🏻‍♂️ 🚵🏼‍♂️ 🚵🏽‍♂️ 🚵🏾‍♂️ 🚵🏿‍♂️  🚴‍♀️ 🚴🏻‍♀️ 🚴🏼‍♀️ 🚴🏽‍♀️ 🚴🏾‍♀️ 🚴🏿‍♀️ 🚴‍♂️ 🚴🏻‍♂️ 🚴🏼‍♂️  🚴🏽‍♂️ 🚴🏾‍♂️ 🚴🏿‍♂️ 🏆 🥇 🥈 🥉 🏅 🎖 🏵 🎗 🎫 🎟 🎪 🤹‍♀️ 🤹🏻‍♀️  🤹🏼‍♀️ 🤹🏽‍♀️ 🤹🏾‍♀️ 🤹🏿‍♀️ 🤹‍♂️ 🤹🏻‍♂️ 🤹🏼‍♂️ 🤹🏽‍♂️ 🤹🏾‍♂️  🤹🏿‍♂️ 🎭 🎨 🎬 🎤 🎧 🎼 🎹 🥁 🎷 🎺 🎸 🎻 🎲 🧩 ♟ 🎯 🎳 🎮 🎰</p><hr><h1 id="交通-旅行"><a href="#交通-旅行" class="headerlink" title="交通 旅行"></a>交通 旅行</h1><p>🚗 🚕 🚙 🚌 🚎 🏎 🚓 🚑 🚒 🚐 🚚 🚛 🚜 🛴 🚲 🛵 🏍 🚨  🚔 🚍 🚘 🚖 🚡 🚠 🚟 🚃 🚋 🚞 🚝 🚄 🚅 🚈 🚂 🚆 🚇 🚊 🚉 ✈️ 🛫 🛬 🛩 💺  🛰 🚀 🛸 🚁 🛶 ⛵️ 🚤 🛥 🛳 ⛴ 🚢 ⚓️ ⛽️ 🚧 🚦 🚥 🚏 🗺 🗿 🗽 🗼 🏰 🏯 🏟  🎡 🎢 🎠 ⛲️ ⛱ 🏖 🏝 🏜 🌋 ⛰ 🏔 🗻 🏕 ⛺️ 🏠 🏡 🏘 🏚 🏗 🏭 🏢 🏬 🏣 🏤 🏥 🏦 🏨 🏪 🏫 🏩 💒 🏛 ⛪️ 🕌 🕍 🕋 ⛩ 🛤 🛣 🗾 🎑 🏞 🌅 🌄 🌠 🎇 🎆 🌇 🌆  🏙 🌃 🌌 🌉 🌁</p><hr><h3 id="物体"><a href="#物体" class="headerlink" title="物体"></a>物体</h3><p>⌚️ 📱 📲 💻 ⌨️ 🖥 🖨 🖱 🖲 🕹 🗜 💽 💾 💿 📀 📼 📷 📸  📹 🎥 📽 🎞 📞 ☎️ 📟 📠 📺 📻 🎙 🎚 🎛 ⏱ ⏲ ⏰ 🕰 ⌛️ ⏳ 📡 🔋 🔌 💡 🔦 🕯  🗑 🛢 💸 💵 💴 💶 💷 💰 💳 🧾 💎 ⚖️ 🔧 🔨 ⚒ 🛠 ⛏ 🔩 ⚙️ ⛓ 🔫 💣 🔪 🗡 ⚔️  🛡 🚬 ⚰️ ⚱️ 🏺</p><hr><h3 id="标志"><a href="#标志" class="headerlink" title="标志"></a>标志</h3><p>❤️ 🧡 💛 💚 💙 💜 🖤 💔 ❣️ 💕 💞 💓 💗 💖 💘 💝 💟 ☮️  ✝️ ☪️ 🕉 ☸️ ✡️ 🔯 🕎 ☯️ ☦️ 🛐 ⛎ ♈️ ♉️ ♊️ ♋️ ♌️ ♍️ ♎️ ♏️ ♐️ ♑️ ♒️ ♓️ 🆔  ⚛️ 🉑 ☢️ ☣️ 📴 📳 🈶 🈚️ 🈸 🈺 🈷️ ✴️ 🆚 💮 🉐 ㊙️ ㊗️ 🈴 🈵 🈹 🈲 🅰️ 🅱️ 🆎 🆑 🅾️ 🆘 ❌ ⭕️ 🛑 ⛔️ 📛 🚫 💯 💢 ♨️ 🚷 🚯 🚳 🚱 🔞 📵 🚭 ❗️ ❕ ❓ ❔ ‼️ ⁉️ 🔅 🔆 〽️ ⚠️ 🚸 🔱 ⚜️ 🔰 ♻️ ✅ 🈯️ 💹 ❇️ ✳️ ❎ 🌐 💠 Ⓜ️ 🌀 💤 🏧 🚾 ♿️  🅿️ 🈳 🈂️ 🛂 🛃 🛄 🛅 🚹 🚺 🚼 🚻 🚮 🎦 📶 🈁 🔣 ℹ️ 🔤 🔡 🔠 🆖 🆗 🆙  🆒 🆕 🆓 0️⃣ 1️⃣ 2️⃣ 3️⃣ 4️⃣ 5️⃣ 6️⃣ 7️⃣ 8️⃣ 9️⃣ 🔟 🔢 #️⃣ *️⃣ ⏏️ ▶️ ⏸ ⏯ ⏹ ⏺ ⏭ ⏮ ⏩ ⏪ ⏫ ⏬ ◀️ 🔼 🔽 ➡️ ⬅️ ⬆️ ⬇️ ↗️ ↘️ ↙️ ↖️ ↕️ ↔️ ↪️ ↩️ ⤴️ ⤵️ 🔀  🔁 🔂 🔄 🔃 🎵 🎶 ➕ ➖ ➗ ✖️ ♾ 💲 💱 ™️ ©️ ®️ 〰️ ➰ ➿ 🔚 🔙 🔛 🔝 🔜 ✔️ ☑️  🔘 ⚪️ ⚫️ 🔴 🔵 🔺 🔻 🔸 🔹 🔶 🔷 🔳 🔲 ▪️ ▫️ ◾️ ◽️ ◼️ ◻️ ⬛️ ⬜️ 🔈 🔇 🔉  🔊 🔔 🔕 📣 📢 👁‍🗨 💬 💭 🗯 ♠️ ♣️ ♥️ ♦️ 🃏 🎴 🀄️ 🕐 🕑 🕒 🕓 🕔 🕕 🕖 🕗 🕘 🕙 🕚 🕛 🕜 🕝 🕞 🕟 🕠 🕡 🕢 🕣 🕤 🕥 🕦 🕧<br> ⬆↗➡↘⬇↙⬅↖↕↔↩↪⤴⤵🔃🔄🔙🔚🔛🔜🔝</p><hr><p>来源：<a href="https://www.cnblogs.com/cckui/p/11046826.html" target="_blank" rel="noopener">https://www.cnblogs.com/cckui/p/11046826.html</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>小技巧</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java中List集合的常用方法</title>
    <link href="/blog/2020/05/13/Java%E4%B8%ADList%E9%9B%86%E5%90%88%E7%9A%84%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <url>/blog/2020/05/13/Java%E4%B8%ADList%E9%9B%86%E5%90%88%E7%9A%84%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="List"><a href="#List" class="headerlink" title="List"></a>List</h1><p>List接口是继承Collection接口，所以Collection集合中有的方法，List集合也继承过来。</p><p><img src="https://images2018.cnblogs.com/blog/1431130/201808/1431130-20180819221907689-697820476.png" srcset="/blog/img/loading.gif" alt="img"></p><p>常用方法：</p><ol><li>void add(int index, E element)</li></ol><ul><li>在指定位置插入元素，后面的元素都往后移一个元素。</li></ul><ol start="2"><li>boolean addAll(int index, Collection&lt;? extends E&gt; c)</li></ol><ul><li>在指定的位置中插入c集合全部的元素，如果集合发生改变，则返回true，否则返回false。<blockquote><p>意思就是当插入的集合c没有元素，那么就返回false，如果集合c有元素，插入成功，那么就返回true。</p></blockquote></li></ul><ol start="3"><li>E get(int index)</li></ol><ul><li>返回list集合中指定索引位置的元素</li></ul><ol start="4"><li>int indexOf(Object o)</li></ol><ul><li>返回list集合中第一次出现o对象的索引位置，如果list集合中没有o对象，那么就返回-1</li></ul><ol start="5"><li>ListIterator<e> listIterator()</e></li></ol><ul><li>返回此列表元素的列表迭代器（按适当顺序）。</li></ul><ol start="6"><li>ListIterator<e> listIterator(int index)</e></li></ol><ul><li>从指定位置开始，返回此列表元素的列表迭代器（按适当顺序）。<blockquote><p>和上面那个迭代器不同的就是多了一个参数，就是能控制迭代器开始的位置。</p></blockquote></li></ul><ol start="7"><li>E remove(int index)</li></ol><ul><li>删除指定索引的对象</li></ul><ol start="8"><li>E set(int index, E element)</li></ol><ul><li>在索引为index位置的元素更改为element元素</li></ul><ol start="9"><li>List<e> subList(int fromIndex, int toIndex)</e></li></ol><ul><li>返回从索引fromIndex到toIndex的元素集合，包左不包右</li></ul><hr><h2 id="void-add-int-index-E-element"><a href="#void-add-int-index-E-element" class="headerlink" title="void add(int index, E element)"></a>void add(int index, E element)</h2><p>在指定位置插入元素，后面的元素都往后移一个元素。</p><p><img src="https://images2018.cnblogs.com/blog/1431130/201808/1431130-20180819222308946-330436044.png" srcset="/blog/img/loading.gif" alt="img"></p><h2 id="boolean-addAll-int-index-Collection-lt-extends-E-gt-c"><a href="#boolean-addAll-int-index-Collection-lt-extends-E-gt-c" class="headerlink" title="boolean addAll(int index, Collection<? extends E> c)"></a>boolean addAll(int index, Collection&lt;? extends E&gt; c)</h2><p>在指定的位置中插入c集合全部的元素，如果集合发生改变，则返回true，否则返回false。</p><p>意思就是当插入的集合c没有元素，那么就返回false，如果集合c有元素，插入成功，那么就返回true。</p><p><img src="https://images2018.cnblogs.com/blog/1431130/201808/1431130-20180819223211123-485541564.png" srcset="/blog/img/loading.gif" alt="img"></p><h2 id="E-get-int-index"><a href="#E-get-int-index" class="headerlink" title="E get(int index)"></a>E get(int index)</h2><p>返回list集合中指定索引位置的元素</p><p><img src="https://images2018.cnblogs.com/blog/1431130/201808/1431130-20180819224001187-777344642.png" srcset="/blog/img/loading.gif" alt="img"></p><h2 id="int-indexOf-Object-o"><a href="#int-indexOf-Object-o" class="headerlink" title="int indexOf(Object o)"></a>int indexOf(Object o)</h2><p>返回list集合中第一次出现o对象的索引位置，如果list集合中没有o对象，那么就返回-1</p><p><img src="https://images2018.cnblogs.com/blog/1431130/201808/1431130-20180819224427364-1632913084.png" srcset="/blog/img/loading.gif" alt="img"></p><h2 id="ListIterator-lt-E-gt-listIterator"><a href="#ListIterator-lt-E-gt-listIterator" class="headerlink" title="ListIterator< E > listIterator()"></a>ListIterator&lt; E &gt; listIterator()</h2><p>返回此列表元素的列表迭代器（按适当顺序）。</p><p>listIterator和iterator的区别是什么呢？下面这篇博客比较详细的分析，可以参考。</p><p><a href="https://blog.csdn.net/longshengguoji/article/details/41551491" target="_blank" rel="noopener">https://blog.csdn.net/longshengguoji/article/details/41551491</a></p><p>这里大概讲一下他们的区别：</p><p>当只需要遍历集合时，两个迭代器的功能都是一样。</p><p>但是listIterator迭代器只能用于List和他的实现子类，iterator迭代器可以用于所有的集合使用。</p><p>所不同的就是listIterator迭代器的功能会比iterator迭代器的功能要多。</p><p>listIterator迭代器可以在遍历集合时添加、修改和删除，而iterator迭代器在遍历集合时只有删除。</p><h2 id="ListIterator-lt-E-gt-listIterator-int-index"><a href="#ListIterator-lt-E-gt-listIterator-int-index" class="headerlink" title="ListIterator< E > listIterator(int index)"></a>ListIterator&lt; E &gt; listIterator(int index)</h2><p>从指定位置开始，返回此列表元素的列表迭代器（按适当顺序）。</p><p>和上面那个迭代器不同的就是多了一个参数，就是能控制迭代器开始的位置。</p><h2 id="E-remove-int-index"><a href="#E-remove-int-index" class="headerlink" title="E remove(int index)"></a>E remove(int index)</h2><p>删除指定索引的对象</p><p><img src="https://images2018.cnblogs.com/blog/1431130/201808/1431130-20180821105823848-2108813871.png" srcset="/blog/img/loading.gif" alt="img"></p><h2 id="E-set-int-index-E-element"><a href="#E-set-int-index-E-element" class="headerlink" title="E set(int index, E element)"></a>E set(int index, E element)</h2><p>在索引为index位置的元素更改为element元素</p><p><img src="https://images2018.cnblogs.com/blog/1431130/201808/1431130-20180821110144662-208934548.png" srcset="/blog/img/loading.gif" alt="img"></p><h2 id="List-subList-int-fromIndex-int-toIndex"><a href="#List-subList-int-fromIndex-int-toIndex" class="headerlink" title="List subList(int fromIndex, int toIndex)"></a>List<e> subList(int fromIndex, int toIndex)</e></h2><p>返回从索引fromIndex到toIndex的元素集合，包左不包右</p><p><img src="https://images2018.cnblogs.com/blog/1431130/201808/1431130-20180821110632354-1662504913.png" srcset="/blog/img/loading.gif" alt="img"></p><h1 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h1><p><a href="https://www.jianshu.com/p/63b01b6379fb" target="_blank" rel="noopener">Java集合List详解</a></p><hr><p><font size="1">学习笔记，待补充…</font></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java集合小抄</title>
    <link href="/blog/2020/05/13/Java%E7%9A%84Collection%E9%9B%86%E5%90%88%E7%9A%84%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <url>/blog/2020/05/13/Java%E7%9A%84Collection%E9%9B%86%E5%90%88%E7%9A%84%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h1><ol><li>boolean add(E e)</li></ol><ul><li>添加元素到Collection集合中。</li></ul><ol start="2"><li>boolean addAll(Collection&lt;? extends E&gt; c)</li></ol><ul><li>将指定c中的所有元素都添加到此Collection集合中。</li></ul><ol start="3"><li>void clear()</li></ol><ul><li>移除此collection集合中的所有元素</li></ul><ol start="4"><li>boolean contains(Object o)</li></ol><ul><li>检查Collection集合中是否包含o对象，如果包含则返回true，否则返回false。</li></ul><ol start="5"><li>boolean containsAll(Collection&lt;?&gt; c)</li></ol><ul><li>检查Collection集合中是否包含c的全部对象，全部包含则返回true，否则返回false。</li></ul><ol start="6"><li>boolean equals(Object o)</li></ol><ul><li>比较此collection集合与指定对象是否相等，是比较的是里面元素是否相等，而不是比较地址是否相等。<blockquote><p>在Object类中，equals()方法底层就是“==”，也就是说就是比较地址是否相等，但是继承后，大多数的类都重写了该方法。<br>由于Collection是接口，不能直接new对象，所以只能new一个它的子类。</p></blockquote></li></ul><ol start="7"><li>int hashCode()</li></ol><ul><li>返回此Collection集合的哈希码值。</li></ul><ol start="8"><li>boolean isEmpty()</li></ol><ul><li>检查Collection集合是否包含有元素，如果没有包含元素，则返回true，否则返回false。<blockquote><p>此方法与contains方法的区别是，此方法是判断集合是否包含有元素，就是说，如果一个元素都没有的话就返回true，如果有一个或者以上就返回false。<br>contains的方法是判断集合中是否包含特定的元素，如果包含特定的元素就返回true，如果没有包含特定元素就返回false。</p></blockquote></li></ul><ol start="9"><li>Iterator<e> iterator()</e></li></ol><ul><li>返回在此collection集合的元素上进行迭代的迭代器<blockquote><p>注意：迭代过程中不能用集合里的添加. 删除等方法修改集合，不然会报错。<br>如果想在迭代过程中还想操作集合，那么只能用迭代器类里面的方法。</p></blockquote></li></ul><ol start="10"><li>boolean remove(Object o)</li></ol><ul><li>从collection集合中删除指定的元素，如果集合中有这个元素，并且删除成功，那么就返回true，否则返回false。</li></ul><ol start="11"><li>boolean removeAll(Collection&lt;?&gt; c)</li></ol><ul><li>从集合中删除c集合中所有的元素</li></ul><ol start="12"><li>boolean retainAll(Collection&lt;?&gt; c)</li></ol><ul><li>集合中仅保留c集合中的所有元素</li></ul><ol start="13"><li>int size()</li></ol><ul><li>返回集合中元素个数</li></ul><ol start="14"><li>Object[] toArray()</li></ol><ul><li>返回包含此collection集合中所有元素的数组</li></ul><h2 id="boolean-add-E-e"><a href="#boolean-add-E-e" class="headerlink" title="boolean add(E e)"></a>boolean <strong>add</strong>(E e)</h2><p>添加元素到Collection集合中。</p><p><img src="https://images2018.cnblogs.com/blog/1431130/201808/1431130-20180819194010264-813257436.png" srcset="/blog/img/loading.gif" alt="img"></p><h2 id="boolean-addAll-Collection-lt-extends-E-gt-c"><a href="#boolean-addAll-Collection-lt-extends-E-gt-c" class="headerlink" title="boolean addAll(Collection<? extends E> c)"></a>boolean <strong>addAll</strong>(Collection&lt;? extends E&gt; c)</h2><p>将指定c中的所有元素都添加到此Collection集合中。</p><p><img src="https://images2018.cnblogs.com/blog/1431130/201808/1431130-20180819194258515-1284746826.png" srcset="/blog/img/loading.gif" alt="img"></p><h2 id="void-clear"><a href="#void-clear" class="headerlink" title="void clear()"></a>void <strong>clear</strong>()</h2><p>移除此collection集合中的所有元素</p><p><img src="https://images2018.cnblogs.com/blog/1431130/201808/1431130-20180819194544174-868926476.png" srcset="/blog/img/loading.gif" alt="img"></p><h2 id="boolean-contains-Object-o"><a href="#boolean-contains-Object-o" class="headerlink" title="boolean contains(Object o)"></a>boolean <strong>contains</strong>(Object o)</h2><p>检查Collection集合中是否包含o对象，如果包含则返回true，否则返回false。</p><p><img src="https://images2018.cnblogs.com/blog/1431130/201808/1431130-20180819195133040-1017488769.png" srcset="/blog/img/loading.gif" alt="img"></p><h2 id="boolean-containsAll-Collection-lt-gt-c"><a href="#boolean-containsAll-Collection-lt-gt-c" class="headerlink" title="boolean containsAll(Collection<?> c)"></a>boolean <strong>containsAll</strong>(Collection&lt;?&gt; c)</h2><p>检查Collection集合中是否包含c的全部对象，全部包含则返回true，否则返回false。</p><p><img src="https://images2018.cnblogs.com/blog/1431130/201808/1431130-20180819195940888-1855720167.png" srcset="/blog/img/loading.gif" alt="img"></p><h2 id="boolean-equals-Object-o"><a href="#boolean-equals-Object-o" class="headerlink" title="boolean equals(Object o)"></a>boolean <strong>equals</strong>(Object o)</h2><p>比较此collection集合与指定对象是否相等，是比较的是里面元素是否相等，而不是比较地址是否相等。</p><p>在Object类中，equals()方法底层就是“==”，也就是说就是比较地址是否相等，但是继承后，大多数的类都重写了该方法。</p><p>由于Collection是接口，不能直接new对象，所以只能new一个它的子类。</p><p><img src="https://images2018.cnblogs.com/blog/1431130/201808/1431130-20180819210552046-1561438117.png" srcset="/blog/img/loading.gif" alt="img"></p><p>下面这个是Object类的equals()方法，底层就是用”==”。</p><p><img src="https://images2018.cnblogs.com/blog/1431130/201808/1431130-20180819210423794-1776687683.png" srcset="/blog/img/loading.gif" alt="img"></p><p>下面我们来看Collection的一个实现类Vector。</p><p>Vector是继承了AbstractList</p><p><img src="https://images2018.cnblogs.com/blog/1431130/201808/1431130-20180819210822713-620793104.png" srcset="/blog/img/loading.gif" alt="img"></p><p>所以它的equals方法是调用了父类的方法</p><p><img src="https://images2018.cnblogs.com/blog/1431130/201808/1431130-20180819210927036-1588808207.png" srcset="/blog/img/loading.gif" alt="img"></p><p>我们再跟进去看看。真的是重写的equals方法</p><p><img src="https://images2018.cnblogs.com/blog/1431130/201808/1431130-20180819211041113-1448022730.png" srcset="/blog/img/loading.gif" alt="img"></p><h2 id="int-hashCode"><a href="#int-hashCode" class="headerlink" title="int hashCode()"></a>int <strong>hashCode</strong>()</h2><p>返回此Collection集合的哈希码值。</p><p><img src="https://images2018.cnblogs.com/blog/1431130/201808/1431130-20180819211920647-444924411.png" srcset="/blog/img/loading.gif" alt="img"></p><h2 id="boolean-isEmpty"><a href="#boolean-isEmpty" class="headerlink" title="boolean isEmpty()"></a>boolean <strong>isEmpty</strong>()</h2><p>检查Collection集合是否包含有元素，如果没有包含元素，则返回true，否则返回false。</p><p>此方法与contains方法的区别是，此方法是判断集合是否包含有元素，就是说，如果一个元素都没有的话就返回true，如果有一个或者以上就返回false。</p><p>contains的方法是判断集合中是否包含特定的元素，如果包含特定的元素就返回true，如果没有包含特定元素就返回false。</p><p><img src="https://images2018.cnblogs.com/blog/1431130/201808/1431130-20180819212703505-1876896674.png" srcset="/blog/img/loading.gif" alt="img"></p><h2 id="Iterator-iterator"><a href="#Iterator-iterator" class="headerlink" title="Iterator iterator()"></a>Iterator<e> <strong>iterator</strong>()</e></h2><p>返回在此collection集合的元素上进行迭代的迭代器</p><p><img src="https://images2018.cnblogs.com/blog/1431130/201808/1431130-20180819213218907-824171770.png" srcset="/blog/img/loading.gif" alt="img"></p><p>注意：迭代过程中不能用集合里的添加、删除等方法修改集合，不然会报错。</p><p>如果想在迭代过程中还想操作集合，那么只能用迭代器类里面的方法。</p><p><img src="https://images2018.cnblogs.com/blog/1431130/201808/1431130-20180819213724628-1092541628.png" srcset="/blog/img/loading.gif" alt="img"></p><h2 id="boolean-remove-Object-o"><a href="#boolean-remove-Object-o" class="headerlink" title="boolean remove(Object o)"></a>boolean <strong>remove</strong>(Object o)</h2><p>从collection集合中删除指定的元素，如果集合中有这个元素，并且删除成功，那么就返回true，否则返回false。</p><p><img src="https://images2018.cnblogs.com/blog/1431130/201808/1431130-20180819214258599-176723411.png" srcset="/blog/img/loading.gif" alt="img"></p><h2 id="boolean-removeAll-Collection-lt-gt-c"><a href="#boolean-removeAll-Collection-lt-gt-c" class="headerlink" title="boolean removeAll(Collection<?> c)"></a>boolean <strong>removeAll</strong>(Collection&lt;?&gt; c)</h2><p>从集合中删除c集合中所有的元素</p><p><img src="https://images2018.cnblogs.com/blog/1431130/201808/1431130-20180819214720922-1411803742.png" srcset="/blog/img/loading.gif" alt="img"></p><h2 id="boolean-retainAll-Collection-lt-gt-c"><a href="#boolean-retainAll-Collection-lt-gt-c" class="headerlink" title="boolean retainAll(Collection<?> c)"></a>boolean <strong>retainAll</strong>(Collection&lt;?&gt; c)</h2><p>集合中仅保留c集合中的所有元素</p><p><img src="https://images2018.cnblogs.com/blog/1431130/201808/1431130-20180819215107882-601023590.png" srcset="/blog/img/loading.gif" alt="img"></p><h2 id="int-size"><a href="#int-size" class="headerlink" title="int size()"></a>int <strong>size</strong>()</h2><p>返回集合中元素个数</p><p><img src="https://images2018.cnblogs.com/blog/1431130/201808/1431130-20180819215431301-1452222100.png" srcset="/blog/img/loading.gif" alt="img"></p><h2 id="Object-toArray"><a href="#Object-toArray" class="headerlink" title="Object[] toArray()"></a>Object[] <strong>toArray</strong>()</h2><p>返回包含此collection集合中所有元素的数组</p><p><img src="https://images2018.cnblogs.com/blog/1431130/201808/1431130-20180819215939524-1550661138.png" srcset="/blog/img/loading.gif" alt="img"></p><hr><p><font size="1">学习笔记，待补充…</font></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java集合小抄</title>
    <link href="/blog/2020/05/13/Java%E9%9B%86%E5%90%88%E5%B0%8F%E6%8A%84/"/>
    <url>/blog/2020/05/13/Java%E9%9B%86%E5%90%88%E5%B0%8F%E6%8A%84/</url>
    
    <content type="html"><![CDATA[<h1 id="Java-集合"><a href="#Java-集合" class="headerlink" title="Java 集合"></a>Java 集合</h1><blockquote><p>Java集合类是我们在工作中运用最多的、最频繁的类。相比于数组(Array)来说，集合类的长度可变，更加适合于现代开发需求；</p></blockquote><p>Java集合就像一个<strong>容器</strong>，<em>可以存储任何类型的数据，也可以结合泛型来存储具体的类型对象。</em></p><p>在程序运行时，Java集合可以<strong>动态的进行扩展(动态增容)</strong>，随着元素的增加而扩大。<strong>在Java中，集合类通常存在于<code>java.util</code>包中。</strong></p><p>Java集合主要由2大体系构成，分别是</p><ul><li>Collection 体系</li><li>Map 体系</li></ul><p>其中Collection和Map分别是2大体系中的顶层接口。</p><a id="more"></a><h1 id="Collection"><a href="#Collection" class="headerlink" title="Collection"></a>Collection</h1><p>Collection主要有三个子接口，分别为</p><ul><li>List(列表)</li><li>Set(集)</li><li>Queue(队列)。</li></ul><p>其中，<strong>List、Queue中的元素有序可重复，而Set中的元素无序不可重复。</strong></p><h2 id="List"><a href="#List" class="headerlink" title="List"></a>List</h2><p>List中主要有两个实现类：</p><ul><li>ArrayList</li><li>LinkedList</li></ul><h2 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h2><p>Set中则是有实现类:</p><ul><li>HashSet</li></ul><h2 id="Queue"><a href="#Queue" class="headerlink" title="Queue"></a>Queue</h2><p>而Queue是<strong>主要以数组和链表两种形式存在。</strong></p><blockquote><p>Queue是在JDK1.5后才出现的新集合</p></blockquote><h1 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h1><p>Map同属于j<code>ava.util</code>包中，是集合的一部分，但与Collection是相互独立的，没有任何关系。<br>Map中都是以<code>key-value</code>的形式存在，其中<strong>key必须唯一</strong><br>主要有三个实现类：</p><ul><li>HashMap</li><li>HashTable</li><li>TreeMap</li></ul><hr><p><font size="1">学习笔记，待补充…</font></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【LeetCode】155. 最小栈</title>
    <link href="/blog/2020/05/12/%E3%80%90LeetCode%E3%80%91155.%20%E6%9C%80%E5%B0%8F%E6%A0%88/"/>
    <url>/blog/2020/05/12/%E3%80%90LeetCode%E3%80%91155.%20%E6%9C%80%E5%B0%8F%E6%A0%88/</url>
    
    <content type="html"><![CDATA[<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。</p><ul><li>push(x) —— 将元素 x 推入栈中。</li><li>pop() —— 删除栈顶的元素。</li><li>top() —— 获取栈顶元素。</li><li>getMin() —— 检索栈中的最小元素。</li></ul><p>示例:</p><p>输入：</p><blockquote><p>[“MinStack”,”push”,”push”,”push”,”getMin”,”pop”,”top”,”getMin”]<br>[[],[-2],[0],[-3],[],[],[],[]]</p></blockquote><p>输出：</p><blockquote><p>[null,null,null,null,-3,null,0,-2]</p></blockquote><p>解释：</p><blockquote><p>MinStack minStack = new MinStack();<br>minStack.push(-2);<br>minStack.push(0);<br>minStack.push(-3);<br>minStack.getMin();   –&gt; 返回 -3.<br>minStack.pop();<br>minStack.top();      –&gt; 返回 0.<br>minStack.getMin();   –&gt; 返回 -2.</p></blockquote><p>提示：</p><blockquote><p>pop、top 和 getMin 操作总是在 非空栈 上调用。</p></blockquote><a id="more"></a><h1 id="题解思路"><a href="#题解思路" class="headerlink" title="题解思路"></a>题解思路</h1><p><strong>使用额外的栈（同步辅助栈）来完成。</strong></p><p>由于栈有<strong>后进先出</strong>的特点。<br>假设元素a入栈时，栈里有元素 b、c、d，那么只要 a 在栈中，b、c、d 就一定会在栈中，因为在 a 被出栈前，b、c、d 不会被出栈。</p><p>我们使用同步辅助栈来依次<font color="red" size="5">存储新元素在入栈时当前整个栈的最小值。</font><br><em>当元素a入栈时，将当前整个栈的最小值min入栈到同步辅助栈中存储起来。</em></p><p>如果知道栈顶元素是a，那就可以直接知道此时原栈的最小值min了。</p><h2 id="同步辅助栈与原栈的同步关系"><a href="#同步辅助栈与原栈的同步关系" class="headerlink" title="同步辅助栈与原栈的同步关系"></a>同步辅助栈与原栈的同步关系</h2><h3 id="入栈"><a href="#入栈" class="headerlink" title="入栈"></a>入栈</h3><ol><li>当原栈为空，新元素a入栈时，将新元素a拷贝一份，并入栈到辅助栈当中。</li><li>当原栈非空，新元素k入栈时，取出辅助栈的栈顶元素min_top，与k比较，将<code>min{k, min_top}</code>入栈到辅助栈中去。</li></ol><h3 id="出栈"><a href="#出栈" class="headerlink" title="出栈"></a>出栈</h3><ol><li>原栈有元素出栈，辅助栈同时将栈顶元素弹出。</li></ol><blockquote><p>在任意一个时刻，原栈内元素的最小值就存储在辅助栈的栈顶中。</p></blockquote><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><div class="hljs"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> MAXSIZE 1600</span><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> {</span>    <span class="hljs-comment">// 只用一个(数组模拟的)栈来同时模拟原栈、同步辅助栈并存</span>    <span class="hljs-comment">// 原栈：偶数，0,2,4......</span>    <span class="hljs-comment">// 辅助栈：奇数，1,3,5......</span>    <span class="hljs-keyword">int</span> top;    <span class="hljs-keyword">int</span> *data;} MinStack;<span class="hljs-comment">/** initialize your data structure here. */</span><span class="hljs-function">MinStack* <span class="hljs-title">minStackCreate</span><span class="hljs-params">()</span> </span>{    MinStack *obj=(MinStack *)<span class="hljs-built_in">malloc</span>(<span class="hljs-keyword">sizeof</span>(MinStack));    obj-&gt;data=(<span class="hljs-keyword">int</span> *)<span class="hljs-built_in">malloc</span>(MAXSIZE*<span class="hljs-keyword">sizeof</span>(<span class="hljs-keyword">int</span>));    obj-&gt;top=<span class="hljs-number">-1</span>;    <span class="hljs-keyword">return</span> obj;}<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">minStackPush</span><span class="hljs-params">(MinStack* obj, <span class="hljs-keyword">int</span> x)</span> </span>{    <span class="hljs-keyword">if</span>(obj-&gt;top == MAXSIZE<span class="hljs-number">-1</span>){        <span class="hljs-comment">// 栈满了，不做任何操作</span>    } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(obj-&gt;top == <span class="hljs-number">-1</span>){        <span class="hljs-comment">// 原栈</span>        obj-&gt;top++;        obj-&gt;data[obj-&gt;top] = x;        <span class="hljs-comment">// 辅助栈</span>        obj-&gt;top++;        obj-&gt;data[obj-&gt;top] = x;    } <span class="hljs-keyword">else</span> {        <span class="hljs-comment">// 当原栈非空，新元素k入栈时，取出辅助栈的栈顶元素min_top，与k比较，将`min{k, min_top}`入栈到辅助栈中去</span>        <span class="hljs-keyword">int</span> tmp = obj-&gt;data[obj-&gt;top];        <span class="hljs-comment">// 原栈</span>        obj-&gt;top++;        obj-&gt;data[obj-&gt;top] = x;        <span class="hljs-comment">// 辅助栈</span>        <span class="hljs-keyword">if</span>(tmp &lt; x){            obj-&gt;top++;            obj-&gt;data[obj-&gt;top] = tmp;        } <span class="hljs-keyword">else</span> {            obj-&gt;top++;            obj-&gt;data[obj-&gt;top] = x;       }    }}<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">minStackPop</span><span class="hljs-params">(MinStack* obj)</span> </span>{    <span class="hljs-keyword">if</span>(obj-&gt;top != <span class="hljs-number">-1</span>){        <span class="hljs-comment">// 原栈</span>        obj-&gt;top--;        <span class="hljs-comment">// 辅助栈 </span>        obj-&gt;top--;    }}<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">minStackTop</span><span class="hljs-params">(MinStack* obj)</span> </span>{    <span class="hljs-keyword">if</span>(obj-&gt;top == <span class="hljs-number">-1</span>){        <span class="hljs-keyword">return</span>; <span class="hljs-comment">// 返回空（void）</span>    }        <span class="hljs-keyword">return</span> obj-&gt;data[obj-&gt;top<span class="hljs-number">-1</span>]; <span class="hljs-comment">// 必须减1，减1才是原栈的栈顶</span>}<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">minStackGetMin</span><span class="hljs-params">(MinStack* obj)</span> </span>{    <span class="hljs-comment">// 在任意一个时刻，原栈内元素的最小值就存储在辅助栈的栈顶中</span>    <span class="hljs-keyword">return</span> obj-&gt;data[obj-&gt;top];}<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">minStackFree</span><span class="hljs-params">(MinStack* obj)</span> </span>{    <span class="hljs-built_in">free</span>(obj-&gt;data);    obj-&gt;data = <span class="hljs-literal">NULL</span>;    <span class="hljs-built_in">free</span>(obj);    obj = <span class="hljs-literal">NULL</span>;}</code></pre></div><h1 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h1><p><img src="https://i.loli.net/2020/05/12/xNKIQMybUgWART1.png" srcset="/blog/img/loading.gif" alt=""></p><h1 id="优秀、精明的题解"><a href="#优秀、精明的题解" class="headerlink" title="优秀、精明的题解"></a>优秀、精明的题解</h1><ol><li><a href="https://leetcode-cn.com/problems/min-stack/solution/shi-yong-fu-zhu-zhan-tong-bu-he-bu-tong-bu-python-/" target="_blank" rel="noopener">【精选】使用辅助栈（同步和不同步)</a></li><li><a href="https://leetcode-cn.com/problems/min-stack/solution/xiang-xi-tong-su-de-si-lu-fen-xi-duo-jie-fa-by-38/" target="_blank" rel="noopener">详细通俗的思路分析，多解法</a></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C语言中几种return的区分</title>
    <link href="/blog/2020/05/12/C%E8%AF%AD%E8%A8%80%E4%B8%AD%E5%87%A0%E7%A7%8Dreturn%E7%9A%84%E5%8C%BA%E5%88%86/"/>
    <url>/blog/2020/05/12/C%E8%AF%AD%E8%A8%80%E4%B8%AD%E5%87%A0%E7%A7%8Dreturn%E7%9A%84%E5%8C%BA%E5%88%86/</url>
    
    <content type="html"><![CDATA[<p><code>return 0;</code></p><blockquote><p>一般0代表的是正常结束</p></blockquote><p><code>return -1;</code></p><blockquote><p>-1代表非正常结束</p></blockquote><p><code>return ;</code></p><blockquote><p>void 返回是空，void返回值可以什么也不写，可以写return；</p></blockquote><p><code>return NULL;</code></p><blockquote><p>如果数据类型是指针类型，那我们一般成功的时候返回相应的地址，失败的时候返回NULL</p></blockquote><p>关于NULL，我这就简单记成 描述地址时用NULL‘清零’，描述数据时 用 0 清零.</p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Stack，一个后进先出的集合容器</title>
    <link href="/blog/2020/05/12/Stack%EF%BC%8C%E4%B8%80%E4%B8%AA%E5%90%8E%E8%BF%9B%E5%85%88%E5%87%BA%E7%9A%84%E9%9B%86%E5%90%88%E5%AE%B9%E5%99%A8/"/>
    <url>/blog/2020/05/12/Stack%EF%BC%8C%E4%B8%80%E4%B8%AA%E5%90%8E%E8%BF%9B%E5%85%88%E5%87%BA%E7%9A%84%E9%9B%86%E5%90%88%E5%AE%B9%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<p>今天刷LC的每日一题时，需要使用到“栈”这种数据结构。就顺便复习了有关“栈”的知识。<br>本文就用C来复习<del>(预习)</del>“Stack”。</p><h1 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h1><p>Stack，本身就具有数据结构中栈的一般特性：<strong>后进先出</strong>。</p><h1 id="定义Stack"><a href="#定义Stack" class="headerlink" title="定义Stack"></a>定义Stack</h1><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stack&gt;</span></span><span class="hljs-built_in">stack</span>&lt;<span class="hljs-keyword">typename</span>&gt; name;</code></pre></div><h1 id="栈中元素的访问"><a href="#栈中元素的访问" class="headerlink" title="栈中元素的访问"></a>栈中元素的访问</h1><ul><li>top()</li><li>只能访问其<strong>栈顶元素</strong></li><li>通过<code>top()</code>来获取（或遍历）</li></ul><h1 id="常用的调用函数"><a href="#常用的调用函数" class="headerlink" title="常用的调用函数"></a>常用的调用函数</h1><ul><li><code>push()</code>：入栈</li><li><code>pop()</code>：出栈（弹出栈顶元素）</li><li><code>top</code>：获取栈顶元素</li><li><code>empty()</code>：判空，返回值是Bool类型，true为空，false为非空</li><li><code>size()</code>：返回stack内元素的个数</li></ul><a id="more"></a><h1 id="DEMO"><a href="#DEMO" class="headerlink" title="DEMO"></a>DEMO</h1><div class="hljs"><pre><code class="hljs xl">#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt; typedef struct node {int <span class="hljs-keyword">data</span>;struct node *next;}Node ,*PNode; typedef struct stack {PNode pTop;PNode pBot;}Stack, *PStack; void init(PStack pS){<span class="hljs-function"><span class="hljs-title">pS</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">pTop</span> = pS-&gt;</span>pBot = (PNode)malloc(sizeof(Node));<span class="hljs-function"><span class="hljs-title">pS</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">pBot</span>-&gt;</span>next = NULL;} void push(PStack pS, int val){PNode pNew = (PNode)malloc(sizeof(Node));<span class="hljs-function"><span class="hljs-title">pNew</span>-&gt;</span><span class="hljs-keyword">data</span> = val;<span class="hljs-function"><span class="hljs-title">pNew</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">next</span> = pS-&gt;</span>pTop;<span class="hljs-function"><span class="hljs-title">pS</span>-&gt;</span>pTop = pNew;} void traverse(PStack pS){PN<span class="hljs-function"><span class="hljs-title">ode</span> p = pS-&gt;</span>pTop;<span class="hljs-function"><span class="hljs-title">while</span> (p != pS-&gt;</span>pBot) {<span class="hljs-function"><span class="hljs-title">printf</span>("%d ", p-&gt;</span><span class="hljs-keyword">data</span>);<span class="hljs-function"><span class="hljs-title">p</span> = p-&gt;</span>next;}printf(<span class="hljs-string">"\n"</span>);} void pop(PStack pS){<span class="hljs-function"><span class="hljs-title">if</span> (pS-&gt;</span>pTop != NULL) {<span class="hljs-function"><span class="hljs-title">if</span> (pS-&gt;</span><span class="hljs-function"><span class="hljs-title">pTop</span> == pS-&gt;</span>pBot) {printf(<span class="hljs-string">"已到栈底\n"</span>);return;}PN<span class="hljs-function"><span class="hljs-title">ode</span> p = pS-&gt;</span>pTop;<span class="hljs-function"><span class="hljs-title">pS</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">pTop</span> = p-&gt;</span>next;free(p);p = NULL;}} void clean(PStack pS){PNode q = NULL;<span class="hljs-function"><span class="hljs-title">while</span> (pS-&gt;</span><span class="hljs-function"><span class="hljs-title">pTop</span> != pS-&gt;</span>pBot){<span class="hljs-function"><span class="hljs-title">q</span> = pS-&gt;</span><span class="hljs-function"><span class="hljs-title">pTop</span>-&gt;</span>next;<span class="hljs-function"><span class="hljs-title">free</span>(pS-&gt;</span>pTop);<span class="hljs-function"><span class="hljs-title">pS</span>-&gt;</span>pTop = q;}} int main(void){Stack s;init(&amp;s);push(&amp;s, <span class="hljs-number">5</span>);push(&amp;s, <span class="hljs-number">4</span>);push(&amp;s, <span class="hljs-number">3</span>);push(&amp;s, <span class="hljs-number">2</span>);push(&amp;s, <span class="hljs-number">1</span>);traverse(&amp;s);pop(&amp;s);traverse(&amp;s);clean(&amp;s);pop(&amp;s);traverse(&amp;s);system(<span class="hljs-string">"pause"</span>);return <span class="hljs-number">0</span>;}</code></pre></div><h1 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h1><ol><li><a href="https://blog.csdn.net/qq_42232118/article/details/82080776" target="_blank" rel="noopener">stack的常见用法</a></li><li><a href="https://baijiahao.baidu.com/s?id=1640447389353256524&amp;wfr=spider&amp;for=pc" target="_blank" rel="noopener">java集合容器之Stack</a></li><li><a href="https://www.jianshu.com/p/a49b19204aad" target="_blank" rel="noopener">数据结构之栈（C语言版）</a></li><li><a href="https://blog.csdn.net/imbingoer/article/details/85884474" target="_blank" rel="noopener">Java 栈 stack方法总结</a></li><li><a href="https://www.runoob.com/java/java-stack-class.html" target="_blank" rel="noopener">Java Stack 类</a></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【LeetCode】236. 二叉树的最近公共祖先</title>
    <link href="/blog/2020/05/10/%E3%80%90LeetCode%E3%80%91236.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/"/>
    <url>/blog/2020/05/10/%E3%80%90LeetCode%E3%80%91236.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/</url>
    
    <content type="html"><![CDATA[<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>给定一个二叉树, 找到该树中两个指定节点的最近公共祖先。</p><p>百度百科中最近公共祖先的定义为：“对于有根树 T 的两个结点 p、q，最近公共祖先表示为一个结点 x，满足 x 是 p、q 的祖先且 x 的深度尽可能大（一个节点也可以是它自己的祖先）。”</p><p>例如，给定如下二叉树:  root = [3,5,1,6,2,0,8,null,null,7,4]</p><p>示例 1:</p><blockquote><p>输入: root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 1<br>输出: 3<br>解释: 节点 5 和节点 1 的最近公共祖先是节点 3。</p></blockquote><p>示例 2:</p><blockquote><p>输入: root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 4<br>输出: 5<br>解释: 节点 5 和节点 4 的最近公共祖先是节点 5。因为根据定义最近公共祖先节点可以为节点本身。</p></blockquote><p>说明:</p><ul><li>所有节点的值都是唯一的。</li><li>p、q 为不同节点且均存在于给定的二叉树中。</li></ul><a id="more"></a><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><div class="hljs"><pre><code class="hljs kotlin"><span class="hljs-comment">/**</span><span class="hljs-comment"> * 时间复杂度：O(n) 每个节点最多就遍历一次</span><span class="hljs-comment"> * 空间复杂度：O(n) 用到栈空间</span><span class="hljs-comment"> */</span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>{    <span class="hljs-keyword">public</span> TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {        <span class="hljs-keyword">if</span>(root == <span class="hljs-literal">null</span>)            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;        <span class="hljs-keyword">if</span>(p == root || q == root)            <span class="hljs-keyword">return</span> root;        TreeNode left = lowestCommonAncestor(root.left, p, q);        TreeNode right = lowestCommonAncestor(root.right, p, q);        <span class="hljs-keyword">if</span>(left == <span class="hljs-literal">null</span> &amp;&amp; right == <span class="hljs-literal">null</span>)            <span class="hljs-comment">// 根节点为空，公共祖先便为空</span>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(left != <span class="hljs-literal">null</span> &amp;&amp; right != <span class="hljs-literal">null</span>)            <span class="hljs-comment">// 左右两边各一个节点，那root一定是p、q的公共祖先</span>            <span class="hljs-keyword">return</span> root;        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(left == <span class="hljs-literal">null</span>)            <span class="hljs-comment">// 左子树为空，那就只用看右子树的根</span>            <span class="hljs-keyword">return</span> right;        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(right == <span class="hljs-literal">null</span>)            <span class="hljs-comment">// 右子树为空，那就只用看左子树的根</span>            <span class="hljs-keyword">return</span> left;                <span class="hljs-comment">// 因为函数的返回值是TreeNode，最后一定要return</span>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;           }}</code></pre></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>最长递增子序列（LIS）</title>
    <link href="/blog/2020/05/09/%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97%EF%BC%88LIS%EF%BC%89/"/>
    <url>/blog/2020/05/09/%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97%EF%BC%88LIS%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><div class="hljs"><pre><code class="hljs angelscript"><span class="hljs-comment">/**</span><span class="hljs-comment"> * @Classname LIS</span><span class="hljs-comment"> * @Description 最长递增子序列（LIS）</span><span class="hljs-comment"> * @Date 2020/5/9 下午 9:09</span><span class="hljs-comment"> * @Created by jerry</span><span class="hljs-comment"> */</span><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-symbol">LIS</span> {    <span class="hljs-keyword">public</span> static <span class="hljs-built_in">int</span> LIS(<span class="hljs-built_in">int</span>[] nums) {        <span class="hljs-keyword">if</span>(nums.length &lt;= <span class="hljs-number">1</span>){            <span class="hljs-keyword">return</span> nums.length;        }        <span class="hljs-comment">//最大长度</span>        <span class="hljs-built_in">int</span> max = <span class="hljs-number">1</span>;        <span class="hljs-comment">//dp[i]表示第i长的子序列，最后的元素</span>        <span class="hljs-built_in">int</span>[] dp = new <span class="hljs-built_in">int</span>[nums.length + <span class="hljs-number">1</span>];        dp[<span class="hljs-number">1</span>] = nums[<span class="hljs-number">0</span>];        <span class="hljs-keyword">for</span>(<span class="hljs-built_in">int</span> i = <span class="hljs-number">1</span>;i &lt; nums.length;i++){            <span class="hljs-comment">//如果当前元素比最大的那个子串的最后一个元素还要大</span>            <span class="hljs-comment">//那就直接长度加一，新子串的最后一个元素为当前元素</span>            <span class="hljs-keyword">if</span>(nums[i] &gt; dp[max]){                dp[++max] = nums[i];            }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(nums[i] &lt; dp[max]){                <span class="hljs-comment">//如果当前元素比最大的那个子串的最后一个元素要小</span>                <span class="hljs-comment">//那就要更新dp数组，保证每一个子串都是最优解</span>                <span class="hljs-keyword">for</span>(<span class="hljs-built_in">int</span> j = <span class="hljs-number">1</span> ;j &lt;= max; j++){                    <span class="hljs-comment">//因为是递增，所以是&lt;=,在将等于的时候直接终止循环</span>                    <span class="hljs-keyword">if</span>(nums[i] &lt;= dp[j]){                        dp[j] = nums[i];                        <span class="hljs-keyword">break</span>;                    }                }            }        }        <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">1</span>; i &lt;= max; i++) {            System.<span class="hljs-keyword">out</span>.print(dp[i] + <span class="hljs-string">" "</span>);        }        System.<span class="hljs-keyword">out</span>.println();        <span class="hljs-keyword">return</span> max;    }    <span class="hljs-keyword">public</span> static <span class="hljs-built_in">void</span> main(String[] args) {        <span class="hljs-built_in">int</span>[] nums = new <span class="hljs-built_in">int</span>[]{<span class="hljs-number">10</span>,<span class="hljs-number">9</span>,<span class="hljs-number">2</span>,<span class="hljs-number">5</span>,<span class="hljs-number">3</span>,<span class="hljs-number">7</span>,<span class="hljs-number">101</span>,<span class="hljs-number">18</span>};        System.<span class="hljs-keyword">out</span>.println(LIS(nums));    }}</code></pre></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【LeetCode】69. x 的平方根</title>
    <link href="/blog/2020/05/09/%E3%80%90LeetCode%E3%80%9169.%20x%20%E7%9A%84%E5%B9%B3%E6%96%B9%E6%A0%B9/"/>
    <url>/blog/2020/05/09/%E3%80%90LeetCode%E3%80%9169.%20x%20%E7%9A%84%E5%B9%B3%E6%96%B9%E6%A0%B9/</url>
    
    <content type="html"><![CDATA[<p>这是今天”每日一题”的题目，等级是简单。<br>不过，确实耐人寻味。<br>最简单的方法就是采用JAVA的Math类库的方法</p><div class="hljs"><pre><code class="hljs return">但是这样做，还有什么意义呢，是吧？# 题目描述实现 `int sqrt(int x)` 函数。计算并返回 x 的平方根，其中 x 是非负整数。由于返回类型是整数，结果只保留整数的部分，小数部分将被舍去。示例 1:&gt; 输入: 4&gt; 输出: 2示例 2:&gt; 输入: 8&gt; 输出: 2说明: 8 的平方根是 2.82842...,      由于返回类型是整数，小数部分将被舍去。&lt;!--more--&gt;# 题解采用&lt;font color='red' size='6'&gt;“二分法”&lt;/font&gt;的思想可以很容易的完成。其思想简单的来说，就像是玩“猜数字”的游戏，猜小了就往大的猜，猜大了就往小的猜，随着猜的次数增加，范围越来越小，离结果也就越来越近了。那么，这里也一样的。我们不妨可以采用这个公式来做 $$\sqrt{k} ≦ \frac{k}{2}$$我们这样子看，假设一个很大的数k，k的开方肯定不会超过它的一半，越是很大的数越是如此。但是我们回来这个公式，看看这个公式的边界，边界是4。0、1、2、3、4、5这样的数的开方，我们都一清二楚，所以我们要考虑的是从4开始的数字，那就完全可以忽略那些小细节了。注意的是，**在取中位数mid的时候，应该向右取。**如果向左取得话，会陷入死循环中。# 代码</code></pre></div><p>class Solution {<br>    public int mySqrt(int x) {<br>        if(x == 0)<br>            return 0;<br>        long left = 1;<br>        long right = x / 2;<br>        while (left &lt; right){<br>            long mid = (left + right + 1) &gt;&gt;&gt; 1; // 向右取中位数<br>            long mid_square = mid * mid;<br>            if(mid_square &gt; x)<br>                right = mid - 1;<br>            else<br>                left = mid;<br>        }<br>        return (int)left;<br>    }<br>}</p><div class="hljs"><pre><code># 更多题解官方：https://leetcode-cn.com/problems/sqrtx/</code></pre></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>最长公共子序列（LCS）</title>
    <link href="/blog/2020/05/09/%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97%EF%BC%88LCS%EF%BC%89/"/>
    <url>/blog/2020/05/09/%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97%EF%BC%88LCS%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><div class="hljs"><pre><code class="hljs prolog">#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt; #include&lt;math.h&gt;using namespace std;const int <span class="hljs-symbol">MAX</span> = <span class="hljs-number">100</span>;const int  m = <span class="hljs-number">7</span>, n = <span class="hljs-number">6</span>;int <span class="hljs-symbol">C</span>[<span class="hljs-symbol">MAX</span>][<span class="hljs-symbol">MAX</span>];    // <span class="hljs-symbol">C</span>[i][j]：<span class="hljs-symbol">Xi</span>和<span class="hljs-symbol">Yj</span>的<span class="hljs-symbol">LCS</span>长度 int <span class="hljs-symbol">X</span>[m] = {<span class="hljs-string">'A'</span>, <span class="hljs-string">'B'</span>, <span class="hljs-string">'C'</span>, <span class="hljs-string">'B'</span>, <span class="hljs-string">'D'</span>, <span class="hljs-string">'A'</span>, <span class="hljs-string">'B'</span>}, <span class="hljs-symbol">Y</span>[n] = {<span class="hljs-string">'B'</span>, <span class="hljs-string">'D'</span>, <span class="hljs-string">'C'</span>, <span class="hljs-string">'A'</span>, <span class="hljs-string">'B'</span>, <span class="hljs-string">'A'</span>};void <span class="hljs-symbol">LCS</span>(int <span class="hljs-symbol">X</span>[], int <span class="hljs-symbol">Y</span>[], int m, int n){    int i, j;    char <span class="hljs-symbol">B</span>[<span class="hljs-symbol">MAX</span>][<span class="hljs-symbol">MAX</span>];    // <span class="hljs-symbol">B</span>[i][j]：<span class="hljs-symbol">C</span>[i][j]取得最大值的标志    for (i = <span class="hljs-number">1</span>; i &lt;= m; i++)        <span class="hljs-symbol">C</span>[i][<span class="hljs-number">0</span>] = <span class="hljs-number">0</span>;    for (i = <span class="hljs-number">1</span>; i &lt;= n; i++)        <span class="hljs-symbol">C</span>[<span class="hljs-number">0</span>][i] = <span class="hljs-number">0</span>;    for (i = <span class="hljs-number">1</span>; i &lt;= m; i++){        for (j = <span class="hljs-number">1</span>; j &lt;= n; j++){            if (<span class="hljs-symbol">X</span>[i] == <span class="hljs-symbol">Y</span>[j]){                <span class="hljs-symbol">C</span>[i][j] = <span class="hljs-symbol">C</span>[i - <span class="hljs-number">1</span>][j - <span class="hljs-number">1</span>] + <span class="hljs-number">1</span>;                <span class="hljs-symbol">B</span>[i][j] = <span class="hljs-string">'lu'</span>;            } else if (<span class="hljs-symbol">C</span>[i<span class="hljs-number">-1</span>][j] &gt;= <span class="hljs-symbol">C</span>[i][j<span class="hljs-number">-1</span>]){                <span class="hljs-symbol">C</span>[i][j] = <span class="hljs-symbol">C</span>[i - <span class="hljs-number">1</span>][j];                <span class="hljs-symbol">B</span>[i][j] = <span class="hljs-string">'u'</span>;            } else {                <span class="hljs-symbol">C</span>[i][j] = <span class="hljs-symbol">C</span>[i][j - <span class="hljs-number">1</span>];                <span class="hljs-symbol">B</span>[i][j] = <span class="hljs-string">'l'</span>;            }        }    }        printf(<span class="hljs-string">"\nC[i][j]\n"</span>);    for (i = <span class="hljs-number">1</span>; i &lt;= m; i++){        printf(<span class="hljs-string">"%d\t"</span>, i);        for (j = <span class="hljs-number">1</span>; j &lt;= n; j++){            printf(<span class="hljs-string">"%d\t"</span>, <span class="hljs-symbol">C</span>[i][j]);        }        printf(<span class="hljs-string">"\n"</span>);    }        printf(<span class="hljs-string">"\nB[j][j]\n"</span>);    for (i = <span class="hljs-number">1</span>; i &lt;= m; i++){        printf(<span class="hljs-string">"%d\t"</span>, i);        for (j = <span class="hljs-number">1</span>; j &lt;= n; j++){           printf(<span class="hljs-string">"%c\t"</span>, <span class="hljs-symbol">B</span>[i][j]);        }         printf(<span class="hljs-string">"\n"</span>);    }}int main () {    <span class="hljs-symbol">LCS</span>(<span class="hljs-symbol">X</span>, <span class="hljs-symbol">Y</span>, m, n);    return <span class="hljs-number">0</span>;    system(<span class="hljs-string">"pause"</span>);}</code></pre></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>博客园写随笔时用数学公式</title>
    <link href="/blog/2020/05/09/Java%E4%B8%AD%E6%9C%89%E4%B8%89%E7%A7%8D%E7%A7%BB%E4%BD%8D%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    <url>/blog/2020/05/09/Java%E4%B8%AD%E6%9C%89%E4%B8%89%E7%A7%8D%E7%A7%BB%E4%BD%8D%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
    
    <content type="html"><![CDATA[<h1 id="插入公式"><a href="#插入公式" class="headerlink" title="插入公式"></a>插入公式</h1><p>在开启后你就可以使用<strong>LATEX</strong>格式的公式了</p><h2 id="行内公式"><a href="#行内公式" class="headerlink" title="行内公式"></a>行内公式</h2><p>使用如下格式书写，公式使用<code>$</code>包裹：</p><p>二元一次方程的判别式：<code>$\Delta=b^2-4ac$</code></p><p>编译结果为：<br>二元一次方程的判别式：$\Delta=b^2-4ac$</p><h2 id="陈列-独立-公式"><a href="#陈列-独立-公式" class="headerlink" title="陈列(独立)公式"></a>陈列(独立)公式</h2><p>使用如下格式书写，公式使用<code>$$</code>包裹：</p><p>二元一次方程的判别式：<code>$$\Delta=b^2-4ac$$</code></p><p>编译结果为：<br>二元一次方程的判别式：<br>$$\Delta=b^2-4ac$$</p><h1 id="相关阅读"><a href="#相关阅读" class="headerlink" title="相关阅读"></a>相关阅读</h1><ol><li><a href="https://www.cnblogs.com/linxd/p/4955530.html" target="_blank" rel="noopener">https://www.cnblogs.com/linxd/p/4955530.html</a></li><li><a href="https://www.cnblogs.com/q735613050/p/7253073.html" target="_blank" rel="noopener">https://www.cnblogs.com/q735613050/p/7253073.html</a></li><li><a href="https://www.cnblogs.com/zhuxiaoxi/p/8320683.html" target="_blank" rel="noopener">https://www.cnblogs.com/zhuxiaoxi/p/8320683.html</a></li></ol><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【LeetCode】69. x 的平方根</title>
    <link href="/blog/2020/05/09/%E5%8D%9A%E5%AE%A2%E5%9B%AD%E5%86%99%E9%9A%8F%E7%AC%94%E6%97%B6%E7%94%A8%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/"/>
    <url>/blog/2020/05/09/%E5%8D%9A%E5%AE%A2%E5%9B%AD%E5%86%99%E9%9A%8F%E7%AC%94%E6%97%B6%E7%94%A8%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="插入公式"><a href="#插入公式" class="headerlink" title="插入公式"></a>插入公式</h1><p>在开启后你就可以使用<strong>LATEX</strong>格式的公式了</p><h2 id="行内公式"><a href="#行内公式" class="headerlink" title="行内公式"></a>行内公式</h2><p>使用如下格式书写，公式使用<code>$</code>包裹：</p><p>二元一次方程的判别式：<code>$\Delta=b^2-4ac$</code></p><p>编译结果为：<br>二元一次方程的判别式：$\Delta=b^2-4ac$</p><h2 id="陈列-独立-公式"><a href="#陈列-独立-公式" class="headerlink" title="陈列(独立)公式"></a>陈列(独立)公式</h2><p>使用如下格式书写，公式使用<code>$$</code>包裹：</p><p>二元一次方程的判别式：<code>$$\Delta=b^2-4ac$$</code></p><p>编译结果为：<br>二元一次方程的判别式：<br>$$\Delta=b^2-4ac$$</p><h1 id="相关阅读"><a href="#相关阅读" class="headerlink" title="相关阅读"></a>相关阅读</h1><ol><li><a href="https://www.cnblogs.com/linxd/p/4955530.html" target="_blank" rel="noopener">https://www.cnblogs.com/linxd/p/4955530.html</a></li><li><a href="https://www.cnblogs.com/q735613050/p/7253073.html" target="_blank" rel="noopener">https://www.cnblogs.com/q735613050/p/7253073.html</a></li><li><a href="https://www.cnblogs.com/zhuxiaoxi/p/8320683.html" target="_blank" rel="noopener">https://www.cnblogs.com/zhuxiaoxi/p/8320683.html</a></li></ol><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>正式开通博客园</title>
    <link href="/blog/2020/04/23/%E6%AD%A3%E5%BC%8F%E5%BC%80%E9%80%9A%E5%8D%9A%E5%AE%A2%E5%9B%AD/"/>
    <url>/blog/2020/04/23/%E6%AD%A3%E5%BC%8F%E5%BC%80%E9%80%9A%E5%8D%9A%E5%AE%A2%E5%9B%AD/</url>
    
    <content type="html"><![CDATA[<p>现在正式开通【博客园】：<a href="https://www.cnblogs.com/melodyjerry/" target="_blank" rel="noopener">https://www.cnblogs.com/melodyjerry/</a></p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Fiddler抓包工具</title>
    <link href="/blog/2020/04/23/Fiddler%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/"/>
    <url>/blog/2020/04/23/Fiddler%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<p> <a href="https://www.cnblogs.com/yyhh/p/5140852.html" target="_blank" rel="noopener">Fiddler抓包工具总结</a></p><p><a href="https://www.cnblogs.com/yyhh/p/5140852.html" target="_blank" rel="noopener">https://www.cnblogs.com/yyhh/p/5140852.html</a></p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>工具</tag>
      
      <tag>JavaWeb</tag>
      
      <tag>HTTP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MVC：开发模式</title>
    <link href="/blog/2020/04/23/MVC%EF%BC%9A%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F/"/>
    <url>/blog/2020/04/23/MVC%EF%BC%9A%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="MVC：开发模式"><a href="#MVC：开发模式" class="headerlink" title="MVC：开发模式"></a>MVC：开发模式</h1><h2 id="一、jsp演变历史"><a href="#一、jsp演变历史" class="headerlink" title="一、jsp演变历史"></a>一、jsp演变历史</h2><ol><li>早期只有servlet，只能使用response输出标签数据，非常麻烦</li><li>后来又jsp，简化了Servlet的开发，如果过度使用jsp，在jsp中即写大量的java代码，有写html表，造成难于维护，难于分工协作</li><li>再后来，java的web开发，借鉴mvc开发模式，使得程序的设计更加合理性</li></ol><h2 id="二、MVC"><a href="#二、MVC" class="headerlink" title="二、MVC"></a>二、MVC</h2><p><fancybox><img src="https://s2.ax1x.com/2020/02/27/3wYqbT.png" srcset="/blog/img/loading.gif" alt="3wYqbT.png"></fancybox></p><h3 id="M"><a href="#M" class="headerlink" title="M"></a>M</h3><ul><li><strong>Model，模型。JavaBean</strong></li></ul><ul><li>完成具体的业务操作，如：查询数据库，封装对象</li></ul><h3 id="V"><a href="#V" class="headerlink" title="V"></a>V</h3><ul><li><strong>View，视图。JSP</strong></li><li>展示数据</li></ul><h3 id="C"><a href="#C" class="headerlink" title="C"></a>C</h3><ul><li><strong>Controller，控制器。Servlet</strong></li></ul><ul><li>获取用户的输入</li><li>调用模型</li><li>将数据交给视图进行展示</li></ul><h2 id="三、优缺点"><a href="#三、优缺点" class="headerlink" title="三、优缺点"></a>三、优缺点</h2><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ol><li><strong>耦合性低，方便维护，可以利于分工协作</strong></li><li><strong>重用性高</strong></li><li>生命周期成本低</li><li>部署快</li><li><strong>可维护性高</strong></li><li><strong>有软件工程化管理</strong></li></ol><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><ol><li><strong>使得项目架构变得复杂，对开发人员要求高</strong></li><li><strong>不适合小型，中等规模的应用程序</strong></li><li>增加系统结构和实现的复杂性</li><li>视图与控制器间的过于紧密的连接</li><li>视图对模型数据的低效率访问</li><li>一般高级的界面工具或构造器不支持模式</li></ol><h1 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h1><ol><li><p>[CSDN] <a href="https://blog.csdn.net/liitdar/article/details/86685880" target="_blank" rel="noopener">MVC模式简介</a></p></li><li><p>[菜鸟教程] <a href="https://www.runoob.com/design-pattern/mvc-pattern.html" target="_blank" rel="noopener">MVC 模式</a></p></li><li><p>[百度百科] <a href="https://baike.baidu.com/item/MVC%E6%A1%86%E6%9E%B6/9241230?fromtitle=mvc&amp;fromid=85990&amp;fr=aladdin" target="_blank" rel="noopener">MVC框架</a></p></li></ol><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>JavaWeb</tag>
      
      <tag>笔记</tag>
      
      <tag>MVC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>将博客搬至CSDN</title>
    <link href="/blog/2020/04/23/%E5%B0%86%E5%8D%9A%E5%AE%A2%E6%90%AC%E8%87%B3CSDN/"/>
    <url>/blog/2020/04/23/%E5%B0%86%E5%8D%9A%E5%AE%A2%E6%90%AC%E8%87%B3CSDN/</url>
    
    <content type="html"><![CDATA[<p>现将本博客中，截止到2020-4-23 09点04分的所有博客拷贝到CSDN。</p><p>CSDN博客链接：<a href="https://blog.csdn.net/weixin_43438052" target="_blank" rel="noopener">https://blog.csdn.net/weixin_43438052</a></p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>“点击查看”隐藏式按钮html实现</title>
    <link href="/blog/2020/04/22/%E2%80%9C%E7%82%B9%E5%87%BB%E6%9F%A5%E7%9C%8B%E2%80%9D%E9%9A%90%E8%97%8F%E5%BC%8F%E6%8C%89%E9%92%AEhtml%E5%AE%9E%E7%8E%B0/"/>
    <url>/blog/2020/04/22/%E2%80%9C%E7%82%B9%E5%87%BB%E6%9F%A5%E7%9C%8B%E2%80%9D%E9%9A%90%E8%97%8F%E5%BC%8F%E6%8C%89%E9%92%AEhtml%E5%AE%9E%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<details open=""><summary>点击查看</summary><ul class="popular-posts"><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/2114475547.html" target="_blank" rel="bookmark noopener" data-pjax-state="">Hexo NexT主题美化2.0</a></div></li><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/3274212224.html" target="_blank" rel="bookmark noopener" data-pjax-state="">浏览器控制台个性化输出</a></div></li><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/1599400735.html" target="_blank" rel="bookmark noopener" data-pjax-state="">Hexo 优化与加速</a></div></li><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/273344197.html" target="_blank" rel="bookmark noopener" data-pjax-state="">本站主题已整理开源</a></div></li><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/4158923031.html" target="_blank" rel="bookmark noopener" data-pjax-state="">Hexo NexT主题之自定义标签页</a></div></li><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/507826828.html" target="_blank" rel="bookmark noopener" data-pjax-state="">Hexo NexT主题移动端样式适配</a></div></li><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/662668482.html" target="_blank" rel="bookmark noopener" data-pjax-state="">Hexo NexT接入Google AdSense广告</a></div></li><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/554801533.html" target="_blank" rel="bookmark noopener" data-pjax-state="">NexT主题之LeanCloud切换国际版</a></div></li><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/4114783453.html" target="_blank" rel="bookmark noopener" data-pjax-state="">Hexo NexT主题之代码块Mac Panel特效</a></div></li><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/4084686398.html" target="_blank" rel="bookmark noopener" data-pjax-state="">Hexo-abbrlink生成唯一文章链接</a></div></li></ul></details><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>HTML</tag>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一款炫丽的网页播放器插件</title>
    <link href="/blog/2020/04/22/%E4%B8%80%E6%AC%BE%E7%82%AB%E4%B8%BD%E7%9A%84%E7%BD%91%E9%A1%B5%E6%92%AD%E6%94%BE%E5%99%A8%E6%8F%92%E4%BB%B6/"/>
    <url>/blog/2020/04/22/%E4%B8%80%E6%AC%BE%E7%82%AB%E4%B8%BD%E7%9A%84%E7%BD%91%E9%A1%B5%E6%92%AD%E6%94%BE%E5%99%A8%E6%8F%92%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h2 id="一款炫丽的网页播放器插件"><a href="#一款炫丽的网页播放器插件" class="headerlink" title="一款炫丽的网页播放器插件"></a>一款炫丽的网页播放器插件</h2><p>网上看到一款挺不错的基于 HTML 5 实现的播放器插件，支持多平台音乐解析、精准 LRC 歌词、智能记忆、视频播放等多种功能。目前免费使用，只需注册即可 DIY。作者表明自己是个<strong>初！中！生！</strong>，<del>在 2016 年用业余时间写的</del>（网传是抄袭、暴力破解他人作品），目前每天的访问量 10W+，用的人还是挺多的，本站点也进行了集成，可在左下角体验效果。</p><blockquote><p>2020 年 04 月 01 日更新：本站已弃用绚丽彩虹，推荐 <a href="https://player.lmih.cn/" target="_blank" rel="noopener">明月浩空</a></p></blockquote><p>转载链接：<a href="https://www.liaofuzhan.com/posts/2636059693.html" target="_blank" rel="noopener">https://www.liaofuzhan.com/posts/2636059693.html</a></p><a id="more"></a><h3 id="绚丽彩虹播放器"><a href="#绚丽彩虹播放器" class="headerlink" title="绚丽彩虹播放器"></a>绚丽彩虹播放器</h3><p><a href="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/14/1.gif" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/14/1.gif" srcset="/blog/img/loading.gif" alt="绚丽彩虹播放器"></a></p><p><a href="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/14/2.gif" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/14/2.gif" srcset="/blog/img/loading.gif" alt="uxH7Hs.gif"></a></p><p>相关的功能介绍可参考：</p><p><a href="http://www.badapple.top" target="_blank" rel="noopener">绚丽彩虹播放器http://www.badapple.top/<img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/icon/linkcard.png" srcset="/blog/img/loading.gif" alt="图标"></a></p><p>之前用的是 APlayer 这款播放器，其吸盘模式能放在网页左下角，外链需自己逐个添加。由于本站要过滤 HTTP 链接，想要的外链不好找，而且在 IE 11 （博主的破旧电脑） 里 JS 一大堆报错。。部分非主流浏览器（谁会用呢 -.-!）兼容还有点问题。</p><blockquote><p>PS：NexT 5.1.4 在 Pisces 这个 scheme 下，左侧栏 sidebar 在 IE 11 里会不显示。（本站已修复）</p></blockquote><p>基于这些原因（主要是找到了更好的~），所以将 Aplayer 进行了替换，步骤也很简单：</p><ol><li>在 next/layout/_layout.swig 的 body 体内部，新增如下代码：</li></ol><div class="hljs"><pre><code class="hljs django"><span class="xml">  复制<span class="hljs-comment">&lt;!-- badApplePlayer --&gt;</span></span><span class="hljs-template-tag">{% <span class="hljs-name"><span class="hljs-name">if</span></span> theme.badApplePlayer.enable %}</span><span class="xml">  <span class="hljs-comment">&lt;!-- Your XlchPlayerKey --&gt;</span></span><span class="xml">  <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span>XlchKey="</span><span class="hljs-template-variable">{{theme.badApplePlayer.XlchKey}}</span><span class="xml">";<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><span class="xml">  <span class="hljs-comment">&lt;!-- font-awesome 4.2.0 --&gt;</span></span><span class="xml">  <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://lib.baomitu.com/font-awesome/4.2.0/css/font-awesome.min.css"</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"stylesheet"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/css"</span>&gt;</span></span><span class="xml">  <span class="hljs-comment">&lt;!-- JQuery-mousewheel 3.1.9 --&gt;</span></span><span class="xml">  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://lib.baomitu.com/jquery-mousewheel/3.1.9/jquery.mousewheel.min.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><span class="xml">  <span class="hljs-comment">&lt;!-- Scrollbar --&gt;</span></span><span class="xml">  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://static.https.badapple.top/BadApplePlayer/js/scrollbar.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><span class="xml">  <span class="hljs-comment">&lt;!-- BadApplePlayer --&gt;</span></span><span class="xml">  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://static.https.badapple.top/BadApplePlayer/Player.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><span class="hljs-template-tag">{% <span class="hljs-name"><span class="hljs-name">endif</span></span> %}</span></code></pre></div><p>其还需要依赖 jquery ，我在做其它功能时已经引入，这里就不需要了，如果你加了以上代码没效果，那么再补充：</p><div class="hljs"><pre><code class="hljs xml">复制<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://lib.baomitu.com/jquery/2.2.4/jquery.min.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre></div><p>以上链接均可换成 http 的，按需修改即可。</p><ol><li>在主题配置文件 _config.yml 中，添加配置：</li></ol><div class="hljs"><pre><code class="hljs dts">  复制<span class="hljs-meta"># http:<span class="hljs-comment">//www.badapple.top</span></span><span class="hljs-symbol">badApplePlayer:</span><span class="hljs-symbol">  enable:</span> true<span class="hljs-symbol">  XlchKey:</span> your_key <span class="hljs-meta"># 播放器Key</span></code></pre></div><p>XlchKey 为你自己的播放器 Key，官网完成注册，添加播放器后即可生成。你也可使用我的 <code>BZ9DLOyFjh</code> 来测试下。</p><ol><li>调整播放器在移动端大小（可选）。需要在 head 标签内添加以下代码，比如我是在 next/layout/_layout.swig 的 head 内加的：</li></ol><div class="hljs"><pre><code class="hljs django"><span class="xml">  复制</span><span class="hljs-template-tag">{% <span class="hljs-name"><span class="hljs-name">if</span></span> theme.badApplePlayer.enable %}</span><span class="xml">  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"viewport"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"width=device-width, initial-scale=0.9, maximum-scale=0.9"</span> /&gt;</span></span><span class="hljs-template-tag">{% <span class="hljs-name"><span class="hljs-name">endif</span></span> %}</span></code></pre></div><p>hexo 三连即可看到效果。附上视频教程地址：</p><p><a href="https://www.bilibili.com/video/av8153459" target="_blank" rel="noopener">绚丽彩虹播放器 [BadApplePlayer] 播放器教程 V20170122https://www.bilibili.com/video/av8153459<img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/icon/linkcard.png" srcset="/blog/img/loading.gif" alt="图标"></a></p><p>按照教程就可以添加网易云这些第三方平台的歌单啦！</p><h3 id="明月浩空音乐播放器"><a href="#明月浩空音乐播放器" class="headerlink" title="明月浩空音乐播放器"></a>明月浩空音乐播放器</h3><p>由于绚丽彩虹经常宕机，在网上找替换方案的同时，翻到了<a href="https://lmih.cn/about_player.html/comment-page-2" target="_blank" rel="noopener">明月浩空</a> 的网站。细品了这位大佬诸多文章后，才发现他才是播放器的原作者，只能说盗版行为太昌盛，真假难辨…明月浩空音乐播放器已经商用，功能很强大，如今开放了免费注册功能，大家不妨体验一下</p><p><a href="https://player.lmih.cn" target="_blank" rel="noopener">明月浩空音乐播放器https://player.lmih.cn/<img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/icon/linkcard.png" srcset="/blog/img/loading.gif" alt="图标"></a></p><blockquote><p>PS：其实也是基于 <a href="https://aplayer.js.org" target="_blank" rel="noopener">APlayer</a> 的定制版本，又绕回来了。。😝</p></blockquote><h3 id="宅音乐播放器"><a href="#宅音乐播放器" class="headerlink" title="宅音乐播放器"></a>宅音乐播放器</h3><p>另外一款，看了下代码，插件是修改于明月浩空免费版，体验了下，bug 挺多，毕竟是阉割版，不过它可以添加多个播放器和歌单，而明月浩空则需要付费才可以。体验地址：</p><p><a href="https://player.ilt.me" target="_blank" rel="noopener">宅音乐播放器https://player.ilt.me/<img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/icon/linkcard.png" srcset="/blog/img/loading.gif" alt="图标"></a></p><p>作者还分享了源代码和安装教程：</p><p><a href="https://github.com/lzx8589561/zhai-music" target="_blank" rel="noopener">宅音乐播放器源代码https://github.com/lzx8589561/zhai-music<img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/icon/linkcard.png" srcset="/blog/img/loading.gif" alt="图标"></a></p><p>底层使用 PHP 所写，前端为 LayUI 框架，数据库用的 MySQL</p><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>之前搭建的几款 JAVA 后端框架，可以用来 DIY 一个自己的播放器，彻底重写，有兴趣的朋友可以尝试一下。</p><h3 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h3><details open=""><summary>点击查看</summary><ul class="popular-posts"><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/2114475547.html" target="_blank" rel="bookmark noopener" data-pjax-state="">Hexo NexT主题美化2.0</a></div></li><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/3274212224.html" target="_blank" rel="bookmark noopener" data-pjax-state="">浏览器控制台个性化输出</a></div></li><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/1599400735.html" target="_blank" rel="bookmark noopener" data-pjax-state="">Hexo 优化与加速</a></div></li><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/273344197.html" target="_blank" rel="bookmark noopener" data-pjax-state="">本站主题已整理开源</a></div></li><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/4158923031.html" target="_blank" rel="bookmark noopener" data-pjax-state="">Hexo NexT主题之自定义标签页</a></div></li><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/507826828.html" target="_blank" rel="bookmark noopener" data-pjax-state="">Hexo NexT主题移动端样式适配</a></div></li><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/662668482.html" target="_blank" rel="bookmark noopener" data-pjax-state="">Hexo NexT接入Google AdSense广告</a></div></li><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/554801533.html" target="_blank" rel="bookmark noopener" data-pjax-state="">NexT主题之LeanCloud切换国际版</a></div></li><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/4114783453.html" target="_blank" rel="bookmark noopener" data-pjax-state="">Hexo NexT主题之代码块Mac Panel特效</a></div></li><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/4084686398.html" target="_blank" rel="bookmark noopener" data-pjax-state="">Hexo-abbrlink生成唯一文章链接</a></div></li></ul></details><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>浏览器截长图的方法</title>
    <link href="/blog/2020/04/09/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%88%AA%E9%95%BF%E5%9B%BE%E6%96%B9%E6%B3%95/"/>
    <url>/blog/2020/04/09/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%88%AA%E9%95%BF%E5%9B%BE%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<ol><li><p><strong>Chrome</strong> -&gt; <strong>F12</strong> -&gt; <strong>Ctrl+Shift+P</strong> -&gt; <code>Capture full size screenshot</code></p></li><li><p><strong>Firefox</strong> -&gt; <strong>F12</strong> -&gt; 右上角”<strong>…</strong>“ -&gt; <strong>设置</strong> -&gt; <strong>可选的工具箱按钮</strong> -&gt; <strong>截取整个页面</strong> -&gt; 右上角“<strong>相机</strong>”按钮</p></li></ol><fancybox><p><img src="https://i.loli.net/2020/04/09/158ebf7RkVYUcmN.png" srcset="/blog/img/loading.gif" alt="Firefox"></p></fancybox><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>小技巧</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>win10快速在当前文件夹打开cmd</title>
    <link href="/blog/2020/04/08/win10%E5%BF%AB%E9%80%9F%E5%9C%A8%E5%BD%93%E5%89%8D%E6%96%87%E4%BB%B6%E5%A4%B9%E6%89%93%E5%BC%80cmd/"/>
    <url>/blog/2020/04/08/win10%E5%BF%AB%E9%80%9F%E5%9C%A8%E5%BD%93%E5%89%8D%E6%96%87%E4%BB%B6%E5%A4%B9%E6%89%93%E5%BC%80cmd/</url>
    
    <content type="html"><![CDATA[<p>一般有两种简单、直接的方法：</p><ol><li>在<strong>路径栏输入cmd</strong>，回车 即可在当前位置打开命令窗口</li><li>按住<strong>Shift键+鼠标右键</strong>，可见在<strong>“在此处打开cmd”</strong></li></ol><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>将idea工程打包成jar文件的全步骤</title>
    <link href="/blog/2020/04/08/%E5%B0%86idea%E5%B7%A5%E7%A8%8B%E6%89%93%E5%8C%85%E6%88%90jar%E6%96%87%E4%BB%B6%E7%9A%84%E5%85%A8%E6%AD%A5%E9%AA%A4/"/>
    <url>/blog/2020/04/08/%E5%B0%86idea%E5%B7%A5%E7%A8%8B%E6%89%93%E5%8C%85%E6%88%90jar%E6%96%87%E4%BB%B6%E7%9A%84%E5%85%A8%E6%AD%A5%E9%AA%A4/</url>
    
    <content type="html"><![CDATA[<p><strong>前言</strong></p><p>近日在工作中遇到了一个问题，需要把本地的java文件打成jar包，传到云服务器上运行。于是学习了一下如何在intellijidea中将java工程打成jar包。</p><a id="more"></a><p><strong>步骤如下：</strong></p><p>1、File-&gt;PorjectStructure</p><p><a href="https://img.jbzj.com/file_images/article/201909/2019090709432910.png" target="_blank" rel="noopener"><img src="https://img.jbzj.com/file_images/article/201909/2019090709432910.png" srcset="/blog/img/loading.gif" alt="img"></a></p><p>2、在ProjectSetings中选择Artifects。</p><p>点击+号选择jar文件中的Empty选项</p><blockquote><p><strong>Artifacts –&gt; + –&gt; JAR –&gt; From modules with dependencies…</strong></p><p>参见文末</p></blockquote><p><a href="https://img.jbzj.com/file_images/article/201909/2019090709432911.png" target="_blank" rel="noopener"><img src="https://img.jbzj.com/file_images/article/201909/2019090709432911.png" srcset="/blog/img/loading.gif" alt="img"></a></p><p>3、在Name选项中修改jar文件的名字。</p><p>然后点击下方的CreatManifest按钮，点击ok(应该默认是当前工程)</p><p><a href="https://img.jbzj.com/file_images/article/201909/2019090709432912.png" target="_blank" rel="noopener"><img src="https://img.jbzj.com/file_images/article/201909/2019090709432912.png" srcset="/blog/img/loading.gif" alt="img"></a></p><p>4、点击Main Class右侧的文件夹图标，选择当前工程的入口类，即主函数所在类，点击ok</p><blockquote><p> <strong>Main Class是你这个项目(\</strong>脚本*<em>)的主方法,就是要运行的类,选一个*</em></p></blockquote><p><a href="https://img.jbzj.com/file_images/article/201909/2019090709432913.png" target="_blank" rel="noopener"><img src="https://img.jbzj.com/file_images/article/201909/2019090709432913.png" srcset="/blog/img/loading.gif" alt="img"></a></p><p>5、在右侧的AvailableElements一栏中双击编译后的资源文件，将其打入左侧jar包</p><p><a href="https://img.jbzj.com/file_images/article/201909/2019090709432914.png" target="_blank" rel="noopener"><img src="https://img.jbzj.com/file_images/article/201909/2019090709432914.png" srcset="/blog/img/loading.gif" alt="img"></a></p><p>6、点击Build选项中的BuildArtifacts</p><p><a href="https://img.jbzj.com/file_images/article/201909/2019090709433015.png" target="_blank" rel="noopener"><img src="https://img.jbzj.com/file_images/article/201909/2019090709433015.png" srcset="/blog/img/loading.gif" alt="img"></a></p><blockquote><p><em>点击Build选项。</em>这里Build选项是第一次构建jar，Rebuild是修改后重新构建jar，clean是删除jar。</p></blockquote><p><a href="https://img.jbzj.com/file_images/article/201909/2019090709433016.png" target="_blank" rel="noopener"><img src="https://img.jbzj.com/file_images/article/201909/2019090709433016.png" srcset="/blog/img/loading.gif" alt="img"></a></p><p>7、在这里我们可以看见生成的jar包</p><p><a href="https://img.jbzj.com/file_images/article/201909/2019090709433017.png" target="_blank" rel="noopener"><img src="https://img.jbzj.com/file_images/article/201909/2019090709433017.png" srcset="/blog/img/loading.gif" alt="img"></a></p><p>8、 进入jar包所在目录，在地址栏中输入cmd按回车，进入命令行</p><p><a href="https://img.jbzj.com/file_images/article/201909/2019090709433018.png" target="_blank" rel="noopener"><img src="https://img.jbzj.com/file_images/article/201909/2019090709433018.png" srcset="/blog/img/loading.gif" alt="img"></a></p><p>9、执行如图命令即可运行jar文件</p><p><a href="https://img.jbzj.com/file_images/article/201909/2019090709433019.png" target="_blank" rel="noopener"><img src="https://img.jbzj.com/file_images/article/201909/2019090709433019.png" srcset="/blog/img/loading.gif" alt="img"></a></p><hr><p>如果是选择  <strong>Artifacts –&gt; + –&gt; JAR –&gt; From modules with dependencies…</strong> 的话</p><p><strong><img src="https://images2015.cnblogs.com/blog/998529/201609/998529-20160929165026906-589079232.png" srcset="/blog/img/loading.gif" alt="img"></strong></p><p><strong>Main Class是你这个项目(\</strong>脚本*<em>)的主方法,就是要运行的类,选一个*</em></p><p><strong><img src="https://images2015.cnblogs.com/blog/998529/201609/998529-20160929165136203-124464870.png" srcset="/blog/img/loading.gif" alt="img"></strong></p><p><strong>如下图,设置 META-INF/MANIFEST.MF</strong></p><p><strong>!!!!!切记,不能用默认的(起码我用默认的是不成功的)!!!!!</strong></p><p><img src="https://images2015.cnblogs.com/blog/998529/201609/998529-20160929165409344-54984498.png" srcset="/blog/img/loading.gif" alt="img"></p><p><strong>选中你这个项目的根目录,一定要放在根目录下</strong></p><p><img src="https://images2015.cnblogs.com/blog/998529/201609/998529-20160929165602922-1728699131.png" srcset="/blog/img/loading.gif" alt="img"></p><p><strong>设置完是这样子的,关于 JAR files from libraries的两个选项:</strong></p><p><strong>选中第一个的话,打完包后是一个jar包</strong></p><p><strong>选中第二个的话,打完包后是一个jar包,外带你项目所用的jar包,个人推荐第二个</strong></p><p><strong><img src="https://images2015.cnblogs.com/blog/998529/201609/998529-20160929165729844-141512479.png" srcset="/blog/img/loading.gif" alt="img"></strong></p><p><strong>设置完后就可以点OK了</strong></p><p><strong>这个页面, Build on make打上勾,其他的不一样也没事</strong></p><p><strong><img src="https://images2015.cnblogs.com/blog/998529/201609/998529-20160929170231656-2012788781.png" srcset="/blog/img/loading.gif" alt="img"></strong></p><p><strong>最后一步, Build Artifacts… –&gt; XXX.jar –&gt; Build</strong></p><p><strong><img src="https://images2015.cnblogs.com/blog/998529/201609/998529-20160929170405078-2125381157.png" srcset="/blog/img/loading.gif" alt="img"></strong></p><p><img src="https://images2015.cnblogs.com/blog/998529/201609/998529-20160929170504891-1525363776.png" srcset="/blog/img/loading.gif" alt="img"></p><p><strong>复制这里的路径去找jar包就行</strong></p><p><strong><img src="https://images2015.cnblogs.com/blog/998529/201609/998529-20160929170637047-1227588275.png" srcset="/blog/img/loading.gif" alt="img"></strong></p><p><strong>参考资料：</strong></p><p><a href="https://blog.csdn.net/weixin_42089175/article/details/89113271" target="_blank" rel="noopener">https://blog.csdn.net/weixin_42089175/article/details/89113271</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>IDEA</tag>
      
      <tag>JAVA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>virtualbox安装ubuntu16 LTS及其配置</title>
    <link href="/blog/2020/04/07/virtualbox%E5%AE%89%E8%A3%85ubuntu16-LTS%E5%8F%8A%E5%85%B6%E9%85%8D%E7%BD%AE/"/>
    <url>/blog/2020/04/07/virtualbox%E5%AE%89%E8%A3%85ubuntu16-LTS%E5%8F%8A%E5%85%B6%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/luengmingbiao/p/10859905.html" target="_blank" rel="noopener">virtualbox安装ubuntu16 LTS及其配置</a></p><p><a href="https://www.cnblogs.com/luengmingbiao/p/10859905.html" target="_blank" rel="noopener">https://www.cnblogs.com/luengmingbiao/p/10859905.html</a></p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java-生成验证码并保存到硬盘</title>
    <link href="/blog/2020/03/31/Java-%E7%94%9F%E6%88%90%E9%AA%8C%E8%AF%81%E7%A0%81%E5%B9%B6%E4%BF%9D%E5%AD%98%E5%88%B0%E7%A1%AC%E7%9B%98/"/>
    <url>/blog/2020/03/31/Java-%E7%94%9F%E6%88%90%E9%AA%8C%E8%AF%81%E7%A0%81%E5%B9%B6%E4%BF%9D%E5%AD%98%E5%88%B0%E7%A1%AC%E7%9B%98/</url>
    
    <content type="html"><![CDATA[<p>做课设时候，选择是做“图书借阅管理系统”。</p><p>在写登陆界面时候，想把前段时间学的web中生成验证码的知识用上。</p><p>于是，就写了这个。</p><p>分为两个文件：&lt;CheckCode.java&gt; 和 &lt;CheckCodeRead.java&gt; ，前者是生成，后者是读取，均可以在控制台打印验证码值 <strong>checkValue</strong> 。</p><a id="more"></a><h1 id="CheckCode"><a href="#CheckCode" class="headerlink" title="CheckCode"></a>CheckCode</h1><div class="hljs"><pre><code class="hljs reasonml">package view;import javax.imageio.ImageIO;import java.awt.*;import java.awt.image.BufferedImage;import java.io.*;import java.util.Random;<span class="hljs-comment">/**</span><span class="hljs-comment"> * @Classname CheckCode</span><span class="hljs-comment"> * @Description TODO</span><span class="hljs-comment"> * @Date 2020/3/31 下午 5:13</span><span class="hljs-comment"> * @Created by jerry</span><span class="hljs-comment"> */</span>public <span class="hljs-keyword">class</span> CheckCode {    public void creat<span class="hljs-constructor">Check()</span> {        <span class="hljs-built_in">char</span><span class="hljs-literal">[]</span> chs = <span class="hljs-keyword">new</span> <span class="hljs-built_in">char</span><span class="hljs-literal">[<span class="hljs-number">4</span>]</span>;        <span class="hljs-built_in">int</span> width = <span class="hljs-number">100</span>;        <span class="hljs-built_in">int</span> height = <span class="hljs-number">50</span>;        <span class="hljs-comment">//1.创建一对象，在内存中图片(验证码图片对象)</span>        BufferedImage image = <span class="hljs-keyword">new</span> <span class="hljs-constructor">BufferedImage(<span class="hljs-params">width</span>,<span class="hljs-params">height</span>,BufferedImage.TYPE_INT_RGB)</span>;        <span class="hljs-comment">//2.美化图片</span>        <span class="hljs-comment">//2.1 填充背景色</span>        Graphics g = image.get<span class="hljs-constructor">Graphics()</span>;<span class="hljs-comment">//画笔对象</span>        g.set<span class="hljs-constructor">Color(Color.PINK)</span>;<span class="hljs-comment">//设置画笔颜色</span>        g.fill<span class="hljs-constructor">Rect(0,0,<span class="hljs-params">width</span>,<span class="hljs-params">height</span>)</span>;        <span class="hljs-comment">//2.2画边框</span>        g.set<span class="hljs-constructor">Color(Color.BLUE)</span>;        g.draw<span class="hljs-constructor">Rect(0,0,<span class="hljs-params">width</span> - 1,<span class="hljs-params">height</span> - 1)</span>;        String str = <span class="hljs-string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghigklmnopqrstuvwxyz0123456789"</span>;        <span class="hljs-comment">//生成随机角标</span>        Random ran = <span class="hljs-keyword">new</span> <span class="hljs-constructor">Random()</span>;        StringBuilder sb = <span class="hljs-keyword">new</span> <span class="hljs-constructor">StringBuilder()</span>; <span class="hljs-comment">// StringBuilder：一个可变的字符序列</span>        for (<span class="hljs-built_in">int</span> i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">4</span>; i++) {            <span class="hljs-built_in">int</span> index = ran.next<span class="hljs-constructor">Int(<span class="hljs-params">str</span>.<span class="hljs-params">length</span>()</span>);            <span class="hljs-comment">//获取字符</span>            <span class="hljs-built_in">char</span> ch = str.<span class="hljs-built_in">char</span><span class="hljs-constructor">At(<span class="hljs-params">index</span>)</span>;<span class="hljs-comment">//随机字符</span>            sb.append(ch);            chs<span class="hljs-literal">[<span class="hljs-identifier">i</span>-<span class="hljs-number">1</span>]</span> = ch;            <span class="hljs-comment">//2.3写验证码</span>            g.draw<span class="hljs-constructor">String(<span class="hljs-params">ch</span>+<span class="hljs-string">""</span>,<span class="hljs-params">width</span><span class="hljs-operator">/</span>5<span class="hljs-operator">*</span><span class="hljs-params">i</span>,<span class="hljs-params">height</span><span class="hljs-operator">/</span>2)</span>;        }        String checkCode_session = sb.<span class="hljs-keyword">to</span><span class="hljs-constructor">String()</span>;<span class="hljs-comment">/*        //将验证码存入session</span><span class="hljs-comment">        request.getSession().setAttribute("checkCode_session",checkCode_session);*/</span>        <span class="hljs-comment">//2.4画干扰线</span>        g.set<span class="hljs-constructor">Color(Color.GREEN)</span>;        <span class="hljs-comment">//随机生成坐标点</span>        for (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++) {            <span class="hljs-built_in">int</span> x1 = ran.next<span class="hljs-constructor">Int(<span class="hljs-params">width</span>)</span>;            <span class="hljs-built_in">int</span> x2 = ran.next<span class="hljs-constructor">Int(<span class="hljs-params">width</span>)</span>;            <span class="hljs-built_in">int</span> y1 = ran.next<span class="hljs-constructor">Int(<span class="hljs-params">height</span>)</span>;            <span class="hljs-built_in">int</span> y2 = ran.next<span class="hljs-constructor">Int(<span class="hljs-params">height</span>)</span>;            g.draw<span class="hljs-constructor">Line(<span class="hljs-params">x1</span>,<span class="hljs-params">y1</span>,<span class="hljs-params">x2</span>,<span class="hljs-params">y2</span>)</span>;        }        <span class="hljs-comment">//3.将图片、验证码值写入硬盘</span><span class="hljs-comment">//        ImageIO.write(image,"jpg",response.getOutputStream());</span>        <span class="hljs-keyword">try</span> {            String encoding=<span class="hljs-string">"GBK"</span>;            <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">ImageIO</span>.</span></span>write(image, <span class="hljs-string">"png"</span>,<span class="hljs-keyword">new</span> <span class="hljs-constructor">File(<span class="hljs-string">"F:\\MyJava\\LibrarySystem\\v0.0\\src\\image\\check.png"</span>)</span>);            File file = <span class="hljs-keyword">new</span> <span class="hljs-constructor">File(<span class="hljs-string">"F:\\MyJava\\LibrarySystem\\v0.0\\src\\image\\check.txt"</span>)</span>;            Writer out = <span class="hljs-keyword">new</span> <span class="hljs-constructor">OutputStreamWriter(<span class="hljs-params">new</span> FileOutputStream(<span class="hljs-params">file</span>)</span>,encoding);            out.write(checkCode_session); <span class="hljs-comment">// 将验证码值写入check.txt文件里</span>            out.close<span class="hljs-literal">()</span>; <span class="hljs-comment">// 关闭输出流，回收资源</span>            <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(checkCode_session);        } catch (IOException e) {            e.print<span class="hljs-constructor">StackTrace()</span>;        }    }    public static void main(String<span class="hljs-literal">[]</span> args) {        <span class="hljs-keyword">new</span> <span class="hljs-constructor">CheckCode()</span>.creat<span class="hljs-constructor">Check()</span>;    }}</code></pre></div><h1 id="CheckCodeRead"><a href="#CheckCodeRead" class="headerlink" title="CheckCodeRead"></a>CheckCodeRead</h1><div class="hljs"><pre><code class="hljs arduino">package view;<span class="hljs-keyword">import</span> java.io.BufferedReader;<span class="hljs-keyword">import</span> java.io.<span class="hljs-built_in">File</span>;<span class="hljs-keyword">import</span> java.io.FileInputStream;<span class="hljs-keyword">import</span> java.io.InputStreamReader;<span class="hljs-comment">/**</span><span class="hljs-comment"> * @Classname CheckCodeCreate</span><span class="hljs-comment"> * @Description TODO</span><span class="hljs-comment"> * @Date 2020/3/31 下午 5:51</span><span class="hljs-comment"> * @Created by jerry</span><span class="hljs-comment"> */</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CheckCodeRead</span> {</span>    <span class="hljs-comment">/**</span><span class="hljs-comment">     * 功能：Java读取txt文件的内容</span><span class="hljs-comment">     * 步骤：1：先获得文件句柄</span><span class="hljs-comment">     * 2：获得文件句柄当做是输入一个字节码流，需要对这个输入流进行读取</span><span class="hljs-comment">     * 3：读取到输入流后，需要读取生成字节流</span><span class="hljs-comment">     * 4：一行一行的输出。readline()。</span><span class="hljs-comment">     * 备注：需要考虑的是异常情况</span><span class="hljs-comment">     * @param filePath</span><span class="hljs-comment">     */</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">readTxtFile</span><span class="hljs-params">(<span class="hljs-keyword">String</span> filePath)</span></span>{        <span class="hljs-keyword">try</span> {            <span class="hljs-keyword">String</span> encoding=<span class="hljs-string">"GBK"</span>;            <span class="hljs-built_in">File</span> file=<span class="hljs-keyword">new</span> <span class="hljs-built_in">File</span>(filePath);            <span class="hljs-keyword">if</span>(file.isFile() &amp;&amp; file.<span class="hljs-built_in">exists</span>()){ <span class="hljs-comment">//判断文件是否存在</span>                InputStreamReader <span class="hljs-built_in">read</span> = <span class="hljs-keyword">new</span> InputStreamReader(                        <span class="hljs-keyword">new</span> FileInputStream(file),encoding);<span class="hljs-comment">//考虑到编码格式</span>                BufferedReader bufferedReader = <span class="hljs-keyword">new</span> BufferedReader(<span class="hljs-built_in">read</span>);                <span class="hljs-keyword">String</span> lineTxt = null;                <span class="hljs-keyword">while</span>((lineTxt = bufferedReader.readLine()) != null){                    System.out.<span class="hljs-built_in">println</span>(lineTxt);                }                <span class="hljs-built_in">read</span>.<span class="hljs-built_in">close</span>();            }<span class="hljs-keyword">else</span>{                System.out.<span class="hljs-built_in">println</span>(<span class="hljs-string">"找不到指定的文件"</span>);            }        } <span class="hljs-keyword">catch</span> (Exception e) {            System.out.<span class="hljs-built_in">println</span>(<span class="hljs-string">"读取文件内容出错"</span>);            e.printStackTrace();        }    }    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">CheckCodeRead</span><span class="hljs-params">()</span> </span>{        <span class="hljs-keyword">String</span> filePath = <span class="hljs-string">"F:\\MyJava\\LibrarySystem\\v0.0\\src\\image\\check.txt"</span>;        <span class="hljs-comment">//   "res/";</span>        readTxtFile(filePath);    }    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">String</span> argv[])</span></span>{        <span class="hljs-keyword">new</span>  CheckCodeRead();    }}</code></pre></div><h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p>验证码图片 check.png 👇</p><p><img src="https://s1.ax1x.com/2020/03/31/GQ6su6.png" srcset="/blog/img/loading.gif" alt="GQ6su6.png"></p><p>控制台输出 👇</p><p><img src="https://s1.ax1x.com/2020/03/31/GQ6NEF.png" srcset="/blog/img/loading.gif" alt="GQ6NEF.png"></p><p>check.txt 保存 验证码值 👇</p><p><img src="https://s1.ax1x.com/2020/03/31/GQ6Bg1.png" srcset="/blog/img/loading.gif" alt="GQ6Bg1.png"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java.sql的接口PreparedStatement使用</title>
    <link href="/blog/2020/03/28/Java.sql%E7%9A%84%E6%8E%A5%E5%8F%A3PreparedStatement%E4%BD%BF%E7%94%A8/"/>
    <url>/blog/2020/03/28/Java.sql%E7%9A%84%E6%8E%A5%E5%8F%A3PreparedStatement%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<a id="more"></a><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">package</span> utils;<span class="hljs-keyword">import</span> java.sql.*;<span class="hljs-comment">/**</span><span class="hljs-comment"> * <span class="hljs-doctag">@Classname</span> JdbcUtils</span><span class="hljs-comment"> * <span class="hljs-doctag">@Description</span> JDBC的工具类。(尽量用单例模式)</span><span class="hljs-comment"> * <span class="hljs-doctag">@Created</span> by melodyjerry</span><span class="hljs-comment"> */</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">JdbcUtil</span> </span>{    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String driverName = <span class="hljs-string">"com.mysql.jdbc.Driver"</span>;    <span class="hljs-comment">// 数据库连接路径</span>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String URL = <span class="hljs-string">"jdbc:mysql://localhost:3306/librarysystem?"</span>   <span class="hljs-comment">//127.0.0.1</span>            + <span class="hljs-string">"useUnicode = true &amp; serverTimezone = GMT"</span>            <span class="hljs-comment">// MySQL在高版本需要指明是否进行SSL连接</span>            + <span class="hljs-string">"&amp; characterEncoding = utf8 &amp; useSSL = false"</span>;    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String userName = <span class="hljs-string">"root"</span>;    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String userPassword = <span class="hljs-string">"root"</span>;    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> Connection dbConn = <span class="hljs-keyword">null</span>;    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> Statement stmt;    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> JdbcUtil utils = <span class="hljs-keyword">null</span>;    <span class="hljs-comment">// 预编译语句</span>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> PreparedStatement pstmt = <span class="hljs-keyword">null</span>;    <span class="hljs-comment">/**</span><span class="hljs-comment">     * 不是线程安全的</span><span class="hljs-comment">     * 如果有并发访问实例化的时候会出现线程安全的问题</span><span class="hljs-comment">     * 解决办法加同步锁synchronized</span><span class="hljs-comment">     */</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">synchronized</span> <span class="hljs-keyword">static</span> JdbcUtil <span class="hljs-title">getJdbcUtil</span><span class="hljs-params">()</span> </span>{        <span class="hljs-keyword">if</span> (utils == <span class="hljs-keyword">null</span>) {            utils = <span class="hljs-keyword">new</span> JdbcUtil();            <span class="hljs-keyword">return</span> utils;        }        <span class="hljs-keyword">return</span> utils;    }    <span class="hljs-comment">/**</span><span class="hljs-comment">     * 静态代码块</span><span class="hljs-comment">     * 将加载驱动、连接数据库放入静态块中</span><span class="hljs-comment">     */</span>    <span class="hljs-keyword">static</span> {        <span class="hljs-keyword">if</span> (dbConn == <span class="hljs-keyword">null</span>) {            <span class="hljs-keyword">try</span>            {                <span class="hljs-comment">// 使用Class.forName()方式来加载数据库的驱动类</span>                <span class="hljs-comment">// Class.forName()是Java提供的一种基于反射的方式，直接根据类的全限定名（包+类）</span>                Class.forName(driverName);                System.out.println(<span class="hljs-string">"加载驱动成功！"</span>);            }<span class="hljs-keyword">catch</span>(Exception e){                e.printStackTrace();                System.out.println(<span class="hljs-string">"加载驱动失败！"</span>);            }            <span class="hljs-keyword">try</span>{                dbConn= DriverManager.getConnection(URL,userName,userPassword);                System.out.println(<span class="hljs-string">"连接数据库成功！"</span>);            }<span class="hljs-keyword">catch</span>(Exception e)            {                e.printStackTrace();                System.out.print(<span class="hljs-string">"SQL Server连接失败！"</span>);            }        }    }    <span class="hljs-comment">/**</span><span class="hljs-comment">     * 对外提供一个方法来获取数据库连接</span><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> dbConn</span><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> Exception</span><span class="hljs-comment">     */</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Connection <span class="hljs-title">getConn</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception </span>{        <span class="hljs-keyword">return</span> dbConn;    }    <span class="hljs-comment">/**</span><span class="hljs-comment">     * 创建语句对象</span><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> stmt</span><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> Exception</span><span class="hljs-comment">     */</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Statement <span class="hljs-title">getStmt</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception </span>{        <span class="hljs-keyword">if</span>(stmt == <span class="hljs-keyword">null</span>) {            <span class="hljs-keyword">try</span> {                <span class="hljs-keyword">if</span>(dbConn == <span class="hljs-keyword">null</span>) {                    dbConn = getConn();                }                stmt = dbConn.createStatement();            } <span class="hljs-keyword">catch</span> (Exception e) {                e.printStackTrace();            }        }        <span class="hljs-keyword">return</span> stmt;    }    <span class="hljs-comment">/**</span><span class="hljs-comment">     * 预编译语句对象</span><span class="hljs-comment">     * PreparedStatement对象可以防止sql注入，而Statement不能防止sql注入</span><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> sql</span><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> Exception</span><span class="hljs-comment">     */</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> PreparedStatement <span class="hljs-title">getPstmt</span><span class="hljs-params">(String sql)</span> <span class="hljs-keyword">throws</span> Exception </span>{        <span class="hljs-keyword">if</span>(pstmt == <span class="hljs-keyword">null</span>) {            <span class="hljs-keyword">try</span> {                pstmt = dbConn.prepareStatement(sql);            } <span class="hljs-keyword">catch</span> (SQLException e) {                e.printStackTrace();            }        }        <span class="hljs-keyword">return</span> pstmt;    }    <span class="hljs-comment">/**</span><span class="hljs-comment">     * 关闭数据库连接</span><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> dbConn</span><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> Exception</span><span class="hljs-comment">     */</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">closeConn</span><span class="hljs-params">(Connection dbConn)</span> <span class="hljs-keyword">throws</span> Exception </span>{        <span class="hljs-keyword">try</span> {            <span class="hljs-keyword">if</span>(dbConn != <span class="hljs-keyword">null</span>)                dbConn.close();        } <span class="hljs-keyword">catch</span> (SQLException e) {            e.printStackTrace();            System.out.print(<span class="hljs-string">"MySQL数据库关闭失败！"</span>);        }    }    <span class="hljs-comment">/**</span><span class="hljs-comment">     * 测试数据库连接、sql操作</span><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> args</span><span class="hljs-comment">     */</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{        <span class="hljs-comment">// 创建实例来测试连接</span>        JdbcUtil jdbcUtil = <span class="hljs-keyword">new</span> JdbcUtil();        <span class="hljs-keyword">try</span> {            getConn(); <span class="hljs-comment">// jdbcUtil.getConn();</span>            <span class="hljs-comment">// 基于数据库连接Connection对象，创建SQL语句执行句柄，Statement对象</span>            <span class="hljs-comment">// prepareStatement对象，就是用来基于底层的Connection代表的数据库连接</span>            <span class="hljs-comment">// 允许我们通过java程序，通过prepareStatement对象，向MySQL数据库发送SQL语句</span>            <span class="hljs-comment">// 从而实现通过发送的SQL语句来执行增删改查等逻辑</span>            <span class="hljs-comment">// 第一个，SQL语句中，值所在的地方，都用问号（?）代表</span>            String sql = <span class="hljs-string">"select * from admin where adminName = ? and adminPassword = ?;"</span>;            pstmt = dbConn.prepareStatement(sql);            <span class="hljs-comment">// 第二个，必须调用PreparedStatement的setX()系列方法，对指定的占位符设置实际的值</span>            pstmt.setString(<span class="hljs-number">1</span>,<span class="hljs-string">"admin"</span>);            pstmt.setString(<span class="hljs-number">2</span>,<span class="hljs-string">"admin"</span>);            <span class="hljs-comment">// Statement.executeQuery()方法，用来执行select语句</span>            <span class="hljs-comment">// Statement.executeUpdate()方法，就可以用来执行insert、update、delete语句</span>            <span class="hljs-comment">// executeUpdate()方法，返回类型是个int值，也就是SQL语句影响的行数</span>            <span class="hljs-comment">// 第三个，执行SQL语句时，直接使用executeQuery()即可，不用传入任何参数</span>            ResultSet rs = pstmt.executeQuery();<span class="hljs-comment">//            int rsn = pstmt.executeUpdate();</span><span class="hljs-comment">//            System.out.println("SQL语句影响了【" + rsn + "】行。");</span>            <span class="hljs-keyword">while</span>(rs.next()){                <span class="hljs-comment">//打印的就是总记录数。把检索结果看成只有一跳记录一个字段的表</span>                System.out.println(rs.getString(<span class="hljs-number">3</span>)+<span class="hljs-string">"\t"</span>);            }        } <span class="hljs-keyword">catch</span> (SQLException e) {            e.printStackTrace();            System.out.println(<span class="hljs-string">"sql语句操作失败！"</span>+e.toString());        } <span class="hljs-keyword">catch</span> (Exception e) {            e.printStackTrace();            System.out.println(<span class="hljs-string">"存在异常！"</span>+e.toString());        }<span class="hljs-keyword">finally</span> {            <span class="hljs-keyword">try</span> {                <span class="hljs-comment">// 最后一定要记得在finally代码块中，尽快在执行完SQL语句之后，就释放数据库连接</span>                <span class="hljs-keyword">if</span> (pstmt != <span class="hljs-keyword">null</span>){                    pstmt.close();                }                <span class="hljs-keyword">if</span> (dbConn !=<span class="hljs-keyword">null</span>){                    dbConn.close();                }            }<span class="hljs-keyword">catch</span> (Exception e){                e.printStackTrace();            }        }    }}</code></pre></div><hr><p>参考资料：</p><ul><li><p><a href="https://www.cnblogs.com/liang-chen/p/11969788.html" target="_blank" rel="noopener">PreparedStatement用法详解</a></p></li><li><p><a href="https://www.iteye.com/blog/sunnylocus-432648" target="_blank" rel="noopener">对PreparedStatement、Statement的一点总结      </a></p></li><li><p><a href="https://blog.csdn.net/czh500/article/details/88202971" target="_blank" rel="noopener">java中PreparedStatement和Statement详细讲解</a></p></li><li><p><a href="https://blog.csdn.net/nnzhuilian/article/details/86241787" target="_blank" rel="noopener">prepareStatement的用法和解释</a></p></li><li><p><a href="https://blog.csdn.net/he_hchx/article/details/1586445" target="_blank" rel="noopener">PreparedStatement接口，prepareStatement方法</a></p></li><li><p><a href="https://blog.csdn.net/changyansz/article/details/83651663?depth_1-utm_source=distribute.pc_relevant.none-task&amp;utm_source=distribute.pc_relevant.none-task" target="_blank" rel="noopener">PreparedStatement的用法</a></p></li><li><p><a href="https://blog.csdn.net/qq_25302531/article/details/80250505" target="_blank" rel="noopener">Java.sql的接口PreparedStatement使用</a></p></li><li><p><a href="https://blog.csdn.net/sky198989/article/details/82216870" target="_blank" rel="noopener">怎么得到PreparedStatement查询条数的结果</a></p></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>Java</tag>
      
      <tag>数据库</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>全能终端神器——MobaXterm</title>
    <link href="/blog/2020/03/25/%E5%85%A8%E8%83%BD%E7%BB%88%E7%AB%AF%E7%A5%9E%E5%99%A8MobaXterm/"/>
    <url>/blog/2020/03/25/%E5%85%A8%E8%83%BD%E7%BB%88%E7%AB%AF%E7%A5%9E%E5%99%A8MobaXterm/</url>
    
    <content type="html"><![CDATA[<p>现今软件市场上有很多终端工具，比如：secureCRT、Putty、telnet，等等。secureCRT其实也是一款很强大的终端工具，良许也使用过它很长时间，但是，它毕竟是收费软件，在公司里不允许使用。而且在良许自己的电脑里一量输入大写，整个界面就乱了（原因未知，未深究），这是直接导致良许放弃它的原因。</p><p>而Putty，它非常小巧，而且免费，在我们公司大量使用。但是良许不喜欢它的原因是它真的不好用，不支持标签，开多个会话的话就需要开多个窗口，窗口切换也很不方便，因此良许就使用了一两个月后就放弃它了。</p><p>当然还有其它终端工具，比如XShell，由于没用过就不敢乱评价了。</p><p>本文要隆重推出一款集万千于一身的全能型终端神器——<strong>MobaXterm</strong>！这款神器是我师傅介绍给我的，在我第一次使用它的时候，就深深爱上它了，真的是相见恨晚，从此一发不不可收拾，自己电脑，公司电脑全部都安上了这款神器。</p><p>先说说这款神器的优点：</p><blockquote><ol><li><p>功能十分强大，支持SSH，FTP，串口，VNC，X server等功能；</p></li><li><p>支持标签，切换也十分方便；</p></li><li><p>众多快捷键，操作方便；</p></li><li><p>有丰富的插件，可以进一步增强功能；</p></li><li><p>虽然有收费版，但免费版已经可以让我们装逼装上天……</p></li></ol></blockquote><p>当然优点、功能远不止这些，更多闪光点期待读者去发掘！</p><p>废话这么多，下面进入教学阶段。</p><a id="more"></a><p><strong>1. 软件的安装</strong></p><p>直接去官网下载，有免费版下载。当然你要是够土豪买收费版良许也不介意。免费版不仅提供了安装版，还提供了免安装的绿色版，我们甚至可以将它拷到U盘，在家里有公司所有配置都一样。</p><p><strong>2. 创建SSH session</strong></p><p>安装完毕之后界面长这个样。</p><p><img src="https://pic3.zhimg.com/80/v2-71bb8aa80024b225c26de758bf7425de_720w.jpg" srcset="/blog/img/loading.gif" alt="img"></p><p>当然你们刚安装完成是不会有任何session的。下面来创建第一个SSH session。</p><p>点击菜单栏 「sessions」 –&gt; 「new session」，即可弹出 「session setting」 对话框。由上面那一大串的连接方式我们就可以知道Moba的强大之处。</p><p><img src="https://pic2.zhimg.com/80/v2-8c9c249618d844e9b2495d65557db571_720w.jpg" srcset="/blog/img/loading.gif" alt="img"></p><p>我们点选第一个SSH图标，并填入相关信息，就可以完成session创建了。</p><p>点击确定后，输入密码就可以连接上虚拟机了。而且边上虚拟机之后，它会自动通过FTP也连接到虚拟机，直接拖拽就可以进行文件复制了。</p><p><strong>3. 快速连接session</strong></p><p>创建一个session之后，就可以在左侧的session标签里留下它的信息，下次需要连接的时候直接双击即可。</p><p><img src="https://pic3.zhimg.com/80/v2-71bb8aa80024b225c26de758bf7425de_720w.jpg" srcset="/blog/img/loading.gif" alt="img"></p><p><strong>4. 创建串口session</strong></p><p>下面介绍串口session的创建。</p><p>如同第2步，在「session setting」 对话框里选择serial，再选好串口号及波特率，点击OK就完成连接了。</p><p>同样session会保存在左侧的session标签页里，方便下次连接。</p><p><img src="https://pic1.zhimg.com/80/v2-7ea726ba389a57562479920fdbac8830_720w.jpg" srcset="/blog/img/loading.gif" alt="img"></p><p><strong>5. 几个有用的设置</strong></p><p><strong>5.1 隐藏菜单栏下的那排按钮</strong></p><p>菜单栏下的那排按钮感觉有点鸡肋，全部可以从菜单栏里找到，而且使用频率也不是非常高。况且，大部分屏幕是长方形的，上下空间有限，左右还比较富余一些，因此去掉它可以省下很大空间。</p><p><img src="https://pic2.zhimg.com/80/v2-f0d89ba4a643f8fcd8a9a4ce6984c1fd_720w.jpg" srcset="/blog/img/loading.gif" alt="img"></p><p>在菜单栏点击 「view」 –&gt; 「show menu bar」，即可隐藏此排按钮。</p><p><strong>5.2 右键粘贴</strong></p><p>在Moba及很多终端工具里，都有这样的功能：鼠标左键划选复制文件，右键粘贴文本。但在Moba中右键粘贴功能默认不打开，我们可以手动打开。</p><p>在菜单栏点击 「settings」 –&gt; 「Configuration」，在弹出的对话框中选择 「terminal」，再将 「paste using right-click」 打上对勾即可。</p><p><img src="https://pic4.zhimg.com/80/v2-16d5c00e4e623b560e3fe817a91a0327_720w.jpg" srcset="/blog/img/loading.gif" alt="img"></p><p><strong>5.3 关闭自动弹出SFTP</strong></p><p>Moba在连接上远程电脑之后，将自动打开左侧的SFTP侧边栏。有时我们并不需要SFTP，同时主窗口是黑色的，SFTP又是白色的，显得有点刺眼，因此可以将自动弹出SFTP功能关闭掉。</p><p>在菜单栏点击 「settings」 –&gt; 「Configuration」，在弹出的对话框中选择 「SSH」，再将 「automaticall switch to SSH-browser tab after login」 前面的对勾去掉即可。</p><p><img src="https://pic1.zhimg.com/80/v2-962287e59926731131ffb9fa13a1a164_720w.jpg" srcset="/blog/img/loading.gif" alt="img"></p><p><strong>6. 小结</strong></p><p>本文介绍了三种连接方式：SSH，FTP，serial，以及三个有用的设置。当然Moba的功能远不止这些，但这三种连接方式是最基本，最常用的，因此先拿出来讲。在后续的博文中，将进一步介绍Moba的高级用法，敬请期待！</p><hr><p>本文章转载自知乎 <a href="https://zhuanlan.zhihu.com/p/56341917" target="_blank" rel="noopener">[<strong>良许Linux</strong>]</a></p><p>本文仅供学习使用</p><p>原文链接：<a href="https://zhuanlan.zhihu.com/p/56341917" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/56341917</a></p><p><img src="https://pic1.zhimg.com/80/v2-59872508750edbfa909089fdacd78260_720w.jpg" srcset="/blog/img/loading.gif" alt="img"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VS Code配置C/C++环境</title>
    <link href="/blog/2020/03/21/VS%20Code%20%E9%85%8D%E7%BD%AEC%E3%80%81C++%E7%8E%AF%E5%A2%83/"/>
    <url>/blog/2020/03/21/VS%20Code%20%E9%85%8D%E7%BD%AEC%E3%80%81C++%E7%8E%AF%E5%A2%83/</url>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="1、安装-VS-Code"><a href="#1、安装-VS-Code" class="headerlink" title="1、安装 VS Code"></a>1、安装 VS Code</h1><p>官网下载安装包直接安装即可 </p><p><a href="https://code.visualstudio.com/" target="_blank" rel="noopener">https://code.visualstudio.com/</a></p><h1 id="2、VS-Code-插件"><a href="#2、VS-Code-插件" class="headerlink" title="2、VS Code 插件"></a>2、VS Code 插件</h1><ol><li>C/C++</li></ol><p><img src="https://s1.ax1x.com/2020/03/21/8f8fYV.png" srcset="/blog/img/loading.gif" alt="8f8fYV.png"></p><ol start="2"><li>彩虹括号</li></ol><p><img src="https://s1.ax1x.com/2020/03/21/8f8oy4.png" srcset="/blog/img/loading.gif" alt="8f8oy4.png"></p><ol start="3"><li>汉化</li></ol><p><img src="https://s1.ax1x.com/2020/03/21/8f8qT1.png" srcset="/blog/img/loading.gif" alt="8f8qT1.png"></p><ol start="4"><li>Include Autocorrelete</li></ol><p><img src="https://s1.ax1x.com/2020/03/21/8fGpOH.png" srcset="/blog/img/loading.gif" alt="8fGpOH.png"></p><h1 id="3、安装mingw-w64"><a href="#3、安装mingw-w64" class="headerlink" title="3、安装mingw-w64"></a>3、安装mingw-w64</h1><p>在mingw-w64官网下载64位的mingw-w64离线包<br> <a href="https://sourceforge.net/projects/mingw-w64/files/?source=navbar" target="_blank" rel="noopener">https://sourceforge.net/projects/mingw-w64/files/?source=navbar</a><br> 根据系统选择合适的安装包进行下载（win10_64位选择如图标签） </p><p><img src="https://s1.ax1x.com/2020/03/21/8fGdB9.png" srcset="/blog/img/loading.gif" alt="8fGdB9.png"></p><p>可以直接下载文件压缩包(我是下载文件压缩包直接解压就可以用了) </p><h1 id="4、配置计算机环境变量PATH"><a href="#4、配置计算机环境变量PATH" class="headerlink" title="4、配置计算机环境变量PATH"></a>4、配置计算机环境变量PATH</h1><p>我的bin目录是：<strong>C:\mingw64\bin</strong></p><p>把它加到环境变量中的PATH里去</p><p><img src="https://s1.ax1x.com/2020/03/21/8fGfHA.png" srcset="/blog/img/loading.gif" alt="8fGfHA.png"></p><h1 id="5、重启电脑、检验安装"><a href="#5、重启电脑、检验安装" class="headerlink" title="5、重启电脑、检验安装"></a>5、重启电脑、检验安装</h1><p>重启电脑后，打开CMD，输入<code>gcc -v</code>查看是否安装正确</p><p>输入gcc -v的最后一行输出。版本要和你自己下的对应，例如64位要有x86_64和seh</p><p><img src="https://s1.ax1x.com/2020/03/21/8fJnC6.png" srcset="/blog/img/loading.gif" alt="8fJnC6.png"></p><h1 id="6、VS-Code-配置运行环境"><a href="#6、VS-Code-配置运行环境" class="headerlink" title="6、VS Code 配置运行环境"></a>6、VS Code 配置运行环境</h1><p>打开vscode，选择或新建一个空文件夹目录打开作为项目目录。<br>点击“文件”按钮，再点击“新建文件夹”按钮，并重命名为”<code>.vscode</code>”。<br>在该文件夹内，在点击“新建文件”按钮，建<code>launch.json</code>，<code>settings.json</code>，<code>tasks.json</code>三个.json文件。</p><h2 id="launch-json"><a href="#launch-json" class="headerlink" title="launch.json"></a>launch.json</h2><div class="hljs"><pre><code class="hljs json">{    <span class="hljs-attr">"version"</span>: <span class="hljs-string">"0.2.0"</span>,    <span class="hljs-attr">"configurations"</span>: [        {            <span class="hljs-attr">"name"</span>: <span class="hljs-string">"(gdb) Launch"</span>,            <span class="hljs-attr">"preLaunchTask"</span>: <span class="hljs-string">"build"</span>,            <span class="hljs-attr">"type"</span>: <span class="hljs-string">"cppdbg"</span>,            <span class="hljs-attr">"request"</span>: <span class="hljs-string">"launch"</span>,            <span class="hljs-attr">"program"</span>: <span class="hljs-string">"${fileDirname}/${fileBasenameNoExtension}.exe"</span>,            <span class="hljs-attr">"args"</span>: [],            <span class="hljs-attr">"stopAtEntry"</span>: <span class="hljs-literal">false</span>,            <span class="hljs-attr">"cwd"</span>: <span class="hljs-string">"${workspaceFolder}"</span>,            <span class="hljs-attr">"environment"</span>: [],            <span class="hljs-attr">"externalConsole"</span>: <span class="hljs-literal">true</span>,            <span class="hljs-attr">"MIMode"</span>: <span class="hljs-string">"gdb"</span>,            <span class="hljs-attr">"miDebuggerPath"</span>: <span class="hljs-string">"C:/Program Files/mingw-w64/x86_64-8.1.0-release-posix-sjlj-rt_v6-rev0/mingw64/bin/gdb.exe"</span>, <span class="hljs-comment">// 这里修改GDB路径为安装的mingw64的bin下的gdb.exe路径</span>            <span class="hljs-attr">"setupCommands"</span>: [                {                    <span class="hljs-attr">"description"</span>: <span class="hljs-string">"Enable pretty-printing for gdb"</span>,                    <span class="hljs-attr">"text"</span>: <span class="hljs-string">"-enable-pretty-printing"</span>,                    <span class="hljs-attr">"ignoreFailures"</span>: <span class="hljs-literal">true</span>,                }            ]        }]}</code></pre></div><h2 id="tasks-json"><a href="#tasks-json" class="headerlink" title="tasks.json"></a>tasks.json</h2><div class="hljs"><pre><code class="hljs json">{    <span class="hljs-attr">"version"</span>: <span class="hljs-string">"2.0.0"</span>,    <span class="hljs-attr">"tasks"</span>: [        {            <span class="hljs-attr">"label"</span>: <span class="hljs-string">"build"</span>,            <span class="hljs-attr">"type"</span>: <span class="hljs-string">"shell"</span>,            <span class="hljs-attr">"group"</span>: {                <span class="hljs-attr">"kind"</span>: <span class="hljs-string">"build"</span>,                <span class="hljs-attr">"isDefault"</span>: <span class="hljs-literal">true</span>            },            <span class="hljs-attr">"presentation"</span>: {                <span class="hljs-attr">"echo"</span>: <span class="hljs-literal">true</span>,                <span class="hljs-attr">"reveal"</span>: <span class="hljs-string">"always"</span>,                <span class="hljs-attr">"focus"</span>: <span class="hljs-literal">false</span>,                <span class="hljs-attr">"panel"</span>: <span class="hljs-string">"shared"</span>            },            <span class="hljs-attr">"windows"</span>: {                <span class="hljs-attr">"command"</span>: <span class="hljs-string">"g++"</span>,                <span class="hljs-attr">"args"</span>: [                    <span class="hljs-string">"-ggdb"</span>,                    <span class="hljs-string">"\"${file}\""</span>,                    <span class="hljs-string">"--std=c++11"</span>,                    <span class="hljs-string">"-o"</span>,                    <span class="hljs-string">"\"${fileDirname}\\${fileBasenameNoExtension}.exe\""</span>,                    <span class="hljs-string">"-finput-charset=UTF-8"</span>,<span class="hljs-comment">//输入编译器文本编码 默认为UTF-8</span>                    <span class="hljs-string">"-fexec-charset=GBK"</span><span class="hljs-comment">//编译器输出文本编码 自行选择</span>                ]            }        }    ]}</code></pre></div><h2 id="settings-json"><a href="#settings-json" class="headerlink" title="settings.json"></a>settings.json</h2><div class="hljs"><pre><code class="hljs json"><span class="hljs-comment">// Configuring tasks.json for C/C++ debugging </span><span class="hljs-comment">// author: huihut</span><span class="hljs-comment">// repo: https://gist.github.com/huihut/887d3c28db92617bd5148c20a5ff112a</span><span class="hljs-comment">// Available variables which can be used inside of strings.</span><span class="hljs-comment">// ${workspaceRoot}: the root folder of the team        </span><span class="hljs-comment">// ${file}: the current opened file                     </span><span class="hljs-comment">// ${fileBasename}: the current opened file's basename </span><span class="hljs-comment">// ${fileDirname}: the current opened file's dirname    </span><span class="hljs-comment">// ${fileExtname}: the current opened file's extension  </span><span class="hljs-comment">// ${cwd}: the current working directory of the spawned process</span>{    <span class="hljs-attr">"version"</span>: <span class="hljs-string">"2.0.0"</span>,    <span class="hljs-attr">"tasks"</span>: [        {            <span class="hljs-attr">"label"</span>: <span class="hljs-string">"build"</span>,            <span class="hljs-attr">"type"</span>: <span class="hljs-string">"shell"</span>,            <span class="hljs-attr">"group"</span>: {                <span class="hljs-attr">"kind"</span>: <span class="hljs-string">"build"</span>,                <span class="hljs-attr">"isDefault"</span>: <span class="hljs-literal">true</span>            },            <span class="hljs-attr">"presentation"</span>: {                <span class="hljs-attr">"echo"</span>: <span class="hljs-literal">true</span>,                <span class="hljs-attr">"reveal"</span>: <span class="hljs-string">"always"</span>,                <span class="hljs-attr">"focus"</span>: <span class="hljs-literal">false</span>,                <span class="hljs-attr">"panel"</span>: <span class="hljs-string">"shared"</span>            },            <span class="hljs-attr">"windows"</span>: {                <span class="hljs-attr">"command"</span>: <span class="hljs-string">"g++"</span>,                <span class="hljs-attr">"args"</span>: [                    <span class="hljs-string">"-ggdb"</span>,                    <span class="hljs-string">"\"${file}\""</span>,                    <span class="hljs-string">"--std=c++11"</span>,                    <span class="hljs-string">"-o"</span>,                    <span class="hljs-string">"\"${fileDirname}\\${fileBasenameNoExtension}.exe\""</span>                ]            }        }    ],    <span class="hljs-attr">"files.autoSave"</span>: <span class="hljs-string">"afterDelay"</span>,    <span class="hljs-attr">"[c]"</span>: {    },    <span class="hljs-attr">"files.encoding"</span>: <span class="hljs-string">"utf8"</span>,    <span class="hljs-attr">"files.autoGuessEncoding"</span>: <span class="hljs-literal">true</span>,    <span class="hljs-attr">"explorer.confirmDragAndDrop"</span>: <span class="hljs-literal">false</span>,    <span class="hljs-attr">"workbench.colorTheme"</span>: <span class="hljs-string">"Visual Studio Dark"</span>,    <span class="hljs-attr">"team.showWelcomeMessage"</span>: <span class="hljs-literal">false</span>}</code></pre></div><h2 id="工作区设置（可选）"><a href="#工作区设置（可选）" class="headerlink" title="工作区设置（可选）"></a>工作区设置（可选）</h2><div class="hljs"><pre><code class="hljs json">{    <span class="hljs-attr">"C_Cpp.errorSquiggles"</span>: <span class="hljs-string">"Disabled"</span>,    <span class="hljs-attr">"files.associations"</span>: {        <span class="hljs-attr">"stdlib.h"</span>: <span class="hljs-string">"c"</span>,        <span class="hljs-attr">"time.h"</span>: <span class="hljs-string">"c"</span>    }}</code></pre></div><h1 id="7、运行测试代码"><a href="#7、运行测试代码" class="headerlink" title="7、运行测试代码"></a>7、运行测试代码</h1><p>新建一个文件，run试试</p><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><span class="hljs-function"></span>{    <span class="hljs-built_in">std</span>::<span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">"Hello World!\n"</span>;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;}</code></pre></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>C/C++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>蓝桥杯-模拟正整数序列的数量</title>
    <link href="/blog/2020/03/15/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E6%A8%A1%E6%8B%9F%E6%AD%A3%E6%95%B4%E6%95%B0%E5%BA%8F%E5%88%97%E7%9A%84%E6%95%B0%E9%87%8F/"/>
    <url>/blog/2020/03/15/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E6%A8%A1%E6%8B%9F%E6%AD%A3%E6%95%B4%E6%95%B0%E5%BA%8F%E5%88%97%E7%9A%84%E6%95%B0%E9%87%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>　小明想知道，满足以下条件的正整数序列的数量：<br> 　1. 第一项为 n；<br> 　2. 第二项不超过 n；<br> 　3. 从第三项开始，每一项小于前两项的差的绝对值。<br> 　请计算，对于给定的 n，有多少种满足条件的序列。</p><a id="more"></a><h1 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h1><p>　　输入一行包含一个整数 n。</p><h1 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h1><p>　　输出一个整数，表示答案。答案可能很大，请输出答案除以10000的余数。</p><h1 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h1><p>4</p><h1 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h1><p>7</p><h1 id="样例说明"><a href="#样例说明" class="headerlink" title="样例说明"></a>样例说明</h1><p>　　以下是满足条件的序列：<br> 　4 1<br> 　4 1 1<br> 　4 1 2<br> 　4 2<br> 　4 2 1<br> 　4 3<br> 　4 4</p><h1 id="评测用例规模与约定"><a href="#评测用例规模与约定" class="headerlink" title="评测用例规模与约定"></a>评测用例规模与约定</h1><p>　 对于 20% 的评测用例，1 &lt;= n &lt;= 5；<br> 　对于 50% 的评测用例，1 &lt;= n &lt;= 10；<br> 　对于 80% 的评测用例，1 &lt;= n &lt;= 100；<br> 　对于所有评测用例，1 &lt;= n &lt;= 1000。</p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><div class="hljs"><pre><code class="hljs arduino"><span class="hljs-keyword">import</span> java.util.Scanner;<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Demo8</span>序列 {</span><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> n=<span class="hljs-number">0</span>,count=<span class="hljs-number">0</span>;<span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> [] []<span class="hljs-built_in">map</span> ;<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">String</span>[] args)</span> </span>{Scanner sc = <span class="hljs-keyword">new</span> Scanner(System.in); n =sc.nextInt(); sc.<span class="hljs-built_in">close</span>(); <span class="hljs-built_in">map</span> = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span> [n+<span class="hljs-number">1</span>][n+<span class="hljs-number">1</span>]; <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;=n; i++) {<span class="hljs-built_in">map</span>[i][i]=<span class="hljs-number">1</span>;<span class="hljs-built_in">map</span>[i][<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>;<span class="hljs-built_in">map</span>[<span class="hljs-number">0</span>][i]=<span class="hljs-number">1</span>;} <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;=n; i++) {count+=f(n,i);count%=<span class="hljs-number">10000</span>;<span class="hljs-comment">//System.out.println(count);</span>} System.out.<span class="hljs-built_in">println</span>(count);<span class="hljs-comment">// System.out.println(f(4,2));</span> }<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">f</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x,<span class="hljs-keyword">int</span> y)</span></span>{<span class="hljs-keyword">if</span>(<span class="hljs-built_in">map</span>[x][y]!=<span class="hljs-number">0</span>){<span class="hljs-keyword">return</span> <span class="hljs-built_in">map</span>[x][y];}<span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = Math.<span class="hljs-built_in">abs</span>(x-y)<span class="hljs-number">-1</span>; i&gt;=<span class="hljs-number">0</span>; i--) {<span class="hljs-built_in">map</span>[x][y]+=f(y,i);}<span class="hljs-built_in">map</span>[x][y]%=<span class="hljs-number">10000</span>;<span class="hljs-built_in">map</span>[y][x]=<span class="hljs-built_in">map</span>[x][y];<span class="hljs-keyword">return</span> <span class="hljs-built_in">map</span>[x][y];}}</code></pre></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>蓝桥杯-模拟组织晚会</title>
    <link href="/blog/2020/03/15/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E6%A8%A1%E6%8B%9F%E7%BB%84%E7%BB%87%E6%99%9A%E4%BC%9A/"/>
    <url>/blog/2020/03/15/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E6%A8%A1%E6%8B%9F%E7%BB%84%E7%BB%87%E6%99%9A%E4%BC%9A/</url>
    
    <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>　　小明要组织一台晚会，总共准备了 n 个节目。然后晚会的时间有限，他只能最终选择其中的 m 个节目。<br> 　这 n 个节目是按照小明设想的顺序给定的，顺序不能改变。<br> 　小明发现，观众对于晚上的喜欢程度与前几个节目的好看程度有非常大的关系，他希望选出的第一个节目尽可能好看，在此前提下希望第二个节目尽可能好看，依次类推。<br> 　小明给每个节目定义了一个好看值，请你帮助小明选择出 m 个节目，满足他的要求。</p><a id="more"></a><h1 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h1><p>　　输入的第一行包含两个整数 n, m ，表示节目的数量和要选择的数量。<br> 　第二行包含 n 个整数，依次为每个节目的好看值。</p><h1 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h1><p>　　输出一行包含 m 个整数，为选出的节目的好看值。</p><h1 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h1><p>5 3<br>3 1 2 5 4</p><h1 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h1><p>3 5 4</p><h1 id="样例说明"><a href="#样例说明" class="headerlink" title="样例说明"></a>样例说明</h1><p>　　选择了第1, 4, 5个节目。</p><h1 id="评测用例规模与约定"><a href="#评测用例规模与约定" class="headerlink" title="评测用例规模与约定"></a>评测用例规模与约定</h1><p>对于 30% 的评测用例，1 &lt;= n &lt;= 20；<br> 对于 60% 的评测用例，1 &lt;= n &lt;= 100；<br> 对于所有评测用例，1 &lt;= n &lt;= 100000，0 &lt;= 节目的好看值 &lt;= 100000。</p><!--more--><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><div class="hljs"><pre><code class="hljs pgsql"><span class="hljs-keyword">import</span> java.util.ArrayList;<span class="hljs-keyword">import</span> java.util.Arrays;<span class="hljs-keyword">import</span> java.util.Scanner;<span class="hljs-built_in">public</span> <span class="hljs-keyword">class</span> Demo10选节目 {<span class="hljs-built_in">public</span> static <span class="hljs-type">void</span> main(String[] args) {Scanner sc = <span class="hljs-built_in">new</span> Scanner(<span class="hljs-keyword">System</span>.<span class="hljs-keyword">in</span>);<span class="hljs-type">int</span> n = sc.nextInt();<span class="hljs-type">int</span> m = sc.nextInt();<span class="hljs-type">int</span>[] num = <span class="hljs-built_in">new</span> <span class="hljs-type">int</span>[n];<span class="hljs-type">int</span>[] <span class="hljs-keyword">order</span> = <span class="hljs-built_in">new</span> <span class="hljs-type">int</span>[n];<span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) {num[i] = sc.nextInt();<span class="hljs-keyword">order</span>[i] = num[i];}sc.<span class="hljs-keyword">close</span>();Arrays.sort(<span class="hljs-keyword">order</span>);ArrayList&lt;<span class="hljs-type">Integer</span>&gt; list = <span class="hljs-built_in">new</span> ArrayList&lt;<span class="hljs-type">Integer</span>&gt;();<span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = n - m; i &lt; n; i++) {list.<span class="hljs-keyword">add</span>(<span class="hljs-keyword">order</span>[i]);}StringBuilder sb = <span class="hljs-built_in">new</span> StringBuilder("");<span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i : num) {<span class="hljs-keyword">if</span> (list.contains(i)) {sb.append(i + " ");}}<span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(sb);}}</code></pre></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>蓝桥杯-模拟带九9的数的个数</title>
    <link href="/blog/2020/03/15/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E6%A8%A1%E6%8B%9F%E5%B8%A6%E4%B9%9D9%E7%9A%84%E6%95%B0%E7%9A%84%E4%B8%AA%E6%95%B0/"/>
    <url>/blog/2020/03/15/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E6%A8%A1%E6%8B%9F%E5%B8%A6%E4%B9%9D9%E7%9A%84%E6%95%B0%E7%9A%84%E4%B8%AA%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>　　在1至2019中，有多少个数的数位中包含数字9？<br> 　注意，有的数中的数位中包含多个9，这个数只算一次。例如，1999这个数包含数字9，在计算只是算一个数。</p><a id="more"></a><h1 id="答案提交"><a href="#答案提交" class="headerlink" title="答案提交"></a>答案提交</h1><p>　　这是一道结果填空的题，你只需要算出结果后提交即可。本题的结果为一个整数，在提交答案时只填写这个整数，填写多余的内容将无法得分。</p><p>​        答案：544</p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><div class="hljs"><pre><code class="hljs angelscript"><span class="hljs-comment">/**</span><span class="hljs-comment"> * @Classname Main</span><span class="hljs-comment"> * @Description 模拟带九9的数的个数</span><span class="hljs-comment"> * @Date 2020/3/15 下午 2:21</span><span class="hljs-comment"> * @Created by jerry</span><span class="hljs-comment"> */</span><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-symbol">Main</span> {    <span class="hljs-keyword">public</span> static <span class="hljs-built_in">void</span> main(String[] args) {        <span class="hljs-built_in">int</span> count=<span class="hljs-number">0</span>;        A:<span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">1</span>; i &lt;=<span class="hljs-number">2019</span>; i++) {            <span class="hljs-built_in">int</span> a=i;            <span class="hljs-keyword">while</span>(a!=<span class="hljs-number">0</span>){                <span class="hljs-built_in">int</span> b = a%<span class="hljs-number">10</span>;                <span class="hljs-keyword">if</span>(b==<span class="hljs-number">9</span>){                    count++;                    <span class="hljs-keyword">continue</span> A;                }                a/=<span class="hljs-number">10</span>;            }        }        System.<span class="hljs-keyword">out</span>.println(count);    }}</code></pre></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>蓝桥杯-求一个数的约数个数</title>
    <link href="/blog/2020/03/15/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E6%B1%82%E4%B8%80%E4%B8%AA%E6%95%B0%E7%9A%84%E7%BA%A6%E6%95%B0%E4%B8%AA%E6%95%B0/"/>
    <url>/blog/2020/03/15/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E6%B1%82%E4%B8%80%E4%B8%AA%E6%95%B0%E7%9A%84%E7%BA%A6%E6%95%B0%E4%B8%AA%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>　　1200000有多少个约数（只计算正约数）。</p><a id="more"></a><h1 id="答案提交"><a href="#答案提交" class="headerlink" title="答案提交"></a>答案提交</h1><p>　　这是一道结果填空的题，你只需要算出结果后提交即可。本题的结果为一个整数，在提交答案时只填写这个整数，填写多余的内容将无法得分。<br>        答案：96</p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><div class="hljs"><pre><code class="hljs dart"><span class="hljs-keyword">import</span> java.io.*;<span class="hljs-keyword">import</span> java.util.*;public <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span></span>{    public <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> main(<span class="hljs-built_in">String</span> [] args){        Scanner s=<span class="hljs-keyword">new</span> Scanner(System.<span class="hljs-keyword">in</span>);        <span class="hljs-built_in">String</span> sc=s.nextLine();        <span class="hljs-built_in">int</span> <span class="hljs-built_in">num</span>=Integer.valueOf(sc);        <span class="hljs-built_in">String</span> ss=s.nextLine();        <span class="hljs-built_in">String</span> []sss=ss.split(<span class="hljs-string">" "</span>);        <span class="hljs-keyword">for</span>(<span class="hljs-built_in">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-built_in">num</span>;i++){            System.out.println(yueshu(Integer.valueOf(sss[i])));        }    }    <span class="hljs-keyword">static</span> <span class="hljs-built_in">int</span> yueshu(<span class="hljs-built_in">int</span> a){        <span class="hljs-built_in">int</span> <span class="hljs-built_in">num</span>=<span class="hljs-number">0</span>;        <span class="hljs-keyword">for</span>(<span class="hljs-built_in">int</span> i=<span class="hljs-number">1</span>;i&lt;=Math.sqrt(a);i++){            <span class="hljs-keyword">if</span>(a%i==<span class="hljs-number">0</span>){                <span class="hljs-keyword">if</span>(i!=Math.sqrt(a))                    <span class="hljs-built_in">num</span>=<span class="hljs-built_in">num</span>+<span class="hljs-number">2</span>;                <span class="hljs-keyword">else</span>                    <span class="hljs-built_in">num</span>=<span class="hljs-built_in">num</span>+<span class="hljs-number">1</span>;            }        }        <span class="hljs-keyword">return</span> <span class="hljs-built_in">num</span>;    }}</code></pre></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>生成n位的所有二进制数</title>
    <link href="/blog/2020/03/12/%E7%94%9F%E6%88%90n%E4%BD%8D%E7%9A%84%E6%89%80%E6%9C%89%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0/"/>
    <url>/blog/2020/03/12/%E7%94%9F%E6%88%90n%E4%BD%8D%E7%9A%84%E6%89%80%E6%9C%89%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><p>要求输入位数n，生成所有情况的二进制数并存进数组</p><a id="more"></a><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><div class="hljs"><pre><code class="hljs arduino"><span class="hljs-keyword">import</span> java.util.ArrayList;<span class="hljs-keyword">import</span> java.util.List;<span class="hljs-comment">/**</span><span class="hljs-comment"> * @Classname BinaryList</span><span class="hljs-comment"> * @Description 输入位数n，生成所有情况的二进制数并存进数组</span><span class="hljs-comment"> * @Date 2020/3/12 上午 11:54</span><span class="hljs-comment"> * @Created by MelodyJerry</span><span class="hljs-comment"> */</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">BinaryList</span> {</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">String</span>[] args)</span></span>{        List&lt;<span class="hljs-keyword">String</span>&gt; <span class="hljs-built_in">list</span> = <span class="hljs-keyword">new</span> ArrayList&lt;<span class="hljs-keyword">String</span>&gt;();        <span class="hljs-keyword">int</span> n = <span class="hljs-number">4</span>; <span class="hljs-comment">//二进制位数</span>        <span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>;        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = n; j &gt; <span class="hljs-number">0</span>; j--){            i = i * <span class="hljs-number">2</span>; <span class="hljs-comment">//对应位权</span>        }        <span class="hljs-keyword">for</span>(i = i<span class="hljs-number">-1</span> ; i &gt;= <span class="hljs-number">0</span>; i--){            <span class="hljs-comment">//System.out.println(i);</span>            <span class="hljs-keyword">String</span> bin = Integer.toBinaryString(i);            <span class="hljs-keyword">while</span>(bin.length() &lt; n){                bin = <span class="hljs-string">"0"</span>+bin;            }            <span class="hljs-comment">//System.out.println(bin);</span>            <span class="hljs-built_in">list</span>.add(bin);        }        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">String</span> entry : <span class="hljs-built_in">list</span>){            System.out.<span class="hljs-built_in">println</span>(entry);        }    }}</code></pre></div><h1 id="需求-1"><a href="#需求-1" class="headerlink" title="需求"></a>需求</h1><p>用户输入一个整数，程序输出该数的二进制</p><h1 id="实现-1"><a href="#实现-1" class="headerlink" title="实现"></a>实现</h1><div class="hljs"><pre><code class="hljs angelscript">package org.pcl; <span class="hljs-keyword">import</span> java.util.Scanner; <span class="hljs-comment">/**</span><span class="hljs-comment"> * 用户输入一个整数，程序输出该数的二进制</span><span class="hljs-comment"> * </span><span class="hljs-comment"> * @version 1.0 2014-05-05</span><span class="hljs-comment"> * @author yifan</span><span class="hljs-comment"> */</span><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-symbol">OutBinary</span> {<span class="hljs-keyword">public</span> static <span class="hljs-built_in">void</span> main(String[] args) {Scanner scan = new Scanner(System.<span class="hljs-keyword">in</span>);System.<span class="hljs-keyword">out</span>.println(<span class="hljs-string">"请输入一个整数:"</span>);<span class="hljs-built_in">int</span> number = scan.nextInt();<span class="hljs-built_in">int</span> tmp = <span class="hljs-number">1</span>&lt;&lt;<span class="hljs-number">31</span>; <span class="hljs-comment">//用于计算的临时变量</span>System.<span class="hljs-keyword">out</span>.println();<span class="hljs-keyword">for</span>(<span class="hljs-built_in">int</span> i=<span class="hljs-number">0</span>; i&lt;Integer.SIZE<span class="hljs-number">-1</span>; i++) {<span class="hljs-comment">//System.out.print(number &amp;(tmp&gt;&gt;&gt;=1));</span>System.<span class="hljs-keyword">out</span>.print( (number &amp;(tmp&gt;&gt;&gt;=<span class="hljs-number">1</span>))&gt;<span class="hljs-number">0</span>? <span class="hljs-number">1</span>:<span class="hljs-number">0</span>);}System.<span class="hljs-keyword">out</span>.println();<span class="hljs-keyword">if</span>(scan != <span class="hljs-literal">null</span>) {scan.close();}} }</code></pre></div><blockquote><p>该实现代码由CSDN博主「yfstdio」提供<br>原文链接：<a href="https://blog.csdn.net/yfstdio/article/details/25079563" target="_blank" rel="noopener">https://blog.csdn.net/yfstdio/article/details/25079563</a></p></blockquote><h1 id="需求-2"><a href="#需求-2" class="headerlink" title="需求"></a>需求</h1><p>二、八、十六进制输出</p><h1 id="实现-2"><a href="#实现-2" class="headerlink" title="实现"></a>实现</h1><p>一、未使用移位运算</p><div class="hljs"><pre><code class="hljs reasonml">public static void main(String<span class="hljs-literal">[]</span> args) {<span class="hljs-built_in">int</span> a = -<span class="hljs-number">17</span>;<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-string">"二进制输出"</span>+<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Integer</span>.</span></span><span class="hljs-keyword">to</span><span class="hljs-constructor">BinaryString(<span class="hljs-params">a</span>)</span>);<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-string">"八进制输出"</span>+<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Integer</span>.</span></span><span class="hljs-keyword">to</span><span class="hljs-constructor">OctalString(<span class="hljs-params">a</span>)</span>);<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.printf(<span class="hljs-string">"八进制输出"</span>+<span class="hljs-string">"%010o\n"</span>,a);        <span class="hljs-comment">//按10位十六进制输出，向右靠齐，左边用0补齐</span><span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.printf(<span class="hljs-string">"十六进制输出"</span>+<span class="hljs-string">"%010x\n"</span>,a);        <span class="hljs-comment">//按10位八进制输出，向右靠齐，左边用0补齐</span><span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-string">"十六进制输出"</span>+<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Integer</span>.</span></span><span class="hljs-keyword">to</span><span class="hljs-constructor">HexString(<span class="hljs-params">a</span>)</span>);<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println<span class="hljs-literal">()</span>;<span class="hljs-built_in">int</span> b = <span class="hljs-number">17</span>;<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-string">"二进制输出"</span>+<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Integer</span>.</span></span><span class="hljs-keyword">to</span><span class="hljs-constructor">BinaryString(<span class="hljs-params">b</span>)</span>);<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-string">"八进制输出"</span>+<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Integer</span>.</span></span><span class="hljs-keyword">to</span><span class="hljs-constructor">OctalString(<span class="hljs-params">b</span>)</span>);<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.printf(<span class="hljs-string">"八进制输出"</span>+<span class="hljs-string">"%010o\n"</span>,b);<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.printf(<span class="hljs-string">"十六进制输出"</span>+<span class="hljs-string">"%010x\n"</span>,b);<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-string">"十六进制输出"</span>+<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Integer</span>.</span></span><span class="hljs-keyword">to</span><span class="hljs-constructor">HexString(<span class="hljs-params">b</span>)</span>);}<span class="hljs-comment">/* 运行结果：</span><span class="hljs-comment">二进制输出11111111111111111111111111101111</span><span class="hljs-comment">八进制输出37777777757</span><span class="hljs-comment">八进制输出37777777757</span><span class="hljs-comment">十六进制输出00ffffffef</span><span class="hljs-comment">十六进制输出ffffffef</span><span class="hljs-comment"> </span><span class="hljs-comment">二进制输出10001</span><span class="hljs-comment">八进制输出21</span><span class="hljs-comment">八进制输出0000000021</span><span class="hljs-comment">十六进制输出0000000011</span><span class="hljs-comment">十六进制输出11</span><span class="hljs-comment">*/</span></code></pre></div><p>二、使用移位运算</p><div class="hljs"><pre><code class="hljs reasonml">public static void main(String<span class="hljs-literal">[]</span> args) {<span class="hljs-built_in">int</span> a = -<span class="hljs-number">5</span>;<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(a);<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-string">"二进制输出"</span>+<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Integer</span>.</span></span><span class="hljs-keyword">to</span><span class="hljs-constructor">BinaryString(<span class="hljs-params">a</span>)</span>);<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(a+<span class="hljs-string">"&lt;&lt;2"</span>+<span class="hljs-string">"="</span>+(a&lt;&lt;<span class="hljs-number">2</span>));<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-string">"二进制输出"</span>+<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Integer</span>.</span></span><span class="hljs-keyword">to</span><span class="hljs-constructor">BinaryString(<span class="hljs-params">a</span>&lt;&lt;2)</span>);<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(a+<span class="hljs-string">"&gt;&gt;2"</span>+<span class="hljs-string">"="</span>+(a&gt;&gt;<span class="hljs-number">2</span>));<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-string">"二进制输出"</span>+<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Integer</span>.</span></span><span class="hljs-keyword">to</span><span class="hljs-constructor">BinaryString(<span class="hljs-params">a</span>&gt;&gt;2)</span>);<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-string">"无符号右移"</span>+a+<span class="hljs-string">"&gt;&gt;&gt;2"</span>+<span class="hljs-string">"="</span>+(a&gt;&gt;&gt;<span class="hljs-number">2</span>));<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-string">"二进制输出"</span>+<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Integer</span>.</span></span><span class="hljs-keyword">to</span><span class="hljs-constructor">BinaryString(<span class="hljs-params">a</span>&gt;&gt;&gt;2)</span>);<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println<span class="hljs-literal">()</span>;<span class="hljs-built_in">int</span> b = <span class="hljs-number">5</span>;<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(b);<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-string">"二进制输出"</span>+<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Integer</span>.</span></span><span class="hljs-keyword">to</span><span class="hljs-constructor">BinaryString(<span class="hljs-params">b</span>)</span>);<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(b+<span class="hljs-string">"&lt;&lt;2"</span>+<span class="hljs-string">"="</span>+(b&lt;&lt;<span class="hljs-number">2</span>));<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-string">"二进制输出"</span>+<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Integer</span>.</span></span><span class="hljs-keyword">to</span><span class="hljs-constructor">BinaryString(<span class="hljs-params">b</span>&lt;&lt;2)</span>);<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(b+<span class="hljs-string">"&gt;&gt;2"</span>+<span class="hljs-string">"="</span>+(b&gt;&gt;<span class="hljs-number">2</span>));<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-string">"二进制输出"</span>+<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Integer</span>.</span></span><span class="hljs-keyword">to</span><span class="hljs-constructor">BinaryString(<span class="hljs-params">b</span>&gt;&gt;2)</span>);<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-string">"无符号右移"</span>+b+<span class="hljs-string">"&gt;&gt;&gt;2"</span>+<span class="hljs-string">"="</span>+(b&gt;&gt;&gt;<span class="hljs-number">2</span>));<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-string">"二进制输出"</span>+<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Integer</span>.</span></span><span class="hljs-keyword">to</span><span class="hljs-constructor">BinaryString(<span class="hljs-params">b</span>&gt;&gt;&gt;2)</span>);}<span class="hljs-comment">/* 运行结果：</span><span class="hljs-comment">-5</span><span class="hljs-comment">二进制输出11111111111111111111111111111011</span><span class="hljs-comment">-5&lt;&lt;2=-20</span><span class="hljs-comment">二进制输出11111111111111111111111111101100</span><span class="hljs-comment">-5&gt;&gt;2=-2</span><span class="hljs-comment">二进制输出11111111111111111111111111111110</span><span class="hljs-comment">无符号右移-5&gt;&gt;&gt;2=1073741822</span><span class="hljs-comment">二进制输出111111111111111111111111111110</span><span class="hljs-comment"> </span><span class="hljs-comment">5</span><span class="hljs-comment">二进制输出101</span><span class="hljs-comment">5&lt;&lt;2=20</span><span class="hljs-comment">二进制输出10100</span><span class="hljs-comment">5&gt;&gt;2=1</span><span class="hljs-comment">二进制输出1</span><span class="hljs-comment">无符号右移5&gt;&gt;&gt;2=1</span><span class="hljs-comment">二进制输出1</span><span class="hljs-comment">*/</span></code></pre></div><p>左移运算符&lt;&lt; </p><p>1、a&lt;&lt;n   将a的二进制数据左移b位，右边移空的部分补0</p><p>  可以理解为数字a= a<em>2^n（移了n位）。5&lt;&lt;2 –&gt;5</em>2^2=20   -5&lt;&lt;2^2=-20</p><p>2、a&gt;&gt;n   将a的二进制数据右移b位，如果最高位是0，则左边移空的部分补0，如果最高位是1，则左边移空的部分补1</p><p>  可以理解为数字a= a/2^n（移了n位），向下取整。5&gt;&gt;2 —&gt; 5/2^2=1;    3、-5&gt;&gt;2 –&gt; -5/2^2=-2 (向下取整)</p><p>a&gt;&gt;&gt;n  不管最高位是0或1，左边移空部分都补0</p><p>正数可以按右移计算，负数没有捷径。</p><blockquote><p>本实现代码由 CSDN博主「qq_36503510」提供<br>原文链接：<a href="https://blog.csdn.net/qq_36503510/article/details/83957214" target="_blank" rel="noopener">https://blog.csdn.net/qq_36503510/article/details/83957214</a></p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>和一个人聊天很舒服是什么感觉？</title>
    <link href="/blog/2020/03/02/%E5%92%8C%E4%B8%80%E4%B8%AA%E4%BA%BA%E8%81%8A%E5%A4%A9%E5%BE%88%E8%88%92%E6%9C%8D%E6%98%AF%E4%BB%80%E4%B9%88%E6%84%9F%E8%A7%89%EF%BC%9F/"/>
    <url>/blog/2020/03/02/%E5%92%8C%E4%B8%80%E4%B8%AA%E4%BA%BA%E8%81%8A%E5%A4%A9%E5%BE%88%E8%88%92%E6%9C%8D%E6%98%AF%E4%BB%80%E4%B9%88%E6%84%9F%E8%A7%89%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<center><font color="#03CA65">说</font><font color="#06C864">来</font><font color="#09C663">这</font><font color="#0CC462">文</font><font color="#0FC261">案</font><font color="#12C060">是</font><font color="#15BE5F">有</font><font color="#18BC5E">问</font><font color="#1BBA5D">题</font><font color="#1EB85C">的</font><font color="#21B65B">。</font></center><center><font color="#27B259">和</font><font color="#2AB058">一</font><font color="#2DAE57">个</font><font color="#30AC56">人</font><font color="#33AA55">聊</font><font color="#36A854">天</font><font color="#39A653">很</font><font color="#3CA452">舒</font><font color="#3FA251">服</font><font color="#42A050">是</font><font color="#459E4F">什</font><font color="#489C4E">么</font><font color="#4B9A4D">感</font><font color="#4E984C">觉</font><font color="#51964B">？</font></center><center><font color="#579249">当</font><font color="#5A9048">然</font><font color="#5D8E47">是</font><font color="#608C46">很</font><font color="#638A45">舒</font><font color="#668844">服</font><font color="#698643">啊</font><font color="#6C8442">。</font></center><center><font color="#728040">我</font><font color="#757E3F">也</font><font color="#787C3E">是</font><font color="#7B7A3D">不</font><font color="#7E783C">知</font><font color="#81763B">道</font><font color="#84743A">当</font><font color="#877239">时</font><font color="#8A7038">为</font><font color="#8D6E37">什</font><font color="#906C36">么</font><font color="#936A35">会</font><font color="#966834">这</font><font color="#996633">么</font><font color="#9C6432">写</font><font color="#9F6231">。</font></center><center><font color="#A55E2F">不</font><font color="#A85C2E">过</font><font color="#AB5A2D">，</font><font color="#AE582C">确</font><font color="#B1562B">实</font><font color="#B4542A">很</font><font color="#B75229">开</font><font color="#BA5028">心</font></center><center><font color="#C04C26">—</font><font color="#C34A25">—</font><font color="#C64824">2</font><font color="#C94623">0</font><font color="#CC4422">2</font><font color="#CF4221">0</font><font color="#D24020">.</font><font color="#D53E1F">3</font><font color="#D83C1E">.</font><font color="#DB3A1D">2</font></center><p><fancybox><img src="https://s2.ax1x.com/2020/03/02/3WhYrT.png" srcset="/blog/img/loading.gif" alt="🐇大佬"></fancybox></p><a id="more"></a><center><font color="#F4F4F4">运</font><font color="#FFE7E7">气</font><font color="#FFDBDB"></font><font color="#FFCFCF"></font><font color="#FFC3C3"></font><font color="#FFB7B7"></font><font color="#FFABAB"></font><font color="#FF9F9F"></font><font color="#FF9292"></font><font color="#FF8686"></font><font color="#FF7A7A"></font><font color="#FF6E6E"></font><font color="#FF6262"></font><font color="#FF5656">彩</font><font color="#FF4A4A"></font><font color="#FF3D3D"></font><font color="#FF3131">蛋</font><font color="#FF2525"></font><font color="#FF1919"></font><font color="#FF0D0D"></font><font color="#FF0101"></font></center><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一熟悉的陌生人</title>
    <link href="/blog/2020/02/29/%E4%B8%80%E7%86%9F%E6%82%89%E7%9A%84%E9%99%8C%E7%94%9F%E4%BA%BA/"/>
    <url>/blog/2020/02/29/%E4%B8%80%E7%86%9F%E6%82%89%E7%9A%84%E9%99%8C%E7%94%9F%E4%BA%BA/</url>
    
    <content type="html"><![CDATA[<p><font color="#FF2800" size="6">昨</font><font color="#FF5000" size="6">晚</font> <font color="#FF7800">和</font><font color="#FFA000">一</font><font color="#FFC800">个</font><font color="#FFF000">女</font><font color="#D7FF00">孩</font><font color="#AFFF00">在</font><font color="#87FF00">聊</font><font color="#5FFF00">天</font><font color="#37FF00">，</font><font color="#0FFF00">聊</font><font color="#00FF28">到</font><font color="#00FF50">了</font><font color="#00FF78">很</font><font color="#00FFA0">多</font><font color="#00FFC8">。</font><font color="#00FFF0">聊</font><font color="#00D7FF">着</font><font color="#00AFFF">聊</font><font color="#0087FF">着</font><font color="#005FFF">，</font><font color="#0037FF">聊</font><font color="#000FFF">到</font><font color="#2800FF">了</font><font color="#5000FF">一</font><font color="#7800FF">些</font><font color="#A000FF">事</font><font color="#C800FF">情</font><font color="#F000FF">让</font><font color="#FF00D7">我</font><font color="#FF00AF">联</font><font color="#FF0087">想</font><font color="#FF005F">到</font><font color="#FF0037">一</font><font color="#FF000F">些</font><font color="#FF0000">经</font><font color="#FF2800">历</font><font color="#FF5000">。</font></p><p><font color="#FF7800">后</font><font color="#FFA000">来</font><font color="#FFC800">，</font><font color="#FFF000">和</font><font color="#D7FF00">她</font><font color="#AFFF00">说</font><font color="#87FF00">了</font><font color="#5FFF00">一</font><font color="#37FF00">些</font><font color="#0FFF00">奇</font><font color="#00FF28">怪</font><font color="#00FF50">的</font><font color="#00FF78">话</font><font color="#00FFA0">。</font><font color="#00FFC8">想</font><font color="#00FFF0">哭</font><font color="#00D7FF">，</font><font color="#00AFFF">早</font><font color="#0087FF">早</font><font color="#005FFF">结</font><font color="#0037FF">束</font><font color="#000FFF">了</font><font color="#2800FF">一</font><font color="#5000FF">日</font><font color="#7800FF">的</font><font color="#A000FF">聊</font><font color="#C800FF">天</font><font color="#F000FF">，</font><font color="#FF00D7">自</font><font color="#FF00AF">己</font><font color="#FF0087">静</font><font color="#FF005F">了</font><font color="#FF0037">静</font><font color="#FF000F">。</font></p><p><font color="#FF0000">一</font><font color="#FF2800">觉</font><font color="#FF5000">醒</font><font color="#FF7800">来</font><font color="#FFA000">，</font><font color="#FFC800">却</font><font color="#FFF000">收</font><font color="#D7FF00">到</font><font color="#AFFF00">了</font><font color="#87FF00">她</font><font color="#5FFF00">的</font><font color="#37FF00">另</font><font color="#0FFF00">一</font><font color="#00FF28">大</font><font color="#00FF50">段</font><font color="#00FF78">话</font><font color="#00FFA0">。</font><font color="#00FFC8">看</font><font color="#00FFF0">完</font><font color="#00D7FF">的</font><font color="#00AFFF">那</font><font color="#0087FF">刻</font><font color="#005FFF">，</font><font color="#0037FF">我</font><font color="#000FFF">觉</font><font color="#2800FF">得</font><font color="#5000FF">这</font><font color="#7800FF">是</font><font color="#A000FF">个</font><font color="#C800FF">好</font><font color="#F000FF">女</font><font color="#FF00D7">孩</font><font color="#FF00AF">。</font><font color="#FF0087">很</font><font color="#FF005F">可</font><font color="#FF0037">爱</font><font color="#FF000F">的</font><font color="#FF0000">女</font><font color="#FF2800">孩</font><font color="#FF5000">。</font></p><p><font color="#FF7800">对</font><font color="#FFA000">她</font><font color="#FFC800">，</font><font color="#FFF000">我</font><font color="#D7FF00">不</font><font color="#AFFF00">知</font><font color="#87FF00">道</font><font color="#5FFF00">如</font><font color="#37FF00">何</font><font color="#0FFF00">去</font><font color="#00FF28">定</font><font color="#00FF50">位</font><font color="#00FF78">她</font><font color="#00FFA0">。</font><font color="#00FFC8">彼</font><font color="#00FFF0">此</font><font color="#00D7FF">都</font><font color="#00AFFF">说</font><font color="#0087FF">了</font><font color="#005FFF">一</font><font color="#0037FF">些</font><font color="#000FFF">奇</font><font color="#2800FF">怪</font><font color="#5000FF">但</font><font color="#7800FF">又</font><font color="#A000FF">是</font><font color="#C800FF">奇</font><font color="#F000FF">妙</font><font color="#FF00D7">的</font><font color="#FF00AF">话</font><font color="#FF0087">。</font></p><p><font color="#FF005F">硬</font><font color="#FF0037">要</font><font color="#FF000F">是</font><font color="#FF0000">用</font><font color="#FF2800">一</font><font color="#FF5000">个</font><font color="#FF7800">词</font><font color="#FFA000">来</font><font color="#FFC800">形</font><font color="#FFF000">容</font><font color="#D7FF00">，</font><font color="#AFFF00">我</font><font color="#87FF00">只</font><font color="#5FFF00">能</font><font color="#37FF00">想</font><font color="#0FFF00">到</font><strong><font size="6"><font color="#00FF28">“</font><font color="#00FF50">熟</font><font color="#00FF78">悉</font><font color="#00FFA0">的</font><font color="#00FFC8">陌</font><font color="#00FFF0">生</font><font color="#00D7FF">人</font><font color="#00AFFF">”</font></font></strong><font color="#0087FF">。</font></p><p><font color="#005FFF">陌</font><font color="#0037FF">生</font><font color="#000FFF">是</font><font color="#2800FF">此</font><font color="#5000FF">前</font><font color="#7800FF">从</font><font color="#A000FF">未</font><font color="#C800FF">有</font><font color="#F000FF">过</font><font color="#FF00D7">任</font><font color="#FF00AF">何</font><font color="#FF0087">交</font><font color="#FF005F">流</font><font color="#FF0037">，</font><font color="#FF000F">熟</font><font color="#FF0000">悉</font><font color="#FF2800">是</font><font color="#FF5000">原</font><font color="#FF7800">来</font><font color="#FFA000">都</font><font color="#FFC800">知</font><font color="#FFF000">道</font><font color="#D7FF00">对</font><font color="#AFFF00">方</font><font color="#87FF00">还</font><font color="#5FFF00">有</font><font color="#37FF00">着</font><font color="#0FFF00">很</font><font color="#00FF28">多</font><font color="#00FF50">相</font><font color="#00FF78">似</font><font color="#00FFA0">的</font><font color="#00FFC8">地</font><font color="#00FFF0">方</font><font color="#00D7FF">。</font><font color="#00AFFF"><br></font></p><p><font color="#0087FF">这</font><font color="#005FFF">么</font><font color="#0037FF">些</font><font color="#000FFF">天</font><font color="#2800FF">来</font><font color="#5000FF">，</font><font color="#7800FF">对</font><font color="#A000FF">她</font><font color="#C800FF">，</font><font color="#F000FF">心</font><font color="#FF00D7">跳</font><font color="#FF00AF">有</font><font color="#FF0087">过</font><font color="#FF005F">那</font><font color="#FF0037">么</font><font color="#FF000F">几</font><font color="#FF0000">次</font><font color="#FF2800">起</font><font color="#FF5000">伏</font><font color="#FF7800">跌</font><font color="#FFA000">落</font><font color="#FFC800">。</font></p><font color="#FFF000"></font><font color="#D7FF00"></font><font color="#AFFF00">有</font><font color="#87FF00">那</font><font color="#5FFF00">么</font><font color="#37FF00">几</font><font color="#0FFF00">个</font><font color="#00FF28">时</font><font color="#00FF50">候</font><font color="#00FF78">觉</font><font color="#00FFA0">得</font><font color="#00FFC8">她</font><font color="#00FFF0">是</font><font color="#00D7FF">我</font><font color="#00AFFF">想</font><font color="#0087FF">找</font><font color="#005FFF">的</font><font color="#0037FF">那</font><font color="#000FFF">个</font><font color="#2800FF">人</font><font color="#5000FF">，</font><font color="#7800FF">但</font><font color="#A000FF">可</font><font color="#C800FF">能</font><font color="#F000FF">是</font><font color="#FF00D7">吧</font><font color="#FF00AF">也</font><font color="#FF0087">可</font><font color="#FF005F">能</font><font color="#FF0037">不</font><font color="#FF000F">是</font><font color="#FF0000">…</font><font color="#FF2800">…</font><p><font color="#FF7800"> 于我，</font><font color="#FFA000">生</font><font color="#FFC800">活</font><font color="#FFF000">和</font><font color="#D7FF00">情</font><font color="#AFFF00">感</font><font color="#87FF00">，</font><font color="#5FFF00">是</font><font color="#37FF00">我</font><font color="#0FFF00">目</font><font color="#00FF28">前</font><font color="#00FF50">觉</font><font color="#00FF78">得</font><font color="#00FFA0">最</font><font color="#00FFC8">难</font><font color="#00FFF0">的</font><font color="#00D7FF">两</font><font color="#00AFFF">个</font><font color="#0087FF">了</font><font color="#005FFF">吧。</font><font color="#009999">—</font><font color="#1385AC">—</font><font color="#2771C0">2</font><font color="#3A5ED3">0</font><font color="#4E71E7">2</font><font color="#625EFB">0</font><font color="#7571FF">.</font><font color="#895EFF">2</font><font color="#9C71FF">.</font><font color="#B05EFF">2</font><font color="#C471FF">9</font><font color="#D75EFF">随</font><font color="#EB71FF">笔</font></p><p><fancybox><img src="https://s2.ax1x.com/2020/02/29/3yIIaR.png" srcset="/blog/img/loading.gif" alt="🐇大佬"></fancybox></p><center><font color="#00CC00">选</font><font color="#17B417">自</font><font color="#2E9D2E">聊</font><font color="#458645">天</font><font color="#5C6F5C">记</font><font color="#735873">录</font><font color="#8B6F8B">的</font><font color="#A258A2">其</font><font color="#B96FB9">中</font><font color="#D058D0">一</font><font color="#E76FE7">张</font></center><br><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTTP案例：文件下载</title>
    <link href="/blog/2020/02/24/HTTP%E6%A1%88%E4%BE%8B%EF%BC%9A%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/"/>
    <url>/blog/2020/02/24/HTTP%E6%A1%88%E4%BE%8B%EF%BC%9A%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/</url>
    
    <content type="html"><![CDATA[<p>结束HTTP的学习后，记录一份案例学习的笔记。</p><h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><ol><li>页面显示超链接</li><li>点击超链接后弹出下载提示框</li><li>完成图片文件下载</li></ol><a id="more"></a><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><ol><li><p>超链接指向的资源如果能够被浏览器解析，则在浏览器中展示。如果不能解析，则弹出下载提示框。不不满足需求。</p></li><li><p>任何资源都<strong>必须</strong>弹出下载提示框。</p></li><li><p>使用<strong>响应头</strong>设置资源的打开方式：<br> <code>content-disposition:attachment;filename=xxx</code></p></li></ol><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><p>一、定义页面，编辑超链接href属性，并指向Servlet，传递资源名称filename</p><p>二、定义Servlet</p><ol><li>获取文件名称</li><li>使用字节输入流加载文件进内存</li><li>指定response的响应头： <code>content-disposition:attachment;filename=xxx</code></li><li>将数据写出到response输出流</li></ol><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><ol><li>web下New一个download.html</li></ol><div class="hljs"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE html&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">"en"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">"UTF-8"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>文件下载<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"/day15/img/1.jpg"</span>&gt;</span>图片1<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">hr</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"/day15/downloadServlet?filename=1.jpg"</span>&gt;</span>图片1<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre></div><ol start="2"><li>包cn.itcast.web.download下New一个DownloadServlet.java</li></ol><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.itcast.web.download;<span class="hljs-keyword">import</span> javax.servlet.ServletContext;<span class="hljs-keyword">import</span> javax.servlet.ServletException;<span class="hljs-keyword">import</span> javax.servlet.ServletOutputStream;<span class="hljs-keyword">import</span> javax.servlet.annotation.WebServlet;<span class="hljs-keyword">import</span> javax.servlet.http.HttpServlet;<span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<span class="hljs-keyword">import</span> java.io.FileInputStream;<span class="hljs-keyword">import</span> java.io.IOException;<span class="hljs-comment">/**</span><span class="hljs-comment"> * <span class="hljs-doctag">@Classname</span> DownloadServlet</span><span class="hljs-comment"> * <span class="hljs-doctag">@Description</span> 文件下载</span><span class="hljs-comment"> * <span class="hljs-doctag">@Date</span> 2020/2/24 下午 5:37</span><span class="hljs-comment"> * <span class="hljs-doctag">@Created</span> by jerry</span><span class="hljs-comment"> */</span><span class="hljs-meta">@WebServlet</span>(<span class="hljs-string">"/downloadServlet"</span>)<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">DownloadServlet</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">HttpServlet</span> </span>{    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">doPost</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException </span>{        <span class="hljs-comment">//1.获取请求参数，即文件名称</span>        String filename = request.getParameter(<span class="hljs-string">"filename"</span>);        <span class="hljs-comment">//2.使用字节输入流加载进内存</span>        <span class="hljs-comment">//2-1.找到文件的服务器路径</span>        ServletContext servletContext = <span class="hljs-keyword">this</span>.getServletContext();        String realPath = servletContext.getRealPath(<span class="hljs-string">"/img/"</span> + filename);<span class="hljs-comment">//服务器路径</span>        <span class="hljs-comment">//2-2.用字节输入流关联</span>        FileInputStream fileInputStream = <span class="hljs-keyword">new</span> FileInputStream(realPath);        <span class="hljs-comment">//3.设置response的响应头</span>        <span class="hljs-comment">//3-1.设置响应头类型：content-type</span>        String minetype = servletContext.getMimeType(filename);        response.setHeader(<span class="hljs-string">"content-type"</span>, minetype);        <span class="hljs-comment">//3-2.设置响应头打开方式：content-disposition</span>        response.setHeader(<span class="hljs-string">"content-disposition"</span>,<span class="hljs-string">"attachment;filename="</span>+filename);        <span class="hljs-comment">//4.将输入流写到输出流中</span>        ServletOutputStream servletOutputStream = response.getOutputStream();        <span class="hljs-keyword">byte</span>[] buff = <span class="hljs-keyword">new</span> <span class="hljs-keyword">byte</span>[<span class="hljs-number">1024</span> * <span class="hljs-number">8</span>]; <span class="hljs-comment">//作为缓冲区</span>        <span class="hljs-keyword">int</span> lenght = <span class="hljs-number">0</span>;        <span class="hljs-comment">//读取</span>        <span class="hljs-keyword">while</span> ((lenght = fileInputStream.read(buff)) != -<span class="hljs-number">1</span>){            <span class="hljs-comment">//写入</span>            servletOutputStream.write(buff, <span class="hljs-number">0</span>, lenght);        }        servletOutputStream.close(); <span class="hljs-comment">//可以不关闭输出流</span>        fileInputStream.close(); <span class="hljs-comment">//建议关闭输出流，释放资源</span>    }    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">doGet</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException </span>{        <span class="hljs-keyword">this</span>.doPost(request,response);    }}</code></pre></div><h1 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h1><p><fancybox><img src="https://s2.ax1x.com/2020/02/24/3Gccpd.gif" srcset="/blog/img/loading.gif" alt="3Gccpd.gif"></fancybox></p><h1 id="思考-分析"><a href="#思考-分析" class="headerlink" title="思考/分析"></a>思考/分析</h1><ul><li>中文文件问题</li></ul><h2 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路"></a>解决思路</h2><ol><li>获取客户端使用的浏览器版本信息</li><li>根据不同的版本信息，设置filename的编码方式不同</li></ol><p>详细见 <a href="https://www.bilibili.com/video/av70420291?p=165" target="_blank" rel="noopener">【视频】</a> ，里面有详解。</p><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=70420291&amp;cid=122004832&amp;page=165" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div>******与本笔记相关的资源：<p>链接: <a href="https://pan.baidu.com/s/1q_B3k1LzQwxlslEOdpeDWQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1q_B3k1LzQwxlslEOdpeDWQ</a> 提取码: dx5u </p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>JavaWeb</tag>
      
      <tag>笔记</tag>
      
      <tag>HTTP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTTP中的ServletContext对象</title>
    <link href="/blog/2020/02/24/HTTP%E4%B8%AD%E7%9A%84ServletContext%E5%AF%B9%E8%B1%A1/"/>
    <url>/blog/2020/02/24/HTTP%E4%B8%AD%E7%9A%84ServletContext%E5%AF%B9%E8%B1%A1/</url>
    
    <content type="html"><![CDATA[<h1 id="ServletContext对象"><a href="#ServletContext对象" class="headerlink" title="ServletContext对象"></a>ServletContext对象</h1><ul><li><p><strong>ServletContext对象范围：所有用户所有请求的数据</strong></p></li><li><p><font color="red" size="6">谨慎使用。</font><font color="red">所有用户可以操控它，不太安全；而且，它的生命周期长：服务器始到终，存储的数据多了，会造成内存的压力。</font></p></li></ul><h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><ul><li>代表整个web应用，可以和程序的容器（服务器）来通信（交互数据）</li></ul><h1 id="获取"><a href="#获取" class="headerlink" title="获取"></a>获取</h1><ol><li>通过<code>request</code>对象获取</li></ol><ul><li>调用<code>request.getServletContext();</code></li></ul><ol start="2"><li>通过<code>HttpServlet</code>获取</li></ol><ul><li>调用<code>this.getServletContext();</code></li></ul><p><font color="red" size="6">注意：</font><br>2个调用方法获取到的<strong>ServletContext</strong>都是<strong>一样的</strong>。因此，更多的时候会使用<code>this.getServletContext();</code></p><h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><ol><li>获取mine类型</li><li>域对象：共享数据</li><li>获取文件的真实路径(服务器路径)</li></ol><a id="more"></a><h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><div class="hljs"><pre><code class="hljs scala"><span class="hljs-keyword">package</span> cn.itcast.web.servletcontext;<span class="hljs-keyword">import</span> javax.servlet.<span class="hljs-type">ServletContext</span>;<span class="hljs-keyword">import</span> javax.servlet.<span class="hljs-type">ServletException</span>;<span class="hljs-keyword">import</span> javax.servlet.annotation.<span class="hljs-type">WebServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletRequest</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletResponse</span>;<span class="hljs-keyword">import</span> java.io.<span class="hljs-type">IOException</span>;<span class="hljs-meta">@WebServlet</span>(<span class="hljs-string">"/servletContextDemo1"</span>)public <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ServletContextDemo1</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">HttpServlet</span> </span>{    <span class="hljs-keyword">protected</span> void doPost(<span class="hljs-type">HttpServletRequest</span> request, <span class="hljs-type">HttpServletResponse</span> response) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-comment">/* ServletContext对象获取：</span><span class="hljs-comment">                1. 通过request对象获取</span><span class="hljs-comment">                 request.getServletContext();</span><span class="hljs-comment">                2. 通过HttpServlet获取</span><span class="hljs-comment">                    this.getServletContext();</span><span class="hljs-comment">         */</span>        <span class="hljs-comment">//1. 通过request对象获取</span>        <span class="hljs-type">ServletContext</span> context1 = request.getServletContext();        <span class="hljs-comment">//2. 通过HttpServlet获取</span>        <span class="hljs-type">ServletContext</span> context2 = <span class="hljs-keyword">this</span>.getServletContext();        <span class="hljs-type">System</span>.out.println(context1);        <span class="hljs-type">System</span>.out.println(context2);        <span class="hljs-type">System</span>.out.println(context1 == context2);<span class="hljs-comment">//true</span>    }    <span class="hljs-keyword">protected</span> void doGet(<span class="hljs-type">HttpServletRequest</span> request, <span class="hljs-type">HttpServletResponse</span> response) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-keyword">this</span>.doPost(request,response);    }}</code></pre></div><p>控制台输出👇</p><p><fancybox><img src="https://s2.ax1x.com/2020/02/24/38srUH.png" srcset="/blog/img/loading.gif" alt="38srUH.png"></fancybox></p><h1 id="1-获取mine类型"><a href="#1-获取mine类型" class="headerlink" title="1.获取mine类型"></a>1.获取mine类型</h1><ul><li>格式：<code>大类型/小类型</code>  </li><li>比如，<code>text/html</code>  、 <code>image/jpeg</code> 等等</li></ul><h2 id="mine类型"><a href="#mine类型" class="headerlink" title="mine类型"></a>mine类型</h2><ul><li>在<strong>互联网通信过程</strong>中定义的一种<strong>文件数据类型</strong></li></ul><h2 id="调用方法"><a href="#调用方法" class="headerlink" title="调用方法"></a>调用方法</h2><ul><li><code>String getMimeType(String file)</code></li></ul><h2 id="Demo-1"><a href="#Demo-1" class="headerlink" title="Demo"></a>Demo</h2><div class="hljs"><pre><code class="hljs scala"><span class="hljs-keyword">package</span> cn.itcast.web.servletcontext;<span class="hljs-keyword">import</span> javax.servlet.<span class="hljs-type">ServletContext</span>;<span class="hljs-keyword">import</span> javax.servlet.<span class="hljs-type">ServletException</span>;<span class="hljs-keyword">import</span> javax.servlet.annotation.<span class="hljs-type">WebServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletRequest</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletResponse</span>;<span class="hljs-keyword">import</span> java.io.<span class="hljs-type">IOException</span>;<span class="hljs-meta">@WebServlet</span>(<span class="hljs-string">"/servletContextDemo2"</span>)public <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ServletContextDemo2</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">HttpServlet</span> </span>{    <span class="hljs-keyword">protected</span> void doPost(<span class="hljs-type">HttpServletRequest</span> request, <span class="hljs-type">HttpServletResponse</span> response) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-comment">/*</span><span class="hljs-comment"></span><span class="hljs-comment">            ServletContext功能：</span><span class="hljs-comment">               1. 获取MIME类型：</span><span class="hljs-comment">                * MIME类型:在互联网通信过程中定义的一种文件数据类型</span><span class="hljs-comment">                    * 格式： 大类型/小类型   text/htmlimage/jpeg</span><span class="hljs-comment"></span><span class="hljs-comment">                * 获取：String getMimeType(String file)</span><span class="hljs-comment">                2. 域对象：共享数据</span><span class="hljs-comment">                3. 获取文件的真实(服务器)路径</span><span class="hljs-comment">         */</span>                <span class="hljs-comment">//2. 通过HttpServlet获取</span>        <span class="hljs-type">ServletContext</span> context = <span class="hljs-keyword">this</span>.getServletContext();        <span class="hljs-comment">//3. 定义文件名称</span>        <span class="hljs-type">String</span> filename = <span class="hljs-string">"a.jpg"</span>;<span class="hljs-comment">//image/jpeg</span>        <span class="hljs-comment">//4.获取MIME类型</span>        <span class="hljs-type">String</span> mimeType = context.getMimeType(filename);        <span class="hljs-type">System</span>.out.println(mimeType);    }    <span class="hljs-keyword">protected</span> void doGet(<span class="hljs-type">HttpServletRequest</span> request, <span class="hljs-type">HttpServletResponse</span> response) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-keyword">this</span>.doPost(request,response);    }}</code></pre></div><h1 id="2-域对象"><a href="#2-域对象" class="headerlink" title="2.域对象"></a>2.域对象</h1><ul><li>共享数据</li><li><strong>ServletContext对象范围：所有用户所有请求的数据</strong></li></ul><h2 id="调用方法-1"><a href="#调用方法-1" class="headerlink" title="调用方法"></a>调用方法</h2><ol><li>设置数据</li></ol><ul><li><code>setAttribute(String name,Object value)</code></li></ul><ol start="2"><li>获取数据</li></ol><ul><li><code>getAttribute(String name)</code></li></ul><ol start="3"><li><code>removeAttribute(String name)</code></li></ol><h2 id="Demo-2"><a href="#Demo-2" class="headerlink" title="Demo"></a>Demo</h2><p>ServletContextDemo3.java</p><div class="hljs"><pre><code class="hljs scala"><span class="hljs-keyword">package</span> cn.itcast.web.servletcontext;<span class="hljs-keyword">import</span> javax.servlet.<span class="hljs-type">ServletContext</span>;<span class="hljs-keyword">import</span> javax.servlet.<span class="hljs-type">ServletException</span>;<span class="hljs-keyword">import</span> javax.servlet.annotation.<span class="hljs-type">WebServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletRequest</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletResponse</span>;<span class="hljs-keyword">import</span> java.io.<span class="hljs-type">IOException</span>;<span class="hljs-meta">@WebServlet</span>(<span class="hljs-string">"/servletContextDemo3"</span>)public <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ServletContextDemo3</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">HttpServlet</span> </span>{    <span class="hljs-keyword">protected</span> void doPost(<span class="hljs-type">HttpServletRequest</span> request, <span class="hljs-type">HttpServletResponse</span> response) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-comment">/*</span><span class="hljs-comment"></span><span class="hljs-comment">            ServletContext功能：</span><span class="hljs-comment">               1. 获取MIME类型：</span><span class="hljs-comment"></span><span class="hljs-comment">                2. 域对象：共享数据</span><span class="hljs-comment">                3. 获取文件的真实(服务器)路径</span><span class="hljs-comment">         */</span>        <span class="hljs-comment">//2. 通过HttpServlet获取</span>        <span class="hljs-type">ServletContext</span> context = <span class="hljs-keyword">this</span>.getServletContext();        <span class="hljs-comment">//设置数据</span>        context.setAttribute(<span class="hljs-string">"msg"</span>,<span class="hljs-string">"haha"</span>);    }    <span class="hljs-keyword">protected</span> void doGet(<span class="hljs-type">HttpServletRequest</span> request, <span class="hljs-type">HttpServletResponse</span> response) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-keyword">this</span>.doPost(request,response);    }}</code></pre></div><p>ServletContextDemo4.java</p><div class="hljs"><pre><code class="hljs scala"><span class="hljs-keyword">package</span> cn.itcast.web.servletcontext;<span class="hljs-keyword">import</span> javax.servlet.<span class="hljs-type">ServletContext</span>;<span class="hljs-keyword">import</span> javax.servlet.<span class="hljs-type">ServletException</span>;<span class="hljs-keyword">import</span> javax.servlet.annotation.<span class="hljs-type">WebServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletRequest</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletResponse</span>;<span class="hljs-keyword">import</span> java.io.<span class="hljs-type">IOException</span>;<span class="hljs-meta">@WebServlet</span>(<span class="hljs-string">"/servletContextDemo4"</span>)public <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ServletContextDemo4</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">HttpServlet</span> </span>{    <span class="hljs-keyword">protected</span> void doPost(<span class="hljs-type">HttpServletRequest</span> request, <span class="hljs-type">HttpServletResponse</span> response) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-comment">/*</span><span class="hljs-comment"></span><span class="hljs-comment">            ServletContext功能：</span><span class="hljs-comment">               1. 获取MIME类型：</span><span class="hljs-comment"></span><span class="hljs-comment">                2. 域对象：共享数据</span><span class="hljs-comment">                3. 获取文件的真实(服务器)路径</span><span class="hljs-comment">         */</span>        <span class="hljs-comment">//2. 通过HttpServlet获取</span>        <span class="hljs-type">ServletContext</span> context = <span class="hljs-keyword">this</span>.getServletContext();        <span class="hljs-comment">//获取数据</span>        <span class="hljs-type">Object</span> msg = context.getAttribute(<span class="hljs-string">"msg"</span>);        <span class="hljs-type">System</span>.out.println(msg);    }    <span class="hljs-keyword">protected</span> void doGet(<span class="hljs-type">HttpServletRequest</span> request, <span class="hljs-type">HttpServletResponse</span> response) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-keyword">this</span>.doPost(request,response);    }}</code></pre></div><h1 id="3-获取文件的真实路径-服务器路径"><a href="#3-获取文件的真实路径-服务器路径" class="headerlink" title="3.获取文件的真实路径(服务器路径)"></a>3.获取文件的真实路径(服务器路径)</h1><p><fancybox><img src="https://s2.ax1x.com/2020/02/24/38q0LF.png" srcset="/blog/img/loading.gif" alt="38q0LF.png"></fancybox></p><h2 id="调用方法-2"><a href="#调用方法-2" class="headerlink" title="调用方法"></a>调用方法</h2><ul><li><code>String getRealPath(String path)</code></li></ul><h2 id="Demo-3"><a href="#Demo-3" class="headerlink" title="Demo"></a>Demo</h2><div class="hljs"><pre><code class="hljs scala"><span class="hljs-keyword">package</span> cn.itcast.web.servletcontext;<span class="hljs-keyword">import</span> javax.servlet.<span class="hljs-type">ServletContext</span>;<span class="hljs-keyword">import</span> javax.servlet.<span class="hljs-type">ServletException</span>;<span class="hljs-keyword">import</span> javax.servlet.annotation.<span class="hljs-type">WebServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletRequest</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletResponse</span>;<span class="hljs-keyword">import</span> java.io.<span class="hljs-type">File</span>;<span class="hljs-keyword">import</span> java.io.<span class="hljs-type">IOException</span>;<span class="hljs-meta">@WebServlet</span>(<span class="hljs-string">"/servletContextDemo5"</span>)public <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ServletContextDemo5</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">HttpServlet</span> </span>{    <span class="hljs-keyword">protected</span> void doPost(<span class="hljs-type">HttpServletRequest</span> request, <span class="hljs-type">HttpServletResponse</span> response) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-comment">/*</span><span class="hljs-comment"></span><span class="hljs-comment">            ServletContext功能：</span><span class="hljs-comment">               1. 获取MIME类型：</span><span class="hljs-comment"></span><span class="hljs-comment">                2. 域对象：共享数据</span><span class="hljs-comment">                3. 获取文件的真实(服务器)路径</span><span class="hljs-comment">         */</span>        <span class="hljs-comment">// 通过HttpServlet获取</span>        <span class="hljs-type">ServletContext</span> context = <span class="hljs-keyword">this</span>.getServletContext();        <span class="hljs-comment">// 获取文件的服务器路径</span>        <span class="hljs-type">String</span> b = context.getRealPath(<span class="hljs-string">"/b.txt"</span>);<span class="hljs-comment">//工作空间(IDEA)web目录下资源访问</span>        <span class="hljs-type">System</span>.out.println(b);        <span class="hljs-comment">// File file = new File(realPath);</span>        <span class="hljs-type">String</span> c = context.getRealPath(<span class="hljs-string">"/WEB-INF/c.txt"</span>);<span class="hljs-comment">//工作空间(IDEA)WEB-INF目录下的资源访问</span>        <span class="hljs-type">System</span>.out.println(c);        <span class="hljs-type">String</span> a = context.getRealPath(<span class="hljs-string">"/WEB-INF/classes/a.txt"</span>);<span class="hljs-comment">//工作空间(IDEA)src目录下的资源访问</span>        <span class="hljs-type">System</span>.out.println(a);    }    <span class="hljs-keyword">protected</span> void doGet(<span class="hljs-type">HttpServletRequest</span> request, <span class="hljs-type">HttpServletResponse</span> response) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-keyword">this</span>.doPost(request,response);    }}</code></pre></div><blockquote><p>项目空间、工作空间的区别：<a href="https://www.bilibili.com/video/av70420291?p=162" target="_blank" rel="noopener">视频</a> 进度条【04:52】</p></blockquote><p><font color="red" size="6">注意：</font><br></p><ol><li><p>将来配置文件/资源文件的放置的路径不一样，要会写路径的字符串写法。</p></li><li><p>src目录的资源路径可以使用<strong>ClassLoader</strong>（<strong>类加载器</strong>，<font color="blue">不能获取web目录的路径</font>）</p></li></ol><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>JavaWeb</tag>
      
      <tag>笔记</tag>
      
      <tag>HTTP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>热部署-IDEA实现不用重启Tomcat服务便可自动更新</title>
    <link href="/blog/2020/02/24/%E7%83%AD%E9%83%A8%E7%BD%B2-IDEA%E5%AE%9E%E7%8E%B0%E4%B8%8D%E7%94%A8%E9%87%8D%E5%90%AFTomcat%E6%9C%8D%E5%8A%A1%E4%BE%BF%E5%8F%AF%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0/"/>
    <url>/blog/2020/02/24/%E7%83%AD%E9%83%A8%E7%BD%B2-IDEA%E5%AE%9E%E7%8E%B0%E4%B8%8D%E7%94%A8%E9%87%8D%E5%90%AFTomcat%E6%9C%8D%E5%8A%A1%E4%BE%BF%E5%8F%AF%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0/</url>
    
    <content type="html"><![CDATA[<p>Tomcat的热部署👇</p><p>一、配置Tomcat的Deployment处的“+”的Artifacts是war exploded形式：</p><p><strong>_:war exploded 作用：展开部署(相当于将资源文件进行展开后进行部署)<br>_</strong>:war 作用：发布模式,这是先打成war包,再部署</p><br><p>二、修改Run/Debug Configurations</p><p>On ‘Update’ Action：<strong>update class and resources</strong></p><p>On frame deactivation：<strong>update class and resources</strong></p><br><p>三、浏览器F12，勾选上disable cache</p><p><img src="https://s2.ax1x.com/2020/02/24/38NwDA.png" srcset="/blog/img/loading.gif" alt="38NwDA.png"></p><br><p>四、以上都不行，那就到Plugins安装J<strong>Rebel插件</strong></p><p><img src="https://s2.ax1x.com/2020/02/24/38YS58.png" srcset="/blog/img/loading.gif" alt="38YS58.png"></p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>IDEA</tag>
      
      <tag>Tomcat</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>IDEA设置方法参数列表类型自动提示</title>
    <link href="/blog/2020/02/23/IDEA%E8%AE%BE%E7%BD%AE%E6%96%B9%E6%B3%95%E5%8F%82%E6%95%B0%E5%88%97%E8%A1%A8%E7%B1%BB%E5%9E%8B%E8%87%AA%E5%8A%A8%E6%8F%90%E7%A4%BA/"/>
    <url>/blog/2020/02/23/IDEA%E8%AE%BE%E7%BD%AE%E6%96%B9%E6%B3%95%E5%8F%82%E6%95%B0%E5%88%97%E8%A1%A8%E7%B1%BB%E5%9E%8B%E8%87%AA%E5%8A%A8%E6%8F%90%E7%A4%BA/</url>
    
    <content type="html"><![CDATA[<p>   期望有这样的参数列表提示👇</p><p><img src="https://s2.ax1x.com/2020/02/23/33nr36.png" srcset="/blog/img/loading.gif" alt="33nr36.png"></p><p>File-Settings打开设置(或者ctrl +Alt+S)👇</p><p><img src="https://s2.ax1x.com/2020/02/23/33nJjU.png" srcset="/blog/img/loading.gif" alt="33nJjU.png"></p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>IDEA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BeanUtils的基本使用</title>
    <link href="/blog/2020/02/23/BeanUtils%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <url>/blog/2020/02/23/BeanUtils%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p>在<a href="https://melodyjerry.gitee.io/blog/2020/02/22/HTTP%E6%A1%88%E4%BE%8B%E5%AD%A6%E4%B9%A0%EF%BC%9A%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95/" target="_blank" rel="noopener">《HTTP案例学习：用户登录》</a>的学习中，使用到<strong>BeanUtils</strong>。</p><p>案例中只涉及到封装username、password两个对象，但是实际上的用户登录界面，有十几个数据对象需要封装。</p><p>按原来的方式，是非常麻烦的。期望<strong>能够一次把所有参数获取到，并且通过一个方法，一次把所有数据封装成一个对象。</strong></p><p><strong><font color="red" size="5">BeanUtils，一个工具类，简化数据封装</font></strong></p><p>这里专门挑出来，做一份简单的笔记。</p><p>配合<a href="https://www.bilibili.com/video/av70420291?p=143" target="_blank" rel="noopener">【教学视频】</a>、<a href="https://blog.csdn.net/wzc1991520/article/details/80176679" target="_blank" rel="noopener">【BeanUtils工具类常用方法】</a> 食用更佳。</p><a id="more"></a><hr><p>我们将原来写的代码，</p><div class="hljs"><pre><code class="hljs reasonml"><span class="hljs-comment">//2.获取请求参数</span>String username = req.get<span class="hljs-constructor">Parameter(<span class="hljs-string">"username"</span>)</span>;String password = req.get<span class="hljs-constructor">Parameter(<span class="hljs-string">"password"</span>)</span>;<span class="hljs-comment">//3.封装user对象</span>User loginUser = <span class="hljs-keyword">new</span> <span class="hljs-constructor">User()</span>;loginUser.set<span class="hljs-constructor">Username(<span class="hljs-params">username</span>)</span>;loginUser.set<span class="hljs-constructor">Password(<span class="hljs-params">password</span>)</span>;</code></pre></div><p>使用BeanUtils工具类进行封装，</p><div class="hljs"><pre><code class="hljs arduino"><span class="hljs-comment">//2.获取所有请求参数</span>Map&lt;<span class="hljs-keyword">String</span>, <span class="hljs-keyword">String</span>[]&gt; <span class="hljs-built_in">map</span> = req.getParameterMap();<span class="hljs-comment">//3.创建User对象</span>User loginUser = <span class="hljs-keyword">new</span> User();<span class="hljs-comment">//3-2.使用BeanUtils封装</span><span class="hljs-keyword">try</span> {    BeanUtils.populate(loginUser,<span class="hljs-built_in">map</span>);} <span class="hljs-keyword">catch</span> (IllegalAccessException e) {    e.printStackTrace();} <span class="hljs-keyword">catch</span> (InvocationTargetException e) {    e.printStackTrace();}</code></pre></div><p>会发现只用简单几行代码就完成了封装，而不用和之前一样分别对每个数据进行封装。</p><h1 id="BeanUtils"><a href="#BeanUtils" class="headerlink" title="BeanUtils"></a>BeanUtils</h1><ul><li><strong>工具类，简化数据封装</strong></li></ul><ul><li>用于<strong>封装JavaBean</strong>的</li><li><strong>JavaBean：标准(简单)的Java类</strong></li></ul><h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><ul><li>JavaBean</li><li>成员变量</li><li>属性：setter和getter方法截取后的产物<ul><li>例如：getUsername() –&gt; Username–&gt; username（大多数下，名字一样）</li></ul></li></ul><h1 id="JavaBean"><a href="#JavaBean" class="headerlink" title="JavaBean"></a>JavaBean</h1><ul><li><strong>标准的Java类</strong></li><li>一般放在domain等package下</li></ul><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul><li><font color="red" size="5">封装数据</font></li></ul><h2 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h2><ol><li><p>类必须被<strong>public修饰</strong></p></li><li><p>必须提供空参的构造器</p></li><li><p>成员变量必须使用private修饰</p></li><li><p>提供公共setter和getter方法</p></li></ol><h1 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h1><ul><li><p>setter和getter方法截取后的产物</p></li><li><p>例如：getUsername() –&gt; Username–&gt; username（大多数下，名字一样）</p></li></ul><h1 id="调用方法"><a href="#调用方法" class="headerlink" title="调用方法"></a>调用方法</h1><ol><li><code>setProperty()</code></li></ol><ul><li>设置属性值</li></ul><ol start="2"><li><code>getProperty()</code></li></ol><ul><li>获取属性值</li></ul><ol start="3"><li><code>populate(Object obj, Map map)</code></li></ol><ul><li>将<strong>map集合的键值对</strong>信息，<strong>封装到对应的JavaBean对象中</strong></li></ul><h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><p>配合 <a href="https://melodyjerry.gitee.io/blog/2020/02/22/HTTP%E6%A1%88%E4%BE%8B%E5%AD%A6%E4%B9%A0%EF%BC%9A%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95/" target="_blank" rel="noopener">《HTTP案例学习：用户登录》</a> ，现在New一个BeanUtils.java</p><div class="hljs"><pre><code class="hljs pgsql">package cn.itcast.test;<span class="hljs-keyword">import</span> cn.itcast.<span class="hljs-keyword">domain</span>.<span class="hljs-keyword">User</span>;<span class="hljs-keyword">import</span> org.apache.commons.beanutils.BeanUtils;<span class="hljs-keyword">import</span> org.junit.Test;<span class="hljs-keyword">import</span> java.lang.reflect.InvocationTargetException;<span class="hljs-built_in">public</span> <span class="hljs-keyword">class</span> BeanUtilsTest {    @Test    <span class="hljs-built_in">public</span> <span class="hljs-type">void</span> test(){        <span class="hljs-keyword">User</span> <span class="hljs-keyword">user</span> = <span class="hljs-built_in">new</span> <span class="hljs-keyword">User</span>();        try {            BeanUtils.setProperty(<span class="hljs-keyword">user</span>,"username","zhangsan");            <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(<span class="hljs-keyword">user</span>);        } catch (IllegalAccessException e) {            e.printStackTrace();        } catch (InvocationTargetException e) {            e.printStackTrace();        }            }}</code></pre></div><p>控制台输出：</p><p><fancybox><img src="https://s2.ax1x.com/2020/02/23/31rEfP.png" srcset="/blog/img/loading.gif" alt=""></fancybox></p><h1 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h1><p>后来看的一篇博客 <a href="https://blog.csdn.net/wzc1991520/article/details/80176679" target="_blank" rel="noopener">【BeanUtils工具类常用方法】</a>，觉得写的很不错，一起记录在这里。</p><hr><h1 id="相关资料"><a href="#相关资料" class="headerlink" title="相关资料"></a>相关资料</h1><p>【教学视频】：<a href="https://www.bilibili.com/video/av70420291?p=143" target="_blank" rel="noopener">https://www.bilibili.com/video/av70420291?p=143</a></p><p>【BeanUtils工具类常用方法】：<a href="https://blog.csdn.net/wzc1991520/article/details/80176679" target="_blank" rel="noopener">https://blog.csdn.net/wzc1991520/article/details/80176679</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>JavaWeb</tag>
      
      <tag>笔记</tag>
      
      <tag>HTTP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>html中form表单的action路径的写法</title>
    <link href="/blog/2020/02/23/html%E4%B8%ADform%E8%A1%A8%E5%8D%95%E7%9A%84action%E8%B7%AF%E5%BE%84%E7%9A%84%E5%86%99%E6%B3%95/"/>
    <url>/blog/2020/02/23/html%E4%B8%ADform%E8%A1%A8%E5%8D%95%E7%9A%84action%E8%B7%AF%E5%BE%84%E7%9A%84%E5%86%99%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>在 <a href="https://melodyjerry.gitee.io/blog/2020/02/22/HTTP%E6%A1%88%E4%BE%8B%E5%AD%A6%E4%B9%A0%EF%BC%9A%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95/" target="_blank" rel="noopener">《HTTP案例学习：用户登录》</a> 中提及到<strong><code>html中form表单的action路径的写法</code></strong> 是</p><p><font color="red" size="5">虚拟目录+Servlet的资源路径</font></p><div class="hljs"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE html&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">"en"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">"UTF-8"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>用户登录<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">"/day14_test/loginServlet"</span> <span class="hljs-attr">method</span>=<span class="hljs-string">"post"</span>&gt;</span>    用户名:<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"username"</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>    密码:<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"password"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"password"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"submit"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"登录"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre></div><p>先记住，日后还会涉及到的。</p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>JavaWeb</tag>
      
      <tag>HTTP</tag>
      
      <tag>HTML</tag>
      
      <tag>IDEA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>IDEA添加jar包的三种方式(小结)</title>
    <link href="/blog/2020/02/23/IDEA%E4%B8%AD%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95@Test%E4%BD%BF%E7%94%A8/"/>
    <url>/blog/2020/02/23/IDEA%E4%B8%AD%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95@Test%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p>相关文章：</p><p><a href="https://blog.csdn.net/QQljh123456/article/details/81583786" target="_blank" rel="noopener">https://blog.csdn.net/QQljh123456/article/details/81583786</a></p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>JavaWeb</tag>
      
      <tag>IDEA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTTP响应信息数据-Response</title>
    <link href="/blog/2020/02/22/HTTP%E5%93%8D%E5%BA%94%E4%BF%A1%E6%81%AF%E6%95%B0%E6%8D%AE-Response/"/>
    <url>/blog/2020/02/22/HTTP%E5%93%8D%E5%BA%94%E4%BF%A1%E6%81%AF%E6%95%B0%E6%8D%AE-Response/</url>
    
    <content type="html"><![CDATA[<p>接着前面两篇博文 <a href="https://melodyjerry.gitee.io/blog/2020/02/21/HTTP%EF%BC%9A%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE/" target="_blank" rel="noopener">《HTTP：超文本传输协议》</a> 、 <a href="https://melodyjerry.gitee.io/blog/2020/02/21/HTTP%E8%AF%B7%E6%B1%82%E4%BF%A1%E6%81%AF%E6%95%B0%E6%8D%AE-Request/" target="_blank" rel="noopener">《HTTP请求信息数据 - Request》</a> 的学习。</p><p>现在记录关于 <strong>HTTP响应信息数据-Response</strong> 的笔记。</p><hr><h1 id="响应信息数据-格式"><a href="#响应信息数据-格式" class="headerlink" title="响应信息数据   格式"></a>响应信息数据   格式</h1><ul><li><code>Servlet</code>类中<code>service()</code>方法的参数<code>ServletResponse</code></li><li><strong>Response在一次响应结束后，自动被销毁，其输出流也会自动被关闭。</strong></li><li>字符串数据，比如：</li></ul><div class="hljs"><pre><code class="hljs angelscript">HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OKContent-Type: text/html;charset=UTF<span class="hljs-number">-8</span>Content-Length: <span class="hljs-number">101</span>Date: Wed, <span class="hljs-number">06</span> Jun <span class="hljs-number">2018</span> <span class="hljs-number">07</span>:<span class="hljs-number">08</span>:<span class="hljs-number">42</span> GMT&lt;html&gt;    &lt;head&gt;        &lt;title&gt;$Title$&lt;/title&gt;    &lt;/head&gt;    &lt;body&gt;        hello , response    &lt;/body&gt;&lt;/html&gt;</code></pre></div><a id="more"></a><h2 id="响应行"><a href="#响应行" class="headerlink" title="响应行"></a>响应行</h2><ul><li>格式：<code>协议/版本 响应状态码 状态码描述</code></li></ul><h3 id="响应状态码"><a href="#响应状态码" class="headerlink" title="响应状态码"></a>响应状态码</h3><ul><li>服务器告诉客户端浏览器本次请求和响应的一个状态。</li></ul><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><ul><li>状态码都是3位数字</li></ul><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><ol><li>1xx：服务器就收客户端消息，但没有接受完成，等待一段时间后，发送1xx状态码</li><li>2xx：成功。代表：<ul><li><strong>200</strong></li></ul></li><li>3xx：重定向。代表：<ul><li><strong>302</strong>：重定向</li><li><strong>304</strong>：访问缓存</li></ul></li><li>4xx：客户端错误。代表：<ul><li><strong>403</strong>：错误是一种在网站访问过程中，常见的错误提示，表示资源不可用。服务器理解客户的请求，但拒绝处理它，通常由于服务器上文件或目录的权限设置导致的WEB访问错误。   </li><li><strong>404</strong>：请求路径没有对应的资源</li><li><strong>405</strong>：请求方式没有对应的doXxx方法</li></ul></li><li>5xx：服务器端错误。代表：<strong>500</strong>(服务器内部出现异常)</li></ol><p><fancybox><img src="https://s2.ax1x.com/2020/02/23/31vKu8.png" srcset="/blog/img/loading.gif" alt=""></fancybox></p><h2 id="响应头"><a href="#响应头" class="headerlink" title="响应头"></a>响应头</h2><ul><li>格式：<code>响应头名称 ：值</code></li></ul><h3 id="常见的响应头"><a href="#常见的响应头" class="headerlink" title="常见的响应头"></a>常见的响应头</h3><ul><li>Content-Type</li><li>Content-disposition</li></ul><h4 id="Content-Type"><a href="#Content-Type" class="headerlink" title="Content-Type"></a>Content-Type</h4><ul><li>服务器告诉客户端<strong>本次响应体数据格式以及编码格式</strong></li></ul><h4 id="Content-disposition"><a href="#Content-disposition" class="headerlink" title="Content-disposition"></a>Content-disposition</h4><ul><li><p>服务器告诉客户端<strong>以什么格式打开响应体数据</strong></p></li><li><p>其值：</p></li><li><p>in-line：<strong>默认值，在当前页面内打开</strong></p></li><li><p>attachment;filename=xxx：<strong>以附件形式打开响应体</strong>。涉及<strong>文件下载</strong>等功能。</p></li></ul><h2 id="响应空行"><a href="#响应空行" class="headerlink" title="响应空行"></a>响应空行</h2><ul><li>就是一个<strong>空行</strong>（空白行）</li><li>作用：<strong>分割响应头和响应体</strong></li></ul><h2 id="响应体"><a href="#响应体" class="headerlink" title="响应体"></a>响应体</h2><ul><li>传输的数据</li><li>文件、HTML网页源码等等。比如，</li></ul><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>$Title$<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>        hello , response    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre></div><h1 id="案例1：重定向"><a href="#案例1：重定向" class="headerlink" title="案例1：重定向"></a>案例1：重定向</h1><ul><li>重定向：资源跳转的方式</li></ul><p><fancybox><img src="https://s2.ax1x.com/2020/02/23/31vKu8.png" srcset="/blog/img/loading.gif" alt=""></fancybox></p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li>ResponseDemo1.java</li></ol><div class="hljs"><pre><code class="hljs scala"><span class="hljs-keyword">package</span> cn.itcast.web.servlet;<span class="hljs-keyword">import</span> javax.servlet.<span class="hljs-type">ServletException</span>;<span class="hljs-keyword">import</span> javax.servlet.annotation.<span class="hljs-type">WebServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletRequest</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletResponse</span>;<span class="hljs-keyword">import</span> java.io.<span class="hljs-type">IOException</span>;<span class="hljs-comment">/**</span><span class="hljs-comment"> * 重定向</span><span class="hljs-comment"> */</span><span class="hljs-meta">@WebServlet</span>(<span class="hljs-string">"/responseDemo1"</span>)public <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ResponseDemo1</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">HttpServlet</span> </span>{    <span class="hljs-keyword">protected</span> void doPost(<span class="hljs-type">HttpServletRequest</span> request, <span class="hljs-type">HttpServletResponse</span> response) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-type">System</span>.out.println(<span class="hljs-string">"demo1........"</span>);        <span class="hljs-comment">//访问/responseDemo1，会自动跳转到/responseDemo2资源</span>        <span class="hljs-comment">/* //1. 设置状态码为302</span><span class="hljs-comment">        response.setStatus(302);</span><span class="hljs-comment">        //2.设置响应头location</span><span class="hljs-comment">        response.setHeader("location","/day15/responseDemo2");*/</span>        <span class="hljs-comment">//演示，不能使用request对象来共享数据</span>        request.setAttribute(<span class="hljs-string">"msg"</span>,<span class="hljs-string">"response"</span>);        <span class="hljs-comment">//动态获取虚拟目录</span>        <span class="hljs-type">String</span> contextPath = request.getContextPath();        <span class="hljs-comment">//简单的重定向方法</span>        response.sendRedirect(contextPath+<span class="hljs-string">"/responseDemo2"</span>);        <span class="hljs-comment">//response.sendRedirect("http://www.itcast.cn");</span>    }    <span class="hljs-keyword">protected</span> void doGet(<span class="hljs-type">HttpServletRequest</span> request, <span class="hljs-type">HttpServletResponse</span> response) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-keyword">this</span>.doPost(request,response);    }}</code></pre></div><ol start="2"><li>ResponseDemo2.java</li></ol><div class="hljs"><pre><code class="hljs scala"><span class="hljs-keyword">package</span> cn.itcast.web.servlet;<span class="hljs-keyword">import</span> javax.servlet.<span class="hljs-type">ServletException</span>;<span class="hljs-keyword">import</span> javax.servlet.annotation.<span class="hljs-type">WebServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletRequest</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletResponse</span>;<span class="hljs-keyword">import</span> java.io.<span class="hljs-type">IOException</span>;<span class="hljs-meta">@WebServlet</span>(<span class="hljs-string">"/responseDemo2"</span>)public <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ResponseDemo2</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">HttpServlet</span> </span>{    <span class="hljs-keyword">protected</span> void doPost(<span class="hljs-type">HttpServletRequest</span> request, <span class="hljs-type">HttpServletResponse</span> response) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-type">System</span>.out.println(<span class="hljs-string">"demo2222222........"</span>);        <span class="hljs-comment">//演示，不能使用request对象来共享数据</span>        <span class="hljs-type">Object</span> msg = request.getAttribute(<span class="hljs-string">"msg"</span>);        <span class="hljs-type">System</span>.out.println(msg);    }    <span class="hljs-keyword">protected</span> void doGet(<span class="hljs-type">HttpServletRequest</span> request, <span class="hljs-type">HttpServletResponse</span> response) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-keyword">this</span>.doPost(request,response);    }}</code></pre></div><ol start="3"><li>演示：</li></ol><p><fancybox><img src="https://s2.ax1x.com/2020/02/23/33pgFe.gif" srcset="/blog/img/loading.gif" alt="33pgFe.gif"></fancybox></p><h2 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h2><ul><li>重定向的特点：<code>redirect</code></li></ul><ol><li><p>地址栏发生变化</p></li><li><p>重定向可以访问其他站点(服务器)的资源</p></li><li><p><strong>重定向是两次请求</strong>。<strong>不能使用request对象来共享数据</strong></p></li></ol><p><fancybox><img src="https://s2.ax1x.com/2020/02/23/33Cmgs.png" srcset="/blog/img/loading.gif" alt=""></fancybox></p><br><ul><li>转发的特点：<code>forward</code></li></ul><ol><li><p>转发地址栏路径不变</p></li><li><p>转发只能访问当前服务器下的资源</p></li><li><p><strong>转发是一次请求</strong>，<strong>可以使用request对象来共享数据</strong></p></li></ol><br><ul><li>forward 和 redirect 区别</li></ul><h2 id="路径写法"><a href="#路径写法" class="headerlink" title="路径写法"></a>路径写法</h2><h3 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h3><ul><li>相对路径</li><li>绝对路径</li></ul><h4 id="相对路径"><a href="#相对路径" class="headerlink" title="相对路径"></a>相对路径</h4><ul><li>通过相对路径不可以确定唯一资源</li><li>如：<code>./index.html</code></li><li>不以<code>/</code>开头，以<code>.</code>开头路径</li></ul><h5 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h5><ul><li>找到<strong>当前</strong>资源和<strong>目标</strong>资源之间的<strong>相对位置</strong>关系</li><li><code>./</code>：当前目录</li><li><code>../</code>：后退一级目录</li></ul><h4 id="绝对路径-JSP时推荐使用"><a href="#绝对路径-JSP时推荐使用" class="headerlink" title="绝对路径(JSP时推荐使用)"></a>绝对路径(JSP时推荐使用)</h4><ul><li>通过绝对路径可以确定唯一资源</li><li>如：<code>http://localhost/day15/responseDemo2</code>   中   <code>/day15/responseDemo2</code></li><li>以<code>/</code>开头的路径</li><li><strong>JSP时推荐使用</strong></li></ul><h5 id="规则-1"><a href="#规则-1" class="headerlink" title="规则"></a>规则</h5><ul><li>判断定义的路径是<strong>给谁用</strong>的？判断请求将来<strong>从哪儿发出</strong></li></ul><ol><li>给客户端浏览器使用：<strong>需要加虚拟目录(项目的访问路径)</strong></li></ol><ul><li>建议<strong>动态获取虚拟目录</strong>：<code>request.getContextPath()</code></li><li><strong>重定向是客户端浏览器进行的</strong></li><li><code>&lt;a&gt;</code>、 <code>&lt;form&gt;</code>等要重定向…</li></ul><ol start="2"><li>给服务器使用：<strong>不需要加虚拟目录</strong></li></ol><ul><li>比如：<strong>转发</strong>时的路径<code>request.getRequestDispatcher("/responseDemo2").forward(request,response);</code></li></ul><h1 id="案例2：服务器输出字符数据到浏览器"><a href="#案例2：服务器输出字符数据到浏览器" class="headerlink" title="案例2：服务器输出字符数据到浏览器"></a>案例2：服务器输出字符数据到浏览器</h1><h2 id="步骤-1"><a href="#步骤-1" class="headerlink" title="步骤"></a>步骤</h2><ol><li><p>获取字符输出流</p></li><li><p>输出数据</p></li></ol><h2 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h2><ol><li>ResponseDemo4.java</li></ol><div class="hljs"><pre><code class="hljs scala"><span class="hljs-keyword">package</span> cn.itcast.web.servlet;<span class="hljs-keyword">import</span> javax.servlet.<span class="hljs-type">ServletException</span>;<span class="hljs-keyword">import</span> javax.servlet.annotation.<span class="hljs-type">WebServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletRequest</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletResponse</span>;<span class="hljs-keyword">import</span> java.io.<span class="hljs-type">IOException</span>;<span class="hljs-keyword">import</span> java.io.<span class="hljs-type">PrintWriter</span>;<span class="hljs-meta">@WebServlet</span>(<span class="hljs-string">"/responseDemo4"</span>)public <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ResponseDemo4</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">HttpServlet</span> </span>{    <span class="hljs-keyword">protected</span> void doPost(<span class="hljs-type">HttpServletRequest</span> request, <span class="hljs-type">HttpServletResponse</span> response) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-comment">//获取流对象之前，设置流的默认编码：ISO-8859-1 设置为：GBK</span>        <span class="hljs-comment">// response.setCharacterEncoding("utf-8");</span>        <span class="hljs-comment">//告诉浏览器，服务器发送的消息体数据的编码。建议浏览器使用该编码解码</span>        <span class="hljs-comment">//response.setHeader("content-type","text/html;charset=utf-8");</span>        <span class="hljs-comment">//简单的形式，设置编码</span>        response.setContentType(<span class="hljs-string">"text/html;charset=utf-8"</span>);        <span class="hljs-comment">//1.获取字符输出流</span>        <span class="hljs-type">PrintWriter</span> pw = response.getWriter();        <span class="hljs-comment">//2.输出数据</span>        pw.write(<span class="hljs-string">"&lt;h1&gt;hello response&lt;/h1&gt;"</span>);        pw.write(<span class="hljs-string">"&lt;br&gt;你好啊啊啊 response"</span>);    }    <span class="hljs-keyword">protected</span> void doGet(<span class="hljs-type">HttpServletRequest</span> request, <span class="hljs-type">HttpServletResponse</span> response) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-keyword">this</span>.doPost(request,response);    }}</code></pre></div><ol start="2"><li>演示</li></ol><p><fancybox><img src="https://s2.ax1x.com/2020/02/23/33AyjJ.png" srcset="/blog/img/loading.gif" alt="33AyjJ.png"></fancybox></p><h2 id="注意乱码问题-编解码问题"><a href="#注意乱码问题-编解码问题" class="headerlink" title="注意乱码问题(编解码问题)"></a>注意乱码问题(编解码问题)</h2><ol><li><code>PrintWriter pw = response.getWriter();</code>获取的流的默认编码是<strong>ISO-8859-1</strong></li><li>设置该流的<strong>默认编码</strong></li><li>告诉<strong>浏览器响应体使用的编码</strong></li></ol><ul><li><strong>简单的形式</strong>，设置编码，是<strong>在获取流之前设置</strong>  <code>response.setContentType("text/html;charset=utf-8");</code></li></ul><h3 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h3><p>上面ResponseDemo4.java文件中</p><div class="hljs"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>获取流对象之前，设置流的默认编码：ISO-<span class="hljs-number">8859</span>-<span class="hljs-number">1</span> 设置为：GBK<span class="hljs-regexp">//</span> response.setCharacterEncoding(<span class="hljs-string">"utf-8"</span>);<span class="hljs-regexp">//</span>告诉浏览器，服务器发送的消息体数据的编码。建议浏览器使用该编码解码<span class="hljs-regexp">//</span>response.setHeader(<span class="hljs-string">"content-type"</span>,<span class="hljs-string">"text/html;charset=utf-8"</span>);<span class="hljs-regexp">//</span>简单的形式，设置编码response.setContentType(<span class="hljs-string">"text/html;charset=utf-8"</span>);</code></pre></div><h1 id="案例3：服务器输出字节数据到浏览器"><a href="#案例3：服务器输出字节数据到浏览器" class="headerlink" title="案例3：服务器输出字节数据到浏览器"></a>案例3：服务器输出字节数据到浏览器</h1><h2 id="步骤-2"><a href="#步骤-2" class="headerlink" title="步骤"></a>步骤</h2><ol><li><p>获取字符输出流</p></li><li><p>输出数据</p></li></ol><h2 id="演示-1"><a href="#演示-1" class="headerlink" title="演示"></a>演示</h2><ol><li>ResponseDemo5.java</li></ol><div class="hljs"><pre><code class="hljs scala"><span class="hljs-keyword">package</span> cn.itcast.web.servlet;<span class="hljs-keyword">import</span> javax.servlet.<span class="hljs-type">ServletException</span>;<span class="hljs-keyword">import</span> javax.servlet.<span class="hljs-type">ServletOutputStream</span>;<span class="hljs-keyword">import</span> javax.servlet.annotation.<span class="hljs-type">WebServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletRequest</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletResponse</span>;<span class="hljs-keyword">import</span> java.io.<span class="hljs-type">IOException</span>;<span class="hljs-meta">@WebServlet</span>(<span class="hljs-string">"/responseDemo5"</span>)public <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ResponseDemo5</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">HttpServlet</span> </span>{    <span class="hljs-keyword">protected</span> void doPost(<span class="hljs-type">HttpServletRequest</span> request, <span class="hljs-type">HttpServletResponse</span> response) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        response.setContentType(<span class="hljs-string">"text/html;charset=utf-8"</span>);        <span class="hljs-comment">//1.获取字节输出流</span>        <span class="hljs-type">ServletOutputStream</span> sos = response.getOutputStream();        <span class="hljs-comment">//2.输出数据</span>        sos.write(<span class="hljs-string">"你好"</span>.getBytes(<span class="hljs-string">"utf-8"</span>));    }    <span class="hljs-keyword">protected</span> void doGet(<span class="hljs-type">HttpServletRequest</span> request, <span class="hljs-type">HttpServletResponse</span> response) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-keyword">this</span>.doPost(request,response);    }}</code></pre></div><ol start="2"><li>演示</li></ol><p><fancybox><img src="https://s2.ax1x.com/2020/02/23/33VhlD.png" srcset="/blog/img/loading.gif" alt="33VhlD.png"></fancybox></p><h1 id="案例4：验证码"><a href="#案例4：验证码" class="headerlink" title="案例4：验证码"></a>案例4：验证码</h1><ol><li><p>本质：图片</p></li><li><p>目的：<strong>防止恶意表单注册</strong></p></li></ol><h2 id="步骤-3"><a href="#步骤-3" class="headerlink" title="步骤"></a>步骤</h2><ol><li>创建一对象，在内存中代表一个图片（验证码图片对象）</li><li>美化图片</li><li>将图片输出到页面展示</li></ol><h2 id="演示-2"><a href="#演示-2" class="headerlink" title="演示"></a>演示</h2><ol><li>New一个CheckCode.java</li></ol><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.itcast.web.servlet;<span class="hljs-keyword">import</span> javax.imageio.ImageIO;<span class="hljs-keyword">import</span> javax.servlet.ServletException;<span class="hljs-keyword">import</span> javax.servlet.annotation.WebServlet;<span class="hljs-keyword">import</span> javax.servlet.http.HttpServlet;<span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<span class="hljs-keyword">import</span> java.awt.image.BufferedImage;<span class="hljs-keyword">import</span> java.io.IOException;<span class="hljs-comment">/**</span><span class="hljs-comment"> * <span class="hljs-doctag">@Classname</span> CheckCode</span><span class="hljs-comment"> * <span class="hljs-doctag">@Description</span> TODO</span><span class="hljs-comment"> * <span class="hljs-doctag">@Date</span> 2020/2/23 下午 10:20</span><span class="hljs-comment"> * <span class="hljs-doctag">@Created</span> by jerry</span><span class="hljs-comment"> */</span><span class="hljs-meta">@WebServlet</span>(<span class="hljs-string">"/checkCodeServlet"</span>)<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CheckCode</span>  <span class="hljs-keyword">extends</span> <span class="hljs-title">HttpServlet</span> </span>{    <span class="hljs-meta">@Override</span>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">doPost</span><span class="hljs-params">(HttpServletRequest requeste, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException </span>{        <span class="hljs-keyword">int</span> width = <span class="hljs-number">100</span>;        <span class="hljs-keyword">int</span> height = <span class="hljs-number">50</span>;        <span class="hljs-comment">//1.创建一对象，在内存中代表一个图片（验证码图片对象）</span>        BufferedImage image = <span class="hljs-keyword">new</span> BufferedImage(width,height,BufferedImage.TYPE_INT_RGB);                <span class="hljs-comment">//2. 美化图片</span>        <span class="hljs-comment">//3.将图片输出到页面展示</span>        ImageIO.write(image, <span class="hljs-string">"jpg"</span>, response.getOutputStream());    }    <span class="hljs-meta">@Override</span>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">doGet</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException </span>{        <span class="hljs-keyword">this</span>.doPost(request,response);    }}</code></pre></div><ol start="2"><li>没有美化前</li></ol><p><fancybox><img src="https://s2.ax1x.com/2020/02/23/33uJPI.png" srcset="/blog/img/loading.gif" alt=""></fancybox></p><ol start="3"><li>美化图片</li></ol><div class="hljs"><pre><code class="hljs reasonml">package cn.itcast.web.servlet;import javax.imageio.ImageIO;import javax.servlet.ServletException;import javax.servlet.annotation.WebServlet;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.awt.*;import java.awt.image.BufferedImage;import java.io.IOException;import java.util.Random;<span class="hljs-comment">/**</span><span class="hljs-comment"> * 验证码</span><span class="hljs-comment"> */</span>@<span class="hljs-constructor">WebServlet(<span class="hljs-string">"/checkCodeServlet"</span>)</span>public <span class="hljs-keyword">class</span> CheckCode  extends HttpServlet {    @Override    protected void <span class="hljs-keyword">do</span><span class="hljs-constructor">Post(HttpServletRequest <span class="hljs-params">requeste</span>, HttpServletResponse <span class="hljs-params">response</span>)</span> throws ServletException, IOException {        <span class="hljs-built_in">int</span> width = <span class="hljs-number">100</span>;        <span class="hljs-built_in">int</span> height = <span class="hljs-number">50</span>;        <span class="hljs-comment">//1.创建一对象，在内存中代表一个图片（验证码图片对象）</span>        BufferedImage image = <span class="hljs-keyword">new</span> <span class="hljs-constructor">BufferedImage(<span class="hljs-params">width</span>,<span class="hljs-params">height</span>,BufferedImage.TYPE_INT_RGB)</span>;        <span class="hljs-comment">//2. 美化图片</span>        <span class="hljs-comment">//2-1.填充背景色</span>        Graphics g = image.get<span class="hljs-constructor">Graphics()</span>; <span class="hljs-comment">//画笔对象，可画/填充</span>        g.set<span class="hljs-constructor">Color(Color.<span class="hljs-params">pink</span>)</span>; <span class="hljs-comment">//设置画笔颜色</span>        g.fill<span class="hljs-constructor">Rect(0,0,<span class="hljs-params">width</span>,<span class="hljs-params">height</span>)</span>;        <span class="hljs-comment">//g.fill3DRect(0, 0, width, height, true);</span>        <span class="hljs-comment">//2-2.画边框</span>        g.set<span class="hljs-constructor">Color(Color.BLUE)</span>;        g.draw<span class="hljs-constructor">Rect(0, 0, <span class="hljs-params">width</span>-1, <span class="hljs-params">height</span>-1)</span>;        <span class="hljs-comment">//2-3.随机字符（全部）</span>        String str = <span class="hljs-string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghigklmnopqrstuvwxyz0123456789"</span>;        <span class="hljs-comment">//生产随机角标</span>        Random ran = <span class="hljs-keyword">new</span> <span class="hljs-constructor">Random()</span>;        <span class="hljs-comment">//2-3.写验证码</span>        for (<span class="hljs-built_in">int</span> i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">4</span>; i++) {            <span class="hljs-built_in">int</span> index = ran.next<span class="hljs-constructor">Int(<span class="hljs-params">str</span>.<span class="hljs-params">length</span>()</span>);            <span class="hljs-comment">//获取字符</span>            <span class="hljs-built_in">char</span> ch = str.<span class="hljs-built_in">char</span><span class="hljs-constructor">At(<span class="hljs-params">index</span>)</span>; <span class="hljs-comment">//随机字符</span>            <span class="hljs-comment">//写入字符</span>            g.draw<span class="hljs-constructor">String(<span class="hljs-params">ch</span>+<span class="hljs-string">""</span>, <span class="hljs-params">width</span><span class="hljs-operator">/</span>5<span class="hljs-operator">*</span><span class="hljs-params">i</span> , <span class="hljs-params">height</span><span class="hljs-operator">/</span>2)</span>;        }        <span class="hljs-comment">/*g.drawString("a", 20, 25);</span><span class="hljs-comment">        g.drawString("2", 33, 15);</span><span class="hljs-comment">        g.drawString("4", 72, 35);</span><span class="hljs-comment">        g.drawString("g", 80, 20);*/</span>        <span class="hljs-comment">//2-4.画出干扰线</span>        g.set<span class="hljs-constructor">Color(Color.<span class="hljs-params">green</span>)</span>;        <span class="hljs-comment">//随机生成坐标点</span>        for (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++) {            <span class="hljs-built_in">int</span> x1 = ran.next<span class="hljs-constructor">Int(<span class="hljs-params">width</span>)</span>;            <span class="hljs-built_in">int</span> x2 = ran.next<span class="hljs-constructor">Int(<span class="hljs-params">width</span>)</span>;            <span class="hljs-built_in">int</span> y1 = ran.next<span class="hljs-constructor">Int(<span class="hljs-params">height</span>)</span>;            <span class="hljs-built_in">int</span> y2 = ran.next<span class="hljs-constructor">Int(<span class="hljs-params">height</span>)</span>;            g.draw<span class="hljs-constructor">Line(<span class="hljs-params">x1</span>, <span class="hljs-params">y1</span>, <span class="hljs-params">x2</span>, <span class="hljs-params">y2</span>)</span>;        }        <span class="hljs-comment">//3.将图片输出到页面展示</span>        <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">ImageIO</span>.</span></span>write(image, <span class="hljs-string">"jpg"</span>, response.get<span class="hljs-constructor">OutputStream()</span>);    }    @Override    protected void <span class="hljs-keyword">do</span><span class="hljs-constructor">Get(HttpServletRequest <span class="hljs-params">request</span>, HttpServletResponse <span class="hljs-params">response</span>)</span> throws ServletException, IOException {        this.<span class="hljs-keyword">do</span><span class="hljs-constructor">Post(<span class="hljs-params">request</span>,<span class="hljs-params">response</span>)</span>;    }}</code></pre></div><ol start="4"><li>美化后</li></ol><p><fancybox><img src="https://s2.ax1x.com/2020/02/24/33th5T.png" srcset="/blog/img/loading.gif" alt="33th5T.png"></fancybox></p><ol start="5"><li>在页面中配合注册表单等使用验证码</li><li>点击超链接或图片后，直接加载随机验证码</li></ol><div class="hljs"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE html&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">"en"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">"UTF-8"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>验证码<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span>        /**分析：         *  点击超链接/图片，需要换一张         *  1.给超链接/图片绑定单击事件         *  2.重新设置图片的src属性值         */<span class="javascript">        <span class="hljs-built_in">window</span>.onload = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{</span><span class="actionscript">            <span class="hljs-comment">//1.获取图片对象</span></span><span class="javascript">            <span class="hljs-keyword">var</span> img = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"checkCode"</span>);</span><span class="javascript">            <span class="hljs-keyword">var</span> a = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"change"</span>);</span><span class="actionscript">            <span class="hljs-comment">//2.绑定单击事件</span></span><span class="actionscript">            img.onclick = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">()</span> </span>{</span><span class="actionscript">                <span class="hljs-comment">//获取时间戳</span></span><span class="javascript">                <span class="hljs-keyword">var</span> date = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().getTime(); <span class="hljs-comment">//毫秒值</span></span><span class="actionscript">                <span class="hljs-comment">//利用时间戳，浏览器访问就一定不会去访问缓存了。每一时刻的链接都是不一样的。</span></span><span class="actionscript">                img.src = <span class="hljs-string">"/day15/checkCodeServlet?"</span> + date;</span>            }<span class="actionscript">            a.onlick = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">()</span> </span>{</span><span class="javascript">                <span class="hljs-keyword">var</span> date = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().getTime();</span><span class="actionscript">                a.href = <span class="hljs-string">"/day15/checkCodeServlet?"</span> + date;</span>            }        }    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"checkCode"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"/day15/checkCodeServlet"</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"change"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">""</span>&gt;</span>看不清，换一张？<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre></div><ol start="7"><li>演示</li></ol><p><fancybox><img src="https://s2.ax1x.com/2020/02/24/38avh6.gif" srcset="/blog/img/loading.gif" alt="38avh6.gif"></fancybox></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>JavaWeb</tag>
      
      <tag>笔记</tag>
      
      <tag>HTTP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>创建@Test测试Druid连接池时的问题</title>
    <link href="/blog/2020/02/22/%E5%88%9B%E5%BB%BA@Test%E6%B5%8B%E8%AF%95Druid%E8%BF%9E%E6%8E%A5%E6%B1%A0%E6%97%B6%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <url>/blog/2020/02/22/%E5%88%9B%E5%BB%BA@Test%E6%B5%8B%E8%AF%95Druid%E8%BF%9E%E6%8E%A5%E6%B1%A0%E6%97%B6%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>记录学习 <a href="https://melodyjerry.gitee.io/blog/2020/02/22/HTTP%E6%A1%88%E4%BE%8B%E5%AD%A6%E4%B9%A0%EF%BC%9A%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95/" target="_blank" rel="noopener">《HTTP案例学习：用户登录》</a> 时候遇到的一些问题</p><a id="more"></a><hr><p>IDEA run之后，控制台输出一堆问题：</p><div class="hljs"><pre><code class="hljs routeros">二月 23, 2020 1:30:34 下午 com.alibaba.druid.pool.DruidDataSource error严重: init datasource errorcom.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could <span class="hljs-keyword">not</span> create<span class="hljs-built_in"> connection </span><span class="hljs-keyword">to</span> database server.二月 23, 2020 1:30:34 下午 com.alibaba.druid.pool.DruidDataSource error严重: dataSource init error二月 23, 2020 1:30:34 下午 com.alibaba.druid.pool.DruidDataSource info信息: {dataSource-1} inited</code></pre></div><p>我估计是<strong>MySQL版本的问题</strong>，因为从我开始学习MySQL来安装的是8.0，学习期间就遇到很多问题，不过都能逐一解决。</p><p>但是这次我果断<strong>直接降级到5.7</strong>。</p><p>不过，降级后还是被提示错误</p><div class="hljs"><pre><code class="hljs stylus">二月 <span class="hljs-number">23</span>, <span class="hljs-number">2020</span> <span class="hljs-number">2</span>:<span class="hljs-number">41</span>:<span class="hljs-number">58</span> 下午 com<span class="hljs-selector-class">.alibaba</span><span class="hljs-selector-class">.druid</span><span class="hljs-selector-class">.pool</span><span class="hljs-selector-class">.DruidDataSource</span> info信息: {dataSource-<span class="hljs-number">1</span>} inited二月 <span class="hljs-number">23</span>, <span class="hljs-number">2020</span> <span class="hljs-number">2</span>:<span class="hljs-number">41</span>:<span class="hljs-number">58</span> 下午 org<span class="hljs-selector-class">.springframework</span><span class="hljs-selector-class">.beans</span><span class="hljs-selector-class">.factory</span><span class="hljs-selector-class">.xml</span><span class="hljs-selector-class">.XmlBeanDefinitionReader</span> loadBeanDefinitions信息: Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]二月 <span class="hljs-number">23</span>, <span class="hljs-number">2020</span> <span class="hljs-number">2</span>:<span class="hljs-number">41</span>:<span class="hljs-number">58</span> 下午 org<span class="hljs-selector-class">.springframework</span><span class="hljs-selector-class">.jdbc</span><span class="hljs-selector-class">.support</span><span class="hljs-selector-class">.SQLErrorCodesFactory</span> &lt;init&gt;信息: SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]......................................org<span class="hljs-selector-class">.springframework</span><span class="hljs-selector-class">.dao</span><span class="hljs-selector-class">.EmptyResultDataAccessException</span>: Incorrect result size: expected <span class="hljs-number">1</span>, actual <span class="hljs-number">0</span>at org<span class="hljs-selector-class">.springframework</span><span class="hljs-selector-class">.dao</span><span class="hljs-selector-class">.support</span><span class="hljs-selector-class">.DataAccessUtils</span>.requiredSingleResult(DataAccessUtils<span class="hljs-selector-class">.java</span>:<span class="hljs-number">74</span>)at org<span class="hljs-selector-class">.springframework</span><span class="hljs-selector-class">.jdbc</span><span class="hljs-selector-class">.core</span><span class="hljs-selector-class">.JdbcTemplate</span>.queryForObject(JdbcTemplate<span class="hljs-selector-class">.java</span>:<span class="hljs-number">777</span>)at cn<span class="hljs-selector-class">.itcast</span><span class="hljs-selector-class">.Dao</span><span class="hljs-selector-class">.UserDao</span>.login(UserDao<span class="hljs-selector-class">.java</span>:<span class="hljs-number">25</span>)at cn<span class="hljs-selector-class">.itcast</span><span class="hljs-selector-class">.test</span><span class="hljs-selector-class">.UserDaoTest</span>.testLogin(UserDaoTest<span class="hljs-selector-class">.java</span>:<span class="hljs-number">23</span>)at sun<span class="hljs-selector-class">.reflect</span><span class="hljs-selector-class">.NativeMethodAccessorImpl</span>.invoke0(Native Method)at sun<span class="hljs-selector-class">.reflect</span><span class="hljs-selector-class">.NativeMethodAccessorImpl</span>.invoke(NativeMethodAccessorImpl<span class="hljs-selector-class">.java</span>:<span class="hljs-number">62</span>)at sun<span class="hljs-selector-class">.reflect</span><span class="hljs-selector-class">.DelegatingMethodAccessorImpl</span>.invoke(DelegatingMethodAccessorImpl<span class="hljs-selector-class">.java</span>:<span class="hljs-number">43</span>)at java<span class="hljs-selector-class">.lang</span><span class="hljs-selector-class">.reflect</span><span class="hljs-selector-class">.Method</span>.invoke(Method<span class="hljs-selector-class">.java</span>:<span class="hljs-number">498</span>)at org<span class="hljs-selector-class">.junit</span><span class="hljs-selector-class">.runners</span><span class="hljs-selector-class">.model</span>.FrameworkMethod$<span class="hljs-number">1</span>.runReflectiveCall(FrameworkMethod<span class="hljs-selector-class">.java</span>:<span class="hljs-number">50</span>)at org<span class="hljs-selector-class">.junit</span><span class="hljs-selector-class">.internal</span><span class="hljs-selector-class">.runners</span><span class="hljs-selector-class">.model</span><span class="hljs-selector-class">.ReflectiveCallable</span>.run(ReflectiveCallable<span class="hljs-selector-class">.java</span>:<span class="hljs-number">12</span>)at org<span class="hljs-selector-class">.junit</span><span class="hljs-selector-class">.runners</span><span class="hljs-selector-class">.model</span><span class="hljs-selector-class">.FrameworkMethod</span>.invokeExplosively(FrameworkMethod<span class="hljs-selector-class">.java</span>:<span class="hljs-number">47</span>)at org<span class="hljs-selector-class">.junit</span><span class="hljs-selector-class">.internal</span><span class="hljs-selector-class">.runners</span><span class="hljs-selector-class">.statements</span><span class="hljs-selector-class">.InvokeMethod</span>.evaluate(InvokeMethod<span class="hljs-selector-class">.java</span>:<span class="hljs-number">17</span>)at org<span class="hljs-selector-class">.junit</span><span class="hljs-selector-class">.runners</span><span class="hljs-selector-class">.ParentRunner</span>.runLeaf(ParentRunner<span class="hljs-selector-class">.java</span>:<span class="hljs-number">325</span>)at org<span class="hljs-selector-class">.junit</span><span class="hljs-selector-class">.runners</span><span class="hljs-selector-class">.BlockJUnit4ClassRunner</span>.runChild(BlockJUnit4ClassRunner<span class="hljs-selector-class">.java</span>:<span class="hljs-number">78</span>)at org<span class="hljs-selector-class">.junit</span><span class="hljs-selector-class">.runners</span><span class="hljs-selector-class">.BlockJUnit4ClassRunner</span>.runChild(BlockJUnit4ClassRunner<span class="hljs-selector-class">.java</span>:<span class="hljs-number">57</span>)at org<span class="hljs-selector-class">.junit</span><span class="hljs-selector-class">.runners</span>.ParentRunner$<span class="hljs-number">3</span>.run(ParentRunner<span class="hljs-selector-class">.java</span>:<span class="hljs-number">290</span>)at org<span class="hljs-selector-class">.junit</span><span class="hljs-selector-class">.runners</span>.ParentRunner$<span class="hljs-number">1</span>.schedule(ParentRunner<span class="hljs-selector-class">.java</span>:<span class="hljs-number">71</span>)at org<span class="hljs-selector-class">.junit</span><span class="hljs-selector-class">.runners</span><span class="hljs-selector-class">.ParentRunner</span>.runChildren(ParentRunner<span class="hljs-selector-class">.java</span>:<span class="hljs-number">288</span>)at org<span class="hljs-selector-class">.junit</span><span class="hljs-selector-class">.runners</span><span class="hljs-selector-class">.ParentRunner</span>.access$<span class="hljs-number">000</span>(ParentRunner<span class="hljs-selector-class">.java</span>:<span class="hljs-number">58</span>)at org<span class="hljs-selector-class">.junit</span><span class="hljs-selector-class">.runners</span>.ParentRunner$<span class="hljs-number">2</span>.evaluate(ParentRunner<span class="hljs-selector-class">.java</span>:<span class="hljs-number">268</span>)at org<span class="hljs-selector-class">.junit</span><span class="hljs-selector-class">.runners</span><span class="hljs-selector-class">.ParentRunner</span>.run(ParentRunner<span class="hljs-selector-class">.java</span>:<span class="hljs-number">363</span>)at org<span class="hljs-selector-class">.junit</span><span class="hljs-selector-class">.runner</span><span class="hljs-selector-class">.JUnitCore</span>.run(JUnitCore<span class="hljs-selector-class">.java</span>:<span class="hljs-number">137</span>)at com<span class="hljs-selector-class">.intellij</span><span class="hljs-selector-class">.junit4</span><span class="hljs-selector-class">.JUnit4IdeaTestRunner</span>.startRunnerWithArgs(JUnit4IdeaTestRunner<span class="hljs-selector-class">.java</span>:<span class="hljs-number">68</span>)at com<span class="hljs-selector-class">.intellij</span><span class="hljs-selector-class">.rt</span><span class="hljs-selector-class">.execution</span><span class="hljs-selector-class">.junit</span>.IdeaTestRunner<span class="hljs-variable">$Repeater</span>.startRunnerWithArgs(IdeaTestRunner<span class="hljs-selector-class">.java</span>:<span class="hljs-number">47</span>)at com<span class="hljs-selector-class">.intellij</span><span class="hljs-selector-class">.rt</span><span class="hljs-selector-class">.execution</span><span class="hljs-selector-class">.junit</span><span class="hljs-selector-class">.JUnitStarter</span>.prepareStreamsAndStart(JUnitStarter<span class="hljs-selector-class">.java</span>:<span class="hljs-number">242</span>)at com<span class="hljs-selector-class">.intellij</span><span class="hljs-selector-class">.rt</span><span class="hljs-selector-class">.execution</span><span class="hljs-selector-class">.junit</span><span class="hljs-selector-class">.JUnitStarter</span>.main(JUnitStarter<span class="hljs-selector-class">.java</span>:<span class="hljs-number">70</span>)Process finished with exit <span class="hljs-selector-tag">code</span> -<span class="hljs-number">1</span></code></pre></div><p>分析了<code>信息: SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]</code>，</p><p>信息是提示<strong>sql语句错了</strong>。</p><p>仔细检查一下sql语句，单纯的去 cmd 中用自己的sql语句执行一下检查问题。</p><p>果然是sql语句的问题。</p><p>剩下的错误提示，是<strong>数据库的字段的问题</strong>。</p><div class="hljs"><pre><code class="hljs less"><span class="hljs-comment">//正确</span><span class="hljs-selector-tag">loginuser</span><span class="hljs-selector-class">.setUsername</span>(<span class="hljs-string">"superbaby"</span>);<span class="hljs-comment">//错误，字段少了个y</span><span class="hljs-selector-tag">loginuser</span><span class="hljs-selector-class">.setUsername</span>(<span class="hljs-string">"superbab"</span>);</code></pre></div><p>再次run，这次得到如期的结果。</p><p><img src="https://s2.ax1x.com/2020/02/23/31pw3n.png" srcset="/blog/img/loading.gif" alt="31pw3n.png"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>JavaWeb</tag>
      
      <tag>笔记</tag>
      
      <tag>IDEA</tag>
      
      <tag>Druid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTTP案例学习：用户登录&amp;验证码</title>
    <link href="/blog/2020/02/22/HTTP%E6%A1%88%E4%BE%8B%E5%AD%A6%E4%B9%A0%EF%BC%9A%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95&amp;%E9%AA%8C%E8%AF%81%E7%A0%81/"/>
    <url>/blog/2020/02/22/HTTP%E6%A1%88%E4%BE%8B%E5%AD%A6%E4%B9%A0%EF%BC%9A%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95&amp;%E9%AA%8C%E8%AF%81%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<p>本笔记包括两个案例，分别是<strong>用户登录、验证码</strong>。</p><a id="more"></a><hr><h1 id="案例：用户登录"><a href="#案例：用户登录" class="headerlink" title="案例：用户登录"></a>案例：用户登录</h1><p>接着 <a href="https://melodyjerry.gitee.io/blog/2020/02/21/HTTP：超文本传输协议/" target="_blank" rel="noopener">《HTTP：超文本传输协议》</a> 、 <a href="https://melodyjerry.gitee.io/blog/2020/02/21/HTTP请求信息数据-Request/" target="_blank" rel="noopener">《HTTP请求信息数据 - Request》</a> 的学习，<br>现在记录一份案例学习。</p><h1 id="用户需求"><a href="#用户需求" class="headerlink" title="用户需求"></a>用户需求</h1><ol><li>编写 login.html 登录页面，并且有 username &amp; password 两个输入框</li><li>使用 Druid 数据库连接池技术，操作 MySQL，day14数据库中user表</li><li>使用 JdbcTemplate 技术封装 JDBC</li><li>登录成功跳转到 SuccessServlet 展示：登录成功！用户名,欢迎您</li><li>登录失败跳转到 FailServlet 展示：登录失败，用户名或密码错误</li></ol><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p><fancybox><img src="https://s2.ax1x.com/2020/02/22/3QqfRU.png" srcset="/blog/img/loading.gif" alt=""></fancybox></p><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><ol><li><p>创建项目，导入html页面，配置文件，jar包</p></li><li><p>创建数据库环境</p></li><li><p>创建包cn.itcast.domain,创建类User</p></li><li><p>创建包cn.itcast.util,编写工具类JDBCUtils</p></li><li><p>创建包cn.itcast.dao,创建类UserDao,提供login方法</p></li><li><p>编写cn.itcast.web.servlet.LoginServlet类</p></li><li><p>编写FailServlet和SuccessServlet类</p></li><li><p>BeanUtils工具类，简化数据封装</p></li></ol><h3 id="一、创建项目，导入html页面，配置文件，jar包"><a href="#一、创建项目，导入html页面，配置文件，jar包" class="headerlink" title="一、创建项目，导入html页面，配置文件，jar包"></a>一、创建项目，导入html页面，配置文件，jar包</h3><ol><li>新建Module</li></ol><p><fancybox><img src="https://s2.ax1x.com/2020/02/23/3lYpTS.png" srcset="/blog/img/loading.gif" alt=""></fancybox></p><ol start="2"><li>web文件夹下创建login.html</li></ol><div class="hljs"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE html&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">"en"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">"UTF-8"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>用户登录<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">"/day14_test/loginServlet"</span> <span class="hljs-attr">method</span>=<span class="hljs-string">"post"</span>&gt;</span>    用户名:<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"username"</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>    密码:<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"password"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"password"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"submit"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"登录"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre></div><p>这里的login.html中<strong>form表单的action路径的写法：<code>虚拟目录+Servlet的资源路径</code></strong>是<br><font color="red" size="5">虚拟目录+Servlet的资源路径</font></p><blockquote><p>关于 <a href="https://melodyjerry.gitee.io/blog/2020/02/23/html%E4%B8%ADform%E8%A1%A8%E5%8D%95%E7%9A%84action%E8%B7%AF%E5%BE%84%E7%9A%84%E5%86%99%E6%B3%95/" target="_blank" rel="noopener">《html中form表单的action路径的写法》</a></p></blockquote><ol start="3"><li>将Druid配置文件druid.properties导入到src文件下</li></ol><div class="hljs"><pre><code class="hljs ini"><span class="hljs-attr">driverClassName</span>=com.mysql.jdbc.Driver<span class="hljs-attr">url</span>=jdbc:mysql:///day14<span class="hljs-attr">username</span>=root<span class="hljs-attr">password</span>=root<span class="hljs-attr">initialSize</span>=<span class="hljs-number">5</span><span class="hljs-attr">maxActive</span>=<span class="hljs-number">10</span><span class="hljs-attr">maxWait</span>=<span class="hljs-number">3000</span></code></pre></div><ol start="4"><li>导入jar包到Web的WEB-INF文件中</li></ol><p><fancybox><img src="https://s2.ax1x.com/2020/02/23/3ltlE8.png" srcset="/blog/img/loading.gif" alt=""></fancybox></p><p>在项目的web文件夹下创建文件夹WEB-INF，将lib文件夹粘贴进去</p><p><fancybox><img src="https://s2.ax1x.com/2020/02/23/3ltHxA.png" srcset="/blog/img/loading.gif" alt=""></fancybox></p><p>并把jar包加入到工作空间里</p><p><fancybox><img src="https://s2.ax1x.com/2020/02/23/3lBj6e.gif" srcset="/blog/img/loading.gif" alt=""></fancybox></p><h3 id="二、创建数据库环境"><a href="#二、创建数据库环境" class="headerlink" title="二、创建数据库环境"></a>二、创建数据库环境</h3><ol><li>打开Navicat，创建数据库和数据表</li></ol><div class="hljs"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">DATABASE</span>day14;<span class="hljs-keyword">USE</span> day14;<span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> <span class="hljs-keyword">USER</span>(<span class="hljs-keyword">id</span> <span class="hljs-built_in">INT</span> PRIMARY <span class="hljs-keyword">KEY</span> AUTO_INCREMENT,username <span class="hljs-built_in">VARCHAR</span>(<span class="hljs-number">32</span>) <span class="hljs-keyword">UNIQUE</span> <span class="hljs-keyword">NOT</span> <span class="hljs-literal">NULL</span>,<span class="hljs-keyword">PASSWORD</span> <span class="hljs-built_in">VARCHAR</span>(<span class="hljs-number">32</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-literal">NULL</span>);</code></pre></div><p><fancybox><img src="https://s2.ax1x.com/2020/02/23/3lUYmq.png" srcset="/blog/img/loading.gif" alt=""></fancybox></p><ol start="2"><li>插入一条记录</li></ol><p><fancybox><img src="https://s2.ax1x.com/2020/02/23/3lU6n1.png" srcset="/blog/img/loading.gif" alt=""></fancybox></p><h3 id="三、创建包cn-itcast-domain-创建类User"><a href="#三、创建包cn-itcast-domain-创建类User" class="headerlink" title="三、创建包cn.itcast.domain,创建类User"></a>三、创建包cn.itcast.domain,创建类User</h3><ol><li><p>右键项目的src文件，New一个包cn.itcast.domain</p></li><li><p>在包下，New一个User.java</p></li></ol><div class="hljs"><pre><code class="hljs arduino">package cn.itcast.domain;<span class="hljs-comment">/**</span><span class="hljs-comment"> * 用户的实体类</span><span class="hljs-comment"> */</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span> {</span>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">int</span> id;    <span class="hljs-keyword">private</span> <span class="hljs-keyword">String</span> username;    <span class="hljs-keyword">private</span> <span class="hljs-keyword">String</span> password;    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getId</span><span class="hljs-params">()</span> </span>{        <span class="hljs-keyword">return</span> id;    }    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setId</span><span class="hljs-params">(<span class="hljs-keyword">int</span> id)</span> </span>{        <span class="hljs-keyword">this</span>.id = id;    }    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">String</span> <span class="hljs-title">getUsername</span><span class="hljs-params">()</span> </span>{        <span class="hljs-keyword">return</span> username;    }    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setUsername</span><span class="hljs-params">(<span class="hljs-keyword">String</span> username)</span> </span>{        <span class="hljs-keyword">this</span>.username = username;    }    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">String</span> <span class="hljs-title">getPassword</span><span class="hljs-params">()</span> </span>{        <span class="hljs-keyword">return</span> password;    }    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setPassword</span><span class="hljs-params">(<span class="hljs-keyword">String</span> password)</span> </span>{        <span class="hljs-keyword">this</span>.password = password;    }    @Override    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">String</span> <span class="hljs-title">toString</span><span class="hljs-params">()</span> </span>{        <span class="hljs-keyword">return</span> <span class="hljs-string">"User{"</span> +                <span class="hljs-string">"id="</span> + id +                <span class="hljs-string">", username='"</span> + username + <span class="hljs-string">'\''</span> +                <span class="hljs-string">", password='"</span> + password + <span class="hljs-string">'\''</span> +                <span class="hljs-string">'}'</span>;    }}</code></pre></div><h3 id="四、创建包cn-itcast-util-编写工具类JDBCUtils"><a href="#四、创建包cn-itcast-util-编写工具类JDBCUtils" class="headerlink" title="四、创建包cn.itcast.util,编写工具类JDBCUtils"></a>四、创建包cn.itcast.util,编写工具类JDBCUtils</h3><ol><li><p>New一个包cn.itcast.util</p></li><li><p>New一个JDBCUtils.java</p></li></ol><div class="hljs"><pre><code class="hljs swift">package cn.itcast.util;<span class="hljs-keyword">import</span> com.alibaba.druid.pool.DruidDataSourceFactory;<span class="hljs-keyword">import</span> javax.sql.ConnectionEvent;<span class="hljs-keyword">import</span> javax.sql.DataSource;<span class="hljs-keyword">import</span> java.io.IOException;<span class="hljs-keyword">import</span> java.io.InputStream;<span class="hljs-keyword">import</span> java.sql.Connection;<span class="hljs-keyword">import</span> java.sql.SQLException;<span class="hljs-keyword">import</span> java.util.Properties;<span class="hljs-comment">/**</span><span class="hljs-comment"> * JDBC的工具类 使用Durid连接池</span><span class="hljs-comment"> */</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">JDBCUtils</span> </span>{    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-type">DataSource</span> ds;    <span class="hljs-keyword">static</span> {        <span class="hljs-keyword">try</span> {            <span class="hljs-comment">//1.加载配置文件</span>            <span class="hljs-type">Properties</span> pro = new <span class="hljs-type">Properties</span>();            <span class="hljs-comment">//使用ClassLoader加载配置文件，获取字节输入流</span>            <span class="hljs-type">InputStream</span> <span class="hljs-keyword">is</span> = <span class="hljs-type">JDBCUtils</span><span class="hljs-class">.<span class="hljs-keyword">class</span>.<span class="hljs-title">getClassLoader</span>().<span class="hljs-title">getResourceAsStream</span>("<span class="hljs-title">druid</span>.<span class="hljs-title">properties</span>");</span><span class="hljs-class">            <span class="hljs-title">pro</span>.<span class="hljs-title">load</span>(<span class="hljs-title">is</span>);</span><span class="hljs-class"></span><span class="hljs-class">            //2.初始化连接池对象</span><span class="hljs-class">            <span class="hljs-title">ds</span> = <span class="hljs-title">DruidDataSourceFactory</span>.<span class="hljs-title">createDataSource</span>(<span class="hljs-title">pro</span>);</span><span class="hljs-class">        } <span class="hljs-title">catch</span> (<span class="hljs-title">IOException</span> <span class="hljs-title">e</span>) </span>{            e.printStackTrace();        } <span class="hljs-keyword">catch</span> (<span class="hljs-type">Exception</span> e) {            e.printStackTrace();        }    }    <span class="hljs-comment">/**</span><span class="hljs-comment">     * 获取连接池对象</span><span class="hljs-comment">     */</span>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">DataSource</span> getDataSource(){        <span class="hljs-keyword">return</span> ds;    }    <span class="hljs-comment">/**</span><span class="hljs-comment">     * 获取连接池Connection对象</span><span class="hljs-comment">     */</span>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">Connection</span> getConnection() <span class="hljs-keyword">throws</span> <span class="hljs-type">SQLException</span> {        <span class="hljs-keyword">return</span> ds.getConnection();    }}</code></pre></div><h3 id="五、创建包cn-itcast-dao-创建类UserDao-提供login方法"><a href="#五、创建包cn-itcast-dao-创建类UserDao-提供login方法" class="headerlink" title="五、创建包cn.itcast.dao,创建类UserDao,提供login方法"></a>五、创建包cn.itcast.dao,创建类UserDao,提供login方法</h3><ol><li>New一个包cn.itcast.dao</li><li>New一个UserDao.java</li></ol><div class="hljs"><pre><code class="hljs pgsql">package cn.itcast.Dao;<span class="hljs-keyword">import</span> cn.itcast.<span class="hljs-keyword">domain</span>.<span class="hljs-keyword">User</span>;<span class="hljs-keyword">import</span> cn.itcast.util.JDBCUtils;<span class="hljs-keyword">import</span> com.alibaba.druid.util.JdbcUtils;<span class="hljs-keyword">import</span> org.springframework.dao.DataAccessException;<span class="hljs-keyword">import</span> org.springframework.jdbc.core.BeanPropertyRowMapper;<span class="hljs-keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;<span class="hljs-comment">/**</span><span class="hljs-comment"> * 操作数据库中User表的类</span><span class="hljs-comment"> */</span><span class="hljs-built_in">public</span> <span class="hljs-keyword">class</span> UserDao {    // 声明JDBCTemplate对象公用    private JdbcTemplate template = <span class="hljs-built_in">new</span> JdbcTemplate(JDBCUtils.getDataSource());    <span class="hljs-comment">/**</span><span class="hljs-comment">     * 登录方法</span><span class="hljs-comment">     * @param loginUser 只有用户名和密码</span><span class="hljs-comment">     * @return User包含用户全部数据；没有查询到，返回null</span><span class="hljs-comment">     */</span>    <span class="hljs-built_in">public</span> <span class="hljs-keyword">User</span> <span class="hljs-keyword">login</span>(<span class="hljs-keyword">User</span> loginUser) {        try {            //<span class="hljs-number">1.</span>编写<span class="hljs-keyword">SQL</span>            String <span class="hljs-keyword">sql</span> = "select * from user where username = ? and password = ?";            //<span class="hljs-number">2.</span>调用query方法            <span class="hljs-keyword">User</span> <span class="hljs-keyword">user</span> = <span class="hljs-keyword">template</span>.queryForObject(<span class="hljs-keyword">sql</span>,                    <span class="hljs-built_in">new</span> BeanPropertyRowMapper&lt;<span class="hljs-keyword">User</span>&gt;(<span class="hljs-keyword">User</span>.<span class="hljs-keyword">class</span>),                    loginUser.getUsername(), loginUser.getPassword());            <span class="hljs-keyword">return</span> <span class="hljs-keyword">user</span>;        } catch (DataAccessException e) {            e.printStackTrace(); // 记录日志，后期写入文件里，不会总在控制台打印            <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;        }    }}</code></pre></div><ol start="3"><li>测试一下UserDao</li><li>New一个包cn.itcast.test，New一个UserDaoTest.java</li></ol><div class="hljs"><pre><code class="hljs pgsql">package cn.itcast.test;<span class="hljs-keyword">import</span> cn.itcast.Dao.UserDao;<span class="hljs-keyword">import</span> cn.itcast.<span class="hljs-keyword">domain</span>.<span class="hljs-keyword">User</span>;<span class="hljs-keyword">import</span> org.junit.Test;<span class="hljs-comment">/**</span><span class="hljs-comment"> * @Classname UserDaoTest</span><span class="hljs-comment"> * @Description TODO</span><span class="hljs-comment"> * @Date 2020/2/23 下午 1:00</span><span class="hljs-comment"> * @Created by jerry</span><span class="hljs-comment"> */</span><span class="hljs-built_in">public</span> <span class="hljs-keyword">class</span> UserDaoTest {    @Test    <span class="hljs-built_in">public</span> <span class="hljs-type">void</span> testLogin(){        <span class="hljs-keyword">User</span> loginuser = <span class="hljs-built_in">new</span> <span class="hljs-keyword">User</span>();        loginuser.setUsername("superbaby");        loginuser.setPassword("123");        UserDao dao = <span class="hljs-built_in">new</span> UserDao();        <span class="hljs-keyword">User</span> <span class="hljs-keyword">user</span> = dao.<span class="hljs-keyword">login</span>(loginuser);        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(<span class="hljs-keyword">user</span>);    }}</code></pre></div><ol start="5"><li>run后，控制台输出</li></ol><p><fancybox><img src="https://s2.ax1x.com/2020/02/23/31pw3n.png" srcset="/blog/img/loading.gif" alt=""></fancybox></p><ol start="6"><li>这个@Test部分，遇到了一些问题，就顺便记录在<a href="https://melodyjerry.gitee.io/blog/2020/02/22/%E5%88%9B%E5%BB%BA@Test%E6%B5%8B%E8%AF%95Druid%E8%BF%9E%E6%8E%A5%E6%B1%A0%E6%97%B6%E7%9A%84%E9%97%AE%E9%A2%98/" target="_blank" rel="noopener">《创建@Test测试Druid连接池时的问题》</a> 里面。</li></ol><h3 id="六、编写cn-itcast-web-servlet-LoginServlet类"><a href="#六、编写cn-itcast-web-servlet-LoginServlet类" class="headerlink" title="六、编写cn.itcast.web.servlet.LoginServlet类"></a>六、编写cn.itcast.web.servlet.LoginServlet类</h3><ol><li>New一个包cn.itcast.web.servlet</li><li>New一个LoginServlet.java</li></ol><div class="hljs"><pre><code class="hljs scala"><span class="hljs-keyword">package</span> cn.itcast.web.servlet;<span class="hljs-keyword">import</span> cn.itcast.<span class="hljs-type">Dao</span>.<span class="hljs-type">UserDao</span>;<span class="hljs-keyword">import</span> cn.itcast.domain.<span class="hljs-type">User</span>;<span class="hljs-keyword">import</span> cn.itcast.test.<span class="hljs-type">UserDaoTest</span>;<span class="hljs-keyword">import</span> javax.servlet.<span class="hljs-type">ServletException</span>;<span class="hljs-keyword">import</span> javax.servlet.annotation.<span class="hljs-type">WebServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletRequest</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletResponse</span>;<span class="hljs-keyword">import</span> java.io.<span class="hljs-type">IOException</span>;<span class="hljs-meta">@WebServlet</span>(<span class="hljs-string">"/loginServlet"</span>)public <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">LoginServlet</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">HttpServlet</span> </span>{    <span class="hljs-meta">@Override</span>    <span class="hljs-keyword">protected</span> void doGet(<span class="hljs-type">HttpServletRequest</span> req, <span class="hljs-type">HttpServletResponse</span> resp) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-comment">//1.设置编码</span>        req.setCharacterEncoding(<span class="hljs-string">"utf-8"</span>);        <span class="hljs-comment">//2.获取请求参数</span>        <span class="hljs-type">String</span> username = req.getParameter(<span class="hljs-string">"username"</span>);        <span class="hljs-type">String</span> password = req.getParameter(<span class="hljs-string">"password"</span>);        <span class="hljs-comment">//3.封装user对象</span>        <span class="hljs-type">User</span> loginUser = <span class="hljs-keyword">new</span> <span class="hljs-type">User</span>();        loginUser.setUsername(<span class="hljs-string">"username"</span>);        loginUser.setPassword(<span class="hljs-string">"password"</span>);        <span class="hljs-comment">//4.调用UserDao的login方法</span>        <span class="hljs-type">UserDao</span> dao = <span class="hljs-keyword">new</span> <span class="hljs-type">UserDao</span>();        <span class="hljs-type">User</span> user = dao.login(loginUser); <span class="hljs-comment">//真正获取到的user</span>        <span class="hljs-comment">//5.判断user</span>        <span class="hljs-keyword">if</span>(user == <span class="hljs-literal">null</span>){            <span class="hljs-comment">//登录失败</span>            req.getRequestDispatcher(<span class="hljs-string">"/failServlet"</span>).forward(req,resp); <span class="hljs-comment">//转发</span>        }<span class="hljs-keyword">else</span>{            <span class="hljs-comment">//登录成功</span>            <span class="hljs-comment">//存储数据</span>            req.setAttribute(<span class="hljs-string">"user"</span>,user);            <span class="hljs-comment">//转发</span>            req.getRequestDispatcher(<span class="hljs-string">"/successServlet"</span>).forward(req,resp);        }    }    <span class="hljs-meta">@Override</span>    <span class="hljs-keyword">protected</span> void doPost(<span class="hljs-type">HttpServletRequest</span> req, <span class="hljs-type">HttpServletResponse</span> resp) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-keyword">this</span>.doGet(req,resp);    }}</code></pre></div><h3 id="七、编写FailServlet和SuccessServlet类"><a href="#七、编写FailServlet和SuccessServlet类" class="headerlink" title="七、编写FailServlet和SuccessServlet类"></a>七、编写FailServlet和SuccessServlet类</h3><ol><li>New一个FailServlet.java</li></ol><div class="hljs"><pre><code class="hljs scala"><span class="hljs-keyword">package</span> cn.itcast.web.servlet;<span class="hljs-keyword">import</span> javax.servlet.<span class="hljs-type">ServletException</span>;<span class="hljs-keyword">import</span> javax.servlet.annotation.<span class="hljs-type">WebServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletRequest</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletResponse</span>;<span class="hljs-keyword">import</span> java.io.<span class="hljs-type">IOException</span>;<span class="hljs-comment">/**</span><span class="hljs-comment"> * @Classname failServlet</span><span class="hljs-comment"> * @Description TODO</span><span class="hljs-comment"> * @Date 2020/2/23 下午 3:38</span><span class="hljs-comment"> * @Created by jerry</span><span class="hljs-comment"> */</span><span class="hljs-meta">@WebServlet</span>(<span class="hljs-string">"/failServlet"</span>)public <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">FailServlet</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">HttpServlet</span> </span>{    <span class="hljs-meta">@Override</span>    <span class="hljs-keyword">protected</span> void doGet(<span class="hljs-type">HttpServletRequest</span> request, <span class="hljs-type">HttpServletResponse</span> response) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-keyword">this</span>.doPost(request,response);    }    <span class="hljs-meta">@Override</span>    <span class="hljs-keyword">protected</span> void doPost(<span class="hljs-type">HttpServletRequest</span> request, <span class="hljs-type">HttpServletResponse</span> response) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-comment">//给页面写一句话</span>        <span class="hljs-comment">//设置页面编码</span>        response.setContentType(<span class="hljs-string">"text/html;charset=utf-8"</span>);        <span class="hljs-comment">//输出</span>        response.getWriter().write(<span class="hljs-string">"登录失败，用户名或密码错误"</span>);    }}</code></pre></div><ol start="2"><li>New一个SuccessServlet.java</li></ol><div class="hljs"><pre><code class="hljs scala"><span class="hljs-keyword">package</span> cn.itcast.web.servlet;<span class="hljs-keyword">import</span> cn.itcast.domain.<span class="hljs-type">User</span>;<span class="hljs-keyword">import</span> javax.servlet.<span class="hljs-type">ServletException</span>;<span class="hljs-keyword">import</span> javax.servlet.annotation.<span class="hljs-type">WebServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletRequest</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletResponse</span>;<span class="hljs-keyword">import</span> java.io.<span class="hljs-type">IOException</span>;<span class="hljs-comment">/**</span><span class="hljs-comment"> * @Classname successServlet</span><span class="hljs-comment"> * @Description TODO</span><span class="hljs-comment"> * @Date 2020/2/23 下午 3:38</span><span class="hljs-comment"> * @Created by jerry</span><span class="hljs-comment"> */</span><span class="hljs-meta">@WebServlet</span>(<span class="hljs-string">"/successServlet"</span>)public <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SuccessServlet</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">HttpServlet</span> </span>{    <span class="hljs-meta">@Override</span>    <span class="hljs-keyword">protected</span> void doGet(<span class="hljs-type">HttpServletRequest</span> request, <span class="hljs-type">HttpServletResponse</span> response) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-keyword">this</span>.doPost(request,response);    }    <span class="hljs-meta">@Override</span>    <span class="hljs-keyword">protected</span> void doPost(<span class="hljs-type">HttpServletRequest</span> request, <span class="hljs-type">HttpServletResponse</span> response) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-comment">//获取request域中共享的user对象</span>        <span class="hljs-type">User</span> user = (<span class="hljs-type">User</span>) request.getAttribute(<span class="hljs-string">"user"</span>);        <span class="hljs-keyword">if</span>(user != <span class="hljs-literal">null</span>){            <span class="hljs-comment">//给页面写一句话</span>            <span class="hljs-comment">//设置页面编码</span>            response.setContentType(<span class="hljs-string">"text/html;charset=utf-8"</span>);            <span class="hljs-comment">//输出</span>            response.getWriter().write(<span class="hljs-string">"登录失败，用户名或密码错误"</span>);        }    }}</code></pre></div><h3 id="八、测试"><a href="#八、测试" class="headerlink" title="八、测试"></a>八、测试</h3><p>浏览器访问：<a href="http://localhost/day14_test/login.html" target="_blank" rel="noopener">http://localhost/day14_test/login.html</a></p><p><fancybox><img src="https://s2.ax1x.com/2020/02/23/31nQII.gif" srcset="/blog/img/loading.gif" alt=""></fancybox></p><p><fancybox><img src="https://s2.ax1x.com/2020/02/23/31Kf8x.gif" srcset="/blog/img/loading.gif" alt=""></fancybox></p><h3 id="九、BeanUtils工具类，简化数据封装"><a href="#九、BeanUtils工具类，简化数据封装" class="headerlink" title="九、BeanUtils工具类，简化数据封装"></a>九、BeanUtils工具类，简化数据封装</h3><ul><li>在LoginServlet.java中使用BeanUtils工具类</li></ul><div class="hljs"><pre><code class="hljs scala"><span class="hljs-keyword">package</span> cn.itcast.web.servlet;<span class="hljs-keyword">import</span> cn.itcast.<span class="hljs-type">Dao</span>.<span class="hljs-type">UserDao</span>;<span class="hljs-keyword">import</span> cn.itcast.domain.<span class="hljs-type">User</span>;<span class="hljs-keyword">import</span> cn.itcast.test.<span class="hljs-type">UserDaoTest</span>;<span class="hljs-keyword">import</span> org.apache.commons.beanutils.<span class="hljs-type">BeanUtils</span>;<span class="hljs-keyword">import</span> javax.servlet.<span class="hljs-type">ServletException</span>;<span class="hljs-keyword">import</span> javax.servlet.annotation.<span class="hljs-type">WebServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletRequest</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletResponse</span>;<span class="hljs-keyword">import</span> java.io.<span class="hljs-type">IOException</span>;<span class="hljs-keyword">import</span> java.lang.reflect.<span class="hljs-type">InvocationTargetException</span>;<span class="hljs-keyword">import</span> java.util.<span class="hljs-type">Map</span>;<span class="hljs-meta">@WebServlet</span>(<span class="hljs-string">"/loginServlet"</span>)public <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">LoginServlet</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">HttpServlet</span> </span>{    <span class="hljs-meta">@Override</span>    <span class="hljs-keyword">protected</span> void doGet(<span class="hljs-type">HttpServletRequest</span> req, <span class="hljs-type">HttpServletResponse</span> resp) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-comment">//1.设置编码</span>        req.setCharacterEncoding(<span class="hljs-string">"utf-8"</span>);        <span class="hljs-comment">/*//2.获取请求参数</span><span class="hljs-comment">        String username = req.getParameter("username");</span><span class="hljs-comment">        String password = req.getParameter("password");</span><span class="hljs-comment">        //3.封装user对象</span><span class="hljs-comment">        User loginUser = new User();</span><span class="hljs-comment">        loginUser.setUsername(username);</span><span class="hljs-comment">        loginUser.setPassword(password);*/</span>        <span class="hljs-comment">//2.获取所有请求参数</span>        <span class="hljs-type">Map</span>&lt;<span class="hljs-type">String</span>, <span class="hljs-type">String</span>[]&gt; map = req.getParameterMap();        <span class="hljs-comment">//3.创建User对象</span>        <span class="hljs-type">User</span> loginUser = <span class="hljs-keyword">new</span> <span class="hljs-type">User</span>();        <span class="hljs-comment">//3-2.使用BeanUtils封装</span>        <span class="hljs-keyword">try</span> {            <span class="hljs-type">BeanUtils</span>.populate(loginUser,map);        } <span class="hljs-keyword">catch</span> (<span class="hljs-type">IllegalAccessException</span> e) {            e.printStackTrace();        } <span class="hljs-keyword">catch</span> (<span class="hljs-type">InvocationTargetException</span> e) {            e.printStackTrace();        }        <span class="hljs-comment">//4.调用UserDao的login方法</span>        <span class="hljs-type">UserDao</span> dao = <span class="hljs-keyword">new</span> <span class="hljs-type">UserDao</span>();        <span class="hljs-type">User</span> user = dao.login(loginUser); <span class="hljs-comment">//真正获取到的user</span>        <span class="hljs-comment">//5.判断user</span>        <span class="hljs-keyword">if</span>(user == <span class="hljs-literal">null</span>){            <span class="hljs-comment">//登录失败</span>            req.getRequestDispatcher(<span class="hljs-string">"/failServlet"</span>).forward(req,resp); <span class="hljs-comment">//转发</span>        }<span class="hljs-keyword">else</span>{            <span class="hljs-comment">//登录成功</span>            <span class="hljs-comment">//存储数据</span>            req.setAttribute(<span class="hljs-string">"user"</span>,user);            <span class="hljs-comment">//转发</span>            req.getRequestDispatcher(<span class="hljs-string">"/successServlet"</span>).forward(req,resp);        }    }    <span class="hljs-meta">@Override</span>    <span class="hljs-keyword">protected</span> void doPost(<span class="hljs-type">HttpServletRequest</span> req, <span class="hljs-type">HttpServletResponse</span> resp) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-keyword">this</span>.doGet(req,resp);    }}</code></pre></div><ul><li>关于BeanUtils的更多使用，看下一篇笔记<a href="https://melodyjerry.gitee.io/blog/2020/02/23/BeanUtils%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/" target="_blank" rel="noopener">《BeanUtils的基本使用》</a> 。</li></ul><hr><p>与本笔记相关的<a href="https://blog.csdn.net/java__wq/article/details/102922594" target="_blank" rel="noopener">资源</a>：</p><p>链接: <a href="https://pan.baidu.com/s/1pV1ArOotLcoH9mKYABEm5g" target="_blank" rel="noopener">https://pan.baidu.com/s/1pV1ArOotLcoH9mKYABEm5g</a> 提取码: w9h8</p><hr><h1 id="案例：验证码"><a href="#案例：验证码" class="headerlink" title="案例：验证码"></a>案例：验证码</h1><p>接着 <a href="">《JSP&amp;Cookie&amp;Session技术》</a> 的学习，<br></p><p>现在记录一份案例的学习。</p><h1 id="用户需求-1"><a href="#用户需求-1" class="headerlink" title="用户需求"></a>用户需求</h1><ol><li><p>访问带有验证码的登录页面login.jsp</p></li><li><p>用户输入用户名，密码以及验证码，</p><ul><li><p>如果用户名和密码输入有误，跳转登录页面，提示:用户名或密码错误</p></li><li><p>如果验证码输入有误，跳转登录页面，提示：验证码错误</p></li><li><p>如果全部输入正确，则跳转到主页success.jsp，显示：用户名,欢迎您</p></li></ul></li></ol><h1 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h1><ol><li><p>设置request编码</p></li><li><p>获取参数</p></li><li><p>获取生成的验证码</p></li><li><p>将用户信息封装到User对象</p></li><li><p>判断程序生成的验证码和用户输入的验证码是否一致。从session中获取程序生成的验证码</p></li><li><p>一致：再判断用户名和密码是否正确</p><ul><li>正确：<ul><li>1.登陆成功</li><li>2.存储数据到session中</li><li>3.跳转（重定向）到success.jsp </li></ul></li><li>不正确：<ul><li>1.给提示信息：用户名或密码错误</li><li>2.跳转（转发）到登录页面</li></ul></li></ul></li><li><p>不一致：</p><ul><li>1.给用户提示信息：验证码错误</li><li>2.存储提示信息到request</li><li>3.跳转（转发）到登录页面</li></ul></li><li><p>login.jsp显示错误信息，从request域中获取</p></li></ol><h1 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h1><h3 id="CheckCodeServlet-java"><a href="#CheckCodeServlet-java" class="headerlink" title="CheckCodeServlet.java"></a>CheckCodeServlet.java</h3><div class="hljs"><pre><code class="hljs reasonml">package cn.itcast.servlet;import javax.imageio.ImageIO;import javax.servlet.ServletException;import javax.servlet.annotation.WebServlet;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.awt.*;import java.awt.image.BufferedImage;import java.io.IOException;import java.util.Random;@<span class="hljs-constructor">WebServlet(<span class="hljs-string">"/checkCodeServlet"</span>)</span>public <span class="hljs-keyword">class</span> CheckCodeServlet extends HttpServlet {    protected void <span class="hljs-keyword">do</span><span class="hljs-constructor">Post(HttpServletRequest <span class="hljs-params">request</span>, HttpServletResponse <span class="hljs-params">response</span>)</span> throws ServletException, IOException {        <span class="hljs-built_in">int</span> width = <span class="hljs-number">100</span>;        <span class="hljs-built_in">int</span> height = <span class="hljs-number">50</span>;        <span class="hljs-comment">//1.创建一对象，在内存中图片(验证码图片对象)</span>        BufferedImage image = <span class="hljs-keyword">new</span> <span class="hljs-constructor">BufferedImage(<span class="hljs-params">width</span>,<span class="hljs-params">height</span>,BufferedImage.TYPE_INT_RGB)</span>;        <span class="hljs-comment">//2.美化图片</span>        <span class="hljs-comment">//2.1 填充背景色</span>        Graphics g = image.get<span class="hljs-constructor">Graphics()</span>;<span class="hljs-comment">//画笔对象</span>        g.set<span class="hljs-constructor">Color(Color.PINK)</span>;<span class="hljs-comment">//设置画笔颜色</span>        g.fill<span class="hljs-constructor">Rect(0,0,<span class="hljs-params">width</span>,<span class="hljs-params">height</span>)</span>;        <span class="hljs-comment">//2.2画边框</span>        g.set<span class="hljs-constructor">Color(Color.BLUE)</span>;        g.draw<span class="hljs-constructor">Rect(0,0,<span class="hljs-params">width</span> - 1,<span class="hljs-params">height</span> - 1)</span>;        String str = <span class="hljs-string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghigklmnopqrstuvwxyz0123456789"</span>;        <span class="hljs-comment">//生成随机角标</span>        Random ran = <span class="hljs-keyword">new</span> <span class="hljs-constructor">Random()</span>;        StringBuilder sb = <span class="hljs-keyword">new</span> <span class="hljs-constructor">StringBuilder()</span>;        for (<span class="hljs-built_in">int</span> i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">4</span>; i++) {            <span class="hljs-built_in">int</span> index = ran.next<span class="hljs-constructor">Int(<span class="hljs-params">str</span>.<span class="hljs-params">length</span>()</span>);            <span class="hljs-comment">//获取字符</span>            <span class="hljs-built_in">char</span> ch = str.<span class="hljs-built_in">char</span><span class="hljs-constructor">At(<span class="hljs-params">index</span>)</span>;<span class="hljs-comment">//随机字符</span>            sb.append(ch);            <span class="hljs-comment">//2.3写验证码</span>            g.draw<span class="hljs-constructor">String(<span class="hljs-params">ch</span>+<span class="hljs-string">""</span>,<span class="hljs-params">width</span><span class="hljs-operator">/</span>5<span class="hljs-operator">*</span><span class="hljs-params">i</span>,<span class="hljs-params">height</span><span class="hljs-operator">/</span>2)</span>;        }        String checkCode_session = sb.<span class="hljs-keyword">to</span><span class="hljs-constructor">String()</span>;        <span class="hljs-comment">//将验证码存入session</span>        request.get<span class="hljs-constructor">Session()</span>.set<span class="hljs-constructor">Attribute(<span class="hljs-string">"checkCode_session"</span>,<span class="hljs-params">checkCode_session</span>)</span>;        <span class="hljs-comment">//2.4画干扰线</span>        g.set<span class="hljs-constructor">Color(Color.GREEN)</span>;        <span class="hljs-comment">//随机生成坐标点</span>        for (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++) {            <span class="hljs-built_in">int</span> x1 = ran.next<span class="hljs-constructor">Int(<span class="hljs-params">width</span>)</span>;            <span class="hljs-built_in">int</span> x2 = ran.next<span class="hljs-constructor">Int(<span class="hljs-params">width</span>)</span>;            <span class="hljs-built_in">int</span> y1 = ran.next<span class="hljs-constructor">Int(<span class="hljs-params">height</span>)</span>;            <span class="hljs-built_in">int</span> y2 = ran.next<span class="hljs-constructor">Int(<span class="hljs-params">height</span>)</span>;            g.draw<span class="hljs-constructor">Line(<span class="hljs-params">x1</span>,<span class="hljs-params">y1</span>,<span class="hljs-params">x2</span>,<span class="hljs-params">y2</span>)</span>;        }        <span class="hljs-comment">//3.将图片输出到页面展示</span>        <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">ImageIO</span>.</span></span>write(image,<span class="hljs-string">"jpg"</span>,response.get<span class="hljs-constructor">OutputStream()</span>);    }    protected void <span class="hljs-keyword">do</span><span class="hljs-constructor">Get(HttpServletRequest <span class="hljs-params">request</span>, HttpServletResponse <span class="hljs-params">response</span>)</span> throws ServletException, IOException {        this.<span class="hljs-keyword">do</span><span class="hljs-constructor">Post(<span class="hljs-params">request</span>,<span class="hljs-params">response</span>)</span>;    }}</code></pre></div><h3 id="login-jsp"><a href="#login-jsp" class="headerlink" title="login.jsp"></a>login.jsp</h3><div class="hljs"><pre><code class="hljs vbscript-html"><span class="vbscript">&lt;%@ page contentType=<span class="hljs-string">"text/html;charset=UTF-8"</span> language=<span class="hljs-string">"java"</span> %&gt;</span><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span></span><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span></span><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>用户登录<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span></span><span class="xml">    <span class="hljs-comment">&lt;!--点击刷新验证码--&gt;</span></span><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="xml">        window.onload = function(){</span><span class="xml">            document.getElementById("img").onclick = function(){</span><span class="xml">                this.src="/day16/checkCodeServlet?time="+new Date().getTime();</span><span class="xml">            }</span><span class="xml">        }</span><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span></span><span class="xml">        div{</span><span class="xml">            color: red;</span><span class="xml">        }</span><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span></span><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span></span><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">"/day16/loginServlet"</span> <span class="hljs-attr">method</span>=<span class="hljs-string">"post"</span>&gt;</span></span><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">table</span>&gt;</span></span><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span></span><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>用户名<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span></span><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"username"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span></span><span class="xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span></span><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span></span><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>密码<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span></span><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"password"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"password"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span></span><span class="xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span></span><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span></span><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>验证码<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span></span><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"checkCode"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span></span><span class="xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span></span><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span></span><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">colspan</span>=<span class="hljs-string">"2"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"img"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"/day16/checkCodeServlet"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span></span><span class="xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span></span><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span></span><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">colspan</span>=<span class="hljs-string">"2"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"submit"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"登录"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span></span><span class="xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span></span><span class="xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span></span><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span></span><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><span class="vbscript">&lt;%=<span class="hljs-built_in">request</span>.getAttribute(<span class="hljs-string">"cc_error"</span>) == <span class="hljs-literal">null</span> ? <span class="hljs-string">""</span> : <span class="hljs-built_in">request</span>.getAttribute(<span class="hljs-string">"cc_error"</span>)%&gt;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><span class="vbscript">&lt;%=<span class="hljs-built_in">request</span>.getAttribute(<span class="hljs-string">"login_error"</span>) == <span class="hljs-literal">null</span> ? <span class="hljs-string">""</span> : <span class="hljs-built_in">request</span>.getAttribute(<span class="hljs-string">"login_error"</span>) %&gt;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><span class="xml">    </span><span class="xml">    <span class="hljs-comment">&lt;!-- 等同于 EL表达式。有信息就打印输出，没有就显示空字符串。</span></span><span class="xml">    ${requestScope.cc_error}</span><span class="xml">    ${requestScope.login.error}</span><span class="xml">    --&gt;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></span></code></pre></div><h3 id="LoginServlet-java"><a href="#LoginServlet-java" class="headerlink" title="LoginServlet.java"></a>LoginServlet.java</h3><div class="hljs"><pre><code class="hljs reasonml">package cn.itcast.servlet;import javax.servlet.ServletException;import javax.servlet.annotation.WebServlet;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;import java.io.IOException;@<span class="hljs-constructor">WebServlet(<span class="hljs-string">"/loginServlet"</span>)</span>public <span class="hljs-keyword">class</span> LoginServlet extends HttpServlet {    protected void <span class="hljs-keyword">do</span><span class="hljs-constructor">Post(HttpServletRequest <span class="hljs-params">request</span>, HttpServletResponse <span class="hljs-params">response</span>)</span> throws ServletException, IOException {        <span class="hljs-comment">//1.设置request编码</span>        request.set<span class="hljs-constructor">CharacterEncoding(<span class="hljs-string">"utf-8"</span>)</span>;        <span class="hljs-comment">//2.获取参数</span>        String username = request.get<span class="hljs-constructor">Parameter(<span class="hljs-string">"username"</span>)</span>;        String password = request.get<span class="hljs-constructor">Parameter(<span class="hljs-string">"password"</span>)</span>;        String checkCode = request.get<span class="hljs-constructor">Parameter(<span class="hljs-string">"checkCode"</span>)</span>;        <span class="hljs-comment">//3.先获取生成的验证码</span>        HttpSession session = request.get<span class="hljs-constructor">Session()</span>;        String checkCode_session = (String) session.get<span class="hljs-constructor">Attribute(<span class="hljs-string">"checkCode_session"</span>)</span>;        <span class="hljs-comment">//删除session中存储的验证码</span>        session.remove<span class="hljs-constructor">Attribute(<span class="hljs-string">"checkCode_session"</span>)</span>;        <span class="hljs-comment">//3.先判断验证码是否正确</span>        <span class="hljs-keyword">if</span>(checkCode_session!= null<span class="hljs-operator"> &amp;&amp; </span>checkCode_session.equals<span class="hljs-constructor">IgnoreCase(<span class="hljs-params">checkCode</span>)</span>){            <span class="hljs-comment">//忽略大小写比较</span>            <span class="hljs-comment">//验证码正确</span>            <span class="hljs-comment">//判断用户名和密码是否一致</span>            <span class="hljs-keyword">if</span>(<span class="hljs-string">"zhangsan"</span>.equals(username)<span class="hljs-operator"> &amp;&amp; </span><span class="hljs-string">"123"</span>.equals(password)){<span class="hljs-comment">//需要调用UserDao查询数据库</span>                <span class="hljs-comment">//登录成功</span>                <span class="hljs-comment">//存储信息，用户信息</span>                session.set<span class="hljs-constructor">Attribute(<span class="hljs-string">"user"</span>,<span class="hljs-params">username</span>)</span>;                <span class="hljs-comment">//重定向到success.jsp</span>                response.send<span class="hljs-constructor">Redirect(<span class="hljs-params">request</span>.<span class="hljs-params">getContextPath</span>()</span>+<span class="hljs-string">"/success.jsp"</span>);            }<span class="hljs-keyword">else</span>{                <span class="hljs-comment">//登录失败</span>                <span class="hljs-comment">//存储提示信息到request</span>                request.set<span class="hljs-constructor">Attribute(<span class="hljs-string">"login_error"</span>,<span class="hljs-string">"用户名或密码错误"</span>)</span>;                <span class="hljs-comment">//转发到登录页面</span>                request.get<span class="hljs-constructor">RequestDispatcher(<span class="hljs-string">"/login.jsp"</span>)</span>.forward(request,response);            }        }<span class="hljs-keyword">else</span>{            <span class="hljs-comment">//验证码不一致</span>            <span class="hljs-comment">//存储提示信息到request</span>            request.set<span class="hljs-constructor">Attribute(<span class="hljs-string">"cc_error"</span>,<span class="hljs-string">"验证码错误"</span>)</span>;            <span class="hljs-comment">//转发到登录页面</span>            request.get<span class="hljs-constructor">RequestDispatcher(<span class="hljs-string">"/login.jsp"</span>)</span>.forward(request,response);        }    }    protected void <span class="hljs-keyword">do</span><span class="hljs-constructor">Get(HttpServletRequest <span class="hljs-params">request</span>, HttpServletResponse <span class="hljs-params">response</span>)</span> throws ServletException, IOException {        this.<span class="hljs-keyword">do</span><span class="hljs-constructor">Post(<span class="hljs-params">request</span>, <span class="hljs-params">response</span>)</span>;    }}</code></pre></div><h3 id="success-jsp"><a href="#success-jsp" class="headerlink" title="success.jsp"></a>success.jsp</h3><div class="hljs"><pre><code class="hljs erb"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">%</span></span></span><span class="ruby">@ page contentType=<span class="hljs-string">"text/html;charset=UTF-8"</span> language=<span class="hljs-string">"java"</span> </span><span class="xml"><span class="hljs-tag">%&gt;</span></span><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span></span><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span></span><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>成功登录<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span></span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span></span><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span></span><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">%=</span></span></span><span class="ruby">request.getSession().getAttribute(<span class="hljs-string">"user"</span>)</span><span class="xml"><span class="hljs-tag">%&gt;</span>,欢迎您<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></span></code></pre></div><h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><p><fancybox><img src="https://s2.ax1x.com/2020/02/27/3aItBT.png" srcset="/blog/img/loading.gif" alt=""></fancybox></p><p><fancybox><img src="https://s2.ax1x.com/2020/02/27/3aIIgI.gif" srcset="/blog/img/loading.gif" alt=""></fancybox></p><h1 id="视频详解"><a href="#视频详解" class="headerlink" title="视频详解"></a>视频详解</h1><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="http://player.bilibili.com/player.html?aid=70420291&amp;cid=122006457&amp;page=189" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>JavaWeb</tag>
      
      <tag>笔记</tag>
      
      <tag>HTTP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2020.2.22随笔</title>
    <link href="/blog/2020/02/22/2020.2.22%E9%9A%8F%E7%AC%94/"/>
    <url>/blog/2020/02/22/2020.2.22%E9%9A%8F%E7%AC%94/</url>
    
    <content type="html"><![CDATA[<center><div style="position:relative;width:400px;  height:400px; overflow:auto"><img src="https://s2.ax1x.com/2020/02/23/31ttyR.png"></div></center><center>好久好久，没能有人和我聊着久，聊的这么嗨了。<br>就当做这两天的随笔吧。晚安🌙        <br>——2020.2.22</center><center><img src="https://s2.ax1x.com/2020/02/23/316ZSx.png" srcset="/blog/img/loading.gif"></center><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTTP请求信息数据-Request</title>
    <link href="/blog/2020/02/21/HTTP%E8%AF%B7%E6%B1%82%E4%BF%A1%E6%81%AF%E6%95%B0%E6%8D%AE-Request/"/>
    <url>/blog/2020/02/21/HTTP%E8%AF%B7%E6%B1%82%E4%BF%A1%E6%81%AF%E6%95%B0%E6%8D%AE-Request/</url>
    
    <content type="html"><![CDATA[<p>接着上篇博文 <a href="https://melodyjerry.gitee.io/blog/2020/02/21/HTTP%EF%BC%9A%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE/" target="_blank" rel="noopener">《HTTP：超文本传输协议》</a> 的学习。</p><p>现在，来学习两个对象：Request &amp; Response。</p><h1 id="request对象和response对象的原理"><a href="#request对象和response对象的原理" class="headerlink" title="request对象和response对象的原理"></a>request对象和response对象的原理</h1><ol><li><strong>request和response对象是由服务器创建的</strong>。接着我们来使用它们</li><li><strong>request对象是来获取请求消息，response对象是来设置响应消息</strong></li><li>其基本原理，如下图👇</li></ol><p><fancybox><img src="https://s2.ax1x.com/2020/02/21/3KFYo4.png" srcset="/blog/img/loading.gif" alt="Request&amp;Response对象基本原理"></fancybox></p><h1 id="request对象继承体系结构"><a href="#request对象继承体系结构" class="headerlink" title="request对象继承体系结构"></a>request对象继承体系结构</h1><p><strong><code>ServletRequest</code></strong> – interface，接口</p><p>↓|<em>继承</em></p><p><strong><code>HttpServletRequest</code></strong> – interface，接口</p><p>↓|<em>实现</em></p><p><strong><code>org.apache.catalina.connector.RequestFacade</code></strong> – 类，<strong>Tomcat编写的</strong></p><blockquote><p>Tomcat 是用<strong>纯Java语言编写</strong>的</p></blockquote><h1 id="request功能"><a href="#request功能" class="headerlink" title="request功能"></a>request功能</h1><ol><li>基础功能<ul><li>获取请求消息数据</li></ul></li><li>其他功能：<ul><li>1.获取请求参数通用方式</li><li>2.请求转发</li><li>3.共享数据</li><li>4.获取ServletContext</li></ul></li></ol><h2 id="获取请求消息数据"><a href="#获取请求消息数据" class="headerlink" title="获取请求消息数据"></a>获取请求消息数据</h2><ol><li>获取请求行数据</li><li>获取请求头数据</li><li>获取请求体数据</li></ol><a id="more"></a><ol start="4"><li>获取请求消息数据的字符串格式 👇</li></ol><div class="hljs"><pre><code class="hljs groovy">POST <span class="hljs-regexp">/login.htmlHTTP/</span><span class="hljs-number">1.1</span><span class="hljs-string">Host:</span> localhostUser-<span class="hljs-string">Agent:</span> Mozilla<span class="hljs-regexp">/5.0 (Windows NT 6.1; Win64; x64; rv:60.0) Gecko/</span><span class="hljs-number">20100101</span> Firefox/<span class="hljs-number">60.0</span><span class="hljs-string">Accept:</span> text<span class="hljs-regexp">/html,application/</span>xhtml+xml,application<span class="hljs-regexp">/xml;q=0.9,*/</span>*;q=<span class="hljs-number">0.8</span>Accept-<span class="hljs-string">Language:</span> zh-CN,zh;q=<span class="hljs-number">0.8</span>,zh-TW;q=<span class="hljs-number">0.7</span>,zh-HK;q=<span class="hljs-number">0.5</span>,en-US;q=<span class="hljs-number">0.3</span>,en;q=<span class="hljs-number">0.2</span>Accept-<span class="hljs-string">Encoding:</span> gzip, deflate<span class="hljs-string">Referer:</span> <span class="hljs-string">http:</span><span class="hljs-comment">//localhost/login.html</span><span class="hljs-string">Connection:</span> keep-aliveUpgrade-Insecure-<span class="hljs-string">Requests:</span> <span class="hljs-number">1</span>username=zhangsan</code></pre></div><h3 id="一-获取请求行数据"><a href="#一-获取请求行数据" class="headerlink" title="一.获取请求行数据"></a>一.获取请求行数据</h3><div class="hljs"><pre><code class="hljs http"><span class="hljs-keyword">GET</span> <span class="hljs-string"></span> /day14/demo1?name=zhangsan <span class="hljs-string"></span> HTTP/1.1</code></pre></div><p>调用方法（★★重点掌握）：</p><ol><li>获取请求方式：GET</li></ol><ul><li><code>String getMethod()</code></li></ul><ol start="2"><li>★★获取虚拟目录：/day14</li></ol><ul><li><code>String getContextPath()</code></li></ul><ol start="3"><li>获取Servlet路径：/demo1</li></ol><ul><li><code>String getServletPath()</code></li></ul><ol start="4"><li>获取get方式请求参数：name=zhangsan</li></ol><ul><li><code>String getQueryString()</code></li><li>不用这个，以后会用<strong>更高级的方式</strong></li><li>多个参数之间用<code>&amp;</code>连接</li></ul><ol start="5"><li>★★获取请求URI：/day14/demo1</li></ol><ul><li><p><code>String getRequestURI()</code>：/day14/demo1</p></li><li><p><code>StringBuffer getRequestURL()</code>：<a href="http://localhost/day14/demo1" target="_blank" rel="noopener">http://localhost/day14/demo1</a></p></li><li><blockquote><ul><li><p><font color="red">URL：统一资源定位符</font> ： <a href="http://localhost/day14/demo1" target="_blank" rel="noopener">http://localhost/day14/demo1</a>      其地位相当于”中华人民共和国”</p></li><li><p><font color="red">URI：统一资源标识符，其表示范围更大</font> ：/day14/demo1          其地位相当于”共和国”</p></li></ul></blockquote></li></ul><ol start="6"><li>获取协议及版本：HTTP/1.1</li></ol><ul><li><p><code>String getProtocol()</code></p></li><li><blockquote><p>该方法在<code>Interface ServletRequest</code>中</p></blockquote></li></ul><ol start="7"><li>获取客户机的IP地址：</li></ol><ul><li><p><code>String getRemoteAddr()</code></p></li><li><blockquote><p>该方法在<code>Interface ServletRequest</code>中</p></blockquote></li></ul><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><p>新建RequestDemo1.java，输入代码👇</p><blockquote><p> 可以在新建时候选择创建Servlet，IDEA自动生成相应模板。</p></blockquote><div class="hljs"><pre><code class="hljs reasonml">import javax.servlet.ServletException;import javax.servlet.annotation.WebServlet;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.io.IOException;<span class="hljs-comment">/**</span><span class="hljs-comment"> * 演示Request对象获取请求行数据</span><span class="hljs-comment"> */</span>@<span class="hljs-constructor">WebServlet(<span class="hljs-string">"/RequestDemo1"</span>)</span>public <span class="hljs-keyword">class</span> RequestDemo1 extends HttpServlet {    protected void <span class="hljs-keyword">do</span><span class="hljs-constructor">Post(HttpServletRequest <span class="hljs-params">request</span>, HttpServletResponse <span class="hljs-params">response</span>)</span> throws ServletException, IOException {    }    protected void <span class="hljs-keyword">do</span><span class="hljs-constructor">Get(HttpServletRequest <span class="hljs-params">request</span>, HttpServletResponse <span class="hljs-params">response</span>)</span> throws ServletException, IOException {        <span class="hljs-comment">/*</span><span class="hljs-comment">            1. 获取请求方式 ：GET</span><span class="hljs-comment">                * String getMethod()</span><span class="hljs-comment">            2. (*)获取虚拟目录：/Servlet</span><span class="hljs-comment">                * String getContextPath()</span><span class="hljs-comment">            3. 获取Servlet路径: /requestDemo1</span><span class="hljs-comment">                * String getServletPath()</span><span class="hljs-comment">            4. 获取get方式请求参数：name=zhangsan</span><span class="hljs-comment">                * String getQueryString()</span><span class="hljs-comment">            5. (*)获取请求URI：/Servlet/requestDemo1</span><span class="hljs-comment">                * String getRequestURI():/day14/requestDemo1</span><span class="hljs-comment">                * StringBuffer getRequestURL()  :http://localhost/Servlet/requestDemo1</span><span class="hljs-comment">            6. 获取协议及版本：HTTP/1.1</span><span class="hljs-comment">                * String getProtocol()</span><span class="hljs-comment"></span><span class="hljs-comment">            7. 获取客户机的IP地址：</span><span class="hljs-comment">                * String getRemoteAddr()</span><span class="hljs-comment"></span><span class="hljs-comment">         */</span>        <span class="hljs-comment">//1. 获取请求方式 ：GET</span>        String <span class="hljs-keyword">method</span> = request.get<span class="hljs-constructor">Method()</span>;        <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-keyword">method</span>);        <span class="hljs-comment">//2.(*)获取虚拟目录：/day14</span>        String contextPath = request.get<span class="hljs-constructor">ContextPath()</span>;        <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(contextPath);        <span class="hljs-comment">//3. 获取Servlet路径: /demo1</span>        String servletPath = request.get<span class="hljs-constructor">ServletPath()</span>;        <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(servletPath);        <span class="hljs-comment">//4. 获取get方式请求参数：name=zhangsan</span>        String queryString = request.get<span class="hljs-constructor">QueryString()</span>;        <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(queryString);        <span class="hljs-comment">//5.(*)获取请求URI：/day14/demo1</span>        String requestURI = request.get<span class="hljs-constructor">RequestURI()</span>;        StringBuffer requestURL = request.get<span class="hljs-constructor">RequestURL()</span>;        <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(requestURI);        <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(requestURL);        <span class="hljs-comment">//6. 获取协议及版本：HTTP/1.1</span>        String protocol = request.get<span class="hljs-constructor">Protocol()</span>;        <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(protocol);        <span class="hljs-comment">//7. 获取客户机的IP地址：</span>        String remoteAddr = request.get<span class="hljs-constructor">RemoteAddr()</span>;        <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(remoteAddr);    }}</code></pre></div><p>演示👇</p><p>浏览器访问：<a href="http://localhost/Servlet/RequestDemo1?name=zhangsan" target="_blank" rel="noopener">http://localhost/Servlet/RequestDemo1?name=zhangsan</a></p><p>IDEA控制台输出：</p><p><fancybox><img src="https://s2.ax1x.com/2020/02/21/3Kuh1e.png" srcset="/blog/img/loading.gif" alt=""></fancybox></p><h3 id="二-获取请求头数据"><a href="#二-获取请求头数据" class="headerlink" title="二.获取请求头数据"></a>二.获取请求头数据</h3><div class="hljs"><pre><code class="hljs groovy"><span class="hljs-string">Host:</span> localhostUser-<span class="hljs-string">Agent:</span> Mozilla<span class="hljs-regexp">/5.0 (Windows NT 6.1; Win64; x64; rv:60.0) Gecko/</span><span class="hljs-number">20100101</span> Firefox/<span class="hljs-number">60.0</span><span class="hljs-string">Accept:</span> text<span class="hljs-regexp">/html,application/</span>xhtml+xml,application<span class="hljs-regexp">/xml;q=0.9,*/</span>*;q=<span class="hljs-number">0.8</span>Accept-<span class="hljs-string">Language:</span> zh-CN,zh;q=<span class="hljs-number">0.8</span>,zh-TW;q=<span class="hljs-number">0.7</span>,zh-HK;q=<span class="hljs-number">0.5</span>,en-US;q=<span class="hljs-number">0.3</span>,en;q=<span class="hljs-number">0.2</span>Accept-<span class="hljs-string">Encoding:</span> gzip, deflate<span class="hljs-string">Referer:</span> <span class="hljs-string">http:</span><span class="hljs-comment">//localhost/login.html</span><span class="hljs-string">Connection:</span> keep-aliveUpgrade-Insecure-<span class="hljs-string">Requests:</span> <span class="hljs-number">1</span></code></pre></div><p>调用方法（★★重点掌握）：</p><ol><li>★★<code>String getHeader(String name)</code></li></ol><ul><li>通过请求头的名称获取请求头的值</li><li><strong>参数不分大小写，只要单词拼写的对即可</strong></li></ul><ol start="2"><li><code>Enumeration&lt;String&gt;  getHeaderNames()</code></li></ol><ul><li>获取所有的请求头名称</li><li>封装成 <code>Enumeration&lt;String&gt;</code></li></ul><blockquote><p>注意：从JDK1.0开始，该接口的功能由Iterator（迭代器）接口 <strong>复制</strong>。此外，Iterator还添加了一个可选的删除操作，并且有较短的方法名称。新的实现应该考虑使用迭代器优选于枚举。——JDK 8 文档</p></blockquote><h4 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h4><p>一、调用<code>Enumeration&lt;String&gt;  getHeaderNames()</code>，演示获取<strong>所有</strong>请求头数据</p><ol><li>新建一个Servlet，名为RequestDemo2.java</li></ol><div class="hljs"><pre><code class="hljs scala"><span class="hljs-keyword">import</span> javax.servlet.<span class="hljs-type">ServletException</span>;<span class="hljs-keyword">import</span> javax.servlet.annotation.<span class="hljs-type">WebServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletRequest</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletResponse</span>;<span class="hljs-keyword">import</span> java.io.<span class="hljs-type">IOException</span>;<span class="hljs-keyword">import</span> java.util.<span class="hljs-type">Enumeration</span>;<span class="hljs-meta">@WebServlet</span>(<span class="hljs-string">"/RequestDemo2"</span>)public <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RequestDemo2</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">HttpServlet</span> </span>{    <span class="hljs-keyword">protected</span> void doPost(<span class="hljs-type">HttpServletRequest</span> request, <span class="hljs-type">HttpServletResponse</span> response) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {    }    <span class="hljs-keyword">protected</span> void doGet(<span class="hljs-type">HttpServletRequest</span> request, <span class="hljs-type">HttpServletResponse</span> response) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-comment">// 演示获取请求头数据</span>        <span class="hljs-comment">// 1.获取所有请求头数据</span>        <span class="hljs-type">Enumeration</span>&lt;<span class="hljs-type">String</span>&gt; headerNames = request.getHeaderNames();        <span class="hljs-comment">// 2.遍历</span>        <span class="hljs-keyword">while</span>(headerNames.hasMoreElements()){            <span class="hljs-type">String</span> name = headerNames.nextElement();            <span class="hljs-comment">// 根据名称获取请求头的值</span>            <span class="hljs-type">String</span> value = request.getHeader(name);            <span class="hljs-type">System</span>.out.println(name + <span class="hljs-string">"--"</span> + value);        }    }}</code></pre></div><ol start="2"><li>浏览器访问：<a href="http://localhost/Servlet/RequestDemo2" target="_blank" rel="noopener">http://localhost/Servlet/RequestDemo2</a></li><li>IDEA控制台输出：</li></ol><p><fancybox><img src="https://s2.ax1x.com/2020/02/22/3MZuXn.png" srcset="/blog/img/loading.gif" alt=""></fancybox></p><p>二、调用<code>String getHeader(String name)</code>，user-agent、referer</p><ol><li>新建一个Servlet，名为RequestDemo3.java</li></ol><div class="hljs"><pre><code class="hljs scala"><span class="hljs-keyword">import</span> javax.servlet.<span class="hljs-type">ServletException</span>;<span class="hljs-keyword">import</span> javax.servlet.annotation.<span class="hljs-type">WebServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletRequest</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletResponse</span>;<span class="hljs-keyword">import</span> java.io.<span class="hljs-type">IOException</span>;<span class="hljs-meta">@WebServlet</span>(<span class="hljs-string">"/RequestDemo3"</span>)public <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RequestDemo3</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">HttpServlet</span> </span>{    <span class="hljs-keyword">protected</span> void doPost(<span class="hljs-type">HttpServletRequest</span> request, <span class="hljs-type">HttpServletResponse</span> response) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {    }    <span class="hljs-keyword">protected</span> void doGet(<span class="hljs-type">HttpServletRequest</span> request, <span class="hljs-type">HttpServletResponse</span> response) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-comment">// 演示获取请求头数据：user-agent(客户端版本)</span>                <span class="hljs-comment">// 获取请求头数据：user-agent</span>        <span class="hljs-type">String</span> agent = request.getHeader(<span class="hljs-string">"user-agent"</span>);        <span class="hljs-comment">// 判断agent的浏览器版本，可以解决浏览器兼容问题</span>        <span class="hljs-keyword">if</span>(agent.contains(<span class="hljs-string">"Chrome"</span>)) {            <span class="hljs-comment">// 谷歌浏览器</span>            <span class="hljs-type">System</span>.out.println(<span class="hljs-string">"谷歌来了。。。"</span>);        } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (agent.contains(<span class="hljs-string">"Firefox"</span>)) {            <span class="hljs-comment">// 火狐浏览器</span>            <span class="hljs-type">System</span>.out.println(<span class="hljs-string">"火狐来了。。。"</span>);        }            }}</code></pre></div><ol start="2"><li>浏览器访问：<a href="http://localhost/Servlet/RequestDemo3" target="_blank" rel="noopener">http://localhost/Servlet/RequestDemo3</a></li><li>IDEA控制台输出：</li></ol><p><fancybox><img src="https://s2.ax1x.com/2020/02/22/3MexsA.png" srcset="/blog/img/loading.gif" alt=""></fancybox></p><blockquote><p><strong>注意：</strong></p><p>获取请求头数据：user-agent(客户端版本)</p><p>判断agent的浏览器版本，可以<strong>解决浏览器兼容问题</strong></p></blockquote><ol start="4"><li>新建一个Servlet，名为RequestDemo4.java</li></ol><div class="hljs"><pre><code class="hljs scala"><span class="hljs-keyword">import</span> javax.servlet.<span class="hljs-type">ServletException</span>;<span class="hljs-keyword">import</span> javax.servlet.annotation.<span class="hljs-type">WebServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletRequest</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletResponse</span>;<span class="hljs-keyword">import</span> java.io.<span class="hljs-type">IOException</span>;<span class="hljs-meta">@WebServlet</span>(<span class="hljs-string">"/RequestDemo4"</span>)public <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RequestDemo4</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">HttpServlet</span> </span>{    <span class="hljs-keyword">protected</span> void doPost(<span class="hljs-type">HttpServletRequest</span> request, <span class="hljs-type">HttpServletResponse</span> response) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {    }    <span class="hljs-keyword">protected</span> void doGet(<span class="hljs-type">HttpServletRequest</span> request, <span class="hljs-type">HttpServletResponse</span> response) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-comment">// 演示请求头数据：referer</span>        <span class="hljs-type">String</span> referer = request.getHeader(<span class="hljs-string">"referer"</span>);        <span class="hljs-type">System</span>.out.println(referer); <span class="hljs-comment">// http://localhost/Servlet/login.html</span>        <span class="hljs-comment">//防盗链</span>        <span class="hljs-keyword">if</span>(referer != <span class="hljs-literal">null</span>) {            <span class="hljs-keyword">if</span>(referer.contains(<span class="hljs-string">"/Servlet"</span>)) {                <span class="hljs-comment">// 正常访问</span>                <span class="hljs-type">System</span>.out.println(<span class="hljs-string">"播放电影。。。"</span>);                <span class="hljs-comment">/* 等同于，只不过不再是输出到控制台，而是直接打印在页面上</span><span class="hljs-comment">                response.setContentType("text/html;charset=utf-8");</span><span class="hljs-comment">                response.getWriter.writer("播放电影。。。")</span><span class="hljs-comment">                */</span>            } <span class="hljs-keyword">else</span> {                <span class="hljs-comment">// 盗链</span>                <span class="hljs-type">System</span>.out.println(<span class="hljs-string">"想看电影吗？来优酷吧。。。"</span>);                <span class="hljs-comment">/* 等同于，只不过不再是输出到控制台，而是直接打印在页面上</span><span class="hljs-comment">                response.setContentType("text/html;charset=utf-8");</span><span class="hljs-comment">                response.getWriter.writer("想看电影吗？来优酷吧。。。")</span><span class="hljs-comment">                */</span>            }        }    }}</code></pre></div><ol start="5"><li>新建一个html文件，名为login.html</li></ol><div class="hljs"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE html&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">"en"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">"UTF-8"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>表单<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">"/Servlet/Demo3"</span> <span class="hljs-attr">method</span>=<span class="hljs-string">"get"</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"username"</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"submit"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"提交"</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>    <span class="hljs-comment">&lt;!--加入超链接--&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"http://localhost/Servlet/RequestDemo4"</span>&gt;</span>RequestDemo3<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre></div><ol start="6"><li>演示👉获取请求头数据：referer</li></ol><p><fancybox><img src="https://s2.ax1x.com/2020/02/22/3MKFJK.gif" srcset="/blog/img/loading.gif" alt=""></fancybox></p><ol start="7"><li>关于<strong>获取referer来防盗链</strong>，观看 <a href="https://www.bilibili.com/video/av70420291?p=131" target="_blank" rel="noopener">视频（进度条【10:56】）</a> </li></ol><h3 id="三-获取请求体数据"><a href="#三-获取请求体数据" class="headerlink" title="三.获取请求体数据"></a>三.获取请求体数据</h3><div class="hljs"><pre><code class="hljs ini"><span class="hljs-attr">username</span>=zhangsan</code></pre></div><ul><li><p>请求体：<font color="red">只有POST请求方式，才有请求体，在请求体中封装了POST请求的请求参数</font></p></li><li><p>步骤：</p><ol><li>获取流对象<ul><li>获取字符输入流：文字等字符数据</li><li>获取字节输入流：上传图片、文件等字节数据</li></ul></li><li>再从流对象中获取数据</li></ol></li></ul><p>调用方法：</p><ol><li><code>BufferedReader getReader()</code></li></ol><ul><li><p><strong>获取字符输入流</strong>，只能操作<strong>字符数据</strong></p></li><li><p>返回值是<strong>BufferedReader</strong>，<strong>高效的、带有缓冲区的</strong></p></li><li><blockquote><p>该方法在<code>Interface ServletRequest</code>中</p></blockquote></li></ul><ol start="2"><li><code>ServletInputStream getInputStream()</code></li></ol><ul><li><p><strong>获取字节输入流</strong>，可以操作<strong>所有类型数据</strong></p></li><li><p><strong>但是获取字符时不方便，更推荐用第一个调用方法</strong></p></li><li><p>返回值是<strong>ServletInputStream</strong>，<strong>继承了InputStream</strong>。</p></li><li><p>涉及到<strong>文件上传</strong>等知识</p></li><li><blockquote><p>该方法在<code>Interface ServletRequest</code>中</p></blockquote></li></ul><h4 id="示例-2"><a href="#示例-2" class="headerlink" title="示例"></a>示例</h4><ol><li>新建html文件，名为regist.html</li></ol><div class="hljs"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE html&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">"en"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">"UTF-8"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>注册页面<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">"/Servlet/RequestDemo5"</span> <span class="hljs-attr">method</span>=<span class="hljs-string">"post"</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"请输入用户名"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"username"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"请输入密码"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"password"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"submit"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"注册"</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre></div><ol start="2"><li>新建一个Servlet，名为RequestDemo5.java</li></ol><div class="hljs"><pre><code class="hljs scala"><span class="hljs-keyword">import</span> javax.servlet.<span class="hljs-type">ServletException</span>;<span class="hljs-keyword">import</span> javax.servlet.annotation.<span class="hljs-type">WebServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletRequest</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletResponse</span>;<span class="hljs-keyword">import</span> java.io.<span class="hljs-type">BufferedReader</span>;<span class="hljs-keyword">import</span> java.io.<span class="hljs-type">IOException</span>;<span class="hljs-meta">@WebServlet</span>(<span class="hljs-string">"/RequestDemo5"</span>)public <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RequestDemo5</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">HttpServlet</span> </span>{    <span class="hljs-keyword">protected</span> void doPost(<span class="hljs-type">HttpServletRequest</span> request, <span class="hljs-type">HttpServletResponse</span> response) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-comment">//获取请求消息体--请求参数</span>        <span class="hljs-comment">//1.获取字符流</span>        <span class="hljs-type">BufferedReader</span> br = request.getReader();        <span class="hljs-comment">//2.读取数据</span>        <span class="hljs-type">String</span> line = <span class="hljs-literal">null</span>;        <span class="hljs-keyword">while</span>((line = br.readLine()) != <span class="hljs-literal">null</span>){            <span class="hljs-type">System</span>.out.println(line);        }        br.close();    }    <span class="hljs-keyword">protected</span> void doGet(<span class="hljs-type">HttpServletRequest</span> request, <span class="hljs-type">HttpServletResponse</span> response) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {    }}</code></pre></div><ol start="3"><li>浏览器访问：<a href="http://localhost/Servlet/regist.html" target="_blank" rel="noopener">http://localhost/Servlet/regist.html</a></li><li>控制台输出：</li></ol><p><fancybox><img src="https://s2.ax1x.com/2020/02/22/3M47vt.gif" srcset="/blog/img/loading.gif" alt=""></fancybox></p><p><font size="4">注意：</font><strong>多个参数之间用<code>&amp;</code>连接。</strong></p><h2 id="其他功能"><a href="#其他功能" class="headerlink" title="其他功能"></a>其他功能</h2><ol><li><p>获取请求参数通用方式</p></li><li><p>请求转发</p></li><li><p>共享数据</p></li></ol><h3 id="一、获取请求参数通用方式"><a href="#一、获取请求参数通用方式" class="headerlink" title="一、获取请求参数通用方式"></a>一、获取请求参数通用方式</h3><ul><li><strong>不论GET还是POST请求方式都可以使用</strong>下列方法来获取请求参数</li><li>上述即，<code>doGet()</code> 和 <code>doPost()</code> 的方法体代码<strong>完全一样</strong></li><li>因此，<font color="red"><strong>为了简化</strong>，只需要选择在<code>doPost()</code> 的方法体中写代码，之后在<code>doGet()</code> 中<font size="6">调用</font> <strong><code>this.doPost(request,response);</code></strong></font></li></ul><p>调用方法：</p><ol><li><code>String getParameter(String name)</code></li></ol><ul><li><strong>根据参数名称获取参数值</strong>： username=zs&amp;password=123</li></ul><ol start="2"><li><code>String[] getParameterValues(String name)</code></li></ol><ul><li><strong>根据参数名称获取参数值的数组：</strong><font color="red">hobby</font>=<font color="blue">xuexi</font>&amp;<font color="red">hobby</font>=<font color="blue">game</font></li><li><strong>将键值对，按一个<font color="red">键</font>来封装<font color="blue">不同的值</font>并封装成一个<font color="green">数组</font></strong></li><li>多用于<strong>复选框</strong></li></ul><ol start="3"><li><code>Enumeration&lt;String&gt; getParameterNames()</code></li></ol><ul><li>获取<strong>所有请求的参数名称</strong></li></ul><ol start="4"><li><code>Map&lt;String,String[]&gt; getParameterMap()</code></li></ol><ul><li>获取<strong>所有参数的<font color="green">Map集合</font></strong></li></ul><h4 id="示例-3"><a href="#示例-3" class="headerlink" title="示例"></a>示例</h4><ol><li>新建regist2.html</li></ol><div class="hljs"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE html&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">"en"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">"UTF-8"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>注册页面<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">"/Servlet/RequestDemo6"</span> <span class="hljs-attr">method</span>=<span class="hljs-string">"post"</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"请输入用户名"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"username"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"请输入密码"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"password"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"checkbox"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"hobby"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"game"</span>&gt;</span>游戏        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"checkbox"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"hobby"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"study"</span>&gt;</span>学习        <span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"submit"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"注册"</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre></div><ol start="2"><li>新建RequestDemo6.java</li></ol><div class="hljs"><pre><code class="hljs dart"><span class="hljs-keyword">import</span> javax.servlet.ServletException;<span class="hljs-keyword">import</span> javax.servlet.annotation.WebServlet;<span class="hljs-keyword">import</span> javax.servlet.http.HttpServlet;<span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<span class="hljs-keyword">import</span> java.io.BufferedReader;<span class="hljs-keyword">import</span> java.io.IOException;<span class="hljs-keyword">import</span> java.util.Enumeration;<span class="hljs-keyword">import</span> java.util.<span class="hljs-built_in">Map</span>;<span class="hljs-keyword">import</span> java.util.<span class="hljs-built_in">Set</span>;<span class="hljs-meta">@WebServlet</span>(<span class="hljs-string">"/RequestDemo6"</span>)public <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RequestDemo6</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">HttpServlet</span> </span>{    protected <span class="hljs-keyword">void</span> doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {        <span class="hljs-comment">//post 获取请求参数</span>        <span class="hljs-comment">//根据参数名称获取参数值</span>        <span class="hljs-built_in">String</span> username = request.getParameter(<span class="hljs-string">"username"</span>);       <span class="hljs-comment">/* System.out.println("post");</span><span class="hljs-comment">        System.out.println(username);*/</span>       <span class="hljs-comment">//根据参数名称获取参数值的数组</span>        <span class="hljs-built_in">String</span>[] hobbies = request.getParameterValues(<span class="hljs-string">"hobby"</span>);        <span class="hljs-comment">/*for (String hobby : hobbies) {</span><span class="hljs-comment">            System.out.println(hobby);</span><span class="hljs-comment">        }*/</span>        <span class="hljs-comment">//获取所有请求的参数名称</span>        Enumeration&lt;<span class="hljs-built_in">String</span>&gt; parameterNames = request.getParameterNames();        <span class="hljs-comment">/*while(parameterNames.hasMoreElements()){</span><span class="hljs-comment">            String name = parameterNames.nextElement();</span><span class="hljs-comment">            System.out.println(name);</span><span class="hljs-comment">            String value = request.getParameter(name);</span><span class="hljs-comment">            System.out.println(value);</span><span class="hljs-comment">            System.out.println("----------------");</span><span class="hljs-comment">        }*/</span>        <span class="hljs-comment">// 获取所有参数的map集合</span>        <span class="hljs-built_in">Map</span>&lt;<span class="hljs-built_in">String</span>, <span class="hljs-built_in">String</span>[]&gt; parameterMap = request.getParameterMap();        <span class="hljs-comment">//遍历</span>        <span class="hljs-built_in">Set</span>&lt;<span class="hljs-built_in">String</span>&gt; keyset = parameterMap.keySet();        <span class="hljs-keyword">for</span> (<span class="hljs-built_in">String</span> name : keyset) {                        <span class="hljs-comment">//获取键获取值</span>            <span class="hljs-built_in">String</span>[] values = parameterMap.<span class="hljs-keyword">get</span>(name);            System.out.println(name);            <span class="hljs-keyword">for</span> (<span class="hljs-built_in">String</span> value : values) {                System.out.println(value);            }            System.out.println(<span class="hljs-string">"-----------------"</span>);        }    }    protected <span class="hljs-keyword">void</span> doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {        <span class="hljs-comment">//get 获取请求参数</span><span class="hljs-comment">/*</span><span class="hljs-comment">        //根据参数名称获取参数值</span><span class="hljs-comment">        String username = request.getParameter("username");</span><span class="hljs-comment">        System.out.println("get");</span><span class="hljs-comment">        System.out.println(username);*/</span>        <span class="hljs-keyword">this</span>.doPost(request,response);    }}</code></pre></div><ol start="3"><li><p>浏览器访问：<a href="http://localhost/Servlet/regist2.html" target="_blank" rel="noopener">http://localhost/Servlet/regist2.html</a></p></li><li><p>控制台输出：</p></li></ol><p><fancybox><img src="https://i.loli.net/2020/02/22/PxLIrbjO5yZTJUQ.gif" srcset="/blog/img/loading.gif" alt=""></fancybox></p><h4 id="中文乱码问题"><a href="#中文乱码问题" class="headerlink" title="中文乱码问题"></a>中文乱码问题</h4><ol><li>GET方式：tomcat 8 已经将 GET方式乱码问题解决了</li><li>POST方式：会乱码</li></ol><ul><li>解决：<strong>在获取参数前，设置request的编码<code>request.setCharacterEncoding("utf-8");</code></strong> 。对应着html页面的编码。</li></ul><h3 id="二、请求转发"><a href="#二、请求转发" class="headerlink" title="二、请求转发"></a>二、请求转发</h3><ul><li>一种在服务器内部的资源跳转方式</li></ul><p><fancybox><img src="https://s2.ax1x.com/2020/02/22/3Qp110.png" srcset="/blog/img/loading.gif" alt=""></fancybox></p><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><ol><li><p>浏览器地址栏路径<strong>不发生变化</strong></p></li><li><p><strong>只能转发到当前服务器内部资源中</strong></p></li><li><p>转发就是<strong>一次请求</strong>。像上图的AServlet和BServlet两种资源使用的是同一次请求。</p></li></ol><h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><ol><li>通过<strong>request对象</strong>获取<strong>请求转发器对象</strong></li></ol><ul><li><code>RequestDispatcher getRequestDispatcher(String path)</code></li></ul><ol start="2"><li>使用<strong>RequestDispatcher对象</strong>来进行转发</li></ol><ul><li><code>forward(ServletRequest request, ServletResponse response)</code></li></ul><h4 id="示例-4"><a href="#示例-4" class="headerlink" title="示例"></a>示例</h4><ol><li>新建RequestDemo8.java</li></ol><div class="hljs"><pre><code class="hljs scala"><span class="hljs-keyword">import</span> javax.servlet.<span class="hljs-type">RequestDispatcher</span>;<span class="hljs-keyword">import</span> javax.servlet.<span class="hljs-type">ServletException</span>;<span class="hljs-keyword">import</span> javax.servlet.annotation.<span class="hljs-type">WebServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletRequest</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletResponse</span>;<span class="hljs-keyword">import</span> java.io.<span class="hljs-type">IOException</span>;<span class="hljs-meta">@WebServlet</span>(<span class="hljs-string">"/RequestDemo8"</span>)public <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RequestDemo8</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">HttpServlet</span> </span>{    <span class="hljs-keyword">protected</span> void doPost(<span class="hljs-type">HttpServletRequest</span> request, <span class="hljs-type">HttpServletResponse</span> response) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-type">System</span>.out.println(<span class="hljs-string">"Demo8888被访问了。。。"</span>);        <span class="hljs-comment">//转发到Demo9资源</span>        <span class="hljs-comment">/*</span><span class="hljs-comment">        RequestDispatcher requestDispatcher = request.getRequestDispatcher("/RequestDemo9");</span><span class="hljs-comment">        requestDispatcher.forward(request,response);</span><span class="hljs-comment">        // 一般不这么写，直接写成：</span><span class="hljs-comment">        request.getRequestDispatcher("/RequestDemo9").forward(request,response);</span><span class="hljs-comment">        */</span>        <span class="hljs-comment">//存储数据到request域中</span>        request.setAttribute(<span class="hljs-string">"msg"</span>,<span class="hljs-string">"hello"</span>);        request.getRequestDispatcher(<span class="hljs-string">"/RequestDemo9"</span>).forward(request,response);       <span class="hljs-comment">//没法跳转到外部资源，比如下面这个是不行的</span><span class="hljs-comment">//request.getRequestDispatcher("http://www.itcast.cn").forward(request,response);</span>    }    <span class="hljs-keyword">protected</span> void doGet(<span class="hljs-type">HttpServletRequest</span> request, <span class="hljs-type">HttpServletResponse</span> response) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-keyword">this</span>.doPost(request,response);    }}</code></pre></div><ol start="2"><li>新建RequestDemo9.java</li></ol><div class="hljs"><pre><code class="hljs scala"><span class="hljs-keyword">import</span> javax.servlet.<span class="hljs-type">ServletException</span>;<span class="hljs-keyword">import</span> javax.servlet.annotation.<span class="hljs-type">WebServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletRequest</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletResponse</span>;<span class="hljs-keyword">import</span> java.io.<span class="hljs-type">IOException</span>;<span class="hljs-meta">@WebServlet</span>(<span class="hljs-string">"/RequestDemo9"</span>)public <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RequestDemo9</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">HttpServlet</span> </span>{    <span class="hljs-keyword">protected</span> void doPost(<span class="hljs-type">HttpServletRequest</span> request, <span class="hljs-type">HttpServletResponse</span> response) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-comment">//获取数据</span>        <span class="hljs-type">Object</span> msg = request.getAttribute(<span class="hljs-string">"msg"</span>);        <span class="hljs-type">System</span>.out.println(msg);        <span class="hljs-type">System</span>.out.println(<span class="hljs-string">"Demo9999也被访问了。。。"</span>);    }    <span class="hljs-keyword">protected</span> void doGet(<span class="hljs-type">HttpServletRequest</span> request, <span class="hljs-type">HttpServletResponse</span> response) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-keyword">this</span>.doPost(request,response);    }}</code></pre></div><ol start="3"><li>浏览器访问：<a href="http://localhost/Servlet/RequestDemo8" target="_blank" rel="noopener">http://localhost/Servlet/RequestDemo8</a></li><li>控制台输出：</li></ol><p><fancybox><img src="https://s2.ax1x.com/2020/02/22/3QZ4oV.gif" srcset="/blog/img/loading.gif" alt=""></fancybox></p><h3 id="三、共享数据"><a href="#三、共享数据" class="headerlink" title="三、共享数据"></a>三、共享数据</h3><ul><li><strong>域对象</strong>：一个有作用范围的对象，可以在范围内共享数据</li><li><strong>request域</strong>：代表一次请求的范围，一般用于请求转发的多个资源中共享数据</li></ul><p>调用方法：</p><ol><li><code>void setAttribute(String name,Object obj)</code></li></ol><ul><li><strong>存储数据</strong></li></ul><ol start="2"><li><code>Object getAttitude(String n</code></li><li><code>ame)</code></li></ol><ul><li>通过<strong>键</strong><font color="red">获取</font><strong>值</strong></li></ul><ol start="3"><li><code>void removeAttribute(String name)</code></li></ol><ul><li>通过<strong>键</strong><font color="red">移除</font><strong>键值对</strong></li></ul><blockquote><p>👉<a href="https://www.bilibili.com/video/av70420291?p=137" target="_blank" rel="noopener">视频</a> 的【03:15】，详细说到 <strong>如何共享数据</strong>。</p></blockquote><h4 id="示例-5"><a href="#示例-5" class="headerlink" title="示例"></a>示例</h4><p>示例放在 __ <strong>请求转发 的示例</strong> __ 中。</p><p>详细见代码文件中的两个注释：</p><p>RequestDemo8的【// 存储数据到request域中】</p><p>RequestDemo9的【// 获取数据】</p><p><fancybox><img src="https://s2.ax1x.com/2020/02/22/3QYP4H.png" srcset="/blog/img/loading.gif" alt=""></fancybox></p><h3 id="四、获取ServletContext"><a href="#四、获取ServletContext" class="headerlink" title="四、获取ServletContext"></a>四、获取ServletContext</h3><p>调用方法：</p><ul><li><code>ServletContext getServletContext()</code></li></ul><h4 id="示例-6"><a href="#示例-6" class="headerlink" title="示例"></a>示例</h4><ol><li>新建RequestDemo10.java</li></ol><div class="hljs"><pre><code class="hljs scala"><span class="hljs-keyword">import</span> javax.servlet.<span class="hljs-type">ServletContext</span>;<span class="hljs-keyword">import</span> javax.servlet.<span class="hljs-type">ServletException</span>;<span class="hljs-keyword">import</span> javax.servlet.annotation.<span class="hljs-type">WebServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletRequest</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletResponse</span>;<span class="hljs-keyword">import</span> java.io.<span class="hljs-type">IOException</span>;<span class="hljs-meta">@WebServlet</span>(<span class="hljs-string">"/RequestDemo10"</span>)public <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RequestDemo10</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">HttpServlet</span> </span>{    <span class="hljs-keyword">protected</span> void doPost(<span class="hljs-type">HttpServletRequest</span> request, <span class="hljs-type">HttpServletResponse</span> response) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-type">ServletContext</span> servletContext = request.getServletContext();        <span class="hljs-type">System</span>.out.println(servletContext);    }    <span class="hljs-keyword">protected</span> void doGet(<span class="hljs-type">HttpServletRequest</span> request, <span class="hljs-type">HttpServletResponse</span> response) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-keyword">this</span>.doPost(request,response);    }}</code></pre></div><ol start="2"><li>浏览器访问：<a href="http://localhost/Servlet/RequestDemo10" target="_blank" rel="noopener">http://localhost/Servlet/RequestDemo10</a></li><li>控制台输出：</li></ol><p><fancybox><img src="https://s2.ax1x.com/2020/02/22/3QYqZ8.png" srcset="/blog/img/loading.gif" alt=""></fancybox></p><hr><p>下篇博客 <a href="https://melodyjerry.gitee.io/blog/2020/02/22/HTTP%E5%93%8D%E5%BA%94%E4%BF%A1%E6%81%AF%E6%95%B0%E6%8D%AE-Response/" target="_blank" rel="noopener">《HTTP响应信息数据 - Response》</a> 中，详细学习<strong>响应信息数据 - Response</strong>。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>JavaWeb</tag>
      
      <tag>笔记</tag>
      
      <tag>HTTP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTTP：超文本传输协议</title>
    <link href="/blog/2020/02/21/HTTP%EF%BC%9A%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE/"/>
    <url>/blog/2020/02/21/HTTP%EF%BC%9A%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><ul><li>HTTP == <strong>H</strong>yper <strong>T</strong>ext <strong>T</strong>ransfer <strong>P</strong>rotocol</li><li><strong>超文本传输协议</strong></li></ul><blockquote><p><font color="blue">传输协议：定义了<strong>客户端和服务器端通信时，发送数据的格式</strong>。</font></p></blockquote><p><fancybox><img src="https://s2.ax1x.com/2020/02/21/3uIs6P.png" srcset="/blog/img/loading.gif" alt=""></fancybox></p><h1 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h1><ol><li><p>基于<strong>TCP/IP</strong>的高级协议</p></li><li><p><strong>默认端口号:80</strong></p></li><li><p>基于请求/响应模型的：<strong>一次请求对应一次响应</strong></p></li><li><p>无状态的：<strong>每次请求之间相互独立，不能交互数据</strong></p></li><li><p>网页中每一个文件都是一次单独的请求，几张图片，就是几次请求。如下图所示。</p></li></ol><p><fancybox><img src="https://s2.ax1x.com/2020/02/21/3uIZLT.png" srcset="/blog/img/loading.gif" alt="每一个文件都是一次单独的请求"></fancybox></p><a id="more"></a><h1 id="历史版本"><a href="#历史版本" class="headerlink" title="历史版本"></a>历史版本</h1><h2 id="http-0-9"><a href="#http-0-9" class="headerlink" title="http 0.9"></a>http 0.9</h2><ul><li>只有一个命令GET</li><li>没有HEADER等描述数据的信息</li><li>服务器发送完毕，就关闭TCP连接</li><li><strong>每一次请求响应都会建立新的连接</strong></li></ul><h2 id="http-1-0"><a href="#http-1-0" class="headerlink" title="http 1.0"></a>http 1.0</h2><ul><li>增加了很多命令，如status code和header</li><li>多字符集支持、多部分发送、权限、缓存等</li></ul><h2 id="http-1-1"><a href="#http-1-1" class="headerlink" title="http 1.1"></a>http 1.1</h2><ul><li>持久连接：<strong>keep-alive</strong></li><li><strong>复用连接</strong>（较http1.0的每一次请求响应都会建立新的连接。<strong>好处：节约了连接的资源，提升了传输的速度。</strong>）</li><li>提高性能的关键是<strong>低延迟</strong>而不是高带宽。</li><li>较http1.0，<strong>对缓存的支持更好</strong></li></ul><blockquote><p>推送：主动发送js、css推送到浏览器。</p><p>二进制流：可以并行发送数据。</p></blockquote><h2 id="http-2-0"><a href="#http-2-0" class="headerlink" title="http 2.0"></a>http 2.0</h2><ul><li>所有数据以二进制传输</li><li>同一个连接里面发送多个请求不再需要按顺序来</li><li>头消息压缩以及推送等提高效率的功能</li><li>所有的请求共用一个连接，可以更有效的使用tcp连接，通过<strong>带宽</strong>来提升http性能</li><li>可以减少服务链接的压力，内存减少了，链接吞吐量大了</li><li><strong>解决浏览器连接数有限的问题</strong></li><li><strong>资源合并减少请求</strong>的优化手段在http2.0来说是<strong>没有效果</strong>的</li></ul><h1 id="请求信息数据-格式"><a href="#请求信息数据-格式" class="headerlink" title="请求信息数据   格式"></a>请求信息数据   格式</h1><ul><li><code>Servlet</code>类中<code>service()</code>方法的参数<code>ServletRequest</code></li><li>字符串格式，比如：</li></ul><div class="hljs"><pre><code class="hljs groovy">POST <span class="hljs-regexp">/login.htmlHTTP/</span><span class="hljs-number">1.1</span><span class="hljs-string">Host:</span> localhostUser-<span class="hljs-string">Agent:</span> Mozilla<span class="hljs-regexp">/5.0 (Windows NT 6.1; Win64; x64; rv:60.0) Gecko/</span><span class="hljs-number">20100101</span> Firefox/<span class="hljs-number">60.0</span><span class="hljs-string">Accept:</span> text<span class="hljs-regexp">/html,application/</span>xhtml+xml,application<span class="hljs-regexp">/xml;q=0.9,*/</span>*;q=<span class="hljs-number">0.8</span>Accept-<span class="hljs-string">Language:</span> zh-CN,zh;q=<span class="hljs-number">0.8</span>,zh-TW;q=<span class="hljs-number">0.7</span>,zh-HK;q=<span class="hljs-number">0.5</span>,en-US;q=<span class="hljs-number">0.3</span>,en;q=<span class="hljs-number">0.2</span>Accept-<span class="hljs-string">Encoding:</span> gzip, deflate<span class="hljs-string">Referer:</span> <span class="hljs-string">http:</span><span class="hljs-comment">//localhost/login.html</span><span class="hljs-string">Connection:</span> keep-aliveUpgrade-Insecure-<span class="hljs-string">Requests:</span> <span class="hljs-number">1</span>  username=zhangsan</code></pre></div><p>以下关于 <font color="blue">请求信息数据格式</font> 的内容有缺省，详细见下一篇博客 <a href="https://melodyjerry.gitee.io/blog/2020/02/21/HTTP%E8%AF%B7%E6%B1%82%E4%BF%A1%E6%81%AF%E6%95%B0%E6%8D%AE-Request%20-%20%E5%89%AF%E6%9C%AC/" target="_blank" rel="noopener">《HTTP请求信息数据 - Request》</a> 中。</p><h2 id="请求行"><a href="#请求行" class="headerlink" title="请求行"></a>请求行</h2><ul><li>格式：<code>请求方式  请求url  请求协议/版本</code></li></ul><h3 id="请求方式"><a href="#请求方式" class="headerlink" title="请求方式"></a>请求方式</h3><ul><li>HTTP协议有7种请求协议，常用的有GET、POST两种</li><li><font color="orange">GET</font></li></ul><ol><li>请求参数在请求行中，<strong>在url后</strong></li><li>请求的url长度<strong>有限制的</strong></li><li>不太安全（参数跟在url之后）</li><li>浏览器控制台显示👇</li></ol><p><fancybox><img src="https://s2.ax1x.com/2020/02/21/3ubYIU.png" srcset="/blog/img/loading.gif" alt=""></fancybox></p><ul><li><font color="orange">POST</font></li></ul><ol><li>请求参数<strong>在请求体中</strong></li><li>请求的url长度<strong>没有限制的</strong></li><li>相对安全（参数在请求体中）</li><li>浏览器控制台显示👇</li></ol><p><fancybox><img src="https://s2.ax1x.com/2020/02/21/3ub6IO.png" srcset="/blog/img/loading.gif" alt=""></fancybox></p><h3 id="请求url"><a href="#请求url" class="headerlink" title="请求url"></a>请求url</h3><ul><li>假设为 /login.html</li></ul><h3 id="请求协议-版本"><a href="#请求协议-版本" class="headerlink" title="请求协议/版本"></a>请求协议/版本</h3><ul><li>HTTP/1.1</li></ul><h2 id="请求头"><a href="#请求头" class="headerlink" title="请求头"></a>请求头</h2><ul><li><strong>客户端浏览器告诉服务器一些信息</strong></li><li>格式：<code>请求头名称 : 请求头值</code></li><li>若有多个，则<strong>一行一个</strong>。</li></ul><h3 id="常见的请求头"><a href="#常见的请求头" class="headerlink" title="常见的请求头"></a>常见的请求头</h3><ul><li><p>Host</p></li><li><p>User-Agent</p></li><li><p>Referer</p></li></ul><h4 id="Host"><a href="#Host" class="headerlink" title="Host"></a>Host</h4><ul><li>请求的主机地址</li></ul><h4 id="User-Agent"><a href="#User-Agent" class="headerlink" title="User-Agent"></a>User-Agent</h4><ul><li>浏览器告诉服务器，我访问你时候使用的<strong>浏览器版本信息</strong></li><li>作用：可以在服务器端获取该头的信息，<strong>解决浏览器的兼容性问题</strong></li></ul><h4 id="Referer"><a href="#Referer" class="headerlink" title="Referer"></a>Referer</h4><ul><li>比如上面几张图片的Referer是 <a href="http://localhost/login.html" target="_blank" rel="noopener">http://localhost/login.html</a></li><li>告诉服务器，我（当前请求）从哪里来？</li><li>作用：<strong>防盗链、统计工作</strong></li><li>举个例子：我的网站想播放《战狼2》电影👇</li></ul><p><fancybox><img src="https://s2.ax1x.com/2020/02/21/3ujWr9.png" srcset="/blog/img/loading.gif" alt="Referer请求头"></fancybox></p><h4 id="Connection"><a href="#Connection" class="headerlink" title="Connection"></a>Connection</h4><ul><li><strong>keep-alive</strong></li><li>http1.1，表示该<strong>链接可以被复用</strong></li></ul><h2 id="请求空行"><a href="#请求空行" class="headerlink" title="请求空行"></a>请求空行</h2><ul><li>就是一个<strong>空行</strong>（空白行）</li><li>作用：<strong>分割POST请求的请求头和请求体</strong></li></ul><h2 id="请求体-请求正文"><a href="#请求体-请求正文" class="headerlink" title="请求体/请求正文"></a>请求体/请求正文</h2><ul><li><strong>封装</strong>POST请求信息的请求参数</li></ul><p><br>下一篇博客 <a href="https://melodyjerry.gitee.io/blog/2020/02/21/HTTP%E8%AF%B7%E6%B1%82%E4%BF%A1%E6%81%AF%E6%95%B0%E6%8D%AE-Request/" target="_blank" rel="noopener">《HTTP请求信息数据 - Request》</a> 中，详细学习了 <strong>请求信息数据 - Request</strong>。</p><h1 id="响应信息数据-格式"><a href="#响应信息数据-格式" class="headerlink" title="响应信息数据   格式"></a>响应信息数据   格式</h1><ul><li><p><code>Servlet</code>类中<code>service()</code>方法的参数<code>ServletResponse</code></p></li><li><p>字符串数据，比如：</p></li></ul><div class="hljs"><pre><code class="hljs angelscript">HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OKContent-Type: text/html;charset=UTF<span class="hljs-number">-8</span>Content-Length: <span class="hljs-number">101</span>Date: Wed, <span class="hljs-number">06</span> Jun <span class="hljs-number">2018</span> <span class="hljs-number">07</span>:<span class="hljs-number">08</span>:<span class="hljs-number">42</span> GMT&lt;html&gt;    &lt;head&gt;        &lt;title&gt;$Title$&lt;/title&gt;    &lt;/head&gt;    &lt;body&gt;        hello , response    &lt;/body&gt;&lt;/html&gt;</code></pre></div><h2 id="响应行"><a href="#响应行" class="headerlink" title="响应行"></a>响应行</h2><ul><li>格式：<code>协议/版本 响应状态码 状态码描述</code></li></ul><h3 id="响应状态码"><a href="#响应状态码" class="headerlink" title="响应状态码"></a>响应状态码</h3><ul><li>服务器告诉客户端浏览器本次请求和响应的一个状态。</li></ul><h4 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h4><ul><li>状态码都是3位数字</li></ul><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><ol><li>1xx：服务器就收客户端消息，但没有接受完成，等待一段时间后，发送1xx状态码</li><li>2xx：成功。代表：<ul><li><strong>200</strong></li></ul></li><li>3xx：重定向。代表：<ul><li><strong>302</strong>：重定向</li><li><strong>304</strong>：访问缓存</li></ul></li><li>4xx：客户端错误。代表：<ul><li><strong>403</strong>：错误是一种在网站访问过程中，常见的错误提示，表示资源不可用。服务器理解客户的请求，但拒绝处理它，通常由于服务器上文件或目录的权限设置导致的WEB访问错误。   </li><li><strong>404</strong>：请求路径没有对应的资源</li><li><strong>405</strong>：请求方式没有对应的doXxx方法</li></ul></li><li>5xx：服务器端错误。代表：<strong>500</strong>(服务器内部出现异常)</li></ol><p><fancybox><img src="https://s2.ax1x.com/2020/02/23/31vKu8.png" srcset="/blog/img/loading.gif" alt=""></fancybox></p><h2 id="响应头"><a href="#响应头" class="headerlink" title="响应头"></a>响应头</h2><ul><li>格式：<code>响应头名称 ：值</code></li></ul><h3 id="常见的响应头"><a href="#常见的响应头" class="headerlink" title="常见的响应头"></a>常见的响应头</h3><ul><li>Content-Type</li><li>Content-disposition</li></ul><h4 id="Content-Type"><a href="#Content-Type" class="headerlink" title="Content-Type"></a>Content-Type</h4><ul><li>服务器告诉客户端<strong>本次响应体数据格式以及编码格式</strong></li></ul><h4 id="Content-disposition"><a href="#Content-disposition" class="headerlink" title="Content-disposition"></a>Content-disposition</h4><ul><li><p>服务器告诉客户端<strong>以什么格式打开响应体数据</strong></p></li><li><p>其值：</p></li><li><p>in-line：<strong>默认值，在当前页面内打开</strong></p></li><li><p>attachment;filename=xxx：<strong>以附件形式打开响应体</strong>。涉及<strong>文件下载</strong>等功能。</p></li></ul><h2 id="响应空行"><a href="#响应空行" class="headerlink" title="响应空行"></a>响应空行</h2><ul><li>就是一个<strong>空行</strong>（空白行）</li><li>作用：<strong>分割响应头和响应体</strong></li></ul><h2 id="响应体"><a href="#响应体" class="headerlink" title="响应体"></a>响应体</h2><ul><li>传输的数据</li><li>文件、HTML网页源码等等。比如，</li></ul><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>$Title$<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>        hello , response    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre></div><br><p>下下篇博客 <a href="https://melodyjerry.gitee.io/blog/2020/02/22/HTTP%E5%93%8D%E5%BA%94%E4%BF%A1%E6%81%AF%E6%95%B0%E6%8D%AE-Response/" target="_blank" rel="noopener">《HTTP响应信息数据 - Response》</a> 中，详细学习<strong>响应信息数据 - Response</strong>。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>JavaWeb</tag>
      
      <tag>笔记</tag>
      
      <tag>HTTP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo s浏览博客时，提示4000端口问题</title>
    <link href="/blog/2020/02/21/hexo%20s%E6%B5%8F%E8%A7%88%E5%8D%9A%E5%AE%A2%E6%97%B6%EF%BC%8C%E6%8F%90%E7%A4%BA4000%E7%AB%AF%E5%8F%A3%E9%97%AE%E9%A2%98/"/>
    <url>/blog/2020/02/21/hexo%20s%E6%B5%8F%E8%A7%88%E5%8D%9A%E5%AE%A2%E6%97%B6%EF%BC%8C%E6%8F%90%E7%A4%BA4000%E7%AB%AF%E5%8F%A3%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>记录一次使用Hexo来，第一次遇到的问题。</p><p>讲真我也不知道为什么我的4000端口会被占用，我只是如常一样地使用Hexo而已。</p><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>hexo s浏览博客时，提示4000端口问题。代码提示如下：</p><div class="hljs"><pre><code class="hljs routeros">$ hexo serverFATAL<span class="hljs-built_in"> Port </span>4000 has been used. Try other<span class="hljs-built_in"> port </span>instead.FATAL Something<span class="hljs-string">'s wrong. Maybe you can find the solution here: http://hexo.io/do</span><span class="hljs-string">Error: listen EADDRINUSE 0.0.0.0:4000</span><span class="hljs-string">    at Object.exports._errnoException (util.js:1026:11)</span><span class="hljs-string">    at exports._exceptionWithHostPort (util.js:1049:20)</span><span class="hljs-string">    at Server._listen2 (net.js:1257:14)</span><span class="hljs-string">    at listen (net.js:1293:10)</span><span class="hljs-string">    at net.js:1403:9</span><span class="hljs-string">    at _combinedTickCallback (internal/process/next_tick.js:77:11)</span><span class="hljs-string">    at process._tickCallback (internal/process/next_tick.js:98:9)</span><span class="hljs-string">FATAL listen EADDRINUSE 0.0.0.0:4000</span><span class="hljs-string">Error: listen EADDRINUSE 0.0.0.0:4000</span><span class="hljs-string">    at Object.exports._errnoException (util.js:1026:11)</span><span class="hljs-string">    at exports._exceptionWithHostPort (util.js:1049:20)</span><span class="hljs-string">    at Server._listen2 (net.js:1257:14)</span><span class="hljs-string">    at listen (net.js:1293:10)</span><span class="hljs-string">    at net.js:1403:9</span><span class="hljs-string">    at _combinedTickCallback (internal/process/next_tick.js:77:11)</span><span class="hljs-string">    at process._tickCallback (internal/process/next_tick.js:98:9)</span></code></pre></div><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>可以在站点下的文件<code>_config.yml</code>内加上如下代码更改hexo-server运行时的端口号：</p><div class="hljs"><pre><code class="hljs yaml"><span class="hljs-attr">server:</span>  <span class="hljs-attr">port:</span> <span class="hljs-number">40401</span>  <span class="hljs-attr">compress:</span> <span class="hljs-literal">true</span>  <span class="hljs-attr">header:</span> <span class="hljs-literal">true</span></code></pre></div><p>其中<code>40401</code>可以换成想要运行的端口号。</p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>将本地文件传到阿里云服务器</title>
    <link href="/blog/2020/02/21/%E5%B0%86%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E4%BC%A0%E5%88%B0%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <url>/blog/2020/02/21/%E5%B0%86%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E4%BC%A0%E5%88%B0%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>怎么将本地文件传到阿里云服务器里面？</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><ol><li>第一种：在阿里云服务器里建一个FTP服务商，在本地用FTP客户端上传文件</li><li>第二种：进阿里云服务器远程界面的时候，把本地磁盘带进去，然后进服务器里直接从本地磁盘里把文件复制到服务器里</li><li>第三种：QQ安装到阿里云服务器里，用QQ对传</li><li>第四种：把本地文件上传到邮箱里 ，然后进阿里云服务器里打开您的邮箱，进去下载文件即可</li></ol><p>链接：<a href="https://www.w3cschool.cn/intellij_idea_doc/" target="_blank" rel="noopener">https://www.w3cschool.cn/intellij_idea_doc/</a></p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>云服务器</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Servlet 体系结构</title>
    <link href="/blog/2020/02/20/Servlet%20%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/"/>
    <url>/blog/2020/02/20/Servlet%20%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/</url>
    
    <content type="html"><![CDATA[<p>我们在写一个class 并 implement Servlet时，需要重写Servlet中的5个方法，但是<strong>大多时候都只用到 service 方法</strong>。</p><p>虽然中用到service方法，但其余的4个方法还得重写。</p><p>那我们能不能编写一个class，去继承或实现 Servlet 后，只用定义一个 service 方法就可以了。其他方法想有就有，不想有就没有？</p><p>这时候我们就要聊聊 Servlet 体系结构了。</p><h1 id="Servlet-体系结构"><a href="#Servlet-体系结构" class="headerlink" title="Servlet 体系结构"></a>Servlet 体系结构</h1><p><strong><code>Servlet</code></strong> – interface，接口</p><p>↓|<em>实现</em></p><p><strong><code>GenericServlet</code></strong> – 实现类，抽象类</p><p>↓|<em>继承</em></p><p><strong><code>HttpServlet</code></strong> – 实现类，抽象类</p><blockquote><p>做项目时，创建Servlet时候，推荐使用第三种方式：👉继承HttpServlet👉定义类继承HttpServlet👉 复写doGet/doPost方法</p></blockquote><a id="more"></a><h1 id="GenericServlet"><a href="#GenericServlet" class="headerlink" title="GenericServlet"></a>GenericServlet</h1><ul><li>将 <code>Servlet</code> 接口中的<strong>其他方法做了默认空实现</strong>，<strong>只将 <code>service()</code> 方法作为抽象</strong></li><li>将来定义 <code>Servlet</code> 类时候，可以继承 <code>GenericServlet</code>，实现 <code>service()</code> 方法即可</li><li><em>其余四种方法， 若有需要，手动重写即可。</em></li></ul><div class="hljs"><pre><code class="hljs scala"><span class="hljs-meta">@WebServlet</span>(<span class="hljs-string">"/demo2"</span>)public <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ServletDemo2</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">GenericServlet</span> </span>{    <span class="hljs-meta">@Override</span>    public void service(<span class="hljs-type">ServletRequest</span> servletRequest, <span class="hljs-type">ServletResponse</span> servletResponse) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-type">System</span>.out.println(<span class="hljs-string">"demo2...."</span>);    }    }</code></pre></div><h1 id="HttpServlet"><a href="#HttpServlet" class="headerlink" title="HttpServlet"></a>HttpServlet</h1><ul><li>该抽象类是<strong>对 HTTP协议 的封装和描述</strong>，可以<strong>简化某些操作</strong></li><li><strong>HTTP协议 有 7种 请求方式。</strong>现在，我们假设只是用<strong>最常用的两种请求方式GET和POST</strong>这两种请求方式。</li><li><code>service()</code>方法中  <em>最先要干</em>  的其中2件事👇</li></ul><p><fancybox><img src="https://s2.ax1x.com/2020/02/20/3mYEiq.png" srcset="/blog/img/loading.gif" alt="service()方法要干的其中2件事"><fancybox></fancybox></fancybox></p><ul><li>将来不管怎么样，都得做这么一件事：<strong>“先判断请求方式👉判断完后，要通过不同的请求方式，做出不同的代码逻辑“。</strong></li><li>那么，这个过程是非常麻烦的。</li><li>同时，这个过程也是<strong>所有 <code>service()</code> 都该做的一个过程。</strong></li><li>所以这个时候，官方针对这个过程，专门提供了一个class <code>HttpServlet</code>。</li><li><code>HttpServlet</code> 已经帮程序员做好了这个过程，<strong>写好了相应的代码，就如上图的红色字体部分</strong>。集程序员不再需要去判断请求方式了。</li><li><code>HttpServlet</code> 内部定义了 <code>doGet(){}</code> 和  <code>doPost(){}</code> 这两个方法。并且在判断请求方式的 <code>if</code> 中调用了这两个方法。</li><li>这就是其基本的定义原理。就如下图👇</li></ul><p><fancybox><img src="https://s2.ax1x.com/2020/02/20/3mNOo9.png" srcset="/blog/img/loading.gif" alt="HttpServlet类"></fancybox></p><ul><li><p>若将来想要<strong>屏蔽这种GET或POST请求方式的处理逻辑</strong>：我们可以<strong>继承 HttpServlet，并且去重写 <code>doGet(){}</code> 和 <code>doPost(){}</code>这两个方法。</strong></p></li><li><p>因为将来都是<strong>调用 <code>service()</code>方法</strong> ，并且 <code>service()</code>会做一个<strong>方法分发</strong>：你是<strong>get</strong>就调用 <strong><code>doGet()</code></strong> ，你是<strong>post</strong>就调用 <strong><code>doPost()</code></strong> 。</p></li><li><blockquote><p>做项目时，创建Servlet时候，推荐使用第三种方式：👉继承HttpServlet👉定义类继承HttpServlet👉 复写doGet/doPost方法</p></blockquote></li></ul><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li>定义 class <strong>继承 <code>HttpServlet</code></strong></li><li><strong>重写<code>doGet()</code> 和 <code>doPost()</code></strong> 两个方法</li></ol><div class="hljs"><pre><code class="hljs scala"><span class="hljs-comment">/* ServletDemo3.java  */</span><span class="hljs-keyword">import</span> javax.servlet.<span class="hljs-type">ServletException</span>;<span class="hljs-keyword">import</span> javax.servlet.annotation.<span class="hljs-type">WebServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServlet</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletRequest</span>;<span class="hljs-keyword">import</span> javax.servlet.http.<span class="hljs-type">HttpServletResponse</span>;<span class="hljs-keyword">import</span> java.io.<span class="hljs-type">IOException</span>;<span class="hljs-comment">/**</span><span class="hljs-comment"> * @Classname ServletDemo3</span><span class="hljs-comment"> * @Description TODO</span><span class="hljs-comment"> * @Date 2020/2/20 下午 10:54</span><span class="hljs-comment"> * @Created by jerry</span><span class="hljs-comment"> */</span><span class="hljs-meta">@WebServlet</span>(<span class="hljs-string">"demo3"</span>)public <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ServletDemo3</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">HttpServlet</span> </span>{    <span class="hljs-meta">@Override</span>    <span class="hljs-keyword">protected</span> void doGet(<span class="hljs-type">HttpServletRequest</span> req, <span class="hljs-type">HttpServletResponse</span> resp) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-type">System</span>.out.println(<span class="hljs-string">"doGet......"</span>);    }    <span class="hljs-meta">@Override</span>    <span class="hljs-keyword">protected</span> void doPost(<span class="hljs-type">HttpServletRequest</span> req, <span class="hljs-type">HttpServletResponse</span> resp) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> {        <span class="hljs-type">System</span>.out.println(<span class="hljs-string">"doPost......"</span>);    }}</code></pre></div><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><ul><li><strong>通过浏览器直接请求，是GET方式</strong></li><li>现在掌握的知识，只能通过表单，完成POST方式</li></ul><h2 id="简单案例"><a href="#简单案例" class="headerlink" title="简单案例"></a>简单案例</h2><ol><li>新建login.html文件</li></ol><div class="hljs"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE html&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">"en"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">"UTF-8"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>表单<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">"/demo3"</span> <span class="hljs-attr">method</span>=<span class="hljs-string">"post"</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"username"</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"submit"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"提交"</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre></div><ol start="2"><li>重启服务，访问页面</li></ol><p><fancybox><img src="https://s2.ax1x.com/2020/02/20/3msHLq.gif" srcset="/blog/img/loading.gif" alt="3msHLq.gif"></fancybox></p><ol start="3"><li>将 <code>method="post"</code> 改为 <code>method="get"</code></li><li>再访问页面</li></ol><p><fancybox><img src="https://s2.ax1x.com/2020/02/20/3myRXR.gif" srcset="/blog/img/loading.gif" alt="3myRXR.gif"></fancybox></p><blockquote><p>注意：</p><p><strong>使用get方式后，请求的参数会跟在url后。</strong></p><p><img src="https://s2.ax1x.com/2020/02/20/3myjBt.png" srcset="/blog/img/loading.gif" alt="3myjBt.png"></p></blockquote><hr><h1 id="后续阅读相关文章"><a href="#后续阅读相关文章" class="headerlink" title="后续阅读相关文章"></a>后续阅读相关文章</h1><p>1、<a href="https://blog.csdn.net/green703338130/article/details/79460250" target="_blank" rel="noopener">GenericServlet和HttpServlet</a></p><p>2、<a href="https://www.cnblogs.com/tiancai/p/8509705.html" target="_blank" rel="noopener">GenericServlet 、Servlet和httpServler他们之间的关系</a></p><p>3、<a href="https://www.cnblogs.com/yonyong/p/9337284.html" target="_blank" rel="noopener">GenericServlet和HttpServlet有什么区别？</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>JavaWeb</tag>
      
      <tag>笔记</tag>
      
      <tag>Servlet</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>IDEA官方文档</title>
    <link href="/blog/2020/02/20/IntelliJ%20IDEA%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3/"/>
    <url>/blog/2020/02/20/IntelliJ%20IDEA%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3/</url>
    
    <content type="html"><![CDATA[<p>一份 W3C school 提供的 <a href="https://www.w3cschool.cn/intellij_idea_doc/" target="_blank" rel="noopener">《IntelliJ IDEA官方文档》</a><br></p><p>链接：<a href="https://www.w3cschool.cn/intellij_idea_doc/" target="_blank" rel="noopener">https://www.w3cschool.cn/intellij_idea_doc/</a></p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>IDEA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>愿有情人终成眷属，执手前走共度一生</title>
    <link href="/blog/2020/02/20/%E6%84%BF%E6%9C%89%E6%83%85%E4%BA%BA%E7%BB%88%E6%88%90%E7%9C%B7%E5%B1%9E%EF%BC%8C%E6%89%A7%E6%89%8B%E5%89%8D%E8%B5%B0%E5%85%B1%E5%BA%A6%E4%B8%80%E7%94%9F/"/>
    <url>/blog/2020/02/20/%E6%84%BF%E6%9C%89%E6%83%85%E4%BA%BA%E7%BB%88%E6%88%90%E7%9C%B7%E5%B1%9E%EF%BC%8C%E6%89%A7%E6%89%8B%E5%89%8D%E8%B5%B0%E5%85%B1%E5%BA%A6%E4%B8%80%E7%94%9F/</url>
    
    <content type="html"><![CDATA[<p>浏览博客 <a href="https://www.7ooooo.cn/490/.html" target="_blank" rel="noopener">网易云热评墙</a> 时，看见两段很感触的网易云音乐热评。截了两张图，就当做今天的随笔。<br></p><p><strong><font color="red">“愿有情人终成眷属”，这话我想在后边加上一句，“执手前走共度一生”。</font></strong>——2020.02.20随笔</p><fancybox><p><img src="https://s2.ax1x.com/2020/02/20/3eLXyq.png" srcset="/blog/img/loading.gif" alt="《melodyremix》网易云音乐热评"></p></fancybox><fancybox><p><img src="https://s2.ax1x.com/2020/02/20/3eOFp9.png" srcset="/blog/img/loading.gif" alt="《我还想他》网易云音乐热评"></p></fancybox><a id="more"></a><hr><p>图片[1]链接：<a href="https://www.7ooooo.cn/490/.html" target="_blank" rel="noopener">https://www.7ooooo.cn/490/.html</a></p><p>图片[2]链接：<a href="https://www.7ooooo.cn/523/.html" target="_blank" rel="noopener">https://www.7ooooo.cn/523/.html</a></p><p><strong>关注我们：</strong>请关注一下我们的微信公众号（xielihaia）<br><strong>版权声明：</strong>版权归 <a href="https://www.7ooooo.cn/490/.html" target="_blank" rel="noopener">网易云热评墙</a> 所有！</p><p><img src="https://cdn.7ooooo.cn/wp-content/themes/Nana/images/gongzhonghao.jpg" srcset="/blog/img/loading.gif" alt="网易云热评墙的公众号"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>IDEA与Tomcat的其他相关配置</title>
    <link href="/blog/2020/02/20/IDEA%E4%B8%8ETomcat%E7%9A%84%E5%85%B6%E4%BB%96%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/"/>
    <url>/blog/2020/02/20/IDEA%E4%B8%8ETomcat%E7%9A%84%E5%85%B6%E4%BB%96%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<ol><li>IDEA会为每一个Tomcat部署的项目单独建立一份配置文件</li></ol><ul><li>查看控制台的log</li></ul><div class="hljs"><pre><code class="hljs taggerscript">Using CATALINA_BASE:   "C:<span class="hljs-symbol">\U</span>sers<span class="hljs-symbol">\丶</span>Melody<span class="hljs-symbol">\.</span>IntelliJIdea2019.1<span class="hljs-symbol">\s</span>ystem<span class="hljs-symbol">\t</span>omcat<span class="hljs-symbol">\_</span>test"</code></pre></div><br><ol start="2"><li>工作空间项目    和     Tomcat部署的Web项目</li></ol><ul><li>Tomcat真正访问的是“Tomcat部署的Web项目”</li><li>“Tomcat部署的Teb项目”对应着“工作空间项目” 的Web目录下的所有资源</li><li>IDEA工作台中，项目的src对应着WEB-INF目录</li><li>WEB-INF目录下的资源不能被浏览器直接访问。日后可以利用其他技术访问到。</li></ul><br><ol start="3"><li>断点调试：使用”小虫子”启动 dubug 启动</li></ol><br><h2 id="视频讲解"><a href="#视频讲解" class="headerlink" title="视频讲解"></a>视频讲解</h2><p>【00:28】1.IDEA会为每一个Tomcat部署的项目单独建立一份配置文件</p><p>【03:15】2.工作空间项目    和     Tomcat部署的Web项目</p><p>【09:04】3.断点调试：使用”小虫子”启动 dubug 启动</p><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=70420291&amp;cid=122002004&amp;page=121" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div><br><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>JavaWeb</tag>
      
      <tag>IDEA</tag>
      
      <tag>Tomcat</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Servlet：运行在服务器端的小程序</title>
    <link href="/blog/2020/02/20/Servlet%EF%BC%9A%E8%BF%90%E8%A1%8C%E5%9C%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E7%9A%84%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    <url>/blog/2020/02/20/Servlet%EF%BC%9A%E8%BF%90%E8%A1%8C%E5%9C%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E7%9A%84%E5%B0%8F%E7%A8%8B%E5%BA%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="Servlet：-server-applet"><a href="#Servlet：-server-applet" class="headerlink" title="Servlet： server applet"></a>Servlet： server applet</h1><ul><li>概念：运行在服务器端的小程序</li><li>Servlet就是一个接口，定义了Java类被浏览器访问到（Tomcat识别）的规则<span id="jump"><font color="blue">（我是跳转内容）</font></span><a href="#jump" class="footnote-backref">↩</a>。</li><li>将来我们自定义一个类，实现Servlet接口，复写（重写Override）方法。</li></ul><h1 id="快速理解"><a href="#快速理解" class="headerlink" title="快速理解"></a>快速理解</h1><p> <fancybox><img src="https://s2.ax1x.com/2020/02/19/3EI7WT.png" srcset="/blog/img/loading.gif" alt="快速理解"></fancybox></p><a id="more"></a><h1 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h1><ol><li><p>创建JavaEE项目</p></li><li><p>定义一个类，实现Servlet接口</p></li></ol><div class="hljs"><pre><code class="hljs angelscript"><span class="hljs-comment">/* ServletDemo1.java */</span>package cn.itcast.web.servlet;<span class="hljs-keyword">import</span> javax.servlet.*;<span class="hljs-keyword">import</span> java.io.IOException;<span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-symbol">ServletDemo1</span> <span class="hljs-symbol">implements</span> <span class="hljs-symbol">Servlet</span> {<span class="hljs-comment">//TODO</span>}</code></pre></div><p>​    </p><ol start="3"><li>实现接口中的抽象方法</li></ol><div class="hljs"><pre><code class="hljs java"><span class="hljs-comment">/* ServletDemo1.java */</span><span class="hljs-keyword">package</span> cn.itcast.web.servlet;<span class="hljs-keyword">import</span> javax.servlet.*;<span class="hljs-keyword">import</span> java.io.IOException;<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ServletDemo1</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">Servlet</span> </span>{    <span class="hljs-meta">@Override</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">init</span><span class="hljs-params">(ServletConfig servletConfig)</span> <span class="hljs-keyword">throws</span> ServletException </span>{    }    <span class="hljs-meta">@Override</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> ServletConfig <span class="hljs-title">getServletConfig</span><span class="hljs-params">()</span> </span>{        <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;    }    <span class="hljs-comment">// 提供服务的方法</span>    <span class="hljs-meta">@Override</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">service</span><span class="hljs-params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="hljs-keyword">throws</span> ServletException, IOException </span>{        System.out.println(<span class="hljs-string">"Hello Servlet"</span>);    }    <span class="hljs-meta">@Override</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getServletInfo</span><span class="hljs-params">()</span> </span>{        <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;    }    <span class="hljs-meta">@Override</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">destroy</span><span class="hljs-params">()</span> </span>{    }    }</code></pre></div><ol start="4"><li>配置Servlet，在web.xml的<code>&lt;web-app&gt;&lt;/web-app&gt;</code>中添加：</li></ol><div class="hljs"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--配置Servlet--&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>demo1<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">servlet-class</span>&gt;</span>cn.itcast.web.servlet.ServletDemo1<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-class</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">servlet</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-mapping</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>demo1<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/demo1<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">servlet-mapping</span>&gt;</span></code></pre></div><blockquote><p><code>servlet-mapping</code>是做一个<strong>映射</strong>，<code>servlet-name</code>对应<code>servlet-class</code>，<code>url-pattern</code>是资源路径（<strong>/开头</strong>）</p></blockquote><blockquote><p> <code>&lt;servlet-class&gt;</code>cn.itcast.web.servlet.ServletDemo1<code>&lt;/servlet-class&gt;</code>，中的<strong>cn.itcast.web.servlet.ServletDemo1</strong>是<font color="blue" size="5">全类名</font>，这里涉及到<font color="red" size="5">反射</font>。日后补充。</p></blockquote><ol start="5"><li>启动服务，看看结果</li></ol><p>浏览器中是空白的，</p><p><img src="https://s2.ax1x.com/2020/02/20/3eZQv6.png" srcset="/blog/img/loading.gif" alt=""></p><p>但是IDEA控制台中显示<strong>“Hello Servlet”</strong></p><blockquote><p>每刷新一次页面，控制台就多一句“Hello Servlet”。</p></blockquote><p><img src="https://s2.ax1x.com/2020/02/20/3eZ8bD.png" srcset="/blog/img/loading.gif" alt=""></p><h1 id="执行原理"><a href="#执行原理" class="headerlink" title="执行原理"></a>执行原理</h1><ol><li><p>当服务器接受到客户端浏览器的请求后，会解析请求URL路径，获取访问的Servlet的资源路径</p></li><li><p>查找<strong>web.xml</strong>文件，是否有对应的<code>&lt;url-pattern&gt;</code>标签体内容。</p></li><li><p>如果有，则在找到对应的<code>&lt;servlet-class&gt;</code><strong>全类名</strong>（<font color="red">涉及到反射</font>）</p></li><li><p>tomcat会<strong>将字节码文件加载进内存，并且创建其对象</strong></p></li><li><p>调用其方法</p><ul><li><p>为什么能调用方法？</p></li><li><p>因为实现了【规则】（<a href="#jump">点击我跳转</a>）。实现规则，实现Servlet接口，实现了接口中的方法。</p><p><fancybox><img src="https://s2.ax1x.com/2020/02/20/3e83Ax.png" srcset="/blog/img/loading.gif" alt=""></fancybox></p></li></ul></li></ol><h1 id="ServletDemo"><a href="#ServletDemo" class="headerlink" title="ServletDemo"></a>ServletDemo</h1><p>可以调试、运行，看看每个方法的执行次数。</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">import</span> javax.servlet.*;<span class="hljs-keyword">import</span> java.io.IOException;<span class="hljs-comment">/**</span><span class="hljs-comment"> * Servlet的方法</span><span class="hljs-comment"> */</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ServletDemo1</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">Servlet</span> </span>{    <span class="hljs-comment">/**</span><span class="hljs-comment">     * 初始化的方法</span><span class="hljs-comment">     * 在Servlet被创建时，执行，且只执行一次。</span><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> servletConfig</span><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> ServletException</span><span class="hljs-comment">     */</span>    <span class="hljs-meta">@Override</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">init</span><span class="hljs-params">(ServletConfig servletConfig)</span> <span class="hljs-keyword">throws</span> ServletException </span>{        System.out.println(<span class="hljs-string">"init..."</span>);    }    <span class="hljs-comment">/**</span><span class="hljs-comment">     * 获取ServletConfig对象</span><span class="hljs-comment">     * ServletConfig：Servlet的配置对象</span><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><span class="hljs-comment">     */</span>    <span class="hljs-meta">@Override</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> ServletConfig <span class="hljs-title">getServletConfig</span><span class="hljs-params">()</span> </span>{        <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;    }    <span class="hljs-comment">/**</span><span class="hljs-comment">     * 提供服务的方法</span><span class="hljs-comment">     * 每一次Servlet被访问时，执行。可执行多次。</span><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> servletRequest</span><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> servletResponse</span><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> ServletException</span><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> IOException</span><span class="hljs-comment">     */</span>    <span class="hljs-meta">@Override</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">service</span><span class="hljs-params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="hljs-keyword">throws</span> ServletException, IOException </span>{        System.out.println(<span class="hljs-string">"service..."</span>);    }    <span class="hljs-comment">/**</span><span class="hljs-comment">     * 获取Servlet的一些信息（版本、作者……）</span><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><span class="hljs-comment">     */</span>    <span class="hljs-meta">@Override</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getServletInfo</span><span class="hljs-params">()</span> </span>{        <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;    }    <span class="hljs-comment">/**</span><span class="hljs-comment">     * 销毁的方法</span><span class="hljs-comment">     * 在服务器正常关闭时，执行。只执行一次。</span><span class="hljs-comment">     * 非正关闭时，destroy方法不会执行。</span><span class="hljs-comment">     */</span>    <span class="hljs-meta">@Override</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">destroy</span><span class="hljs-params">()</span> </span>{        System.out.println(<span class="hljs-string">"destroy..."</span>);    }}</code></pre></div><h1 id="Servlet中的生命周期方法"><a href="#Servlet中的生命周期方法" class="headerlink" title="Servlet中的生命周期方法"></a>Servlet中的生命周期方法</h1><h2 id="1-被创建：执行init方法，只执行一次"><a href="#1-被创建：执行init方法，只执行一次" class="headerlink" title="1.被创建：执行init方法，只执行一次"></a>1.被创建：执行init方法，只执行一次</h2><ul><li>Servlet什么时候被创建？</li></ul><ol><li>默认情况下，第一次被访问时，被创建。</li><li>在服务器启动时，被创建。</li></ol><ul><li>可以配置执行Servlet的创建时机，在<code>&lt;servlet&gt;&lt;/servlet&gt;</code>标签中配置<code>&lt;load-on-startup&gt;整数值&lt;/load-on-startup&gt;</code></li></ul><blockquote><p>1.第一次被访问时，创建</p><p><load-on-startup><strong>负整数</strong></load-on-startup></p><p>2.在服务器启动时，创建</p><p><load-on-startup><strong>0或正整数</strong>(一般0~10)</load-on-startup></p></blockquote><div class="hljs"><pre><code class="hljs aspectj"><span class="hljs-comment">/**</span><span class="hljs-comment"> * 初始化的方法</span><span class="hljs-comment"> * 在Servlet被创建时，执行，且只执行一次。</span><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> servletConfig</span><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> ServletException</span><span class="hljs-comment"> */</span><span class="hljs-meta">@Override</span><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">init</span><span class="hljs-params">(ServletConfig servletConfig)</span> <span class="hljs-keyword">throws</span> ServletException </span>{    System.out.println(<span class="hljs-string">"init..."</span>);        <span class="hljs-comment">// 定义局部变量，这样不存在多线程的安全问题</span>    <span class="hljs-keyword">int</span> number = <span class="hljs-number">3</span>;}</code></pre></div><ul><li>Servlet的init方法，只执行一次，说明<strong>一个Servlet在内存中只存在一个对象，Servlet是单例的。</strong></li><li><em>多个用户同时访问时，可能存在线程安全问题。</em></li><li>解决：尽量不要在Servlet中定义成员变量（定义局部变量就不存在安全问题了）。即使定义了成员变量，也不要对修改值。</li></ul><h2 id="2-提供服务：执行service方法，可执行多次"><a href="#2-提供服务：执行service方法，可执行多次" class="headerlink" title="2.提供服务：执行service方法，可执行多次"></a>2.提供服务：执行service方法，可执行多次</h2><ul><li>每次访问Servlet时，Service方法都会被调用一次。</li></ul><div class="hljs"><pre><code class="hljs aspectj"><span class="hljs-comment">/**</span><span class="hljs-comment"> * 提供服务的方法</span><span class="hljs-comment"> * 每一次Servlet被访问时，执行。可执行多次。</span><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> servletRequest</span><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> servletResponse</span><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> ServletException</span><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> IOException</span><span class="hljs-comment"> */</span><span class="hljs-meta">@Override</span><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">service</span><span class="hljs-params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="hljs-keyword">throws</span> ServletException, IOException </span>{    System.out.println(<span class="hljs-string">"service..."</span>);}</code></pre></div><h2 id="3-被销毁：执行destroy方法，只执行一次"><a href="#3-被销毁：执行destroy方法，只执行一次" class="headerlink" title="3.被销毁：执行destroy方法，只执行一次"></a>3.被销毁：执行destroy方法，只执行一次</h2><ul><li>Servlet被销毁时执行。服务器关闭时，Servlet被销毁</li><li><strong>只有服务器正常关闭时，才会执行destroy方法。</strong></li><li>destroy方法在Servlet被销毁之前执行，<strong>一般用于释放资源</strong></li></ul><div class="hljs"><pre><code class="hljs arduino"><span class="hljs-comment">/**</span><span class="hljs-comment"> * 销毁的方法</span><span class="hljs-comment"> * 在服务器正常关闭时，执行。只执行一次。</span><span class="hljs-comment"> * 非正关闭时，destroy方法不会执行。</span><span class="hljs-comment"> */</span>@Override<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">destroy</span><span class="hljs-params">()</span> </span>{    System.out.<span class="hljs-built_in">println</span>(<span class="hljs-string">"destroy..."</span>);}</code></pre></div><h1 id="Servlet-3-0"><a href="#Servlet-3-0" class="headerlink" title="Servlet 3.0"></a>Servlet 3.0</h1><ul><li>官方提供新的标准 Servlet 3.0</li><li>从 <strong>Java EE 6</strong> 开始支持 Servlet 3.0</li></ul><h2 id="好处"><a href="#好处" class="headerlink" title="好处"></a>好处</h2><ul><li>支持<strong>注解配置</strong>。可以不需要web.xml了</li></ul><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li><p>创建JavaEE项目，选择Servlet的版本3.0以上，可以不创建web.xml</p></li><li><p>定义一个类，实现Servlet接口</p></li><li><p>复写方法</p></li><li><p>在类上使用<strong><code>@WebServlet</code>注解</strong>，进行配置</p><ul><li><code>@WebServlet("资源路径")</code></li><li>比如：<div class="hljs"><pre><code class="hljs less"><span class="hljs-variable">@WebServlet</span>(urlPatterns = <span class="hljs-string">"/demo2"</span>)或<span class="hljs-variable">@WebServlet</span>(value = <span class="hljs-string">"/demo2"</span>)或<span class="hljs-variable">@WebServlet</span>(<span class="hljs-string">"/demo2"</span>)</code></pre></div></li></ul></li></ol><ol start="5"><li>访问：<a href="http://localhost:8080/Servlet3/demo2" target="_blank" rel="noopener">http://localhost:8080/Servlet3/demo2</a></li></ol><p><img src="https://s2.ax1x.com/2020/02/20/3eyUxA.png" srcset="/blog/img/loading.gif" alt=""></p><h2 id="WebServlet注解"><a href="#WebServlet注解" class="headerlink" title="@WebServlet注解"></a>@WebServlet注解</h2><ul><li><code>@WebServlet</code>中有个很特殊的属性<code>value</code></li><li>一般<strong>表示最重要的属性</strong>，就用<code>value</code>表示。</li><li>特性：<strong>如果只有一个属性，<code>value</code>可以省略不写。</strong></li><li>除去<code>value</code>，最重要的属性是<code>urlPatterns</code></li></ul><div class="hljs"><pre><code class="hljs typescript"><span class="hljs-meta">@Target</span>({ElementType.TYPE})<span class="hljs-meta">@Retention</span>(RetentionPolicy.RUNTIME)<span class="hljs-meta">@Documented</span><span class="hljs-keyword">public</span> <span class="hljs-meta">@interface</span> WebServlet {    <span class="hljs-built_in">String</span> name() <span class="hljs-keyword">default</span> <span class="hljs-string">""</span>;<span class="hljs-comment">//相当于&lt;Servlet-name&gt;</span>    <span class="hljs-built_in">String</span>[] value() <span class="hljs-keyword">default</span> {};<span class="hljs-comment">//代表urlPatterns()属性配置</span>    <span class="hljs-built_in">String</span>[] urlPatterns() <span class="hljs-keyword">default</span> {};<span class="hljs-comment">//相当于&lt;url-pattern&gt;</span>    int loadOnStartup() <span class="hljs-keyword">default</span> <span class="hljs-number">-1</span>;<span class="hljs-comment">//相当于&lt;load-on-startup&gt;</span>    WebInitParam[] initParams() <span class="hljs-keyword">default</span> {};    <span class="hljs-built_in">boolean</span> asyncSupported() <span class="hljs-keyword">default</span> <span class="hljs-literal">false</span>;    <span class="hljs-built_in">String</span> smallIcon() <span class="hljs-keyword">default</span> <span class="hljs-string">""</span>;    <span class="hljs-built_in">String</span> largeIcon() <span class="hljs-keyword">default</span> <span class="hljs-string">""</span>;    <span class="hljs-built_in">String</span> description() <span class="hljs-keyword">default</span> <span class="hljs-string">""</span>;    <span class="hljs-built_in">String</span> displayName() <span class="hljs-keyword">default</span> <span class="hljs-string">""</span>;  }</code></pre></div><h1 id="Servlet-体系结构"><a href="#Servlet-体系结构" class="headerlink" title="Servlet 体系结构"></a>Servlet 体系结构</h1><p>跳转到我得下一篇博文👉 [Servlet 体系结构](<a href="https://melodyjerry.gitee.io/blog/2020/02/20/Servlet" target="_blank" rel="noopener">https://melodyjerry.gitee.io/blog/2020/02/20/Servlet</a> 体系结构/)</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>JavaWeb</tag>
      
      <tag>笔记</tag>
      
      <tag>Tomcat</tag>
      
      <tag>Servlet</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Tomcat简单修改虚拟目录实现访问多个项目</title>
    <link href="/blog/2020/02/20/Tomcat%E7%AE%80%E5%8D%95%E4%BF%AE%E6%94%B9%E8%99%9A%E6%8B%9F%E7%9B%AE%E5%BD%95%E5%AE%9E%E7%8E%B0%E8%AE%BF%E9%97%AE%E5%A4%9A%E4%B8%AA%E9%A1%B9%E7%9B%AE/"/>
    <url>/blog/2020/02/20/Tomcat%E7%AE%80%E5%8D%95%E4%BF%AE%E6%94%B9%E8%99%9A%E6%8B%9F%E7%9B%AE%E5%BD%95%E5%AE%9E%E7%8E%B0%E8%AE%BF%E9%97%AE%E5%A4%9A%E4%B8%AA%E9%A1%B9%E7%9B%AE/</url>
    
    <content type="html"><![CDATA[<p>可以通过 <strong>修改Application Contest（虚拟目录）</strong> 实现访问多个项目</p><p><img src="https://s2.ax1x.com/2020/02/20/3eeYLT.png" srcset="/blog/img/loading.gif" alt=""></p><p>修改<strong>项目名称作为对应的虚拟目录</strong>，</p><p>重启服务后，浏览器访问时，</p><div class="hljs"><pre><code class="hljs groovy"><span class="hljs-string">http:</span><span class="hljs-comment">//localhost:8080/项目a/资源5</span>例如：<span class="hljs-string">http:</span><span class="hljs-comment">//localhost:55555/ServletDemo/demo1.html</span></code></pre></div><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>JavaWeb</tag>
      
      <tag>Tomcat</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>IDEA启动Tomcat报错</title>
    <link href="/blog/2020/02/19/IDEA%E5%90%AF%E5%8A%A8Tomcat%E6%8A%A5%E9%94%99/"/>
    <url>/blog/2020/02/19/IDEA%E5%90%AF%E5%8A%A8Tomcat%E6%8A%A5%E9%94%99/</url>
    
    <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p><img src="https://s2.ax1x.com/2020/02/20/3eCKI0.png" srcset="/blog/img/loading.gif" alt=""></p><p>IDEA run的时候报错：</p><div class="hljs"><pre><code class="hljs routeros"><span class="hljs-builtin-name">Error</span> running <span class="hljs-string">'Tomcat 8.5.51'</span>:Address loaclhost:1099 is already <span class="hljs-keyword">in</span> use</code></pre></div><a id="more"></a><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>控制台提示<strong>1099端口已经被占用</strong>。</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>解决方法要么是杀死端口号1099对应的进程，要么就是修改IDEA中Tomcat的端口号。</p><p>建议优先选择杀死对应进程。</p><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><ol><li>根据端口号查找对应的PID，可以通过在cmd中输入命令，</li></ol><div class="hljs"><pre><code class="hljs 1c">netstat -ano <span class="hljs-string">| findstr 1099</span></code></pre></div><ol start="2"><li>找到该进程的进程号为7256</li></ol><p><img src="https://s2.ax1x.com/2020/02/20/3eCRot.png" srcset="/blog/img/loading.gif" alt=""></p><ol start="3"><li>输入命令，杀死进程</li></ol><div class="hljs"><pre><code class="hljs angelscript">tskill <span class="hljs-number">7256</span>或taskkill -f -pid <span class="hljs-number">7256</span></code></pre></div><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>同方法一，知道进程的PID后，直接去进程管理器，直接右键结束进程。</p><h2 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h2><p>针对方法一、二均无效时，只能在IDEA中修改端口：</p><p><img src="https://s2.ax1x.com/2020/02/20/3eP07n.png" srcset="/blog/img/loading.gif" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>IDEA</tag>
      
      <tag>Tomcat</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>IDEA 常用快捷键列表</title>
    <link href="/blog/2020/02/19/IDEA%E8%BE%93%E5%87%BA%E6%89%93%E5%8D%B0System.out.println()%E7%9A%84%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <url>/blog/2020/02/19/IDEA%E8%BE%93%E5%87%BA%E6%89%93%E5%8D%B0System.out.println()%E7%9A%84%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="IDEA输出打印System-out-println-的快捷键"><a href="#IDEA输出打印System-out-println-的快捷键" class="headerlink" title="IDEA输出打印System.out.println()的快捷键"></a>IDEA输出打印System.out.println()的快捷键</h1><p>在eclipse中习惯了使用syso，开始用idea很不习惯。</p><p>在idea中直接输入sout，自动出现提示，不像eclipse中那样还要alt+/，这算是idea的一个优点了。</p><p>sout 看图：</p><p><img src="https://s2.ax1x.com/2020/02/20/3ei99f.png" srcset="/blog/img/loading.gif" alt="3ei99f.png"></p><p>按Tab或Enter都可以出现</p><p><img src="https://s2.ax1x.com/2020/02/20/3eiPgS.png" srcset="/blog/img/loading.gif" alt="3eiPgS.png"></p><a id="more"></a><p><strong>十大Intellij IDEA快捷键 for System.out、main快捷键</strong></p><p>1 智能提示</p><p>Intellij首当其冲的当然就是Intelligence智能！基本的代码提示用Ctrl+Space，还有更智能地按类型信息提示Ctrl+Shift+Space，但因为Intellij总是随着我们敲击而自动提示，所以很多时候都不会手动敲这两个快捷键(除非提示框消失了)。用F2/ Shift+F2移动到有错误的代码，Alt+Enter快速修复(即Eclipse中的Quick Fix功能)。当智能提示为我们自动补全方法名时，我们通常要自己补上行尾的反括号和分号，当括号嵌套很多层时会很麻烦，这时我们只需敲Ctrl+Shift+Enter就能自动补全末尾的字符。而且不只是括号，例如敲完if/for时也可以自动补上{}花括号。</p><p>最后要说一点，Intellij能够智能感知spring、hibernate等主流框架的配置文件和类，以静制动，在看似“静态”的外表下，智能地扫描理解你的项目是如何构造和配置的。</p><p>2 重构</p><p>Intellij重构是另一完爆Eclipse的功能，其智能程度令人瞠目结舌，比如提取变量时自动检查到所有匹配同时提取成一个变量等。尤其看过《重构-改善既有代码设计》之后，有了Intellij的配合简直是令人大呼过瘾！也正是强大的智能和重构功能，使Intellij下的TDD开发非常顺畅。</p><p>切入正题，先说一个无敌的重构功能大汇总快捷键Ctrl+Shift+Alt+T，叫做Refactor This。按法有点复杂，但也符合Intellij的风格，很多快捷键都要双手完成，而不像Eclipse不少最有用的快捷键可以潇洒地单手完成(不知道算不算Eclipse的一大优点)，但各位用过Emacs的话就会觉得也没什么了(非Emacs黑)。此外，还有些最常用的重构技巧，因为太常用了，若每次都在Refactor This菜单里选的话效率有些低。比如Shift+F6直接就是改名，Ctrl+Alt+V则是提取变量。</p><p>3 代码生成<br>这一点类似Eclipse，虽不是独到之处，但因为日常使用频率极高，所以还是罗列在榜单前面。常用的有fori/sout/psvm+Tab即可生成循环、System.out、main方法等boilerplate样板代码，用Ctrl+J可以查看所有模板。后面“辅助”一节中将会讲到Alt+Insert，在编辑窗口中点击可以生成构造函数、toString、getter/setter、重写父类方法等。这两个技巧实在太常用了，几乎每天都要生成一堆main、System.out和getter/setter。</p><p>另外，Intellij IDEA 13中加入了后缀自动补全功能(Postfix Completion)，比模板生成更加灵活和强大。例如要输入for(User user : users)只需输入user.for+Tab。再比如，要输入Date birthday = user.getBirthday();只需输入user.getBirthday().var+Tab即可。</p><p>4 编辑<br>编辑中不得不说的一大神键就是能够自动按语法选中代码的Ctrl+W以及反向的Ctrl+Shift+W了。此外，Ctrl+Left/Right移动光标到前/后单词，Ctrl+[/]移动到前/后代码块，这些类Vim风格的光标移动也是一大亮点。以上Ctrl+Left/Right/[]加上Shift的话就能选中跳跃范围内的代码。Alt+Forward/Backward移动到前/后方法。还有些非常普通的像Ctrl+Y删除行、Ctrl+D复制行、Ctrl+&lt;/&gt;折叠代码就不多说了。</p><p>关于光标移动再多扩展一点，除了Intellij本身已提供的功能外，我们还可以安装ideaVim或者emacsIDEAs享受到Vim的快速移动和Emacs的AceJump功能(超爽！)。另外，Intellij的书签功能也是不错的，用Ctrl+Shift+Num定义1-10书签(再次按这组快捷键则是删除书签)，然后通过Ctrl+Num跳转。这避免了多次使用前/下一编辑位置Ctrl+Left/Right来回跳转的麻烦，而且此快捷键默认与Windows热键冲突(默认多了Alt，与Windows改变显示器显示方向冲突，一不小心显示器就变成倒着显式的了，冏啊)。</p><p>5 查找打开<br>类似Eclipse，Intellij的Ctrl+N/Ctrl+Shift+N可以打开类或资源，但Intellij更加智能一些，我们输入的任何字符都将看作模糊匹配，省却了Eclipse中还有输入*的麻烦。最新版本的IDEA还加入了Search Everywhere功能，只需按Shift+Shift即可在一个弹出框中搜索任何东西，包括类、资源、配置项、方法等等。</p><p>类的继承关系则可用Ctrl+H打开类层次窗口，在继承层次上跳转则用Ctrl+B/Ctrl+Alt+B分别对应父类或父方法定义和子类或子方法实现，查看当前类的所有方法用Ctrl+F12。</p><p>要找类或方法的使用也很简单，Alt+F7。要查找文本的出现位置就用Ctrl+F/Ctrl+Shift+F在当前窗口或全工程中查找，再配合F3/Shift+F3前后移动到下一匹配处。</p><p>Intellij更加智能的又一佐证是在任意菜单或显示窗口，都可以直接输入你要找的单词，Intellij就会自动为你过滤。</p><p>6 其他辅助<br>以上这些神键配上一些辅助快捷键，即可让你的双手90%以上的时间摆脱鼠标，专注于键盘仿佛在进行钢琴表演。这些不起眼却是至关重要的最后一块拼图有：</p><p>Ø  命令：Ctrl+Shift+A可以查找所有Intellij的命令，并且每个命令后面还有其快捷键。所以它不仅是一大神键，也是查找学习快捷键的工具。</p><p>Ø  新建：Alt+Insert可以新建类、方法等任何东西。</p><p>Ø  格式化代码：格式化import列表Ctrl+Alt+O，格式化代码Ctrl+Alt+L。</p><p>Ø  切换窗口：Alt+Num，常用的有1-项目结构，3-搜索结果，4/5-运行调试。Ctrl+Tab切换标签页，Ctrl+E/Ctrl+Shift+E打开最近打开过的或编辑过的文件。</p><p>Ø  单元测试：Ctrl+Alt+T创建单元测试用例。</p><p>Ø  运行：Alt+Shift+F10运行程序，Shift+F9启动调试，Ctrl+F2停止。</p><p>Ø  调试：F7/F8/F9分别对应Step into，Step over，Continue。</p><p>此外还有些我自定义的，例如水平分屏Ctrl+|等，和一些神奇的小功能Ctrl+Shift+V粘贴很早以前拷贝过的，Alt+Shift+Insert进入到列模式进行按列选中。</p><p>7 最终榜单<br>这榜单阵容太豪华了，后几名都是如此有用，毫不示弱。</p><p>Ø  Top #10切来切去：Ctrl+Tab</p><p>Ø  Top #9选你所想：Ctrl+W</p><p>Ø  Top #8代码生成：Template/Postfix +Tab</p><p>Ø  Top #7发号施令：Ctrl+Shift+A</p><p>Ø  Top #6无处藏身：Shift+Shift</p><p>Ø  Top #5自动完成：Ctrl+Shift+Enter</p><p>Ø  Top #4创造万物：Alt+Insert</p><p>太难割舍，前三名并列吧！</p><p>Ø  Top #1智能补全：Ctrl+Shift+Space</p><p>Ø  Top #1自我修复：Alt+Enter</p><p>Ø  Top #1重构一切：Ctrl+Shift+Alt+T</p><p>————————<br>版权声明：本文为CSDN博主「Jenrey」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/jenrey/article/details/79961825" target="_blank" rel="noopener">https://blog.csdn.net/jenrey/article/details/79961825</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>IDEA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>IDEA 常用快捷键列表</title>
    <link href="/blog/2020/02/19/IDEA%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%88%97%E8%A1%A8/"/>
    <url>/blog/2020/02/19/IDEA%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%88%97%E8%A1%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="IDEA-常用快捷键列表"><a href="#IDEA-常用快捷键列表" class="headerlink" title="IDEA 常用快捷键列表"></a>IDEA 常用快捷键列表</h1><a id="more"></a><p>——-    IDEA中窗口最大化—-&gt;Windows 上： Ctrl+Shift+F12  </p><p>——–   ctrl+z撤回代码  </p><p>——-    ctrl+shift+z恢复撤回代码  </p><p>——-     ctrl + Alt + V (返回属性变量)  </p><p>——-      shift+ctrl+u (大小写的切换)  </p><p>——-      Ctrl+Alt+L，格式化代码  </p><p>——-     Ctrl+D 将当前行复制到下一行  </p><p>——-      Ctrl+Alt+T，可以把代码包在一个块内，例如：try/catch 也可抛错误  </p><p>——-       快捷方式一（光标移到该代码行，Alt+Enter），可以异常外抛出，也可以try-catch：  </p><p>——-       Ctrl+Shift+Space，自动补全代码（提示）  </p><p>——-        Ctrl+O，重写方法  </p><p>——-        Ctrl+I，实现方法  </p><p>——-        ctrl + shift + enter 句末加；  </p><p>——-        连安两下 shift 查找文件  </p><p>——-        CtrL +shift +r 全局搜索：  </p><p>——-     ctrl +r 替换当前页的单词  </p><p>——-        代码格式化： shfit + G   (自定义)    //ctrl +alt +L  </p><p>——     直接查看和进入接口实现类的快捷键  ：   Ctrl+Alt+鼠标左键  </p><p>—–       单机两下放大窗户：  </p><p>—–   alt+capslk(大小写切换)+鼠标左键  或者：ALT +    鼠标左键      列编辑模式  </p><p>————-   ctrl+shift+enter不只是用来行尾加分号的；  </p><p>  idea进阶快捷键：  </p><p>  1 查看接口的实现类：Ctrl+Alt+B：  </p><p>  2：查看一个类中有什么方法：Alt+7 或 点左侧边栏Structure  </p><p>  2 返回上/下个光标地方:Alt+Ctrl+箭头(向左) 和 Alt+ Ctrl+箭头(向右)—（全键盘）  </p><p>  3： 查看Java方法调用树(被调/主调)：Ctrl+Alt+H  </p><p>  4 :查看类继承关系图：Ctrl+Alt+U  </p><p>  5:查看当前类的继承树：Ctrl+H  </p><p>  6: 查看定义的变量在哪里被调用：Ctrl+Alt+F7  </p><p>  7:查看一个类中有什么方法：Alt+7 或 点左侧边栏Structure  </p><p>  8:列编辑：alt +左键  </p><p>9:自动生成not null判断语句</p><p>自动生成not null这种if判断，在<code>IDEA</code>里有很多种办法，其中一种办法你可能没想到。</p><p><a href="http://blog.didispace.com/images/pasted-25.png" target="_blank" rel="noopener"><img src="http://blog.didispace.com/images/pasted-25.png" srcset="/blog/img/loading.gif" alt="upload successful"></a>upload successful</p><p>当我们使用rabbitTemplate. 后，直接输入<code>notnull</code>并回车，<code>IDEA</code>就好自动生成if判断了。</p><p><a href="http://blog.didispace.com/images/pasted-26.png" target="_blank" rel="noopener"><img src="http://blog.didispace.com/images/pasted-26.png" srcset="/blog/img/loading.gif" alt="upload successful"></a>upload successful</p><h2 id="编辑"><a href="#编辑" class="headerlink" title="编辑"></a>编辑</h2><p><code>Ctrl+Shift + Enter</code>，语句完成<br><code>" ！"</code>，否定完成，输入表达式时按 “！”键<br><code>Ctrl+E</code>，最近的文件<br><code>Ctrl+Shift+E</code>，最近更改的文件<br><code>Shift+Click</code>，可以关闭文件<br><code>Ctrl+[ OR ]</code>，可以跑到大括号的开头与结尾<br><code>Ctrl+F12</code>，可以显示当前文件的结构<br><code>Ctrl+F7</code>，可以查询当前元素在当前文件中的引用，然后按 F3 可以选择<br><code>Ctrl+N</code>，可以快速打开类<br><code>Ctrl+Shift+N</code>，可以快速打开文件<br><code>Alt+Q</code>，可以看到当前方法的声明<br><code>Ctrl+P</code>，可以显示参数信息<br><code>Ctrl+Shift+Insert</code>，可以选择剪贴板内容并插入<br><code>Alt+Insert</code>，可以生成构造器/Getter/Setter等<br><code>Ctrl+Alt+V</code>，可以引入变量。例如：new String(); 自动导入变量定义<br><code>Ctrl+Alt+T</code>，可以把代码包在一个块内，例如：try/catch<br><code>Ctrl+Enter</code>，导入包，自动修正<br><code>Ctrl+Alt+L</code>，格式化代码<br><code>Ctrl+Alt+I</code>，将选中的代码进行自动缩进编排，这个功能在编辑 JSP 文件时也可以工作<br><code>Ctrl+Alt+O</code>，优化导入的类和包<br><code>Ctrl+R</code>，替换文本<br><code>Ctrl+F</code>，查找文本<br><code>Ctrl+Shift+Space</code>，自动补全代码<br><code>Ctrl+空格</code>，代码提示（与系统输入法快捷键冲突）<br><code>Ctrl+Shift+Alt+N</code>，查找类中的方法或变量<br>★<code>Alt+Enter</code>，快速修复错误提示、导入包、自动修正代码、解决出现的问题、生成返回值……</p><blockquote><p>详细见 <a href="http://www.phperz.com/article/17/0409/333071.html" target="_blank" rel="noopener">最特殊的快捷键 Alt + Enter 介绍</a></p></blockquote><p><code>Alt+Shift+C</code>，最近的更改<br><code>Alt+Shift+Up/Down</code>，上/下移一行<br><code>Shift+F6</code>，重构 – 重命名<br><code>Ctrl+X</code>，删除行<br><code>Ctrl+D</code>，复制行<br><code>Ctrl+/</code>或<code>Ctrl+Shift+/</code>，注释（//或者/**/）<br><code>Ctrl+J</code>，自动代码（例如：serr）<br><code>Ctrl+Alt+J</code>，用动态模板环绕<br><code>Ctrl+H</code>，显示类结构图（类的继承层次）<br><code>Ctrl+Q</code>，显示注释文档<br><code>Alt+F1</code>，查找代码所在位置<br><code>Alt+1</code>，快速打开或隐藏工程面板<br><code>Ctrl+Alt+left/right</code>，返回至上次浏览的位置<br><code>Alt+left/right</code>，切换代码视图<br><code>Alt+Up/Down</code>，在方法间快速移动定位<br><code>Ctrl+Shift+Up/Down</code>，向上/下移动语句<br><code>F2</code> 或 <code>Shift+F2</code>，高亮错误或警告快速定位<br><code>Tab</code>，代码标签输入完成后，按 Tab，生成代码<br><code>Ctrl+Shift+F7</code>，高亮显示所有该文本，按 <code>Esc</code> 高亮消失<br><code>Alt+F3</code>，逐个往下查找相同文本，并高亮显示<br><code>Ctrl+Up/Down</code>，光标中转到第一行或最后一行下<br><code>Ctrl+B/Ctrl+Click</code>，快速打开光标处的类或方法（跳转到定义处）<br><code>Ctrl+Alt+B</code>，跳转到方法实现处<br><code>Ctrl+Shift+Backspace</code>，跳转到上次编辑的地方<br><code>Ctrl+O</code>，重写方法<br><code>Ctrl+Alt+Space</code>，类名自动完成<br><code>Ctrl+Alt+Up/Down</code>，快速跳转搜索结果<br><code>Ctrl+Shift+J</code>，整合两行<br><code>Alt+F8</code>，计算变量值<br><code>Ctrl+Shift+V</code>，可以将最近使用的剪贴板内容选择插入到文本<br><code>Ctrl+Alt+Shift+V</code>，简单粘贴<br><code>Shift+Esc</code>，不仅可以把焦点移到编辑器上，而且还可以隐藏当前（或最后活动的）工具窗口<br><code>F12</code>，把焦点从编辑器移到最近使用的工具窗口<br><code>Shift+F1</code>，要打开编辑器光标字符处使用的类或者方法 Java 文档的浏览器<br><code>Ctrl+W</code>，可以选择单词继而语句继而行继而函数<br><code>Ctrl+Shift+W</code>，取消选择光标所在词<br><code>Alt+F7</code>，查找整个工程中使用地某一个类、方法或者变量的位置<br><code>Ctrl+I</code>，实现方法<br><code>Ctrl+Shift+U</code>，大小写转化<br><code>Ctrl+Y</code>，删除当前行</p><p><code>Shift+Enter</code>，向下插入新行<br>psvm/sout，main/System.out.println();<br><code>Ctrl+J</code>，查看更多<br><code>Ctrl+Shift+F</code>，全局查找<br><code>Ctrl+F</code>，查找<br><code>Shift+F3</code>，向上查找<br><code>F3</code>，向下查找<br><code>Ctrl+Shift+S</code>，高级搜索<br><code>Ctrl+U</code>，转到父类<br><code>Ctrl+Alt+S</code>，打开设置对话框<br><code>Alt+Shift+Inert</code>，开启/关闭列选择模式<br><code>Ctrl+Alt+Shift+S</code>，打开当前项目/模块属性<br><code>Ctrl+G</code>，定位行<br><code>Alt+Home</code>，跳转到导航栏<br><code>Ctrl+Enter</code>，上插一行<br><code>Ctrl+Backspace</code>，按单词删除<br><code>Ctrl+"+/-"</code>，当前方法展开、折叠<br><code>Ctrl+Shift+"+/-"</code>，全部展开、折叠</p><h2 id="调试、编译"><a href="#调试、编译" class="headerlink" title="调试、编译"></a>调试、编译</h2><p><code>Ctrl+F2</code>，停止<br><code>Alt+Shift+F9</code>，选择 Debug<br><code>Alt+Shift+F10</code>，选择 Run<br><code>Ctrl+Shift+F9</code>，编译<br><code>Ctrl+Shift+F10</code>，运行<br><code>Ctrl+Shift+F8</code>，查看断点<br><code>F8</code>，步过<br><code>F7</code>，步入<br><code>Shift+F7</code>，智能步入<br><code>Shift+F8</code>，步出<br><code>Alt+Shift+F8</code>，强制步过<br><code>Alt+Shift+F7</code>，强制步入<br><code>Alt+F9</code>，运行至光标处<br><code>Ctrl+Alt+F9</code>，强制运行至光标处<br><code>F9</code>，恢复程序<br><code>Alt+F10</code>，定位到断点<br><code>Ctrl+F8</code>，切换行断点<br><code>Ctrl+F9</code>，生成项目<br><code>Alt+1</code>，项目<br><code>Alt+2</code>，收藏<br><code>Alt+6</code>，TODO<br><code>Alt+7</code>，结构<br><code>Ctrl+Shift+C</code>，复制路径<br><code>Ctrl+Alt+Shift+C</code>，复制引用，必须选择类名<br><code>Ctrl+Alt+Y</code>，同步<br><code>Ctrl+~</code>，快速切换方案（界面外观、代码风格、快捷键映射等菜单）<br><code>Shift+F12</code>，还原默认布局<br><code>Ctrl+Shift+F12</code>，隐藏/恢复所有窗口<br><code>Ctrl+F4</code>，关闭<br><code>Ctrl+Shift+F4</code>，关闭活动选项卡<br><code>Ctrl+Tab</code>，转到下一个拆分器<br><code>Ctrl+Shift+Tab</code>，转到上一个拆分器</p><h2 id="重构"><a href="#重构" class="headerlink" title="重构"></a>重构</h2><p><code>Ctrl+Alt+Shift+T</code>，弹出重构菜单<br><code>Shift+F6</code>，重命名<br><code>F6</code>，移动<br><code>F5</code>，复制<br><code>Alt+Delete</code>，安全删除<br><code>Ctrl+Alt+N</code>，内联</p><h2 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h2><p><code>Ctrl+F</code>，查找<br><code>Ctrl+R</code>，替换<br><code>F3</code>，查找下一个<br><code>Shift+F3</code>，查找上一个<br><code>Ctrl+Shift+F</code>，在路径中查找<br><code>Ctrl+Shift+R</code>，在路径中替换<br><code>Ctrl+Shift+S</code>，搜索结构<br><code>Ctrl+Shift+M</code>，替换结构<br><code>Alt+F7</code>，查找用法<br><code>Ctrl+Alt+F7</code>，显示用法<br><code>Ctrl+F7</code>，在文件中查找用法<br><code>Ctrl+Shift+F7</code>，在文件中高亮显示用法</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>IDEA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Tomcat启动时中文乱码的问题</title>
    <link href="/blog/2020/02/19/Tomcat%E5%90%AF%E5%8A%A8%E6%97%B6%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <url>/blog/2020/02/19/Tomcat%E5%90%AF%E5%8A%A8%E6%97%B6%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>Tomcat启动时中文乱码的问题</p><p><img src="https://s2.ax1x.com/2020/02/19/3E39nx.png" srcset="/blog/img/loading.gif" alt=""></p><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><p>修改<code>conf</code>文件夹下的<code>logging.properties</code>文件</p><p>第47行代码：</p><div class="hljs"><pre><code class="hljs stylus">java<span class="hljs-selector-class">.util</span><span class="hljs-selector-class">.logging</span><span class="hljs-selector-class">.ConsoleHandler</span><span class="hljs-selector-class">.encoding</span> = UTF-<span class="hljs-number">8</span></code></pre></div><p>改为</p><div class="hljs"><pre><code class="hljs stylus">java<span class="hljs-selector-class">.util</span><span class="hljs-selector-class">.logging</span><span class="hljs-selector-class">.ConsoleHandler</span><span class="hljs-selector-class">.encoding</span> = GBK</code></pre></div><a id="more"></a><h1 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h1><p>如果IDEA中使用Tomcat也乱码，可以额为参考此方法。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>IDEA</tag>
      
      <tag>Tomcat</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Tomcat：Web服务器软件</title>
    <link href="/blog/2020/02/19/Tomcat%EF%BC%9A%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BD%AF%E4%BB%B6/"/>
    <url>/blog/2020/02/19/Tomcat%EF%BC%9A%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BD%AF%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h1 id="Tomcat：web服务器软件"><a href="#Tomcat：web服务器软件" class="headerlink" title="Tomcat：web服务器软件"></a>Tomcat：web服务器软件</h1><blockquote><p>Tomcat 是用<strong>纯Java语言编写</strong>的</p></blockquote><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>下载 <a href="https://tomcat.apache.org/download-80.cgi" target="_blank" rel="noopener">https://tomcat.apache.org/download-80.cgi</a></p><p>免安装，解压压缩包即可。</p><blockquote><p>注意：安装目录建议不要有中文和空格</p></blockquote><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><p><img src="https://s2.ax1x.com/2020/02/19/3E1r6I.png" srcset="/blog/img/loading.gif" alt="目录结构"></p><h1 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h1><ul><li><p>Windows：运行<code>./bin/startup.bat</code></p></li><li><p>Linux：运行<code>./bin/startup.sh</code></p></li></ul><p><img src="https://s2.ax1x.com/2020/02/19/3E39nx.png" srcset="/blog/img/loading.gif" alt="Windows10下运行"></p><a id="more"></a><h2 id="可能遇到的问题"><a href="#可能遇到的问题" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h2><h3 id="中文乱码"><a href="#中文乱码" class="headerlink" title="中文乱码"></a>中文乱码</h3><p>详细见博文 【<a href="https://melodyjerry.gitee.io/blog/2020/02/19/Tomcat%E5%90%AF%E5%8A%A8%E6%97%B6%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E7%9A%84%E9%97%AE%E9%A2%98/" target="_blank" rel="noopener">Tomcat启动时中文乱码的问题</a>】</p><h3 id="黑窗口一闪而过"><a href="#黑窗口一闪而过" class="headerlink" title="黑窗口一闪而过"></a>黑窗口一闪而过</h3><ul><li>原因： 没有正确配置JAVA_HOME环境变量</li><li>解决方案：正确配置JAVA_HOME环境变量</li></ul><h3 id="启动报错"><a href="#启动报错" class="headerlink" title="启动报错"></a>启动报错</h3><h4 id="暴力"><a href="#暴力" class="headerlink" title="暴力"></a>暴力</h4><ul><li>找到占用的端口号，并且找到对应的进程，杀死该进程</li></ul><ul><li>cmd&gt;<code>netstat -ano</code> &gt; 查看进程id（PID）&gt;任务管理器（查看-选择列-PID）&gt;结束进程（对应PID） </li></ul><h4 id="温柔"><a href="#温柔" class="headerlink" title="温柔"></a>温柔</h4><ul><li>修改自身的端口号</li></ul><ul><li><p><code>./conf/server.xml</code></p></li><li><p>`&lt;Connector port=”8888” protocol=”HTTP/1.1”</p><div class="hljs"><pre><code>connectionTimeout="20000"redirectPort="8445" /&gt;`</code></pre></div></li><li><p>一般会将tomcat的默认端口号修改为80。<strong>80端口号是http协议的默认端口号。</strong></p><ul><li>好处：在访问时，就不用输入端口号</li></ul></li><li><p>该方式可实现<strong>单机多Tomcat并存</strong></p></li></ul><h1 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h1><p>浏览器输入：</p><ul><li>访问自己：<a href="http://localhost:8080" target="_blank" rel="noopener">http://localhost:8080</a> </li><li>访问别人：http://别人的ip:8080 </li></ul><p><img src="https://s2.ax1x.com/2020/02/19/3E3PHK.png" srcset="/blog/img/loading.gif" alt="localhost"></p><h2 id="查看IP地址"><a href="#查看IP地址" class="headerlink" title="查看IP地址"></a>查看IP地址</h2><ul><li>cmd&gt;$ <code>ipconfig</code> &gt;IPv4地址</li></ul><h1 id="关闭"><a href="#关闭" class="headerlink" title="关闭"></a>关闭</h1><ul><li>针对服务器本身，推荐使用<strong>“正常关闭”</strong></li><li>但是后期是<strong>配合IDEA使用Tomcat</strong></li></ul><h2 id="正常关闭"><a href="#正常关闭" class="headerlink" title="正常关闭"></a>正常关闭</h2><ul><li>有两种方式：</li></ul><ol><li>手动运行<code>./bin/shutdown.bat</code></li><li>在Tomcat窗口，按<code>Ctrl+C</code></li></ol><h2 id="强制关闭"><a href="#强制关闭" class="headerlink" title="强制关闭"></a>强制关闭</h2><ul><li>点击<strong>Tomcat窗口右上角的X</strong></li></ul><h1 id="部署-配置项目的方式"><a href="#部署-配置项目的方式" class="headerlink" title="部署/配置项目的方式"></a>部署/配置项目的方式</h1><ul><li>有三种方式：</li></ul><ol><li>直接将项目放到<code>webapps</code>目录下即可</li><li>配置<code>conf/server.xml</code>文件</li><li>在<code>conf\Catalina\localhost</code>创建任意名称的xml文件</li></ol><h2 id="虚拟目录"><a href="#虚拟目录" class="headerlink" title="虚拟目录"></a>虚拟目录</h2><p>浏览器通过<code>http://localhost:8080</code>访问，需要访问到某一个项目时，需要在其随后加上<code>/目录或路径</code>（称作<strong>虚拟目录</strong>）</p><h2 id="直接将项目放到webapps目录下即可"><a href="#直接将项目放到webapps目录下即可" class="headerlink" title="直接将项目放到webapps目录下即可"></a>直接将项目放到webapps目录下即可</h2><ul><li><code>/项目(文件夹)名”</code>：项目的访问路径，也称<strong>虚拟目录</strong></li></ul><p><img src="https://s2.ax1x.com/2020/02/19/3EtemR.png" srcset="/blog/img/loading.gif" alt=""></p><h3 id="简化部署"><a href="#简化部署" class="headerlink" title="简化部署"></a>简化部署</h3><ul><li>第一种方式还有一种简化部署的形式</li></ul><ul><li>将项目打成一个war包，再将war包放置到webapps目录下</li></ul><ul><li>war 包会自动解压缩</li><li>若删除项目，删除对应war包即可。自动会删除对应生产的项目文件夹。</li></ul><p><img src="https://s2.ax1x.com/2020/02/19/3ENRrd.png" srcset="/blog/img/loading.gif" alt="war包自动解压"></p><h2 id="配置conf-server-xml文件"><a href="#配置conf-server-xml文件" class="headerlink" title="配置conf/server.xml文件"></a>配置conf/server.xml文件</h2><ul><li>在<code>&lt;Host&gt;</code>标签体中配置</li><li><code>&lt;Context docBase="D:\hello" path="/hehe" /&gt;</code></li><li><strong>docBase</strong>：项目存放的路径</li><li><strong>path</strong>：虚拟目录</li><li>缺点：<strong>需要修改配置文件，不太安全</strong></li></ul><h2 id="在conf-Catalina-localhost创建任意名称的xml文件"><a href="#在conf-Catalina-localhost创建任意名称的xml文件" class="headerlink" title="在conf\Catalina\localhost创建任意名称的xml文件"></a>在conf\Catalina\localhost创建任意名称的xml文件</h2><ul><li>在文件中编写</li><li><code>&lt;Context docBase="D:\hello" /&gt;</code></li><li>虚拟目录：xml文件的名称。比如<code>localhost:8080/xml文件/index.html</code></li><li>热部署方式：删除或修改文件名后，不需要重启服务。</li></ul><h1 id="部署项目的类型"><a href="#部署项目的类型" class="headerlink" title="部署项目的类型"></a>部署项目的类型</h1><ul><li>静态项目</li><li>动态项目</li></ul><h2 id="静态项目"><a href="#静态项目" class="headerlink" title="静态项目"></a>静态项目</h2><ul><li>只能存放静态资源</li><li>HTML、CSS、JavaScript、图片、音频、视频、文本等等</li></ul><h2 id="动态项目"><a href="#动态项目" class="headerlink" title="动态项目"></a>动态项目</h2><ul><li>不仅可存放静态资源，还有动态资源</li></ul><h3 id="目录结构-Java动态项目"><a href="#目录结构-Java动态项目" class="headerlink" title="目录结构(Java动态项目)"></a>目录结构(Java动态项目)</h3><div class="hljs"><pre><code class="hljs crystal">项目根目录  ﹂-WEB-INF目录  ﹂web.xml：web项目的核心配置文件  ﹂classes目录：放置字节码文件的目录  ﹂<span class="hljs-class"><span class="hljs-keyword">lib</span>目录：放置依赖的<span class="hljs-title">jar</span>包</span></code></pre></div><p>比如：</p><p><img src="https://s2.ax1x.com/2020/02/19/3Eg8mV.png" srcset="/blog/img/loading.gif" alt=""></p><h1 id="IDEA中配合使用Tomcat"><a href="#IDEA中配合使用Tomcat" class="headerlink" title="IDEA中配合使用Tomcat"></a>IDEA中配合使用Tomcat</h1><h2 id="集成到IDEA中"><a href="#集成到IDEA中" class="headerlink" title="集成到IDEA中"></a>集成到IDEA中</h2><p><img src="https://s2.ax1x.com/2020/02/19/3EDly8.png" srcset="/blog/img/loading.gif" alt=""></p><p><img src="https://s2.ax1x.com/2020/02/19/3EynY9.png" srcset="/blog/img/loading.gif" alt=""></p><p><img src="https://s2.ax1x.com/2020/02/19/3EybtJ.png" srcset="/blog/img/loading.gif" alt=""></p><h2 id="新建Web项目"><a href="#新建Web项目" class="headerlink" title="新建Web项目"></a>新建Web项目</h2><p><img src="https://s2.ax1x.com/2020/02/19/3Ec7W9.png" srcset="/blog/img/loading.gif" alt="勾选Web Application"></p><h2 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h2><p><img src="https://i.loli.net/2020/02/19/95CgPRtdiLbD4sX.gif" srcset="/blog/img/loading.gif" alt="run"></p><p>注意：</p><p><img src="https://s2.ax1x.com/2020/02/19/3EgBOx.png" srcset="/blog/img/loading.gif" alt="默认war打包部署"></p><blockquote><ol><li><p>默认war打包部署</p></li><li><p><code>/</code> ：默认虚拟目录设置<strong>当前项目为根目录</strong></p></li></ol></blockquote><h2 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h2><ul><li>重新部署项目时，不再重启Tomcat服务器</li></ul><p><img src="https://s2.ax1x.com/2020/02/19/3EW4XR.png" srcset="/blog/img/loading.gif" alt="免重启服务器"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>JavaWeb</tag>
      
      <tag>笔记</tag>
      
      <tag>Tomcat</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Github提速</title>
    <link href="/blog/2020/02/18/Github%E6%8F%90%E9%80%9F/"/>
    <url>/blog/2020/02/18/Github%E6%8F%90%E9%80%9F/</url>
    
    <content type="html"><![CDATA[<p>经常要clone github中的一些项目，无奈如果不爬梯子的话速度实在是龟速，经常1k/s，于是献上改Hosts大法。</p><p>第一步：打开<a href="https://link.zhihu.com/?target=http%3A//codeload.github.com.ipaddress.com/%23ipinfo">http://codeload.github.com.ipaddress.com/#ipinfo</a> 找到你浏览器上实际显示的IP地址， 例图 ：</p><p><img src="https://s2.ax1x.com/2020/02/19/3VCXo6.png" srcset="/blog/img/loading.gif" alt="3VCXo6.png"></p><p>第二步：按win+r唤起运行框，输入cmd，然后再依次ping一下上面的地址</p><p><img src="https://s2.ax1x.com/2020/02/19/3VPJYT.png" srcset="/blog/img/loading.gif" alt="3VPJYT.png"></p><p>第三步：打开你<code>C:\Windows\System32\drivers\etc\hosts</code>文件，在文件末尾追加如下一行即可</p><div class="hljs"><pre><code class="hljs accesslog"><span class="hljs-number">140.82.113.9</span>http://codeload.github.com</code></pre></div><a id="more"></a><p>另外以下这些github hosts，可能对你所在地区来说不是最优版本，最优hosts的选择可以参考上面三个步骤</p><div class="hljs"><pre><code class="hljs accesslog"># GitHub Start<span class="hljs-number">192.30.253.112</span> github.com<span class="hljs-number">192.30.253.119</span> gist.github.com<span class="hljs-number">151.101.100.133</span> assets-cdn.github.com<span class="hljs-number">151.101.100.133</span> raw.githubusercontent.com<span class="hljs-number">151.101.100.133</span> gist.githubusercontent.com<span class="hljs-number">151.101.100.133</span> cloud.githubusercontent.com<span class="hljs-number">151.101.100.133</span> camo.githubusercontent.com<span class="hljs-number">151.101.100.133</span> avatars0.githubusercontent.com<span class="hljs-number">151.101.100.133</span> avatars1.githubusercontent.com<span class="hljs-number">151.101.100.133</span> avatars2.githubusercontent.com<span class="hljs-number">151.101.100.133</span> avatars3.githubusercontent.com<span class="hljs-number">151.101.100.133</span> avatars4.githubusercontent.com<span class="hljs-number">151.101.100.133</span> avatars5.githubusercontent.com<span class="hljs-number">151.101.100.133</span> avatars6.githubusercontent.com<span class="hljs-number">151.101.100.133</span> avatars7.githubusercontent.com<span class="hljs-number">151.101.100.133</span> avatars8.githubusercontent.com# GitHub End</code></pre></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Github</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaScript：让页面元素动起来</title>
    <link href="/blog/2020/02/18/JavaScript%EF%BC%9A%E8%AE%A9%E9%A1%B5%E9%9D%A2%E5%85%83%E7%B4%A0%E5%8A%A8%E8%B5%B7%E6%9D%A5/"/>
    <url>/blog/2020/02/18/JavaScript%EF%BC%9A%E8%AE%A9%E9%A1%B5%E9%9D%A2%E5%85%83%E7%B4%A0%E5%8A%A8%E8%B5%B7%E6%9D%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><p>一门<strong>客户端脚本语言</strong></p><h1 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h1><ul><li>运行在客户端浏览器中的。每一个浏览器都有JavaScript的解析引擎</li><li>脚本语言：<strong>不需要编译</strong>，直接就可以被浏览器解析执行了</li></ul><h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><ul><li>可以来<strong>增强用户和html页面的交互过程</strong>，可以来控制html元素，让页面有一些动态的效果，<strong>增强用户的体验</strong>。</li></ul><a id="more"></a><h1 id="发展史"><a href="#发展史" class="headerlink" title="发展史"></a>发展史</h1><ol><li>1992年，Nombase公司，开发出第一门客户端脚本语言，专门用于表单的校验。命名为 ： C–    ，后来更名为：ScriptEase</li><li>1995年，Netscape(网景)公司，开发了一门客户端脚本语言：LiveScript。后来，请来SUN公司的专家，修改LiveScript，命名为JavaScript</li><li>1996年，微软抄袭JavaScript开发出JScript语言</li><li>1997年，ECMA(欧洲计算机制造商协会)，制定出客户端脚本语言的标准：ECMAScript，就是统一了所有客户端脚本语言的编码方式。</li></ol><h1 id="JavaScript-ECMAScript-JavaScript自己特有的东西-BOM-DOM"><a href="#JavaScript-ECMAScript-JavaScript自己特有的东西-BOM-DOM" class="headerlink" title="JavaScript = ECMAScript + JavaScript自己特有的东西(BOM+DOM)"></a>JavaScript = ECMAScript + JavaScript自己特有的东西(BOM+DOM)</h1><h1 id="ECMAScript：客户端脚本语言的标准"><a href="#ECMAScript：客户端脚本语言的标准" class="headerlink" title="ECMAScript：客户端脚本语言的标准"></a>ECMAScript：客户端脚本语言的标准</h1><h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><h3 id="与html结合方式"><a href="#与html结合方式" class="headerlink" title="与html结合方式"></a>与html结合方式</h3><h4 id="内部JS"><a href="#内部JS" class="headerlink" title="内部JS"></a>内部JS</h4><ul><li>定义<code>&lt;script&gt;</code>，标签体内容就是js代码</li></ul><h4 id="外部JS"><a href="#外部JS" class="headerlink" title="外部JS"></a>外部JS</h4><ul><li>定义<code>&lt;script&gt;</code>，通过src属性引入外部的js文件</li></ul><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ol><li><code>&lt;script&gt;</code>可以定义在html页面的任何地方。但是定义的位置会影响执行顺序。</li><li><code>&lt;script&gt;</code>可以定义多个。</li></ol><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><ol><li>单行注释：<code>// 注释内容</code></li><li>多行注释：<code>/* 注释内容 */</code></li></ol><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p>详细见 <a href="https://www.w3school.com.cn/js/js_datatypes.asp" target="_blank" rel="noopener">JavaScript 数据类型</a></p><h4 id="原始数据类型-基本数据类型"><a href="#原始数据类型-基本数据类型" class="headerlink" title="原始数据类型(基本数据类型)"></a>原始数据类型(基本数据类型)</h4><ol><li><code>number</code>：数字。 整数/小数/NaN(not a number 一个不是数字的数字类型)</li><li><code>string</code>：字符串。 字符串  “abc” “a” ‘abc’</li><li><code>boolean</code>：布尔。 true和false</li><li><code>null</code>：一个对象为空的占位符</li><li><code>undefined</code>：未定义。如果一个变量没有给初始化值，则会被默认赋值为undefined</li></ol><blockquote><p>Undefined 与 Null 的区别</p><p>Undefined 与 Null 的值相等，但类型不相等：</p><div class="hljs"><pre><code class="hljs actionscript"><span class="hljs-keyword">typeof</span> <span class="hljs-literal">undefined</span> <span class="hljs-comment">// undefined</span> <span class="hljs-keyword">typeof</span> <span class="hljs-literal">null</span> <span class="hljs-comment">// object</span><span class="hljs-literal">null</span> === <span class="hljs-literal">undefined</span><span class="hljs-comment">// false</span><span class="hljs-literal">null</span> == <span class="hljs-literal">undefined</span> <span class="hljs-comment">// true</span></code></pre></div></blockquote><h4 id="引用数据类型"><a href="#引用数据类型" class="headerlink" title="引用数据类型"></a>引用数据类型</h4><ul><li><code>对象（object）</code></li><li><code>数组（array）</code></li></ul><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><ul><li>变量：一小块存储数据的内存空间</li><li>Java语言是强类型语言，而JavaScript是弱类型语言。</li></ul><blockquote><p>强类型：在开辟变量存储空间时，定义了空间将来存储的数据的数据类型。只能存储固定类型的数据</p><p>弱类型：在开辟变量存储空间时，不定义空间将来的存储数据类型，可以存放任意类型的数据。</p></blockquote><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><div class="hljs"><pre><code class="hljs abnf">var 变量名 = 初始化值<span class="hljs-comment">;</span></code></pre></div><h4 id="typeof运算符"><a href="#typeof运算符" class="headerlink" title="typeof运算符"></a>typeof运算符</h4><ul><li>获取变量的类型</li></ul><blockquote><p>注：null运算后得到的是object</p></blockquote><p>更多见 <a href="https://www.cnblogs.com/zhuyeshen/p/10997779.html" target="_blank" rel="noopener">《JavaScript中typeof知多少？》</a></p><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><ul><li>注意：在JS中，如果运算数不是运算符所要求的类型，那么js引擎会自动的将运算数进行类型转换。</li><li>其他类型转number：<ul><li>string转number：按照字面值转换。如果字面值不是数字，则转为NaN（不是数字的数字）</li><li>boolean转number：true转为1，false转为0</li></ul></li></ul><h4 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h4><p>算术运算符对数值（文字或变量）执行算术运算。</p><table><thead><tr><th align="left">运算符</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">+</td><td align="left">加法</td></tr><tr><td align="left">-</td><td align="left">减法</td></tr><tr><td align="left">*</td><td align="left">乘法</td></tr><tr><td align="left">**</td><td align="left">幂（将第一个操作数提升到第二个操作数的幂。<a href="https://www.w3school.com.cn/js/js_es6.asp" target="_blank" rel="noopener">ES2016</a>）</td></tr><tr><td align="left">/</td><td align="left">除法</td></tr><tr><td align="left">%</td><td align="left">系数（返回除法的余数）</td></tr><tr><td align="left">++</td><td align="left">递增</td></tr><tr><td align="left">–</td><td align="left">递减</td></tr></tbody></table><h4 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h4><p>赋值运算符向 JavaScript 变量赋值。</p><table><thead><tr><th align="left">运算符</th><th>特殊说明</th><th align="left">例子</th><th align="left">等同于</th></tr></thead><tbody><tr><td align="left">=</td><td></td><td align="left">x = y</td><td align="left">x = y</td></tr><tr><td align="left">+=</td><td></td><td align="left">x += y</td><td align="left">x = x + y</td></tr><tr><td align="left">-=</td><td></td><td align="left">x -= y</td><td align="left">x = x - y</td></tr><tr><td align="left">*=</td><td></td><td align="left">x *= y</td><td align="left">x = x * y</td></tr><tr><td align="left">/=</td><td></td><td align="left">x /= y</td><td align="left">x = x / y</td></tr><tr><td align="left">%=</td><td>把余数赋值给变量</td><td align="left">x %= y</td><td align="left">x = x % y</td></tr><tr><td align="left">&lt;&lt;=</td><td></td><td align="left">x &lt;&lt;= y</td><td align="left">x = x &lt;&lt; y</td></tr><tr><td align="left">&gt;&gt;=</td><td></td><td align="left">x &gt;&gt;= y</td><td align="left">x = x &gt;&gt; y</td></tr><tr><td align="left">&gt;&gt;&gt;=</td><td></td><td align="left">x &gt;&gt;&gt;= y</td><td align="left">x = x &gt;&gt;&gt; y</td></tr><tr><td align="left">&amp;=</td><td></td><td align="left">x &amp;= y</td><td align="left">x = x &amp; y</td></tr><tr><td align="left">^=</td><td></td><td align="left">x ^= y</td><td align="left">x = x ^ y</td></tr><tr><td align="left">|=</td><td></td><td align="left">x |= y</td><td align="left">x = x | y</td></tr><tr><td align="left">**=</td><td></td><td align="left">x **= y</td><td align="left">x = x ** y</td></tr></tbody></table><p><strong>提示：***</strong>*=** 运算符属于 ECMAScript 2016 proposal (ES7) 的实验部分。它的跨浏览器表现并不稳定。请勿使用。</p><h4 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h4><p>比较运算符在逻辑语句中使用，以判定变量或值是否相等。</p><p>我们给定 x = 5，下表中解释了比较运算符：</p><table><thead><tr><th align="left">运算符</th><th align="left">描述</th><th align="left">比较</th><th align="left">返回</th></tr></thead><tbody><tr><td align="left">==</td><td align="left">等于</td><td align="left">x == 8</td><td align="left">false</td></tr><tr><td align="left"></td><td align="left"></td><td align="left">x == 5</td><td align="left">true</td></tr><tr><td align="left"></td><td align="left"></td><td align="left">x == “5”</td><td align="left">true</td></tr><tr><td align="left">===</td><td align="left">值相等并且类型相等</td><td align="left">x === 5</td><td align="left">true</td></tr><tr><td align="left"></td><td align="left"></td><td align="left">x === “5”</td><td align="left">false</td></tr><tr><td align="left">!=</td><td align="left">不相等</td><td align="left">x != 8</td><td align="left">true</td></tr><tr><td align="left">!==</td><td align="left">值不相等或类型不相等</td><td align="left">x !== 5</td><td align="left">false</td></tr><tr><td align="left"></td><td align="left"></td><td align="left">x !== “5”</td><td align="left">true</td></tr><tr><td align="left"></td><td align="left"></td><td align="left">x !== 8</td><td align="left">true</td></tr><tr><td align="left">&gt;</td><td align="left">大于</td><td align="left">x &gt; 8</td><td align="left">false</td></tr><tr><td align="left">&lt;</td><td align="left">小于</td><td align="left">x &lt; 8</td><td align="left">true</td></tr><tr><td align="left">&gt;=</td><td align="left">大于或等于</td><td align="left">x &gt;= 8</td><td align="left">false</td></tr><tr><td align="left">&lt;=</td><td align="left">小于或等于</td><td align="left">x &lt;= 8</td><td align="left">true</td></tr></tbody></table><p>比较方式</p><ol><li>类型相同：直接比较<ul><li>字符串：按照字典顺序比较。按位逐一比较，直到得出大小为止。</li></ul></li><li>类型不同：先进行类型转换，再比较<ul><li>===：全等于。在比较之前，先判断类型，如果类型不一样，则直接返回false</li></ul></li></ol><h4 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h4><p>逻辑运算符用于判定变量或值之间的逻辑。</p><p>我们给定 x = 6 且 y = 3，下表解释了逻辑运算符：</p><table><thead><tr><th align="left">运算符</th><th align="left">描述</th><th align="left">例子</th></tr></thead><tbody><tr><td align="left">&amp;&amp;</td><td align="left">与</td><td align="left">(x &lt; 10 &amp;&amp; y &gt; 1) 为 true</td></tr><tr><td align="left">||</td><td align="left">或</td><td align="left">(x == 5 || y == 5) 为 false</td></tr><tr><td align="left">!</td><td align="left">非</td><td align="left">!(x == y) 为 true</td></tr></tbody></table><ul><li>其他类型转boolean：</li></ul><ol><li>number：0或NaN为假，其他为真</li><li>string：除了空字符串(“”)，其他都是true</li><li>null&amp;undefined：都是false</li><li>对象：所有对象都为true</li></ol><h4 id="条件（三元）运算符"><a href="#条件（三元）运算符" class="headerlink" title="条件（三元）运算符"></a>条件（三元）运算符</h4><p>语法：</p><div class="hljs"><pre><code class="hljs angelscript">变量名=(表达式)? 值<span class="hljs-number">1</span>:值<span class="hljs-number">2</span>;</code></pre></div><ul><li>判断表达式的值，如果是true则取值1，如果是false则取值2；</li></ul><p>示例：    </p><div class="hljs"><pre><code class="hljs ebnf"><span class="hljs-attribute">var voteable</span> = (age &lt; 18) ? <span class="hljs-string">"太年轻"</span>:<span class="hljs-string">"足够成熟"</span>;</code></pre></div><h4 id="字符串运算符"><a href="#字符串运算符" class="headerlink" title="字符串运算符"></a>字符串运算符</h4><p>+ 运算符也可用于对字符串进行相加（concatenate，级联）。<br>+= 赋值运算符也可用于相加（级联）字符串：</p><p>实例：<br>给定 text1 = “Good “, text2 = “Morning”, 及 text3 = “”, 下面的表格解释了字符串运算符的使用：</p><table><thead><tr><th align="left">运算符</th><th align="left">例子</th><th align="left">text1</th><th align="left">text2</th><th align="left">text3或text1</th></tr></thead><tbody><tr><td align="left">+</td><td align="left">text3 = text1 + text2</td><td align="left">“Good “</td><td align="left">“Morning”</td><td align="left">“Good Morning”</td></tr><tr><td align="left">+=</td><td align="left">text1 += text2</td><td align="left">“Hello”</td><td align="left">“Kitty！”</td><td align="left">“Hello Kitty!”</td></tr></tbody></table><blockquote><p><strong>字符串+数字=字符串</strong></p><p>相加两个数字，将返回和。但对一个数字和一个字符串相加将返回一个<strong>字符串</strong>。</p></blockquote><h4 id="类型运算符"><a href="#类型运算符" class="headerlink" title="类型运算符"></a>类型运算符</h4><table><thead><tr><th align="left">运算符</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">typeof</td><td align="left">返回变量的类型。</td></tr><tr><td align="left">instanceof</td><td align="left">返回 true，如果对象是对象类型的实例。</td></tr></tbody></table><h5 id="typeof-运算符"><a href="#typeof-运算符" class="headerlink" title="typeof 运算符"></a>typeof 运算符</h5><p>您可以使用 typeof 运算符来确定 JavaScript 变量的数据类型。</p><div class="hljs"><pre><code class="hljs javascript"><span class="hljs-keyword">typeof</span> <span class="hljs-string">"Bill"</span>                 <span class="hljs-comment">// 返回 "string"</span><span class="hljs-keyword">typeof</span> <span class="hljs-number">3.14</span>                   <span class="hljs-comment">// 返回 "number"</span><span class="hljs-keyword">typeof</span> <span class="hljs-literal">NaN</span>                    <span class="hljs-comment">// 返回 "number"</span><span class="hljs-keyword">typeof</span> <span class="hljs-literal">false</span>                  <span class="hljs-comment">// 返回 "boolean"</span><span class="hljs-keyword">typeof</span> [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>]              <span class="hljs-comment">// 返回 "object"</span><span class="hljs-keyword">typeof</span> {<span class="hljs-attr">name</span>:<span class="hljs-string">'Bill'</span>, <span class="hljs-attr">age</span>:<span class="hljs-number">62</span>}  <span class="hljs-comment">// 返回 "object"</span><span class="hljs-keyword">typeof</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>()             <span class="hljs-comment">// 返回 "object"</span><span class="hljs-keyword">typeof</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{}         <span class="hljs-comment">// 返回 "function"</span><span class="hljs-keyword">typeof</span> myCar                  <span class="hljs-comment">// 返回 "undefined" *</span><span class="hljs-keyword">typeof</span> <span class="hljs-literal">null</span>                   <span class="hljs-comment">// 返回 "object"</span></code></pre></div><p><strong>请注意：</strong></p><ul><li>NaN 的数据类型是数值</li><li>数组的数据类型是对象</li><li>日期的数据类型是对象</li><li>null 的数据类型是对象</li><li>未定义变量的数据类型是 <em>undefined</em></li><li>尚未赋值的变量的数据类型也是 <em>undefined</em></li></ul><p>无法使用 typeof 去判断 JavaScript 对象是否是数组（或日期）。</p><p><strong>typeof 的数据类型：</strong></p><p>typeof 运算符不是变量。它属于运算符。运算符（比如 + - * /）没有数据类型。</p><p>但是，typeof 始终会<em>返回字符串</em>（包含运算数的类型）。</p><blockquote><p>另外涉及到<strong>Number() 转换数值，String() 转换字符串，Boolean() 转换布尔值。</strong></p></blockquote><h4 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h4><p>位运算符处理 32 位数。</p><p>该运算中的任何数值运算数都会被转换为 32 位的数。结果会被转换回 JavaScript 数。</p><table><thead><tr><th align="left">运算符</th><th align="left">描述</th><th align="left">例子</th><th align="left">等同于</th><th align="left">结果</th><th align="left">十进制</th></tr></thead><tbody><tr><td align="left">&amp;</td><td align="left">与 (and)</td><td align="left">5 &amp; 1</td><td align="left">0101 &amp; 0001</td><td align="left">0001</td><td align="left">1</td></tr><tr><td align="left">|</td><td align="left">或 (or)</td><td align="left">5 | 1</td><td align="left">0101 | 0001</td><td align="left">0101</td><td align="left">5</td></tr><tr><td align="left">~</td><td align="left">非 (not)</td><td align="left">~ 5</td><td align="left">~0101</td><td align="left">1010</td><td align="left">10</td></tr><tr><td align="left">^</td><td align="left">异或 (xor)</td><td align="left">5 ^ 1</td><td align="left">0101 ^ 0001</td><td align="left">0100</td><td align="left">4</td></tr><tr><td align="left">&lt;&lt;</td><td align="left">零填充左位移</td><td align="left">5 &lt;&lt; 1</td><td align="left">0101 &lt;&lt; 1</td><td align="left">1010</td><td align="left">10</td></tr><tr><td align="left">&gt;&gt;</td><td align="left">有符号右位移</td><td align="left">5 &gt;&gt; 1</td><td align="left">0101 &gt;&gt; 1</td><td align="left">0010</td><td align="left">2</td></tr><tr><td align="left">&gt;&gt;&gt;</td><td align="left">零填充右位移</td><td align="left">5 &gt;&gt;&gt; 1</td><td align="left">0101 &gt;&gt;&gt; 1</td><td align="left">0010</td><td align="left">2</td></tr></tbody></table><blockquote><p>上例使用 4 位无符号的例子。但是 JavaScript 使用 32 位有符号数。<br>因此，在 JavaScript 中，~ 5 不会返回 10，而是返回 -6。~00000000000000000000000000000101 将返回 11111111111111111111111111111010。</p></blockquote><blockquote><p>JavaScript 将数字存储为 64 位浮点数，但所有按位运算都以 32 位二进制数执行。<br>在执行位运算之前，JavaScript 将数字转换为 32 位有符号整数。<br>执行按位操作后，结果将转换回 64 位 JavaScript 数。</p></blockquote><h4 id="运算符优先级值"><a href="#运算符优先级值" class="headerlink" title="运算符优先级值"></a>运算符优先级值</h4><table><thead><tr><th align="left">值</th><th align="left">运算符</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">20</td><td align="left">( )</td><td align="left">表达式分组</td><td align="left">(3 + 4)</td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">19</td><td align="left">.</td><td align="left">成员</td><td align="left">person.name</td></tr><tr><td align="left">19</td><td align="left">[]</td><td align="left">成员</td><td align="left">person[“name”]</td></tr><tr><td align="left">19</td><td align="left">()</td><td align="left">函数调用</td><td align="left">myFunction()</td></tr><tr><td align="left">19</td><td align="left">new</td><td align="left">创建</td><td align="left">new Date()</td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">17</td><td align="left">++</td><td align="left">后缀递增</td><td align="left">i++</td></tr><tr><td align="left">17</td><td align="left">–</td><td align="left">后缀递减</td><td align="left">i–</td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">16</td><td align="left">++</td><td align="left">前缀递增</td><td align="left">++i</td></tr><tr><td align="left">16</td><td align="left">–</td><td align="left">前缀递减</td><td align="left">–i</td></tr><tr><td align="left">16</td><td align="left">!</td><td align="left">逻辑否</td><td align="left">!(x==y)</td></tr><tr><td align="left">16</td><td align="left">typeof</td><td align="left">类型</td><td align="left">typeof x</td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">15</td><td align="left">**</td><td align="left">求幂 (ES7)</td><td align="left">10 ** 2</td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">14</td><td align="left">*</td><td align="left">乘</td><td align="left">10 * 5</td></tr><tr><td align="left">14</td><td align="left">/</td><td align="left">除</td><td align="left">10 / 5</td></tr><tr><td align="left">14</td><td align="left">%</td><td align="left">模数除法</td><td align="left">10 % 5</td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">13</td><td align="left">+</td><td align="left">加</td><td align="left">10 + 5</td></tr><tr><td align="left">13</td><td align="left">-</td><td align="left">减</td><td align="left">10 - 5</td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">12</td><td align="left">&lt;&lt;</td><td align="left">左位移</td><td align="left">x &lt;&lt; 2</td></tr><tr><td align="left">12</td><td align="left">&gt;&gt;</td><td align="left">右位移</td><td align="left">x &gt;&gt; 2</td></tr><tr><td align="left">12</td><td align="left">&gt;&gt;&gt;</td><td align="left">右位移（无符号）</td><td align="left">x &gt;&gt;&gt; 2</td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">11</td><td align="left">&lt;</td><td align="left">小于</td><td align="left">x &lt; y</td></tr><tr><td align="left">11</td><td align="left">&lt;=</td><td align="left">小于或等于</td><td align="left">x &lt;= y</td></tr><tr><td align="left">11</td><td align="left">&gt;</td><td align="left">大于</td><td align="left">x &gt; y</td></tr><tr><td align="left">11</td><td align="left">&gt;=</td><td align="left">大于或等于</td><td align="left">x &gt;= y</td></tr><tr><td align="left">11</td><td align="left">in</td><td align="left">对象中的属性</td><td align="left">“PI” in Math</td></tr><tr><td align="left">11</td><td align="left">instanceof</td><td align="left">对象的实例</td><td align="left">instanceof Array</td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">10</td><td align="left">==</td><td align="left">相等</td><td align="left">x == y</td></tr><tr><td align="left">10</td><td align="left">===</td><td align="left">严格相等</td><td align="left">x === y</td></tr><tr><td align="left">10</td><td align="left">!=</td><td align="left">不相等</td><td align="left">x != y</td></tr><tr><td align="left">10</td><td align="left">!==</td><td align="left">严格不相等</td><td align="left">x !== y</td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">9</td><td align="left">&amp;</td><td align="left">按位与</td><td align="left">x &amp; y</td></tr><tr><td align="left">8</td><td align="left">^</td><td align="left">按位 XOR</td><td align="left">x ^ y</td></tr><tr><td align="left">7</td><td align="left">|</td><td align="left">按位或</td><td align="left">x | y</td></tr><tr><td align="left">6</td><td align="left">&amp;&amp;</td><td align="left">逻辑与</td><td align="left">x &amp;&amp; y</td></tr><tr><td align="left">5</td><td align="left">||</td><td align="left">逻辑否</td><td align="left">x || y</td></tr><tr><td align="left">4</td><td align="left">? :</td><td align="left">条件</td><td align="left">? “Yes” : “No”</td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">3</td><td align="left">=</td><td align="left">赋值</td><td align="left">x = y</td></tr><tr><td align="left">3</td><td align="left">+=</td><td align="left">赋值</td><td align="left">x += y</td></tr><tr><td align="left">3</td><td align="left">-=</td><td align="left">赋值</td><td align="left">x -= y</td></tr><tr><td align="left">3</td><td align="left">*=</td><td align="left">赋值</td><td align="left">x *= y</td></tr><tr><td align="left">3</td><td align="left">%=</td><td align="left">赋值</td><td align="left">x %= y</td></tr><tr><td align="left">3</td><td align="left">&lt;&lt;=</td><td align="left">赋值</td><td align="left">x &lt;&lt;= y</td></tr><tr><td align="left">3</td><td align="left">&gt;&gt;=</td><td align="left">赋值</td><td align="left">x &gt;&gt;= y</td></tr><tr><td align="left">3</td><td align="left">&gt;&gt;&gt;=</td><td align="left">赋值</td><td align="left">x &gt;&gt;&gt;= y</td></tr><tr><td align="left">3</td><td align="left">&amp;=</td><td align="left">赋值</td><td align="left">x &amp;= y</td></tr><tr><td align="left">3</td><td align="left">^=</td><td align="left">赋值</td><td align="left">x ^= y</td></tr><tr><td align="left">3</td><td align="left">|=</td><td align="left">赋值</td><td align="left">x |= y</td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">2</td><td align="left">yield</td><td align="left">暂停函数</td><td align="left">yield x</td></tr><tr><td align="left">1</td><td align="left">,</td><td align="left">逗号</td><td align="left">7 , 8</td></tr></tbody></table><p><strong>注意：</strong>淡红色指示实验性或建议性的技术（ECMASScript 2016 或 ES7）</p><p><strong>提示：</strong>括号中的表达式会在值在表达式的其余部分中被使用之前进行完全计算。</p><h3 id="流程控制语句"><a href="#流程控制语句" class="headerlink" title="流程控制语句"></a>流程控制语句</h3><ol><li><code>if...else...</code></li><li><code>switch</code>:<ul><li>在java中，switch语句可以接受的数据类型： byte int shor char,枚举(1.5) ,String(1.7)<ul><li>switch(变量):<ul><li>case 值:</li></ul></li></ul></li><li>在JS中,switch语句可以接受任意的原始数据类型</li></ul></li><li><code>while</code></li><li><code>for</code></li></ol><h3 id="JS特殊语法"><a href="#JS特殊语法" class="headerlink" title="JS特殊语法"></a>JS特殊语法</h3><ol><li><p>语句以;结尾，如果一行只有一条语句则 ;可以省略 (不建议)</p></li><li><p>变量的定义使用var关键字，也可以不使用</p><ul><li>用： 定义的变量是局部变量</li><li>不用：定义的变量是全局变量(不建议)</li></ul></li></ol><h3 id="练习：99乘法表"><a href="#练习：99乘法表" class="headerlink" title="练习：99乘法表"></a>练习：99乘法表</h3><div class="hljs"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE html&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">"en"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">"UTF-8"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>99乘法表<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span>td{border: 1px solid;}<span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"><span class="hljs-built_in">document</span>.write(<span class="hljs-string">"&lt;table  align='center'&gt;"</span>);</span><span class="actionscript"><span class="hljs-comment">//1.完成基本的for循环嵌套，展示乘法表</span></span><span class="actionscript"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">9</span> ; i++) {</span><span class="javascript"><span class="hljs-built_in">document</span>.write(<span class="hljs-string">"&lt;tr&gt;"</span>);</span><span class="actionscript"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = <span class="hljs-number">1</span>; j &lt;=i ; j++) {</span><span class="javascript"><span class="hljs-built_in">document</span>.write(<span class="hljs-string">"&lt;td&gt;"</span>);</span><span class="actionscript"><span class="hljs-comment">//输出  1 * 1 = 1</span></span><span class="javascript"><span class="hljs-built_in">document</span>.write(i + <span class="hljs-string">" * "</span> + j + <span class="hljs-string">" = "</span> + ( i*j) +<span class="hljs-string">"&amp;nbsp;&amp;nbsp;&amp;nbsp;"</span>);</span><span class="javascript"><span class="hljs-built_in">document</span>.write(<span class="hljs-string">"&lt;/td&gt;"</span>);</span>}/*//输出换行<span class="javascript"><span class="hljs-built_in">document</span>.write(<span class="hljs-string">"&lt;br&gt;"</span>);*<span class="hljs-regexp">/</span></span><span class="javascript"><span class="hljs-built_in">document</span>.write(<span class="hljs-string">"&lt;/tr&gt;"</span>);</span>}<span class="actionscript"><span class="hljs-comment">//2.完成表格嵌套</span></span><span class="javascript"><span class="hljs-built_in">document</span>.write(<span class="hljs-string">"&lt;/table&gt;"</span>);</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre></div><h2 id="基本对象"><a href="#基本对象" class="headerlink" title="基本对象"></a>基本对象</h2><h3 id="Function：函数-方法-对象"><a href="#Function：函数-方法-对象" class="headerlink" title="Function：函数(方法)对象"></a>Function：函数(方法)对象</h3><h4 id="创建格式"><a href="#创建格式" class="headerlink" title="创建格式"></a>创建格式</h4><ol><li><div class="hljs"><pre><code class="hljs arcade"><span class="hljs-function"><span class="hljs-keyword">function</span> 方法名称(<span class="hljs-params">形式参数列表</span>)</span>{方法体}</code></pre></div></li><li><div class="hljs"><pre><code class="hljs actionscript"><span class="hljs-keyword">var</span> 方法名 = <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(形式参数列表)</span></span>{方法体}</code></pre></div></li><li><p>建议不用</p><div class="hljs"><pre><code class="hljs kotlin"><span class="hljs-keyword">var</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> = new <span class="hljs-title">Function</span><span class="hljs-params">(形式参数列表,方法体)</span></span>;  <span class="hljs-comment">//忘掉吧</span></code></pre></div></li></ol><h4 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h4><h4 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h4><ul><li><code>length</code>：代表形参的个数</li></ul><h4 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h4><ol><li>方法定义是，形参的类型不用写,返回值类型也不写。</li><li>方法是一个对象，如果定义名称相同的方法，会覆盖</li><li>在JS中，方法的调用只与方法的名称有关，和参数列表无关</li><li>在方法声明中有一个隐藏的内置对象（数组），arguments,封装所有的实际参数</li></ol><h4 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h4><div class="hljs"><pre><code class="hljs xml">方法名称(实际参数列表);<span class="hljs-comment">&lt;!--</span><span class="hljs-comment">比如：</span><span class="hljs-comment">var x = myFunction(4, 3);        // 调用函数，返回值被赋值给 x</span><span class="hljs-comment">--&gt;</span></code></pre></div><p>函数中的代码将在其他代码调用该函数时执行：</p><ul><li>当事件发生时（当用户点击按钮时）</li><li>当 JavaScript 代码调用时</li><li>自动的（自调用）</li></ul><h4 id="返回"><a href="#返回" class="headerlink" title="返回"></a>返回</h4><p>当 JavaScript 到达 <code>return</code> 语句，函数将停止执行。<br>如果函数被某条语句调用，JavaScript 将在调用语句之后“返回”执行代码。<br>函数通常会计算出返回值。这个返回值会返回给调用者：</p><div class="hljs"><pre><code class="hljs actionscript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">myFunction</span><span class="hljs-params">(a, b)</span> </span>{    <span class="hljs-keyword">return</span> a * b;                <span class="hljs-comment">// 函数返回 a 和 b 的乘积</span>}</code></pre></div><h3 id="Array：数组对象"><a href="#Array：数组对象" class="headerlink" title="Array：数组对象"></a>Array：数组对象</h3><h4 id="创建格式-1"><a href="#创建格式-1" class="headerlink" title="创建格式"></a>创建格式</h4><ol><li><code>var arr = new Array(元素列表);</code></li><li><code>var arr = new Array(默认长度);</code></li><li><code>var arr = [元素列表];</code></li></ol><h4 id="方法-1"><a href="#方法-1" class="headerlink" title="方法"></a>方法</h4><ul><li><code>join(参数)</code>：将数组中的元素按照指定的分隔符拼接为字符串</li><li><code>push()</code>：向数组的末尾添加一个或更多元素，并返回新的长度</li></ul><h4 id="属性-1"><a href="#属性-1" class="headerlink" title="属性"></a>属性</h4><ul><li><code>lengh</code>:数组的长度</li></ul><h4 id="特点-2"><a href="#特点-2" class="headerlink" title="特点"></a>特点</h4><div class="hljs"><pre><code>1. JS中，数组元素的类型可变的。2. JS中，数组长度可变的。</code></pre></div><h3 id="Boolean：布尔"><a href="#Boolean：布尔" class="headerlink" title="Boolean：布尔"></a>Boolean：布尔</h3><p>布尔值只有两个值：<code>true</code> 或 <code>false</code>。</p><p><strong>实例</strong></p><div class="hljs"><pre><code class="hljs gml"><span class="hljs-keywords">var</span> <span class="hljs-symbol">x</span> = <span class="hljs-literal">true</span>;<span class="hljs-keywords">var</span> <span class="hljs-symbol">y</span> = <span class="hljs-literal">false</span>;</code></pre></div><p>布尔值经常用在条件测试中。</p><h3 id="Date：日期对象"><a href="#Date：日期对象" class="headerlink" title="Date：日期对象"></a>Date：日期对象</h3><h4 id="创建格式-2"><a href="#创建格式-2" class="headerlink" title="创建格式"></a>创建格式</h4><div class="hljs"><pre><code class="hljs lasso"><span class="hljs-built_in">var</span> <span class="hljs-built_in">date</span> = <span class="hljs-literal">new</span> <span class="hljs-built_in">Date</span>();</code></pre></div><h4 id="方法-2"><a href="#方法-2" class="headerlink" title="方法"></a>方法</h4><ul><li><code>toLocaleString()</code>：返回当前date对象对应的时间本地字符串格式</li><li><code>getTime()</code>：获取毫秒值。返回当前如期对象描述的时间到1970年1月1日零点的毫秒值差</li></ul><h3 id="Math：数学对象"><a href="#Math：数学对象" class="headerlink" title="Math：数学对象"></a>Math：数学对象</h3><h4 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h4><h4 id="特点-3"><a href="#特点-3" class="headerlink" title="特点"></a>特点</h4><ul><li>Math对象不用创建，直接使用。  </li><li>格式：<code>Math.方法名();</code></li></ul><h4 id="方法-3"><a href="#方法-3" class="headerlink" title="方法"></a>方法</h4><ul><li><code>random()</code>:返回 0 ~ 1 之间的随机数。 含0不含1</li><li><code>ceil(x)</code>：对数进行上舍入</li><li><code>floor(x)</code>：对数进行下舍入</li><li><code>round(x)</code>：把数四舍五入为最接近的整数</li></ul><h4 id="属性-2"><a href="#属性-2" class="headerlink" title="属性"></a>属性</h4><ul><li><code>PI</code></li></ul><h3 id="Number：数值"><a href="#Number：数值" class="headerlink" title="Number：数值"></a>Number：数值</h3><p>JavaScript 只有一种数值类型。</p><p>写数值时用不用小数点均可：</p><p><strong>实例</strong></p><div class="hljs"><pre><code class="hljs actionscript"><span class="hljs-keyword">var</span> x1 = <span class="hljs-number">34.00</span>;     <span class="hljs-comment">// 带小数点</span><span class="hljs-keyword">var</span> x2 = <span class="hljs-number">34</span>;        <span class="hljs-comment">// 不带小数点</span></code></pre></div><p>超大或超小的数值可以用科学计数法来写：</p><p><strong>实例</strong></p><div class="hljs"><pre><code class="hljs gml"><span class="hljs-keywords">var</span> <span class="hljs-symbol">y</span> = <span class="hljs-number">123e5</span>;      <span class="hljs-comment">// 12300000</span><span class="hljs-keywords">var</span> z = <span class="hljs-number">123e-5</span>;     <span class="hljs-comment">// 0.00123</span></code></pre></div><h3 id="String：字符串"><a href="#String：字符串" class="headerlink" title="String：字符串"></a>String：字符串</h3><p>字符串（或文本字符串）是一串字符（比如 “Bill Gates”）。</p><p>字符串被引号包围。您可使用单引号或双引号：</p><p><strong>实例</strong></p><div class="hljs"><pre><code class="hljs js"><span class="hljs-keyword">var</span> carName = <span class="hljs-string">"Porsche 911"</span>;   <span class="hljs-comment">// 使用双引号</span><span class="hljs-keyword">var</span> carName = <span class="hljs-string">'Porsche 911'</span>;   <span class="hljs-comment">// 使用单引号</span></code></pre></div><p>您可以在字符串内使用引号，只要这些引号与包围字符串的引号不匹配：</p><p><strong>实例</strong></p><div class="hljs"><pre><code class="hljs js"><span class="hljs-keyword">var</span> answer = <span class="hljs-string">"It's alright"</span>;             <span class="hljs-comment">// 双引号内的单引号</span><span class="hljs-keyword">var</span> answer = <span class="hljs-string">"He is called 'Bill'"</span>;    <span class="hljs-comment">// 双引号内的单引号</span><span class="hljs-keyword">var</span> answer = <span class="hljs-string">'He is called "Bill"'</span>;    <span class="hljs-comment">// 单引号内的双引号</span></code></pre></div><h3 id="RegExp：正则表达式对象"><a href="#RegExp：正则表达式对象" class="headerlink" title="RegExp：正则表达式对象"></a>RegExp：正则表达式对象</h3><h4 id="正则表达式：定义字符串的组成规则。"><a href="#正则表达式：定义字符串的组成规则。" class="headerlink" title="正则表达式：定义字符串的组成规则。"></a>正则表达式：定义字符串的组成规则。</h4><ol><li>单个字符:[]<br>如： <code>[a]</code> <code>[ab]</code> <code>[a-zA-Z0-9_]</code></li></ol><ul><li><p>特殊符号代表特殊含义的单个字符：</p><p>  <code>\d</code>:单个数字字符 [0-9]<br>  <code>\w</code>:单个单词字符 [a-zA-Z0-9_]</p></li></ul><ol start="2"><li>量词符号：<br> <code>?</code>：表示<strong>出现0次或1次</strong><br> <code>*</code>：表示<strong>出现0次或多次</strong><br> <code>+</code>：表示<strong>出现1次或多次</strong><br> <code>{m,n}</code>:表示 m&lt;= 数量 &lt;= n</li></ol><blockquote><p>m如果缺省：<code>{,n}</code>：最多n次<br>n 如果缺省：<code>{m,}</code>：最少m次</p></blockquote><ol start="3"><li><p>开始结束符号</p><ul><li><code>^</code>:开始</li><li><code>$</code>:结束</li></ul></li></ol><h4 id="正则对象"><a href="#正则对象" class="headerlink" title="正则对象"></a>正则对象</h4><h5 id="创建-1"><a href="#创建-1" class="headerlink" title="创建"></a>创建</h5><p>有两种创建形式：</p><ol><li><code>var reg = new RegExp("正则表达式");</code></li><li><code>var reg = /正则表达式/;</code></li></ol><h5 id="方法-4"><a href="#方法-4" class="headerlink" title="方法"></a>方法</h5><ol><li><code>test(参数)</code>:验证指定的字符串是否符合正则定义的规范    </li></ol><h3 id="Global：全局对象"><a href="#Global：全局对象" class="headerlink" title="Global：全局对象"></a>Global：全局对象</h3><h4 id="特点-4"><a href="#特点-4" class="headerlink" title="特点"></a>特点</h4><ul><li><strong>全局对象</strong></li></ul><p>这个Global中封装的方法不需要对象就可以直接调用：<code>方法名();</code></p><h4 id="方法-5"><a href="#方法-5" class="headerlink" title="方法"></a>方法</h4><ul><li><p><code>encodeURI()</code>：url编码</p></li><li><p><code>decodeURI()</code>：url解码</p></li><li><p><code>encodeURIComponent()</code>：url编码,编码的字符更多</p></li><li><p><code>decodeURIComponent()</code>：url解码</p></li><li><p><code>parseInt()</code>：将字符串转为数字</p><ul><li>逐一判断每一个字符是否是数字，直到不是数字为止，将前边数字部分转为number</li></ul></li><li><p><code>isNaN()</code>：判断一个值是否是NaN</p><ul><li>NaN六亲不认，连自己都不认。<strong>NaN参与的==比较</strong>，全部都是<strong>false</strong></li></ul></li><li><p><code>eval()</code>：讲 JavaScript 字符串，并把它作为脚本代码来执行。</p></li></ul><h5 id="URL编码"><a href="#URL编码" class="headerlink" title="URL编码"></a>URL编码</h5><blockquote><p>传智播客 =  %E4%BC%A0%E6%99%BA%E6%92%AD%E5%AE%A2</p></blockquote><h1 id="BOM"><a href="#BOM" class="headerlink" title="BOM"></a>BOM</h1><h2 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h2><ul><li>Browser Object Model 浏览器对象模型</li></ul><ul><li>将浏览器的各个组成部分封装成对象。</li></ul><h2 id="浏览器对象模型（Browser-Object-Model-BOM-）"><a href="#浏览器对象模型（Browser-Object-Model-BOM-）" class="headerlink" title="浏览器对象模型（Browser Object Model (BOM)）"></a>浏览器对象模型（Browser Object Model (BOM)）</h2><p>不存在浏览器对象模型（BOM）的官方标准。</p><p>现代的浏览器已经（几乎）实现了 JavaScript 交互相同的方法和属性，因此它经常作为 BOM 的方法和属性被提到。</p><blockquote><p>该部分笔记不全，详细见 <a href="https://www.w3school.com.cn/js/js_window.asp" target="_blank" rel="noopener">JavaScript Window - 浏览器对象模型</a></p></blockquote><h2 id="组成"><a href="#组成" class="headerlink" title="组成"></a>组成</h2><ul><li><code>Window</code>：窗口对象</li><li><code>Navigator</code>：浏览器对象</li><li><code>Screen</code>：显示器屏幕对象</li><li><code>History</code>：历史记录对象</li><li><code>Location</code>：地址栏对象</li></ul><h2 id="Navigator-浏览器对象"><a href="#Navigator-浏览器对象" class="headerlink" title="Navigator 浏览器对象"></a>Navigator 浏览器对象</h2><ul><li>Navigator 对象获取一些浏览器的信息.</li></ul><h3 id="属性-3"><a href="#属性-3" class="headerlink" title="属性"></a>属性</h3><ul><li><code>appName</code> 返回浏览器的名称。</li></ul><blockquote><p>相关文档 <a href="https://www.w3school.com.cn/jsref/dom_obj_navigator.asp" target="_blank" rel="noopener">https://www.w3school.com.cn/jsref/dom_obj_navigator.asp</a></p></blockquote><h2 id="Screen-屏幕对象"><a href="#Screen-屏幕对象" class="headerlink" title="Screen 屏幕对象"></a>Screen 屏幕对象</h2><ul><li>Screen 对象包含有关客户端显示屏幕的信息。</li></ul><h3 id="属性-4"><a href="#属性-4" class="headerlink" title="属性"></a>属性</h3><ul><li><code>width</code>: 返回屏幕的宽度</li><li><code>height</code>: 返回屏幕的高度</li></ul><blockquote><p>相关文档 <a href="https://www.w3school.com.cn/jsref/dom_obj_screen.asp" target="_blank" rel="noopener">https://www.w3school.com.cn/jsref/dom_obj_screen.asp</a></p></blockquote><h2 id="Location-地址栏对象"><a href="#Location-地址栏对象" class="headerlink" title="Location 地址栏对象"></a>Location 地址栏对象</h2><ul><li>Location 对象包含有关当前 URL 的信息。</li></ul><h3 id="创建-获取"><a href="#创建-获取" class="headerlink" title="创建(获取)"></a>创建(获取)</h3><ol><li><code>window.location</code></li><li><code>location</code></li></ol><h3 id="方法-6"><a href="#方法-6" class="headerlink" title="方法"></a>方法</h3><ul><li><code>reload()</code>: 重新加载当前文档,刷新操作.</li></ul><h3 id="属性-5"><a href="#属性-5" class="headerlink" title="属性"></a>属性</h3><ul><li><code>href</code>: 设置或返回完整的url.</li></ul><h3 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h3><div class="hljs"><pre><code class="hljs js">&lt;body&gt;&lt;input id=<span class="hljs-string">"btn"</span> type=<span class="hljs-string">"button"</span> value=<span class="hljs-string">"跳转"</span>&gt;&lt;script type=<span class="hljs-string">"text/javascript"</span>&gt;<span class="hljs-comment">// 获取input标签</span><span class="hljs-keyword">var</span> btn = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"btn"</span>);<span class="hljs-comment">// 设置事件</span>btn.onclick = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>)</span>{location.href = <span class="hljs-string">"https://www.baidu.com"</span>;}&lt;<span class="hljs-regexp">/script&gt;</span><span class="hljs-regexp"></span><span class="hljs-regexp">&lt;/</span>body&gt;</code></pre></div><blockquote><p>相关文档 <a href="https://www.w3school.com.cn/jsref/dom_obj_location.asp" target="_blank" rel="noopener">https://www.w3school.com.cn/jsref/dom_obj_location.asp</a></p></blockquote><h2 id="History-对象"><a href="#History-对象" class="headerlink" title="History 对象"></a>History 对象</h2><ul><li>History 对象包含用户（在浏览器窗口中）访问过的 URL。</li></ul><h3 id="创建-获取-1"><a href="#创建-获取-1" class="headerlink" title="创建(获取)"></a>创建(获取)</h3><ol><li><code>window.history</code></li><li><code>history</code></li></ol><h3 id="方法-7"><a href="#方法-7" class="headerlink" title="方法"></a>方法</h3><ul><li><code>back()</code> 加载 history 列表中的前一个 URL。</li><li><code>forward()</code> 加载 history 列表中的下一个 URL。</li><li><code>go(参数)</code>加载 history 列表中的某个具体页面。</li></ul><blockquote><p>参数：<br>正数：前进几个历史记录<br>负数：后退几个历史记录</p></blockquote><h3 id="属性-6"><a href="#属性-6" class="headerlink" title="属性"></a>属性</h3><ul><li><code>length</code>: 返回当前窗口历史列表中的url数量.</li></ul><h2 id="Window-窗口对象"><a href="#Window-窗口对象" class="headerlink" title="Window 窗口对象"></a>Window 窗口对象</h2><ul><li>Window 对象表示浏览器中打开的窗口。</li></ul><h3 id="方法-8"><a href="#方法-8" class="headerlink" title="方法"></a>方法</h3><ol><li><p>与弹出框有关的方法</p><ul><li><code>alert()</code>: 显示带有一段消息和一个确认按钮的警告框.</li><li><code>confirm()</code>: 显示带有一段消息,以及确认和取消两个按钮的对话框. 若点击确定,该方法返回true, 点击取消,返回false.<ul><li>如果用户点击<strong>确定</strong>按钮，则方法返回<strong>true</strong></li><li>如果用户点击<strong>取消</strong>按钮，则方法返回<strong>false</strong></li></ul></li><li><code>prompt()</code>: 显示可提示用户输入的对话框. 返回值为用户输入的内容.</li></ul></li><li><p>与打开关闭有关的方法</p><ul><li><code>close()</code>:关闭浏览器窗口。<strong>谁调用我 ，我关谁</strong></li><li><code>open(arg1, arg2, arg3, arg4)</code>: 打开一个新的浏览器窗口，<strong>返回新的Window对象</strong><ul><li><strong>注意</strong>: 这4个参数都是可选的, arg1 传入url, arg3传入窗口的特征(设置宽高等)</li></ul></li></ul></li></ol><div class="hljs"><pre><code class="hljs js"><span class="hljs-built_in">window</span>.open(<span class="hljs-string">"https://www.baidu.com"</span>,<span class="hljs-string">""</span>,<span class="hljs-string">"width=100,height=100"</span>);</code></pre></div><ol start="3"><li><p>与定时器有关的方法</p><ul><li><code>setTimeout(code,millisec)</code>: 在指定的毫秒数后调用函数或计算表达式。<ul><li>参数：<ul><li>js代码或者方法对象</li><li>毫秒值</li></ul></li><li>返回值：唯一标识，用于取消定时器</li></ul></li><li><code>clearTimeout(id_of_settimeout)</code>: 取消由 setTimeout() 方法设置的 timeout。传入某个定时器的id用来取消指定的定时器.</li><li><code>setInterval(code,millisec)</code>: 按照指定的周期（以毫秒计）来调用函数或计算表达式。</li><li><code>clearInterval(id_of_settimeout)</code>: 取消由 setInterval() 设置的 timeout。</li></ul></li></ol><h3 id="属性-7"><a href="#属性-7" class="headerlink" title="属性"></a>属性</h3><ol><li><p>获取其他BOM对象</p><ul><li><code>History</code></li><li><code>location</code></li><li><code>Navigator</code></li><li><code>Screen</code></li></ul></li><li><p>获取DOM对象</p><ul><li><code>document</code></li></ul></li></ol><h3 id="特点-5"><a href="#特点-5" class="headerlink" title="特点"></a>特点</h3><ul><li>Window对象不需要创建可以直接使用： <code>window.方法名()</code></li><li>window引用可以省略：<code>方法名();</code></li></ul><h1 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h1><h2 id="简单学习：为了满足案例要求"><a href="#简单学习：为了满足案例要求" class="headerlink" title="简单学习：为了满足案例要求"></a>简单学习：为了满足案例要求</h2><ul><li><p>功能：控制html文档的内容</p><ul><li>获取页面标签(元素)对象：Element<div class="hljs"><pre><code>* `document.getElementById("id值")`:通过元素的id获取元素对象</code></pre></div></li></ul></li><li><p>操作Element对象：</p><ol><li>修改属性值：<ol><li>明确获取的对象是哪一个？</li><li>查看API文档，找其中有哪些属性可以设置</li></ol></li><li>修改标签体内容：<ul><li>属性：``innerHTML`</li></ul><ol><li>获取元素对象</li><li>使用<code>innerHTML</code>属性修改标签体内容</li></ol></li></ol></li></ul><h2 id="概念-2"><a href="#概念-2" class="headerlink" title="概念"></a>概念</h2><ul><li><p>Document Object Model 文档对象模型</p></li><li><p>将标记语言文档的各个组成部分，封装为对象。可以使用这些对象，对标记语言文档进行CRUD的动态操作</p></li></ul><h2 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h2><ul><li>控制html文档的内容</li></ul><h2 id="W3C-DOM-标准被分为-3-个不同的部分"><a href="#W3C-DOM-标准被分为-3-个不同的部分" class="headerlink" title="W3C DOM 标准被分为 3 个不同的部分"></a>W3C DOM 标准被分为 3 个不同的部分</h2><ul><li><p>核心 DOM — 针对任何结构化文档的标准模型</p><ul><li>Document：文档对象</li><li>Element：元素对象</li><li>Attribute：属性对象</li><li>Text：文本对象</li><li>Comment：注释对象</li><li>Node：节点对象，其他5个(D、E、A、T、C)的父对象</li></ul></li><li><p>XML DOM — 针对 XML 文档的标准模型</p></li><li><p>HTML DOM — 针对 HTML 文档的标准模型</p></li></ul><h2 id="对象树"><a href="#对象树" class="headerlink" title="对象树"></a>对象树</h2><p>当网页被加载时，浏览器会创建页面的文档对象模型（<em>D</em>ocument <em>O</em>bject <em>M</em>odel）。</p><p><em>HTML DOM</em> 模型被结构化为<em>对象树</em>：</p><p><img src="https://www.w3school.com.cn/i/ct_htmltree.gif" srcset="/blog/img/loading.gif" alt="对象树"></p><p>DOM: <code>Document Object Model</code> 文档对象模型</p><ul><li><strong>文档</strong>: 超文本文档(超文本标记文档) html, xml</li><li><strong>对象</strong>: 提供了属性和方法.</li><li><strong>模型</strong>: 使用属性和方法操作超文本标记文档</li><li>可以使用js里面的dom里面提供的对象,使用这些对象的属性和方法,对标记型文档进行操作.</li><li>dom里面已经将html里面的标签,属性,文本内容都封装成了对象.</li></ul><blockquote><p>该部分笔记不全，详细见 <a href="https://www.w3school.com.cn/js/js_htmldom.asp" target="_blank" rel="noopener">JavaScript HTML DOM</a></p></blockquote><h3 id="DOM解析html文档的过程"><a href="#DOM解析html文档的过程" class="headerlink" title="DOM解析html文档的过程"></a>DOM解析html文档的过程</h3><p><img src="https://s2.ax1x.com/2020/02/18/3FtrGQ.png" srcset="/blog/img/loading.gif" alt="3FtrGQ.png"></p><p>根据html的层级结构,在内存中分配一个<strong>树形结构</strong>, 需要把html中的每部分封装为对象.</p><ul><li><p><code>Document</code>对象: 整个文档</p></li><li><p><code>Element</code>对象: 标签对象</p></li><li><p><code>Attribute</code>对象: 首先要获取标签对象</p></li><li><p><code>Text</code>对象: 首先要获取标签对象</p></li><li><p><code>Comment</code>对象: 注释对象</p></li><li><p><code>Node节点对象</code>: 这个对象是上面这些对象的父对象, 如果在对象内找不到想要的方法, 此时可以在Node节点对象中去查找想要的方法.</p></li></ul><h2 id="核心DOM模型"><a href="#核心DOM模型" class="headerlink" title="核心DOM模型"></a>核心DOM模型</h2><h3 id="Document-文档对象"><a href="#Document-文档对象" class="headerlink" title="Document 文档对象"></a>Document 文档对象</h3><h4 id="创建-获取-2"><a href="#创建-获取-2" class="headerlink" title="创建(获取)"></a>创建(获取)</h4><ul><li>在html dom模型中可以使用window对象来获取</li><li>window.document</li><li>document</li></ul><h4 id="方法-9"><a href="#方法-9" class="headerlink" title="方法"></a>方法</h4><p><code>write()</code> 向页面输出变量/html代码</p><div class="hljs"><pre><code class="hljs abnf">document.write(<span class="hljs-string">"abc"</span>)<span class="hljs-comment">;</span>document.write(<span class="hljs-string">"&lt;hr&gt;"</span>)<span class="hljs-comment">;</span></code></pre></div><ul><li><p>获取Element对象<br><code>getElementById()</code> ： 根据id属性值获取元素对象,id属性值一般唯一<br><code>getElementsByTagName()</code>：根据元素名称获取元素对象们。返回值是一个数组<br><code>getElementsByClassName()</code>:根据Class属性值获取元素对象们。返回值是一个数组<br><code>getElementsByName()</code>: 根据name属性值获取元素对象们。返回值是一个数组</p></li><li><p>创建其他的DOM对象<br>  <code>createAttribute(name)</code><br>  <code>createComment()</code><br>  <code>createElement()</code><br>  <code>createTextNode()</code></p></li></ul><h3 id="Element-元素对象-标签对象"><a href="#Element-元素对象-标签对象" class="headerlink" title="Element 元素对象(标签对象)"></a>Element 元素对象(标签对象)</h3><h4 id="创建-获取-3"><a href="#创建-获取-3" class="headerlink" title="创建(获取)"></a>创建(获取)</h4><ul><li>通过document来获取和创建</li></ul><h4 id="方法-10"><a href="#方法-10" class="headerlink" title="方法"></a>方法</h4><ul><li><p>首先通过document来获取元素,然后通过元素进行操作<br>  <code>getAttribute(attributename)</code>: 获取指定的属性<br>  <code>setAttribute(attributename,attributevalue)</code>: 给元素添加属性<br>  <code>removeAttribute(attributename)</code>: 移除指定名称的属性</p></li><li><p>注意: 不能删除 <code>value</code></p></li><li><p>获取标签下面的子标签<br>  <code>childNodes</code>: 这个属性兼容性很差<br>  <code>getElementsByTagName(标签名)</code>: <strong>兼容性好</strong>,获取标签下面子标签的唯一有效方法.</p></li></ul><h3 id="Node-节点对象"><a href="#Node-节点对象" class="headerlink" title="Node 节点对象"></a>Node 节点对象</h3><h4 id="特点-6"><a href="#特点-6" class="headerlink" title="特点"></a>特点</h4><ul><li>所有dom对象都可以被认为是一个节点.</li></ul><h4 id="属性-8"><a href="#属性-8" class="headerlink" title="属性"></a>属性</h4><ul><li><code>parentNode</code> 返回节点的父节点</li></ul><h4 id="方法-11"><a href="#方法-11" class="headerlink" title="方法"></a>方法</h4><p><code>nodeName</code>:获取节点的名称<br><code>nodeType</code>: 获取节点的类型<br><code>nodeValue</code>: 获取节点的value值<br>因为dom在解析html的时候, html里面的标签,属性,文本都是一个节点,所以上面的三个属性对其都是不同的值.</p><ul><li>标签节点对应的nodeType为1</li><li>属性节点对应的nodeType为2</li><li>文本节点对应的nodeType为3</li></ul><p><code>parentNode</code>: 获取父节点的属性<br><code>childNodes</code>: 得到所有子节点,兼容性差<br><code>firstChild</code>: 获取第一个子节点<br><code>lastChild</code>: 获取最后一个子节点<br><code>nextSibling</code>: 返回一个给定节点的下一个兄弟节点<br><code>previousSibling</code>: 返回一个给定节点的上一个兄弟节点</p><h3 id="CRUD-DOM树"><a href="#CRUD-DOM树" class="headerlink" title="CRUD_DOM树"></a>CRUD_DOM树</h3><h4 id="查找节点"><a href="#查找节点" class="headerlink" title="查找节点"></a>查找节点</h4><ul><li><code>getElementById()</code>:通过节点的id属性,查找指定节点</li></ul><h4 id="添加节点"><a href="#添加节点" class="headerlink" title="添加节点"></a>添加节点</h4><ul><li><code>appendChild()</code>：向节点的子节点列表的结尾添加新的子节点</li></ul><h4 id="插入节点"><a href="#插入节点" class="headerlink" title="插入节点"></a>插入节点</h4><ul><li><code>insertBefore(newNode, oldNode)</code>: 向oldNode节点前插入一个新节点.通过父节点添加</li></ul><h4 id="删除节点"><a href="#删除节点" class="headerlink" title="删除节点"></a>删除节点</h4><ul><li><code>removeChild()</code>：删除（并返回）当前节点的指定子节点。</li></ul><h4 id="替换节点"><a href="#替换节点" class="headerlink" title="替换节点"></a>替换节点</h4><ul><li><code>replaceChild()</code>：用新节点替换一个子节点。通过父节点替换</li></ul><h4 id="复制节点"><a href="#复制节点" class="headerlink" title="复制节点"></a>复制节点</h4><ul><li><code>cloneNode(true)</code>: 复制节点</li></ul><h4 id="innerHTML属性"><a href="#innerHTML属性" class="headerlink" title="innerHTML属性"></a>innerHTML属性</h4><ul><li><code>innerHTML</code>作用:<ol><li>获取文本内容</li><li>向标签里面设置内容(可以是html代码)</li></ol></li></ul><h3 id="Demo-1"><a href="#Demo-1" class="headerlink" title="Demo"></a>Demo</h3><div class="hljs"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE html&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">"en"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">"UTF-8"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Title<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css">        <span class="hljs-selector-tag">div</span><span class="hljs-selector-id">#div1</span> {</span>            width: 360px;            height: 150px;            border: 2px solid red;        }<span class="css">        <span class="hljs-selector-tag">div</span><span class="hljs-selector-id">#div2</span> {</span>            width: 360px;            height: 150px;            border: 2px solid black;        }    <span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"div1"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"ul1"</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"li1"</span>&gt;</span>one<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"li2"</span>&gt;</span>two<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"li3"</span>&gt;</span>three<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"li4"</span>&gt;</span>four<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"div2"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"input1"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"添加节点"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"input2"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"插入节点"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"input3"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"删除节点"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"input4"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"替换节点"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"input5"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"复制节点"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span>&gt;</span><span class="actionscript">    <span class="hljs-comment">// 添加节点</span></span>    /*    1.获取到ul    2.获取到div2    3.把ul添加到div2    */<span class="javascript">    <span class="hljs-keyword">var</span> input1 = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"input1"</span>);</span><span class="actionscript">    input1.onclick = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">()</span> </span>{</span><span class="javascript">        <span class="hljs-keyword">var</span> ul = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"ul1"</span>);</span><span class="javascript">        <span class="hljs-keyword">var</span> div = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"div2"</span>);</span>        div.appendChild(ul);    }<span class="actionscript">    <span class="hljs-comment">// 插入节点</span></span>    /*    1.获取到li3标签    2.创建li    3.创建文本    4.把文本添加到li下面    5.获取到ul    6.把li添加到ul下面    */<span class="javascript">    <span class="hljs-keyword">var</span> input2 = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"input2"</span>);</span><span class="actionscript">    input2.onclick = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">()</span> </span>{</span><span class="javascript">        <span class="hljs-keyword">var</span> li3 = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"li3"</span>);</span><span class="javascript">        <span class="hljs-keyword">var</span> li = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">"li"</span>);</span><span class="javascript">        <span class="hljs-keyword">var</span> text = <span class="hljs-built_in">document</span>.createTextNode(<span class="hljs-string">"朝阳红"</span>);</span>        li.appendChild(text);<span class="javascript">        <span class="hljs-keyword">var</span> ul = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"ul1"</span>);</span>        ul.insertBefore(li, li3);    }<span class="actionscript">    <span class="hljs-comment">// 删除节点</span></span>    /*    1.获取到li标签    2.执行父节点ul标签    3.执行删除    */<span class="javascript">    <span class="hljs-keyword">var</span> input3 = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"input3"</span>);</span><span class="actionscript">    input3.onclick = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">()</span> </span>{</span><span class="javascript">        <span class="hljs-keyword">var</span> li3 = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"li3"</span>);</span><span class="javascript">        <span class="hljs-keyword">var</span> ul = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"ul1"</span>);</span>        ul.removeChild(li3);    }    <span class="actionscript">    <span class="hljs-comment">// 替换节点</span></span>    /*    1.获取到li标签    2.创建标签li    3.创建文本    4.把文本添加到li下面    5.获取父节点Ul标签    6.执行替换    */<span class="javascript">    <span class="hljs-keyword">var</span> input4 = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"input4"</span>);</span><span class="actionscript">    input4.onclick = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">()</span> </span>{</span><span class="javascript">        <span class="hljs-keyword">var</span> li3 = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"li3"</span>);</span><span class="javascript">        <span class="hljs-keyword">var</span> li = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">"li"</span>);</span><span class="javascript">        <span class="hljs-keyword">var</span> text = <span class="hljs-built_in">document</span>.createTextNode(<span class="hljs-string">"HelloWorld"</span>);</span>        li.appendChild(text);<span class="javascript">        <span class="hljs-keyword">var</span> ul = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"ul1"</span>);</span>        ul.replaceChild(li, li3);    }<span class="actionscript">    <span class="hljs-comment">// 复制节点(把ul列表复制到另一个div中)</span></span>    /*    1.获取到ul<span class="actionscript">    <span class="hljs-number">2.</span>执行复制方法：cloneNode(<span class="hljs-literal">true</span>)</span>    3.把复制后的内容放到div2中        获取div2        appendChild方法    */<span class="javascript">    <span class="hljs-keyword">var</span> input5 = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"input5"</span>);</span><span class="actionscript">    input5.onclick = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">()</span> </span>{</span><span class="javascript">        <span class="hljs-keyword">var</span> ul = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"ul1"</span>);</span><span class="actionscript">        <span class="hljs-keyword">var</span> ulClone = ul.cloneNode(<span class="hljs-literal">true</span>);</span><span class="javascript">        <span class="hljs-keyword">var</span> div = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"div2"</span>);</span>        div.appendChild(ulClone);    }<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre></div><h2 id="HTML-DOM"><a href="#HTML-DOM" class="headerlink" title="HTML DOM"></a>HTML DOM</h2><ol><li>标签体的设置和获取：innerHTML</li><li>使用html元素对象的属性</li><li>控制元素样式<ul><li>使用元素的style属性来设置</li><li>提前定义好类选择器的样式，通过元素的className属性来设置其class属性值。<br>如：<div class="hljs"><pre><code class="hljs maxima">//修改样式方式<span class="hljs-number">1</span>div1.<span class="hljs-built_in">style</span>.<span class="hljs-built_in">border</span> = <span class="hljs-string">"1px solid red"</span>;div1.<span class="hljs-built_in">style</span>.<span class="hljs-built_in">width</span> = <span class="hljs-string">"200px"</span>;//<span class="hljs-built_in">font</span>-size--&gt; fontSizediv1.<span class="hljs-built_in">style</span>.fontSize = <span class="hljs-string">"20px"</span>;</code></pre></div></li></ul></li></ol><h2 id="控制样式"><a href="#控制样式" class="headerlink" title="控制样式"></a>控制样式</h2><ul><li>通过DOM来控制标签的样式</li><li>使用 <code>style</code> 属性来设置</li><li>提前定义好类选择器的样式，通过元素的 <code>className</code> 属性来设置其class属性值。</li></ul><h3 id="Demo-2"><a href="#Demo-2" class="headerlink" title="Demo"></a>Demo</h3><div class="hljs"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE html&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">"en"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">"UTF-8"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Title<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css">        <span class="hljs-selector-class">.sun</span> {</span>            font-weight: bold;            font-size: 30px;            color: skyblue;<span class="css">            <span class="hljs-selector-tag">border</span>: 2<span class="hljs-selector-tag">px</span> <span class="hljs-selector-tag">dashed</span> <span class="hljs-selector-id">#000</span>;</span>        }    <span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"zy"</span>&gt;</span>桂朝阳<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"sun"</span>&gt;</span>大太阳<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span>&gt;</span><span class="actionscript">    <span class="hljs-comment">// 获取类名为zy的标签</span></span><span class="javascript">    <span class="hljs-keyword">var</span> zy = <span class="hljs-built_in">window</span>.document.getElementsByClassName(<span class="hljs-string">"zy"</span>)[<span class="hljs-number">0</span>];</span><span class="actionscript">    <span class="hljs-comment">// alert(zy.className);</span></span><span class="actionscript">    <span class="hljs-comment">// 方式一(自己添加)给类名为zy的div添加样式</span></span><span class="actionscript">    <span class="hljs-comment">// zy.style.border = "1px solid #ccc";</span></span><span class="actionscript">    <span class="hljs-comment">// zy.style.fontSize = "20px";</span></span><span class="actionscript">    <span class="hljs-comment">// 方式二(调用已经写好的)</span></span><span class="actionscript">    zy.className = <span class="hljs-string">"sun"</span>;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></code></pre></div><h1 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h1><h2 id="简单学习"><a href="#简单学习" class="headerlink" title="简单学习"></a>简单学习</h2><ul><li><p>功能： 某些组件被执行了某些操作后，触发某些代码的执行。</p><ul><li>比如，造句： xxx被xxx,我就xxx。<ul><li>我方水晶被摧毁后，我就责备对友。</li><li>敌方水晶被摧毁后，我就夸奖自己。</li></ul></li></ul></li><li><p>如何绑定事件</p><ol><li><p>直接在html标签上，指定事件的属性(操作)，<strong>属性值就是 js 代码</strong></p><ul><li>事件：<code>onclick</code> — 单击事件</li></ul></li><li><p>通过 js 获取元素对象，指定事件属性，设置一个函数</p></li></ol></li></ul><ul><li>小案例：</li></ul><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"light"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"img/off.gif"</span>  <span class="hljs-attr">onclick</span>=<span class="hljs-string">"fun();"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"light2"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"img/off.gif"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="actionscript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fun</span><span class="hljs-params">()</span></span>{</span><span class="actionscript">alert(<span class="hljs-string">'我被点了'</span>);</span><span class="actionscript">alert(<span class="hljs-string">'我又被点了'</span>);</span> }<span class="actionscript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fun2</span><span class="hljs-params">()</span></span>{</span><span class="actionscript">        alert(<span class="hljs-string">'咋老点我？'</span>);</span>}<span class="actionscript"> <span class="hljs-comment">//1.获取light2对象</span></span><span class="javascript"><span class="hljs-keyword">var</span> light2 = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"light2"</span>);</span><span class="actionscript"> <span class="hljs-comment">//2.绑定事件</span></span>light2.onclick = fun2;<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></code></pre></div><h2 id="功能-2"><a href="#功能-2" class="headerlink" title="功能"></a>功能</h2><p>些组件被执行了某些操作后，触发某些代码的执行</p><h2 id="事件监听机制"><a href="#事件监听机制" class="headerlink" title="事件监听机制"></a>事件监听机制</h2><ul><li>概念: 某些组件被执行了某些操作后，触发某些代码的执行。<ul><li><strong>事件</strong>：某些操作。如： 单击，双击，键盘按下了，鼠标移动了</li><li><strong>事件源</strong>：组件。如： 按钮 文本输入框…</li><li><strong>监听器</strong>：代码。</li><li><strong>注册监听</strong>：将事件，事件源，监听器结合在一起。 当事件源上发生了某个事件，则触发执行某个监听器代码。</li></ul></li></ul><h2 id="常见的事件"><a href="#常见的事件" class="headerlink" title="常见的事件"></a>常见的事件</h2><ol><li><p>点击事件：<br> <code>onclick</code>：单击事件<br> <code>ondblclick</code>：双击事件</p></li><li><p>焦点事件<br> <code>onfocus</code>:元素获得焦点<br> <code>onblur</code>：失去焦点</p><ul><li>一般用于表单验证</li></ul></li><li><p>加载事件：<br> <code>onload</code>：一张页面或一幅图像完成加载。</p></li><li><p>鼠标事件：<br> <code>onmousedown</code>： 鼠标按钮被按下。</p><ul><li>定义方法时，定义一个形参，接受event对象。</li><li>event对象的button属性可以获取鼠标按钮键被点击了。</li></ul><p><code>onmouseup</code> ：鼠标按键被松开。<br><code>onmousemove</code> ：鼠标被移动。<br><code>onmouseover</code> ：鼠标移到某元素之上。<br><code>onmouseout</code> ：鼠标从某元素移开。</p></li><li><p>键盘事件：<br> <code>onkeydown</code> ：某个键盘按键被按下。<br> <code>onkeyup</code> ：某个键盘按键被松开。<br> <code>onmouseout</code>：某个键盘按键被按下并松开。</p></li><li><p>选择和改变<br> <code>onchange</code> ：域的内容被改变。<br> <code>onselect</code> ：文本被选中。</p></li><li><p>表单事件：<br> <code>onsubmit</code> ：确认按钮被点击。</p><ul><li>可以阻止表单的提交</li><li>方法返回false则表单被阻止提交。</li></ul><p><code>onreset</code> ：重置按钮被点击。</p></li></ol><h2 id="Demo-电灯开关"><a href="#Demo-电灯开关" class="headerlink" title="Demo:电灯开关"></a>Demo:电灯开关</h2><div class="hljs"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE html&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">"en"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">"UTF-8"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>电灯开关<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"light"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"img/off.gif"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span>    /* 分析：        1.获取图片对象        2.绑定单击事件        3.每次点击切换图片         * 规则：             * 如果灯是开的 on,切换图片为 off             * 如果灯是关的 off,切换图片为 on         * 使用标记flag来完成     */<span class="actionscript">    <span class="hljs-comment">//1.获取图片对象</span></span><span class="javascript">    <span class="hljs-keyword">var</span> light = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"light"</span>);</span><span class="actionscript">    <span class="hljs-keyword">var</span> flag = <span class="hljs-literal">false</span>;<span class="hljs-comment">//代表灯是灭的。 off图片</span></span><span class="actionscript">    <span class="hljs-comment">//2.绑定单击事件</span></span><span class="actionscript">    light.onclick = <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span></span>{</span><span class="actionscript">        <span class="hljs-keyword">if</span>(flag){<span class="hljs-comment">//判断如果灯是开的，则灭掉</span></span><span class="actionscript">            light.src = <span class="hljs-string">"img/off.gif"</span>;</span><span class="actionscript">            flag = <span class="hljs-literal">false</span>;</span><span class="actionscript">        }<span class="hljs-keyword">else</span>{</span><span class="actionscript">            <span class="hljs-comment">//如果灯是灭的，则打开</span></span><span class="actionscript">            light.src = <span class="hljs-string">"img/on.gif"</span>;</span><span class="actionscript">            flag = <span class="hljs-literal">true</span>;</span>        }    }<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre></div><hr><p>标记&gt;&gt;&gt;学习BOM和DOM时用的是CSDN博主「White Camel」的笔记，原文链接：<a href="https://blog.csdn.net/m0_37989980/article/details/103669620" target="_blank" rel="noopener">https://blog.csdn.net/m0_37989980/article/details/103669620</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>JavaWeb</tag>
      
      <tag>笔记</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>歌《人命之河》</title>
    <link href="/blog/2020/02/17/%E6%AD%8C%E3%80%8A%E4%BA%BA%E5%91%BD%E4%B9%8B%E6%B2%B3%E3%80%8B/"/>
    <url>/blog/2020/02/17/%E6%AD%8C%E3%80%8A%E4%BA%BA%E5%91%BD%E4%B9%8B%E6%B2%B3%E3%80%8B/</url>
    
    <content type="html"><![CDATA[<p><fancybox><img src="https://s2.ax1x.com/2020/02/17/3i8TL8.png" srcset="/blog/img/loading.gif" alt="妈妈的笔记本" style="zoom: 33%;"></fancybox></p><a id="more"></a><hr><p>记录昨天，2020-2-17，周日。</p><p>中午，老爸做了新菜，名叫“凉拌猪肉”（老爸自己起的名字），味道还不错</p><p><fancybox><img src="https://s2.ax1x.com/2020/02/17/3iGio4.png" srcset="/blog/img/loading.gif" alt="凉拌猪肉" style="zoom:50%;"></fancybox></p><p>老弟“放假”（在家网上教学六天，周日放假hhh），下午我们去到外公外婆那。</p><p>外公外婆2人+二姨一家4人+我们一家3人=9人。</p><p>老爸又露了一手，一桌的饭菜，。结果留给我收尾，我也吃不完，实则太多了，嗝~~（太撑了hh）</p><p><fancybox><img src="https://s2.ax1x.com/2020/02/17/3iGPwF.png" srcset="/blog/img/loading.gif" alt="外公外婆家小聚" style="zoom:50%;"></fancybox></p><p>看见外公的身体比之前还虚弱，很累的样子。保佑阿公身体健康🙆</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[转]Git很慢怎么办</title>
    <link href="/blog/2020/02/17/%E8%BD%AC-Git-%E5%BE%88%E6%85%A2%E6%80%8E%E4%B9%88%E5%8A%9E/"/>
    <url>/blog/2020/02/17/%E8%BD%AC-Git-%E5%BE%88%E6%85%A2%E6%80%8E%E4%B9%88%E5%8A%9E/</url>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="it’s-fucking-slow-guess-why"><a href="#it’s-fucking-slow-guess-why" class="headerlink" title="it’s fucking slow, guess why"></a>it’s fucking slow, guess why</h2><p>当你想要解决一个问题的时候，最好先学会尽可能准确地描述你的问题，像「Git 很慢怎么办」之类的问题就是反面教材，这就像说「我的国家不行了」一样，这种模棱两可、似是而非的问题对出题人和答题人都是一种困扰，出题人把握不了自己的问题，便始终不会自查，答题人无法知晓出题人真正的问题，也只能一顿瞎猜。</p><p>如果你假以思考，结合实际情况，比如你操作的命令，是 <code>git clone</code> 还是 <code>git checkout</code>? 这样就能很快推断出真正的问题，即「Git clone 很慢怎么办」，如果更进一步，你想到你正在 clone 的是一个国外的地址，比如 <a href="http://github.com/" target="_blank" rel="noopener">github.com</a>，你会想到这也许是网络问题。</p><p>当你做出更多的判断而不是用一个模糊的问题来让别人替你判断的时候，你的问题也就迎刃而解了。</p><p>现在这个模糊的问题变成了解决 Git 同步国外项目的网络问题了，这种情况你应该很熟悉，可以使用「代理」来解决。而 Git 支持两种网络传输协议，即 HTTP 和 SSH 协议，于是你只需要在 Google 搜索 <em>Git 如何配置 HTTP 代理和 SSH 代理</em> 就行了，当然也可以继续阅读，参考我用的配置。</p><h2 id="配置-HTTP-代理"><a href="#配置-HTTP-代理" class="headerlink" title="配置 HTTP 代理"></a>配置 HTTP 代理</h2><p>如果你 <code>git clone</code> 时用的是 <code>http</code> 开头的地址，那就得配置 http 代理:</p><div class="hljs"><pre><code class="hljs bash">git config --global http.proxy http://127.0.0.1:1087<span class="hljs-comment"># 或者 Socks5 代理</span>git config --global http.proxy socks5://127.0.0.1:1086</code></pre></div><h2 id="配置-SSH-代理"><a href="#配置-SSH-代理" class="headerlink" title="配置 SSH 代理"></a>配置 SSH 代理</h2><p>如果你 <code>git clone</code> 时用的是 <code>ssh</code> 开头的地址，那就得配置 SSH 代理。</p><p>对 macOS 用户，你可以使用 <a href="https://bitbucket.org/gotoh/connect/wiki/Home" target="_blank" rel="noopener"><code>connect</code></a>，这是一个让 SSH 支持 SOCKS/HTTPS 代理的工具，这里我们用 <a href="https://brew.sh/" target="_blank" rel="noopener">homebrew</a> 来安装:</p><div class="hljs"><pre><code class="hljs bash">brew install connect</code></pre></div><p>然后编辑你的 <code>~/.ssh/config</code> 文件，加入以下代码:</p><div class="hljs"><pre><code class="hljs git">Host *  User git  ProxyCommand connect -S 127.0.0.1:1086 %h %p</code></pre></div><p>这样 SSH 连接时就会使用位于 <code>127.0.0.1:1086</code> 的代理。</p><hr><p>原文链接：<a href="https://egoist.moe/2019/08/15/git-is-slow/" target="_blank" rel="noopener">https://egoist.moe/2019/08/15/git-is-slow/</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>制作一个简单的HTML登录页面</title>
    <link href="/blog/2020/02/17/%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84HTML%E7%99%BB%E5%BD%95%E9%A1%B5%E9%9D%A2/"/>
    <url>/blog/2020/02/17/%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84HTML%E7%99%BB%E5%BD%95%E9%A1%B5%E9%9D%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><p>制作一个HTML登录页面，包含邮箱，登录密码，立即注册，忘记密码等</p><a id="more"></a><h1 id="HTML部分"><a href="#HTML部分" class="headerlink" title="HTML部分"></a>HTML部分</h1><div class="hljs"><pre><code class="hljs applescript">&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">"dowebok"</span>&gt;    &lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">"dowebok"</span>&gt;             &lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">"logo"</span>&gt;&lt;/<span class="hljs-keyword">div</span>&gt;             &lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">"form-item"</span>&gt;                 &lt;input <span class="hljs-built_in">id</span>=<span class="hljs-string">"username"</span> type=<span class="hljs-string">"text"</span> autocomplete=<span class="hljs-string">"off"</span> placeholder=<span class="hljs-string">"邮箱"</span>&gt;             &lt;/<span class="hljs-keyword">div</span>&gt;                          &lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">"form-item"</span>&gt;                 &lt;input <span class="hljs-built_in">id</span>=<span class="hljs-string">"password"</span> type=<span class="hljs-string">"password"</span> autocomplete=<span class="hljs-string">"off"</span> placeholder=<span class="hljs-string">"登录密码"</span>&gt;             &lt;/<span class="hljs-keyword">div</span>&gt;                 &lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">"form-item"</span>&gt;&lt;button <span class="hljs-built_in">id</span>=<span class="hljs-string">"submit"</span>&gt;登 录&lt;/button&gt;&lt;/<span class="hljs-keyword">div</span>&gt;                 &lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">"reg-bar"</span>&gt;                 &lt;a <span class="hljs-built_in">class</span>=<span class="hljs-string">"reg"</span> href=<span class="hljs-string">"javascript:"</span>&gt;立即注册&lt;/a&gt;                 &lt;a <span class="hljs-built_in">class</span>=<span class="hljs-string">"forget"</span> href=<span class="hljs-string">"javascript:"</span>&gt;忘记密码&lt;/a&gt;             &lt;/<span class="hljs-keyword">div</span>&gt;        &lt;/<span class="hljs-keyword">div</span>&gt;</code></pre></div><h1 id="CSS部分"><a href="#CSS部分" class="headerlink" title="CSS部分"></a>CSS部分</h1><div class="hljs"><pre><code class="hljs css">* { <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>; <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>; }         <span class="hljs-selector-tag">html</span> { <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>; }         <span class="hljs-selector-tag">body</span> { <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>; <span class="hljs-attribute">background</span>: <span class="hljs-number">#fff</span> <span class="hljs-built_in">url</span>(img/backgroud.png) <span class="hljs-number">50%</span> <span class="hljs-number">50%</span> no-repeat; <span class="hljs-attribute">background-size</span>: cover;}         <span class="hljs-selector-class">.dowebok</span> { <span class="hljs-attribute">position</span>: absolute; <span class="hljs-attribute">left</span>: <span class="hljs-number">50%</span>; <span class="hljs-attribute">top</span>: <span class="hljs-number">50%</span>; <span class="hljs-attribute">width</span>: <span class="hljs-number">430px</span>; <span class="hljs-attribute">height</span>: <span class="hljs-number">550px</span>; <span class="hljs-attribute">margin</span>: -<span class="hljs-number">300px</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> -<span class="hljs-number">215px</span>; <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#fff</span>; <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">20px</span>; <span class="hljs-attribute">overflow</span>: hidden;}         <span class="hljs-selector-class">.logo</span> { <span class="hljs-attribute">width</span>: <span class="hljs-number">104px</span>; <span class="hljs-attribute">height</span>: <span class="hljs-number">104px</span>; <span class="hljs-attribute">margin</span>: <span class="hljs-number">50px</span> auto <span class="hljs-number">80px</span>; <span class="hljs-attribute">background</span>: <span class="hljs-built_in">url</span>(img/login.png) <span class="hljs-number">0</span> <span class="hljs-number">0</span> no-repeat; }         <span class="hljs-selector-class">.form-item</span> { <span class="hljs-attribute">position</span>: relative; <span class="hljs-attribute">width</span>: <span class="hljs-number">360px</span>; <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto; <span class="hljs-attribute">padding-bottom</span>: <span class="hljs-number">30px</span>;}         <span class="hljs-selector-class">.form-item</span> <span class="hljs-selector-tag">input</span> { <span class="hljs-attribute">width</span>: <span class="hljs-number">288px</span>; <span class="hljs-attribute">height</span>: <span class="hljs-number">48px</span>; <span class="hljs-attribute">padding-left</span>: <span class="hljs-number">70px</span>; <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#fff</span>; <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">25px</span>; <span class="hljs-attribute">font-size</span>: <span class="hljs-number">18px</span>; <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>; <span class="hljs-attribute">background-color</span>: transparent; <span class="hljs-attribute">outline</span>: none;}         <span class="hljs-selector-class">.form-item</span> <span class="hljs-selector-tag">button</span> { <span class="hljs-attribute">width</span>: <span class="hljs-number">360px</span>; <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>; <span class="hljs-attribute">border</span>: <span class="hljs-number">0</span>; <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">25px</span>; <span class="hljs-attribute">font-size</span>: <span class="hljs-number">18px</span>; <span class="hljs-attribute">color</span>: <span class="hljs-number">#1f6f4a</span>; <span class="hljs-attribute">outline</span>: none; <span class="hljs-attribute">cursor</span>: pointer; <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#fff</span>; }         <span class="hljs-selector-id">#username</span> { <span class="hljs-attribute">background</span>: <span class="hljs-built_in">url</span>(img/emil.png) <span class="hljs-number">20px</span> <span class="hljs-number">14px</span> no-repeat; }         <span class="hljs-selector-id">#password</span> { <span class="hljs-attribute">background</span>: <span class="hljs-built_in">url</span>(img/password.png) <span class="hljs-number">23px</span> <span class="hljs-number">11px</span> no-repeat; }         <span class="hljs-selector-class">.tip</span> { <span class="hljs-attribute">display</span>: none; <span class="hljs-attribute">position</span>: absolute; <span class="hljs-attribute">left</span>: <span class="hljs-number">20px</span>; <span class="hljs-attribute">top</span>: <span class="hljs-number">52px</span>; <span class="hljs-attribute">font-size</span>: <span class="hljs-number">14px</span>; <span class="hljs-attribute">color</span>: <span class="hljs-number">#f50</span>; }         <span class="hljs-selector-class">.reg-bar</span> { <span class="hljs-attribute">width</span>: <span class="hljs-number">360px</span>; <span class="hljs-attribute">margin</span>: <span class="hljs-number">20px</span> auto <span class="hljs-number">0</span>; <span class="hljs-attribute">font-size</span>: <span class="hljs-number">14px</span>; <span class="hljs-attribute">overflow</span>: hidden;}         <span class="hljs-selector-class">.reg-bar</span> <span class="hljs-selector-tag">a</span> { <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>; <span class="hljs-attribute">text-decoration</span>: none; }         <span class="hljs-selector-class">.reg-bar</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span> { <span class="hljs-attribute">text-decoration</span>: underline; }         <span class="hljs-selector-class">.reg-bar</span> <span class="hljs-selector-class">.reg</span> { <span class="hljs-attribute">float</span>: left; }         <span class="hljs-selector-class">.reg-bar</span> <span class="hljs-selector-class">.forget</span> { <span class="hljs-attribute">float</span>: right; }         <span class="hljs-selector-class">.dowebok</span> <span class="hljs-selector-pseudo">::-webkit-input-placeholder</span> { <span class="hljs-attribute">font-size</span>: <span class="hljs-number">18px</span>; <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1.4</span>; <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;}         <span class="hljs-selector-class">.dowebok</span> <span class="hljs-selector-pseudo">:-moz-placeholder</span> { <span class="hljs-attribute">font-size</span>: <span class="hljs-number">18px</span>; <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1.4</span>; <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;}         <span class="hljs-selector-class">.dowebok</span> <span class="hljs-selector-pseudo">::-moz-placeholder</span> { <span class="hljs-attribute">font-size</span>: <span class="hljs-number">18px</span>; <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1.4</span>; <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;}         <span class="hljs-selector-class">.dowebok</span> <span class="hljs-selector-pseudo">:-ms-input-placeholder</span> { <span class="hljs-attribute">font-size</span>: <span class="hljs-number">18px</span>; <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1.4</span>; <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;}           @<span class="hljs-keyword">media</span> screen and (max-width: <span class="hljs-number">500px</span>) {             * { <span class="hljs-attribute">box-sizing</span>: border-box; }             <span class="hljs-selector-class">.dowebok</span> { <span class="hljs-attribute">position</span>: static; <span class="hljs-attribute">width</span>: auto; <span class="hljs-attribute">height</span>: auto; <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">30px</span>; <span class="hljs-attribute">border</span>: <span class="hljs-number">0</span>; <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">0</span>; }             <span class="hljs-selector-class">.logo</span> { <span class="hljs-attribute">margin</span>: <span class="hljs-number">50px</span> auto; }             <span class="hljs-selector-class">.form-item</span> { <span class="hljs-attribute">width</span>: auto; }             <span class="hljs-selector-class">.form-item</span> <span class="hljs-selector-tag">input</span>, <span class="hljs-selector-class">.form-item</span> <span class="hljs-selector-tag">button</span>, <span class="hljs-selector-class">.reg-bar</span> { <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>; }         }</code></pre></div><h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p><fancybox><img src="https://s2.ax1x.com/2020/02/22/3QDIzD.png" srcset="/blog/img/loading.gif" alt=""></fancybox></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>JavaWeb</tag>
      
      <tag>笔记</tag>
      
      <tag>CSS</tag>
      
      <tag>HTML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CSS：页面美化和布局控制</title>
    <link href="/blog/2020/02/17/CSS%E9%A1%B5%E9%9D%A2%E7%BE%8E%E5%8C%96%E5%92%8C%E5%B8%83%E5%B1%80%E6%8E%A7%E5%88%B6/"/>
    <url>/blog/2020/02/17/CSS%E9%A1%B5%E9%9D%A2%E7%BE%8E%E5%8C%96%E5%92%8C%E5%B8%83%E5%B1%80%E6%8E%A7%E5%88%B6/</url>
    
    <content type="html"><![CDATA[<h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><p><strong>C</strong>ascading <strong>S</strong>tyle <strong>S</strong>heets :层叠样式表</p><blockquote><p>层叠：多个样式可以作用在同一个html的元素上，同时生效</p></blockquote><h1 id="好处"><a href="#好处" class="headerlink" title="好处"></a>好处</h1><ol><li>功能强大</li><li>将内容展示和样式控制分离<ul><li>降低耦合度。解耦</li><li>让分工协作更容易</li><li>提高开发效率</li></ul></li></ol><a id="more"></a><h1 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h1><p>CSS与html结合方式</p><h2 id="1-内联样式（作用域最小）"><a href="#1-内联样式（作用域最小）" class="headerlink" title="1.内联样式（作用域最小）"></a>1.内联样式（作用域最小）</h2><ul><li>在标签内使用style属性指定css代码</li><li>如：<div class="hljs"><pre><code class="hljs applescript">&lt;<span class="hljs-keyword">div</span> style=<span class="hljs-string">"color:red;"</span>&gt;hello css&lt;/<span class="hljs-keyword">div</span>&gt;</code></pre></div></li></ul><h2 id="2-内部样式"><a href="#2-内部样式" class="headerlink" title="2.内部样式"></a>2.内部样式</h2><ul><li>在head标签内，定义style标签，style标签的标签体内容就是css代码</li><li>如：<div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span>div{<span class="css">    <span class="hljs-selector-tag">color</span><span class="hljs-selector-pseudo">:blue</span>;</span>}<span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>hello css<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></div></li></ul><h2 id="3-外部样式（作用域最大）"><a href="#3-外部样式（作用域最大）" class="headerlink" title="3.外部样式（作用域最大）"></a>3.外部样式（作用域最大）</h2><ul><li>定义css资源文件。</li><li>在head标签内，定义link标签，引入外部的资源文件</li><li>如：<div class="hljs"><pre><code class="hljs xml"> <span class="hljs-comment">&lt;!--a.css文件--&gt;</span>div{color:green;}<span class="hljs-comment">&lt;!--html文件--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"stylesheet"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"css/a.css"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>hello css<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>hello css<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></div></li></ul><h1 id="特别注意"><a href="#特别注意" class="headerlink" title="特别注意"></a>特别注意</h1><ul><li>1,2,3种方式 css作用范围越来越大</li><li>第1方式不常用，后期常用第2,3种</li><li>第3种格式可以写为：<div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css">@<span class="hljs-keyword">import</span> <span class="hljs-string">"css/a.css"</span>;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></code></pre></div></li></ul><h1 id="语法格式"><a href="#语法格式" class="headerlink" title="语法格式"></a>语法格式</h1><ul><li>格式：<div class="hljs"><pre><code class="hljs angelscript">选择器 {属性名<span class="hljs-number">1</span>:属性值<span class="hljs-number">1</span>;属性名<span class="hljs-number">2</span>:属性值<span class="hljs-number">2</span>;...}</code></pre></div></li><li>选择器:<br>筛选具有相似特征的元素</li><li>注意：<br>每一对属性需要使用<code>；</code>隔开，最后一对属性可以不加<code>；</code></li></ul><h1 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h1><p>筛选具有相似特征的元素</p><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>选择器分两种：</p><ul><li>基础选择器</li><li>扩展选择器</li></ul><h2 id="基础选择器"><a href="#基础选择器" class="headerlink" title="基础选择器"></a>基础选择器</h2><h3 id="id选择器"><a href="#id选择器" class="headerlink" title="id选择器"></a>id选择器</h3><p>选择具体的id属性值的元素.建议在一个html页面中id值唯一</p><ul><li>语法：<div class="hljs"><pre><code class="hljs angelscript">#id属性值{属性名<span class="hljs-number">1</span>:属性值<span class="hljs-number">1</span>;属性名<span class="hljs-number">2</span>:属性值<span class="hljs-number">2</span>;...}</code></pre></div></li></ul><h3 id="元素选择器"><a href="#元素选择器" class="headerlink" title="元素选择器"></a>元素选择器</h3><p>选择具有相同标签名称的元素</p><ul><li>语法：<div class="hljs"><pre><code class="hljs angelscript">标签名称{属性名<span class="hljs-number">1</span>:属性值<span class="hljs-number">1</span>;属性名<span class="hljs-number">2</span>:属性值<span class="hljs-number">2</span>;...}</code></pre></div></li><li>注意：id选择器优先级高于元素选择器</li></ul><h3 id="类选择器"><a href="#类选择器" class="headerlink" title="类选择器"></a>类选择器</h3><p>选择具有相同的class属性值的元素。</p><ul><li>语法：<div class="hljs"><pre><code class="hljs angelscript">.<span class="hljs-keyword">class</span>属性值{属性名<span class="hljs-number">1</span>:属性值<span class="hljs-number">1</span>;属性名<span class="hljs-number">2</span>:属性值<span class="hljs-number">2</span>;...}</code></pre></div></li><li>注意：类选择器选择器优先级高于元素选择器</li></ul><h2 id="扩展选择器"><a href="#扩展选择器" class="headerlink" title="扩展选择器"></a>扩展选择器</h2><h3 id="选择所有元素"><a href="#选择所有元素" class="headerlink" title="选择所有元素"></a>选择所有元素</h3><ul><li>语法： <div class="hljs"><pre><code class="hljs angelscript">* {属性名<span class="hljs-number">1</span>:属性值<span class="hljs-number">1</span>;属性名<span class="hljs-number">2</span>:属性值<span class="hljs-number">2</span>;...}</code></pre></div></li></ul><h3 id="并集选择器"><a href="#并集选择器" class="headerlink" title="并集选择器"></a>并集选择器</h3><p>选择多个元素</p><ul><li>语法：<div class="hljs"><pre><code class="hljs angelscript">选择器<span class="hljs-number">1</span>, 选择器<span class="hljs-number">2</span> {属性名<span class="hljs-number">1</span>:属性值<span class="hljs-number">1</span>;属性名<span class="hljs-number">2</span>:属性值<span class="hljs-number">2</span>;...}</code></pre></div></li></ul><h3 id="子选择器"><a href="#子选择器" class="headerlink" title="子选择器"></a>子选择器</h3><p>筛选 <strong>选择器1下</strong> 的 <strong>选择器2</strong> 元素</p><ul><li><p>语法：</p><div class="hljs"><pre><code class="hljs angelscript">选择器<span class="hljs-number">1</span> 选择器<span class="hljs-number">2</span>{属性名<span class="hljs-number">1</span>:属性值<span class="hljs-number">1</span>;属性名<span class="hljs-number">2</span>:属性值<span class="hljs-number">2</span>;...}</code></pre></div></li><li><p>区别于 子选择器：</p><ul><li>多个选择器之间的分隔符，一个是逗号，一个是空格。</li></ul></li></ul><h3 id="父选择器"><a href="#父选择器" class="headerlink" title="父选择器"></a>父选择器</h3><p>筛选 <strong>选择器2</strong> 的 <strong>父元素选择器1</strong></p><ul><li>语法：  <div class="hljs"><pre><code class="hljs angelscript">选择器<span class="hljs-number">1</span> &gt; 选择器<span class="hljs-number">2</span>{ 属性名<span class="hljs-number">1</span>:属性值<span class="hljs-number">1</span>;属性名<span class="hljs-number">2</span>:属性值<span class="hljs-number">2</span>;...}</code></pre></div></li></ul><h3 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h3><p>选择元素名称，属性名=属性值的元素</p><ul><li>语法：  <div class="hljs"><pre><code class="hljs angelscript">元素名称 [属性名 = <span class="hljs-string">"属性值"</span>] {属性名<span class="hljs-number">1</span>:属性值<span class="hljs-number">1</span>;属性名<span class="hljs-number">2</span>:属性值<span class="hljs-number">2</span>;...}</code></pre></div></li></ul><h3 id="伪类选择器"><a href="#伪类选择器" class="headerlink" title="伪类选择器"></a>伪类选择器</h3><p>选择一些元素具有的状态</p><ul><li><p>语法： </p><div class="hljs"><pre><code class="hljs angelscript">元素: 状态{属性名<span class="hljs-number">1</span>:属性值<span class="hljs-number">1</span>;属性名<span class="hljs-number">2</span>:属性值<span class="hljs-number">2</span>;...}</code></pre></div></li><li><p>比如：</p><div class="hljs"><pre><code class="hljs css"><span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:link</span>{                 <span class="hljs-attribute">color</span>:red;      }                   <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span>{                <span class="hljs-attribute">color</span>: yellow;  }                   <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:visited</span>{              <span class="hljs-attribute">color</span>: blue;    }                   <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:active</span>{               <span class="hljs-attribute">color</span>: brown;   }</code></pre></div></li></ul><blockquote><p><code>&lt;a&gt;</code>的状态：<br>link：初始化的状态<br>visited：被访问过的状态<br>active：正在访问状态<br>hover：鼠标悬浮状态</p></blockquote><h1 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h1><p>属性有字体、文本、背景、边框、尺寸……</p><h2 id="字体、文本"><a href="#字体、文本" class="headerlink" title="字体、文本"></a>字体、文本</h2><ul><li>font-size：字体大小</li><li>color：文本颜色</li><li>text-align：对其方式</li><li>line-height：行高 </li><li><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2></li><li>background：设置背景</li></ul><h2 id="边框"><a href="#边框" class="headerlink" title="边框"></a>边框</h2><ul><li>border：设置边框，符合属性</li></ul><h2 id="尺寸"><a href="#尺寸" class="headerlink" title="尺寸"></a>尺寸</h2><ul><li>width：宽度</li><li>height：高度</li></ul><h2 id="盒子模型：控制布局"><a href="#盒子模型：控制布局" class="headerlink" title="盒子模型：控制布局"></a>盒子模型：控制布局</h2><ul><li>margin：外边距</li><li>padding：内边距<ul><li>默认情况下内边距会影响整个盒子的大小</li><li>box-sizing: border-box;  设置盒子的属性，让width和height就是最终盒子的大小</li></ul></li><li>float：浮动<ul><li>left</li><li>right</li></ul></li></ul><h1 id="实践案例"><a href="#实践案例" class="headerlink" title="实践案例"></a>实践案例</h1><p>这里有 <a href="https://www.w3school.com.cn/example/csse_examples.asp" target="_blank" rel="noopener">70个CSS实例</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>JavaWeb</tag>
      
      <tag>笔记</tag>
      
      <tag>CSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL中的约束</title>
    <link href="/blog/2020/02/16/MySQL%E4%B8%AD%E7%9A%84%E7%BA%A6%E6%9D%9F/"/>
    <url>/blog/2020/02/16/MySQL%E4%B8%AD%E7%9A%84%E7%BA%A6%E6%9D%9F/</url>
    
    <content type="html"><![CDATA[<h2 id="什么是约束"><a href="#什么是约束" class="headerlink" title="什么是约束"></a>什么是约束</h2><blockquote><p>约束：constraint<br>MySQL中的约束，实则是对数据表中数据的限制条件</p></blockquote><h2 id="约束的作用"><a href="#约束的作用" class="headerlink" title="约束的作用"></a>约束的作用</h2><blockquote><p>约束保证数据的完整性和一致性</p></blockquote><ul><li>比如：设计数据表时，要求username字段不允许重复，这时候就需要在CREATE数据表时加入相应的约束。再比如注册时候必须填写邮箱、性别等。</li></ul><h2 id="约束的分类"><a href="#约束的分类" class="headerlink" title="约束的分类"></a>约束的分类</h2><h3 id="按约束定义的位置可分"><a href="#按约束定义的位置可分" class="headerlink" title="按约束定义的位置可分"></a>按约束定义的位置可分</h3><ul><li>列级约束</li><li>表级约束</li></ul><h3 id="按约束的作用可分"><a href="#按约束的作用可分" class="headerlink" title="按约束的作用可分"></a>按约束的作用可分</h3><table><thead><tr><th>主键 约束</th><th>PRIMARY KEY</th><th></th></tr></thead><tbody><tr><td>外键 约束</td><td>FOREIGN KEY</td><td></td></tr><tr><td>非空 约束</td><td>NOT NULL</td><td></td></tr><tr><td>唯一 约束</td><td>UNIQUE KEY</td><td></td></tr><tr><td>默认 约束</td><td>DEFAULT</td><td></td></tr></tbody></table><a id="more"></a><h2 id="列级约束、表级约束"><a href="#列级约束、表级约束" class="headerlink" title="列级约束、表级约束"></a>列级约束、表级约束</h2><h3 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h3><ol><li><p>列级约束：只能应用于一列上。<br> 表级约束：可以应用于一列上，也可以应用在一个表中的多个列上。</p><blockquote><p>即：如果你创建的约束涉及到该表的多个属性列，则必须创建的是表级约束（必须定义在表级上）；否则既可以定义在列级上也可以定义在表级上此时只是SQL语句格式不同而已。</p></blockquote></li><li><p>列级约束：包含在列定义中，直接跟在该列的其它定义之后 ，用空格分隔；不必指定列名。<br> 表级约束：与列定义相互独立，不包含在列定义中；与定义用‘，’分隔；必须指出要约束的列的名称。</p><blockquote><p>注：因为在创建列级约束时，只需将创建列约束的语句添加到该字段（列）的定义子句后面；而在创建表级约束时，需要将创建表级约束的语句添加到各个字段（列）定义语句的后面，因为并不是每个定义的字段都要创建约束，所以必须指明需要创建的约束的列名。</p></blockquote></li></ol><h3 id="举例说明"><a href="#举例说明" class="headerlink" title="举例说明"></a>举例说明</h3><div class="hljs"><pre><code class="hljs sql"><span class="hljs-keyword">Create</span> <span class="hljs-keyword">Table</span> <span class="hljs-keyword">project</span>(项目编号 <span class="hljs-built_in">INT</span> <span class="hljs-keyword">CONSTRAINT</span> pk_pno PRIMARY <span class="hljs-keyword">kEY</span>，项目名称 <span class="hljs-built_in">CHAR</span>(<span class="hljs-number">20</span>)，项目负责人 <span class="hljs-built_in">CHAR</span>(<span class="hljs-number">20</span>)，<span class="hljs-keyword">CONSTRAINT</span> un_pname_pm <span class="hljs-keyword">UNIQUE</span>(项目名称，项目负责人));</code></pre></div><blockquote><p>分析：“项目编号”字段设置为主键，主键约束名为pk_pno，此主键约束为列主键约束。“项目名称”和“项目负责人”的组合字段设置唯一性约束，此约束为表级约束）</p></blockquote><h3 id="具体说明"><a href="#具体说明" class="headerlink" title="具体说明"></a>具体说明</h3><p>一：既可以创建列级约束又可以创建表级约束的：</p><p> 1、主键约束（primary key constraint）：<br>    （1）定义列约束：CONSTRAINT &lt;约束名&gt; PRIMARY KEY<br>    （2）定义表约束：[CONSTRAINT &lt;约束名&gt;] PRIMARY KEY( &lt;列名&gt; [{&lt;列名&gt;}])     </p><p> 2、唯一性约束（unique key constraint）：<br>    （1）定义列约束：[CONSTRAINT &lt;约束名&gt;] UNIQUE [KEY]<br>    （2）定义表约束：CONSTRAINT &lt;约束名&gt; UNIQUE [KEY] ( &lt;列名&gt; [{&lt;列名&gt;}])    </p><p> 3、外键约束（foreign key constraint）：<br>      定义 列级约束：[CONSTRAINT &lt;约束名&gt;] FOREIGN KEY REFERENCES &lt;外表名&gt;<br>      定义表级约束：[CONSTRAINT &lt;约束名&gt;] FOREIGN KEY REFERENCES &lt;外表名&gt;( &lt;列名&gt; [{&lt;列名&gt;}])    </p><p>二：只能创建列级约束的：</p><p>1，缺省约束（default constraint）：<br>        [CONSTRAINT &lt;约束名&gt;] DEFAULT 约束条件</p><p> 2，NULL 约束：<br>        [CONSTRAINT &lt;约束名&gt;] [NULL | NOT NULL]</p><h2 id="主键约束-PRIMARY-KEY"><a href="#主键约束-PRIMARY-KEY" class="headerlink" title="主键约束 PRIMARY KEY"></a>主键约束 PRIMARY KEY</h2><p>“主键（PRIMARY KEY）”的完整称呼是“主键约束”。<a href="http://c.biancheng.net/mysql/" target="_blank" rel="noopener">MySQL</a> 主键约束是一个列或者列的组合，其值<strong>能唯一地标识表中的每一行</strong>。这样的一列或多列称为表的主键，通过它可以强制表的实体完整性。</p><h3 id="涉及术语"><a href="#涉及术语" class="headerlink" title="涉及术语"></a>涉及术语</h3><ul><li>主键约束</li><li>主键字段</li><li>主键值</li></ul><p>三种术语的关系：</p><blockquote><p>表中的某个字段添加主键约束后，该字段为主键字段，主键字段中出现的每一个数据都称为主键值</p></blockquote><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ul><li>保证数据的实体完整性</li></ul><h3 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h3><blockquote><p>一张表应该有主键字段，如果没有，表示该表无效</p></blockquote><ul><li>主键值：是当前行数据的唯一标识、是当前行数据的身份证号</li><li>即使表中两行记录相关数据相同，但由于主键值不同，所以也认为是两行不同的记录</li></ul><h3 id="按主键约束的字段数量分类"><a href="#按主键约束的字段数量分类" class="headerlink" title="按主键约束的字段数量分类"></a>按主键约束的字段数量分类</h3><blockquote><p>在MySQL的一个表中只有唯一的一个主键，不能有多列主键，但可以有复合主键。一个表中可以：单列做主键、多列做主键（复合主键）。</p></blockquote><ul><li>单一主键：给一个字段添加主键约束</li><li>复合主键：给多个字段联合添加一个主键约束(只能用表级定义)</li></ul><h4 id="单一主键（列级定义）"><a href="#单一主键（列级定义）" class="headerlink" title="单一主键（列级定义）"></a>单一主键（列级定义）</h4><div class="hljs"><pre><code class="hljs pgsql">mysql&gt; <span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> t_user(    -&gt; id <span class="hljs-type">int</span>(<span class="hljs-number">10</span>) <span class="hljs-keyword">primary key</span>,    -&gt; <span class="hljs-type">name</span> <span class="hljs-type">varchar</span>(<span class="hljs-number">32</span>)    -&gt; );Query OK, <span class="hljs-number">0</span> <span class="hljs-keyword">rows</span> affected (<span class="hljs-number">0.07</span> sec)</code></pre></div><h4 id="单一主键（表级定义）"><a href="#单一主键（表级定义）" class="headerlink" title="单一主键（表级定义）"></a>单一主键（表级定义）</h4><div class="hljs"><pre><code class="hljs pgsql">mysql&gt; <span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> t_user(    -&gt; id <span class="hljs-type">int</span>(<span class="hljs-number">10</span>),    -&gt; <span class="hljs-type">name</span> <span class="hljs-type">varchar</span>(<span class="hljs-number">32</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,    -&gt; <span class="hljs-keyword">constraint</span> t_user_id_pk <span class="hljs-keyword">primary key</span>(id)    -&gt; );Query OK, <span class="hljs-number">0</span> <span class="hljs-keyword">rows</span> affected (<span class="hljs-number">0.01</span> sec)</code></pre></div><h4 id="复合主键（表级定义）"><a href="#复合主键（表级定义）" class="headerlink" title="复合主键（表级定义）"></a>复合主键（表级定义）</h4><blockquote><p><strong>一定要在表级定义。</strong></p></blockquote><div class="hljs"><pre><code class="hljs pgsql">mysql&gt; <span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> t_user(    -&gt; id <span class="hljs-type">int</span>(<span class="hljs-number">10</span>),    -&gt; <span class="hljs-type">name</span> <span class="hljs-type">varchar</span>(<span class="hljs-number">32</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,    -&gt; email <span class="hljs-type">varchar</span>(<span class="hljs-number">128</span>) <span class="hljs-keyword">unique</span>,    -&gt; <span class="hljs-keyword">primary key</span>(id,<span class="hljs-type">name</span>)    -&gt; );Query OK, <span class="hljs-number">0</span> <span class="hljs-keyword">rows</span> affected (<span class="hljs-number">0.05</span> sec)</code></pre></div><h3 id="配合AUTO-INCREMENT"><a href="#配合AUTO-INCREMENT" class="headerlink" title="配合AUTO_INCREMENT"></a>配合AUTO_INCREMENT</h3><blockquote><p>在MySQL数据库提供了一个自增的数字，专门用来自动生成主键值，主键值不用用户维护，自动生成，自增数从1开始，以1递增(auto_increment)</p></blockquote><div class="hljs"><pre><code class="hljs asciidoc">mysql&gt; create table t<span class="hljs-emphasis">_user(</span><span class="hljs-emphasis">    -&gt; id int(10) primary key auto_</span>increment,<span class="hljs-code">    -&gt; name varchar(32) not null</span><span class="hljs-code">    -&gt; );</span>Query OK, 0 rows affected (0.03 sec)/<span class="hljs-strong">*插入两行记录，id主键值会自动增加*</span>/mysql&gt; insert into t<span class="hljs-emphasis">_user(name) values('jay');</span><span class="hljs-emphasis">Query OK, 1 row affected (0.04 sec)</span><span class="hljs-emphasis">mysql&gt; insert into t_</span>user(name) values(<span class="hljs-emphasis">'man'</span>);Query OK, 1 row affected (0.00 sec)mysql&gt; select * from t<span class="hljs-emphasis">_user;</span><span class="hljs-emphasis">+----+------+</span><span class="hljs-emphasis">| id | name |</span><span class="hljs-emphasis">+----+------+</span><span class="hljs-emphasis">|  1 | jay  |</span><span class="hljs-emphasis">|  2 | man  |</span><span class="hljs-emphasis">+----+------+</span><span class="hljs-emphasis">2 rows in set (0.00 sec)</span></code></pre></div><h2 id="外键约束-FOREIGN-KEY"><a href="#外键约束-FOREIGN-KEY" class="headerlink" title="外键约束 FOREIGN KEY"></a>外键约束 FOREIGN KEY</h2><p>外键约束（FOREIGN KEY）用来在两个表的数据之间建立链接，它可以是一列或者多列。一个表可以有一个或多个外键。</p><p>外键的主要作用是保持数据的一致性、完整性。例如，部门表 tb_dept 的主键是 id，在员工表 tb_emp5 中有一个键 deptId 与这个 id 关联。</p><ul><li>主表（父表）：对于两个具有关联关系的表而言，相关联字段中主键所在的表就是主表。</li><li>从表（子表）：对于两个具有关联关系的表而言，相关联字段中外键所在的表就是从表。</li></ul><h3 id="快速理解"><a href="#快速理解" class="headerlink" title="快速理解"></a>快速理解</h3><p>之前创建表的时候都是在一张表中添加记录，比如如下表：</p><p><img src="https://img2018.cnblogs.com/blog/1394649/201909/1394649-20190901140225715-1856514382.png" srcset="/blog/img/loading.gif" alt=""></p><p>公司有3个部门，但是有1个亿的员工，那意味着部门这个字段需要重复存储，部门名字越长，越浪费。这个时候，解决方法：我们完全可以定义一个部门表，然后让员工信息表关联该表，如何关联，即foreign key。</p><p>我们可以将上表改为如下结构：</p><p><img src="https://img2018.cnblogs.com/blog/1394649/201909/1394649-20190901143741414-1716929402.png" srcset="/blog/img/loading.gif" alt=""></p><h3 id="涉及到的术语"><a href="#涉及到的术语" class="headerlink" title="涉及到的术语"></a>涉及到的术语</h3><ul><li>外键约束</li><li>外键字段</li><li>外键值</li></ul><p>三种术语的关系：</p><blockquote><p>某个字段添加外键约束之后，该字段称为外键字段，外键字段中每个数据都是外键值</p></blockquote><h3 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h3><ul><li>保持数据的一致性</li><li>完整性</li><li>实现一对一或者一对多关系</li></ul><blockquote><p>这也是为什么称为M<strong>ySQL关系型数据库</strong>的原因</p></blockquote><h3 id="要求-1"><a href="#要求-1" class="headerlink" title="要求"></a>要求</h3><ol><li>★父表（子表所参照的表）和子表（具有外键列的表）必须使用使用相同的存储引擎，而且禁止使用临时表。</li><li>★外键对应的是<strong>参照完整性</strong>，<strong><em>一个表的外键可以为NULL，若不为空值，则每一个外键的值必须等于另一个表中主键的某个值。</em></strong></li><li>★定义外键时，<strong>创建先创建父表</strong>。定义外键后，<strong>插入先插入父表数据，</strong>同理，<strong>删除先删除子表数据</strong>。</li><li>数据表的存储引擎只能为InnoDB。（编辑数据库的默认存储引擎，修改完需要重启MySQL服务）</li><li>外键列（加FOREIGN KEY关键词的一列）和参照列（外键列参照的一列）必须具有相似的数据类型,如果是数字数据类型，则数字长度或者是否有符号位必须相同；如果为字符数据类型长度可以不同。</li><li>★外键列和参照列（主键在创建的同时，会自动创建索引seq_in_index）必须创建索引。如果外键列不存在索引的话，MySQL将自动创建。</li></ol><h3 id="与主键的区别"><a href="#与主键的区别" class="headerlink" title="与主键的区别"></a>与主键的区别</h3><blockquote><p>一张表可以有多个外键，但是主键最多只有一个。</p></blockquote><h3 id="按外键约束的字段数量分类"><a href="#按外键约束的字段数量分类" class="headerlink" title="按外键约束的字段数量分类"></a>按外键约束的字段数量分类</h3><ul><li><p>单一外键：给一个字段添加外键约束</p></li><li><p>复合外键：给多个字段联合添加一个外键约束</p></li></ul><h4 id="表复合外键（表级定义）"><a href="#表复合外键（表级定义）" class="headerlink" title="表复合外键（表级定义）"></a>表复合外键（表级定义）</h4><div class="hljs"><pre><code class="hljs lisp">FOREIGN KEY(<span class="hljs-name">classno</span>) REFERENCES t_class(<span class="hljs-name">cno</span>)<span class="hljs-comment">;</span></code></pre></div><h2 id="非空约束"><a href="#非空约束" class="headerlink" title="非空约束"></a>非空约束</h2><p>用NOT NULL约束的字段不能为NULL值，<strong>必须给定具体的数据</strong>。</p><p>注意的是</p><blockquote><p>NULL，表示空，并不是字符串中的空。两者需要区分开。</p></blockquote><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><div class="hljs"><pre><code class="hljs asciidoc">mysql&gt; CREATE TABLE t12(id INT NOT NULL);  #设置字段id不为空Query OK, 0 rows affected (0.03 sec)mysql&gt; DESC t12;<span class="hljs-code">+-------+</span>---------<span class="hljs-code">+------+</span>-----<span class="hljs-code">+---------+</span>-------+| Field | Type    | Null | Key | Default | Extra |<span class="hljs-code">+-------+</span>---------<span class="hljs-code">+------+</span>-----<span class="hljs-code">+---------+</span>-------+| id    | int(11) | NO   |     | NULL    |       |<span class="hljs-code">+-------+</span>---------<span class="hljs-code">+------+</span>-----<span class="hljs-code">+---------+</span>-------+row in set (0.01 sec)</code></pre></div><p>验证</p><div class="hljs"><pre><code class="hljs subunit">mysql&gt; INSERT INTO t12 VALUES();  #不能插入空<span class="hljs-keyword">ERROR </span>1364 (HY000): Field 'id' doesn't have a default value</code></pre></div><h2 id="唯一约束"><a href="#唯一约束" class="headerlink" title="唯一约束"></a>唯一约束</h2><p>UNIQUE约束的字段，<strong>具有唯一性，不可重复</strong>，但可以为NULL。</p><h3 id="列级约束"><a href="#列级约束" class="headerlink" title="列级约束"></a>列级约束</h3><div class="hljs"><pre><code class="hljs pgsql">mysql&gt; <span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> t_user(    -&gt; id <span class="hljs-type">int</span>(<span class="hljs-number">10</span>),    -&gt; <span class="hljs-type">name</span> <span class="hljs-type">varchar</span>(<span class="hljs-number">32</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,    -&gt; email <span class="hljs-type">varchar</span>(<span class="hljs-number">128</span>) <span class="hljs-keyword">unique</span>    -&gt; );Query OK, <span class="hljs-number">0</span> <span class="hljs-keyword">rows</span> affected (<span class="hljs-number">0.03</span> sec)</code></pre></div><h3 id="表级约束"><a href="#表级约束" class="headerlink" title="表级约束"></a>表级约束</h3><div class="hljs"><pre><code class="hljs livescript">mysql&gt; create table t_user(<span class="hljs-function">    -&gt;</span> id int(<span class="hljs-number">10</span>),<span class="hljs-function">    -&gt;</span> name varchar(<span class="hljs-number">32</span>) <span class="hljs-keyword">not</span> <span class="hljs-literal">null</span>,<span class="hljs-function">    -&gt;</span> email varchar(<span class="hljs-number">128</span>），<span class="hljs-function">    -&gt;</span> unique(email)<span class="hljs-function">    -&gt;</span> );</code></pre></div><p>如果插入相同email会报错</p><div class="hljs"><pre><code class="hljs pgsql">mysql&gt; <span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_user(id,<span class="hljs-type">name</span>,email) <span class="hljs-keyword">values</span>(<span class="hljs-number">1</span>,<span class="hljs-string">'xlj'</span>,<span class="hljs-string">'932834897@qq.com'</span>);Query OK, <span class="hljs-number">1</span> <span class="hljs-keyword">row</span> affected (<span class="hljs-number">0.00</span> sec)mysql&gt; <span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_user(id,<span class="hljs-type">name</span>,email) <span class="hljs-keyword">values</span>(<span class="hljs-number">2</span>,<span class="hljs-string">'jay'</span>,<span class="hljs-string">'932834897@qq.com'</span>);ERROR <span class="hljs-number">1062</span> (<span class="hljs-number">23000</span>): Duplicate entry <span class="hljs-string">'932834897@qq.com'</span> <span class="hljs-keyword">for key</span> <span class="hljs-string">'email'</span></code></pre></div><h3 id="扩展：联合唯一约束"><a href="#扩展：联合唯一约束" class="headerlink" title="扩展：联合唯一约束"></a>扩展：联合唯一约束</h3><div class="hljs"><pre><code class="hljs routeros"><span class="hljs-comment"># 创建services表</span>mysql&gt; create table services(        id int,       <span class="hljs-built_in"> ip </span>char(15),       <span class="hljs-built_in"> port </span>int,        unique(id),        unique(ip,port)       );Query OK, 0 rows affected (0.05 sec)mysql&gt; desc services;+-------+----------+------+-----+---------+-------+| Field |<span class="hljs-built_in"> Type </span>     | <span class="hljs-literal">Null</span> | Key |<span class="hljs-built_in"> Default </span>| Extra |+-------+----------+------+-----+---------+-------+| id        | int(11)   | <span class="hljs-literal">YES</span>   | UNI  | <span class="hljs-literal">NULL</span>       |             ||<span class="hljs-built_in"> ip </span>       | char(15) | <span class="hljs-literal">YES</span>   | MUL  | <span class="hljs-literal">NULL</span>       |             ||<span class="hljs-built_in"> port </span>   | int(11) | <span class="hljs-literal">YES</span>   |          | <span class="hljs-literal">NULL</span>       |             |+-------+----------+------+-----+---------+-------+rows <span class="hljs-keyword">in</span> <span class="hljs-builtin-name">set</span> (0.01 sec)<span class="hljs-comment">#联合唯一，只要两列记录，有一列不同，既符合联合唯一的约束</span>mysql&gt; insert into services values       (1,<span class="hljs-string">'192,168,11,23'</span>,80),       (2,<span class="hljs-string">'192,168,11,23'</span>,81),       (3,<span class="hljs-string">'192,168,11,25'</span>,80);Query OK, 3 rows affected (0.01 sec)Records: 3  Duplicates: 0  Warnings: 0mysql&gt; select * <span class="hljs-keyword">from</span> services;+------+---------------+------+| id   |<span class="hljs-built_in"> ip </span>           |<span class="hljs-built_in"> port </span>|+------+---------------+------+|    1 | 192,168,11,23 |   80 ||    2 | 192,168,11,23 |   81 ||    3 | 192,168,11,25 |   80 |+------+---------------+------+rows <span class="hljs-keyword">in</span> <span class="hljs-builtin-name">set</span> (0.00 sec)mysql&gt; insert into services values (4,<span class="hljs-string">'192,168,11,23'</span>,80);<span class="hljs-builtin-name">ERROR</span> 1062 (23000): Duplicate entry <span class="hljs-string">'192,168,11,23-80'</span> <span class="hljs-keyword">for</span> key <span class="hljs-string">'ip'</span></code></pre></div><p>更多可参考 <a href="https://blog.csdn.net/arkblue/article/details/9070797" target="_blank" rel="noopener">mysql 给表添加唯一约束、联合唯一约束，指定唯一约束的名字</a></p><h2 id="默认约束"><a href="#默认约束" class="headerlink" title="默认约束"></a>默认约束</h2><p><strong>为某一字段提供默认值。</strong></p><blockquote><p>创建列时可以指定默认值，当插入数据时如果未主动设置，则自动添加默认值</p></blockquote><h3 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h3><div class="hljs"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> tb1(    <span class="hljs-keyword">id</span> <span class="hljs-built_in">int</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">null</span>,    sex <span class="hljs-built_in">char</span> defalut <span class="hljs-string">'b'</span>);</code></pre></div><p>验证</p><div class="hljs"><pre><code class="hljs asciidoc">mysql&gt; insert into tb1(id) values(1); #给t11表插一个空的值Query OK, 1 row affected (0.00 sec)#查询结果如下mysql&gt; select * from t11;<span class="hljs-code">+------+</span>------+|  id  |  sex |<span class="hljs-code">+------+</span>------+|  1   |   b  |<span class="hljs-code">+------+</span>------+row in set (0.00 sec)</code></pre></div><hr><p>主要文献：<br>[部分概念来自C语言中文网] <a href="http://c.biancheng.net/view/2440.html" target="_blank" rel="noopener">http://c.biancheng.net/view/2440.html</a><br>[大部分案例的代码块来自CSDN] <a href="https://blog.csdn.net/w_linux/article/details/79655073" target="_blank" rel="noopener">https://blog.csdn.net/w_linux/article/details/79655073</a></p><hr><p>注：案例中的SQL语句并非作者写的，存在规范问题，但不影响阅读。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[转]MySQL数据类型：UNSIGNED注意事项</title>
    <link href="/blog/2020/02/16/%E8%BD%AC-MySQL%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%EF%BC%9AUNSIGNED%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
    <url>/blog/2020/02/16/%E8%BD%AC-MySQL%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%EF%BC%9AUNSIGNED%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</url>
    
    <content type="html"><![CDATA[<p>原文链接：<a href="https://www.cnblogs.com/blankqdb/archive/2012/11/03/blank_qdb.html" target="_blank" rel="noopener">https://www.cnblogs.com/blankqdb/archive/2012/11/03/blank_qdb.html</a></p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTML：基础网页开发语言</title>
    <link href="/blog/2020/02/16/HTML%E5%9F%BA%E7%A1%80%E7%BD%91%E9%A1%B5%E5%BC%80%E5%8F%91%E8%AF%AD%E8%A8%80/"/>
    <url>/blog/2020/02/16/HTML%E5%9F%BA%E7%A1%80%E7%BD%91%E9%A1%B5%E5%BC%80%E5%8F%91%E8%AF%AD%E8%A8%80/</url>
    
    <content type="html"><![CDATA[<h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><p>HTML是最基础的网页开发语言</p><blockquote><p><strong>H</strong>yper <strong>T</strong>ext <strong>M</strong>arkup <strong>L</strong>anguage  超文本标记语言</p></blockquote><h2 id="超文本"><a href="#超文本" class="headerlink" title="超文本"></a>超文本</h2><ul><li>超文本是<strong>用超链接</strong>的方法，将各种不同空间的文字信息组织在一起的网状文本</li></ul><h2 id="标记语言"><a href="#标记语言" class="headerlink" title="标记语言"></a>标记语言</h2><ul><li>由标签构成的语言。</li><li>&lt;标签名称&gt; ,如 <code>&lt;html&gt;</code>，<code>&lt;xml&gt;</code></li><li><strong>标记语言不是编程语言</strong></li></ul><h1 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h1><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><ol><li>html文档后缀名: <code>.html</code> 或者 <code>.htm</code></li><li>标签分为<ul><li>围堵标签：有开始标签和结束标签。如 <code>&lt;html&gt; &lt;/html&gt;</code></li><li>自闭和标签：开始标签和结束标签在一起。如 <code>&lt;br/&gt;</code></li></ul></li><li>标签可以嵌套：<ul><li>需要<strong>正确嵌套</strong>，不能你中有我，我中有你</li><li>错误：<code>&lt;a&gt;&lt;b&gt;&lt;/a&gt;&lt;/b&gt;</code></li><li>正确：<code>&lt;a&gt;&lt;b&gt;&lt;/b&gt;&lt;/a&gt;</code></li></ul></li><li>在开始标签中可以定义属性。<strong>属性</strong>是由键值对构成，值需要<strong>用引号(单双都可)引起来</strong></li><li>html的标签不区分大小写，但是<strong>建议使用小写html的标签</strong></li><li>代码示例<div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>title<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">FONT</span> <span class="hljs-attr">color</span>=<span class="hljs-string">'red'</span>&gt;</span>Hello World<span class="hljs-tag">&lt;/<span class="hljs-name">font</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>/&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">font</span> <span class="hljs-attr">color</span>=<span class="hljs-string">'green'</span>&gt;</span>Hello World<span class="hljs-tag">&lt;/<span class="hljs-name">font</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre></div></li></ol><a id="more"></a><h1 id="标签学习"><a href="#标签学习" class="headerlink" title="标签学习"></a>标签学习</h1><h2 id="文件标签"><a href="#文件标签" class="headerlink" title="文件标签"></a>文件标签</h2><blockquote><p>构成html最基本的标签</p></blockquote><ul><li><p>html</p><ul><li>html文档的根标签</li></ul></li><li><p>head</p><ul><li>头标签。用于指定html文档的一些属性。引入外部的资源</li></ul></li><li><p>title</p><ul><li>标题标签。</li></ul></li><li><p>body</p><ul><li>体标签</li></ul></li><li><ul><li>html5中定义该文档是html文档</li></ul></li></ul><h2 id="文本标签"><a href="#文本标签" class="headerlink" title="文本标签"></a>文本标签</h2><blockquote><p>和文本有关的标签</p></blockquote><ul><li><code>&lt;!--  --&gt;</code>：注释</li><li><code>&lt;h1&gt;~&lt;h6&gt;</code>：标题标签<ul><li>h1~h6:字体大小逐渐递减</li></ul></li><li><code>&lt;p&gt;</code>：段落标签</li><li><code>&lt;br&gt;</code>：换行标签</li><li><code>&lt;hr&gt;</code>：展示一条水平线<ul><li>属性：<ul><li>color：颜色</li><li>width：宽度</li><li>size：高度</li><li>align：对其方式<ul><li>center：居中</li><li>left：左对齐</li><li>right：右对齐</li></ul></li></ul></li></ul></li><li><code>&lt;b&gt;</code>：字体加粗</li><li><code>&lt;i&gt;</code>：字体斜体</li><li><code>&lt;center&gt;</code>:文本居中</li><li><code>&lt;font&gt;</code>:字体标签<ul><li>属性：<ul><li>color：颜色</li><li>size：大小</li><li>face：字体</li></ul></li></ul></li></ul><h3 id="属性定义"><a href="#属性定义" class="headerlink" title="属性定义"></a>属性定义</h3><h4 id="color"><a href="#color" class="headerlink" title="color"></a>color</h4><ol><li>英文单词：<ul><li>red,green,blue</li></ul></li><li>rgb(值1，值2，值3)：<ul><li>值的范围：0~255  如  rgb(0,0,255)</li></ul></li><li>#值1值2值3：<ul><li>值的范围：00~FF之间。如： #FF00FF</li></ul></li></ol><h4 id="width"><a href="#width" class="headerlink" title="width"></a>width</h4><ol><li>数值：<ul><li>width=’20’ ,数值的单位，默认是 px(像素)</li></ul></li><li>数值%<ul><li>width=’20%’,占比相对于父元素的比例</li></ul></li></ol><h2 id="图片标签"><a href="#图片标签" class="headerlink" title="图片标签"></a>图片标签</h2><p><code>&lt;img&gt;</code>：展示图片</p><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><p>src：指定图片的位置    </p><ul><li>相对路径：以.开头的路径<ul><li><code>./</code>:代表当前目录, 如 <code>./image/1.jpg</code></li><li><code>../</code>:代表上一级目录</li></ul></li></ul><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><div class="hljs"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--展示一张图片 img--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"image/jingxuan_2.jpg"</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"right"</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">"古镇"</span> <span class="hljs-attr">width</span>=<span class="hljs-string">"500"</span> <span class="hljs-attr">height</span>=<span class="hljs-string">"500"</span>/&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"./image/jiangwai_1.jpg"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"../image/jiangwai_1.jpg"</span>&gt;</span></code></pre></div><h2 id="列表标签"><a href="#列表标签" class="headerlink" title="列表标签"></a>列表标签</h2><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>最外层用<code>&lt;ol&gt;</code><br>内层<code>&lt;li&gt;</code>：列表项</p><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><ul><li>默认为 <strong>数字1</strong> 开始排序。</li><li>可使用 <strong>type</strong> 属性，规定排序方式为<strong>“1/A/a/Ⅰ/ⅰ”</strong>。建议使用CSS样式。</li><li>也可以用 <strong>start</strong> 属性，规定起始位置。但是 HTML5 不赞成使用。建议使用CSS样式。</li></ul><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>最外层用<code>&lt;ul&gt;</code><br>内层<code>&lt;li&gt;</code>：列表项</p><h4 id="注意-1"><a href="#注意-1" class="headerlink" title="注意"></a>注意</h4><ul><li>默认列表项符号为 <strong>实心圆点·</strong> 。</li><li>可使用 <strong>type</strong> 属性，规定符号为<strong>“disc/square/circle”</strong> 。但是HTML5不支持。建议使用CSS样式。</li></ul><h2 id="链接标签"><a href="#链接标签" class="headerlink" title="链接标签"></a>链接标签</h2><p><code>&lt;a&gt;</code>:定义一个超链接</p><h3 id="属性-1"><a href="#属性-1" class="headerlink" title="属性"></a>属性</h3><ol><li>href：指定访问资源的URL(统一资源定位符)</li><li>target：指定打开资源的方式<ul><li>_self:默认值，在当前页面打开</li><li>_blank：在空白页面打开</li></ul></li></ol><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><div class="hljs"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 文本 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"http://www.itcast.cn"</span>&gt;</span>点我<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"http://www.itcast.cn"</span> <span class="hljs-attr">target</span>=<span class="hljs-string">"_self"</span>&gt;</span>点我<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"http://www.itcast.cn"</span> <span class="hljs-attr">target</span>=<span class="hljs-string">"_blank"</span>&gt;</span>点我<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-comment">&lt;!-- 图片 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"http://www.itcast.cn"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"image/jiangwai_1.jpg"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre></div><h2 id="div"><a href="#div" class="headerlink" title="div"></a>div</h2><p><code>&lt;div&gt;</code>:每一个div占满一整行。块级标签</p><h3 id="属性-2"><a href="#属性-2" class="headerlink" title="属性"></a>属性</h3><p>align</p><ul><li>left</li><li>right</li><li>center</li><li>justify</li></ul><blockquote><p>不赞成使用。<strong>请使用样式取而代之。</strong></p></blockquote><h3 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h3><div class="hljs"><pre><code class="hljs applescript">&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">"news"</span>&gt;  &lt;h2&gt;News headline <span class="hljs-number">1</span>&lt;/h2&gt;  &lt;p&gt;<span class="hljs-keyword">some</span> <span class="hljs-built_in">text</span>. <span class="hljs-keyword">some</span> <span class="hljs-built_in">text</span>. <span class="hljs-keyword">some</span> <span class="hljs-built_in">text</span>...&lt;/p&gt;  ... &lt;/<span class="hljs-keyword">div</span>&gt;</code></pre></div><h3 id="注意-提示"><a href="#注意-提示" class="headerlink" title="注意/提示"></a>注意/提示</h3><ol><li><div> 是一个块级元素，也就是说，浏览器通常会在 div 元素前后放置一个换行符。</div></li><li>如果用 id 或 class 来标记 <code>&lt;div&gt;</code>，那么该标签的作用会变得更加有效。</li><li>提示：请使用 <div> 元素来组合块级元素，这样就可以使用样式对它们进行格式化。</div></li></ol><h3 id="全局属性"><a href="#全局属性" class="headerlink" title="全局属性"></a>全局属性</h3><div> 标签支持 HTML 中的[全局属性](https://www.w3school.com.cn/tags/html_ref_standardattributes.asp)。<h3 id="事件属性"><a href="#事件属性" class="headerlink" title="事件属性"></a>事件属性</h3><div> 标签支持 HTML 中的[事件属性](https://www.w3school.com.cn/tags/html_ref_eventattributes.asp)。<h2 id="span"><a href="#span" class="headerlink" title="span"></a>span</h2><p><code>&lt;span&gt;</code>:文本信息在一行展示，行内标签 内联标签</p><h3 id="代码示例-1"><a href="#代码示例-1" class="headerlink" title="代码示例"></a>代码示例</h3><div class="hljs"><pre><code class="hljs applescript">&lt;p&gt;&lt;span&gt;<span class="hljs-keyword">some</span> <span class="hljs-built_in">text</span>.&lt;/span&gt;<span class="hljs-keyword">some</span> other <span class="hljs-built_in">text</span>.&lt;/p&gt;</code></pre></div><h3 id="注意-提示-1"><a href="#注意-提示-1" class="headerlink" title="注意/提示"></a>注意/提示</h3><p>可以为 span 应用 id 或 class 属性，这样既可以增加适当的语义，又便于对 span 应用样式。</p><p>可以对同一个 <span> 元素应用 class 或 id 属性，但是更常见的情况是只应用其中一种。这两者的主要差异是，class 用于元素组（类似的元素，或者可以理解为某一类元素），而 id 用于标识单独的唯一的元素。</span></p><p>提示：事实上，您也许已经注意到了，W3School 站点上有一些文本的样式与其他文本是不同的。比如“提示”使用了粗体的橘红色。尽管实现这种效果的方法非常多，但是我们的做法是：使用“提示”使用 span 元素，然后对这个 span 元素的父元素，即 p 元素应用 class，这样就可以对这个类的子元素 span 应用相应的样式了。</p><p>HTML:</p><div class="hljs"><pre><code class="hljs jboss-cli">&lt;p class=<span class="hljs-string">"tip"</span>&gt;&lt;span&gt;提示：&lt;<span class="hljs-string">/span</span>&gt;<span class="hljs-string">...</span> <span class="hljs-string">...</span> <span class="hljs-string">...</span>&lt;<span class="hljs-string">/p</span>&gt;</code></pre></div><p>CSS:</p><div class="hljs"><pre><code class="hljs css"><span class="hljs-selector-tag">p</span><span class="hljs-selector-class">.tip</span> <span class="hljs-selector-tag">span</span> {<span class="hljs-attribute">font-weight</span>:bold;<span class="hljs-attribute">color</span>:<span class="hljs-number">#ff9955</span>;}</code></pre></div><h3 id="全局属性-1"><a href="#全局属性-1" class="headerlink" title="全局属性"></a>全局属性</h3><p><span> 标签支持 HTML 中的<a href="https://www.w3school.com.cn/tags/html_ref_standardattributes.asp" target="_blank" rel="noopener">全局属性</a>。</span></p><h3 id="事件属性-1"><a href="#事件属性-1" class="headerlink" title="事件属性"></a>事件属性</h3><p><span> 标签支持 HTML 中的<a href="https://www.w3school.com.cn/tags/html_ref_eventattributes.asp" target="_blank" rel="noopener">事件属性</a>。</span></p><h2 id="语义化标签"><a href="#语义化标签" class="headerlink" title="语义化标签"></a>语义化标签</h2><p>html5中为了提高程序的可读性，提供了一些标签。</p><ol><li><code>&lt;header&gt;</code>：页眉</li><li><code>&lt;footer&gt;</code>：页脚</li></ol><h2 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h2><ul><li><code>&lt;table&gt;</code>：定义表格<ul><li>width：宽度</li><li>border：边框</li><li>cellpadding：定义内容和单元格的距离</li><li>cellspacing：定义单元格之间的距离。如果指定为0，则单元格的线会合为一条、</li><li>bgcolor：背景色</li><li>align：对齐方式</li></ul></li><li><code>&lt;tr&gt;</code>：定义行<ul><li>bgcolor：背景色</li><li>align：对齐方式</li></ul></li><li><code>&lt;td&gt;</code>：定义单元格<ul><li>colspan：合并列</li><li>rowspan：合并行</li></ul></li><li><code>&lt;th&gt;</code>：定义表头单元格</li><li><code>&lt;caption&gt;</code>：表格标题</li><li><code>&lt;thead&gt;</code>：表示表格的头部分</li><li><code>&lt;tbody&gt;</code>：表示表格的体部分</li><li><code>&lt;tfoot&gt;</code>：表示表格的脚部分</li></ul><h2 id="表单标签"><a href="#表单标签" class="headerlink" title="表单标签"></a>表单标签</h2><ul><li>概念：用于采集用户输入的数据的。用于和服务器进行交互。</li><li><code>&lt;form&gt;</code>：用于定义表单的。可以定义一个范围，范围代表采集用户数据的范围</li></ul><h3 id="lt-form-gt-中的属性"><a href="#lt-form-gt-中的属性" class="headerlink" title="<form>中的属性"></a><code>&lt;form&gt;</code>中的属性</h3><ul><li>action：指定提交数据的URL</li><li>method:指定提交方式<ul><li>分类：一共7种，2种比较常用<ul><li>get：<ol><li>请求参数会在地址栏中显示。会封装到请求行中(HTTP协议后讲解)。</li><li>请求参数大小是有限制的。</li><li>不太安全。</li></ol></li><li>post：<ol><li>请求参数不会再地址栏中显示。会封装在请求体中(HTTP协议后讲解)</li><li>请求参数的大小没有限制。</li><li>较为安全。</li></ol></li></ul></li></ul></li></ul><h4 id="注意-2"><a href="#注意-2" class="headerlink" title="注意"></a>注意</h4><p>表单项中的数据要想被提交：必须指定其name属性</p><h3 id="表单项标签"><a href="#表单项标签" class="headerlink" title="表单项标签"></a>表单项标签</h3><h4 id="lt-input-gt"><a href="#lt-input-gt" class="headerlink" title="<input>"></a><code>&lt;input&gt;</code></h4><p>可以通过type属性值，改变元素展示的样式</p><h5 id="type属性"><a href="#type属性" class="headerlink" title="type属性"></a>type属性</h5><ul><li><p>text：文本输入框，默认值</p><ul><li>placeholder：指定输入框的提示信息，当输入框的内容发生变化，会自动清空提示信息    </li></ul></li><li><p>password：密码输入框</p></li><li><p>radio:单选框</p><blockquote><p>注意：</p><ol><li>要想让多个单选框实现单选的效果，则多个单选框的name属性值必须一样</li><li>一般会给每一个单选框提供value属性，指定其被选中后提交的值</li><li>checked属性，可以指定默认值</li></ol></blockquote></li></ul><ul><li>checkbox：复选框<blockquote><p>注意：</p><ol><li>一般会给每一个单选框提供value属性，指定其被选中后提交的值</li><li>checked属性，可以指定默认值</li></ol></blockquote></li></ul><ul><li>file：文件选择框</li><li>hidden：隐藏域，用于提交一些信息。</li><li>按钮：<ul><li>submit：提交按钮。可以提交表单</li><li>button：普通按钮</li><li>image：图片提交按钮<ul><li>src属性指定图片的路径    </li></ul></li></ul></li></ul><h4 id="lt-label-gt"><a href="#lt-label-gt" class="headerlink" title="<label>"></a><code>&lt;label&gt;</code></h4><p>指定输入项的文字描述信息</p><p>注意：<br>label的for属性一般会和 input 的 id属性值 对应。如果对应了，则点击label区域，会让input输入框获取焦点。</p><h4 id="lt-select-gt"><a href="#lt-select-gt" class="headerlink" title="<select>"></a><code>&lt;select&gt;</code></h4><p>下拉列表<br>select 元素可创建单选或多选菜单。</p><p>注意：<code>&lt;select&amp;&gt;</code> 元素中的 <code>&lt;option&gt;</code> 标签用于定义列表中的可用选项。</p><h4 id="lt-textarea-gt"><a href="#lt-textarea-gt" class="headerlink" title="<textarea>"></a><code>&lt;textarea&gt;</code></h4><p>文本域</p><p>属性：</p><ul><li>cols：指定列数，每一行有多少个字符</li><li>rows：默认多少行</li></ul><h3 id="表单案例"><a href="#表单案例" class="headerlink" title="表单案例"></a>表单案例</h3><div class="hljs"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--定义表单 form--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">"#"</span> <span class="hljs-attr">method</span>=<span class="hljs-string">"post"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">table</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"td_left"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">"username"</span>&gt;</span>用户名<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"td_right"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"username"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"username"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"请输入用户名"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"td_left"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">"password"</span>&gt;</span>密码<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"td_right"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"password"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"password"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"password"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"请输入密码"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"td_left"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">"email"</span>&gt;</span>Email<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"td_right"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"email"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"email"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"email"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"请输入邮箱"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"td_left"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">"name"</span>&gt;</span>姓名<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"td_right"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"name"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"name"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"请输入姓名"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"td_left"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">"tel"</span>&gt;</span>手机号<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"td_right"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"tel"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"tel"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"请输入手机号"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"td_left"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>性别<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"td_right"</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"radio"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"gender"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"male"</span>&gt;</span> 男            <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"radio"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"gender"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"female"</span>&gt;</span> 女        <span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"td_left"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">"birthday"</span>&gt;</span>出生日期<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"td_right"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"date"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"birthday"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"birthday"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"请输入出生日期"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"td_left"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">"checkcode"</span> &gt;</span>验证码<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"td_right"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"checkcode"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"checkcode"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"请输入验证码"</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"img_check"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"img/verify_code.jpg"</span>&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">colspan</span>=<span class="hljs-string">"2"</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"center"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"submit"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"btn_sub"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"注册"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span></code></pre></div></div></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>JavaWeb</tag>
      
      <tag>笔记</tag>
      
      <tag>HTML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaWeb 概述</title>
    <link href="/blog/2020/02/16/JavaWeb%20%E6%A6%82%E8%BF%B0/"/>
    <url>/blog/2020/02/16/JavaWeb%20%E6%A6%82%E8%BF%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="JavaWeb"><a href="#JavaWeb" class="headerlink" title="JavaWeb"></a>JavaWeb</h1><p>使用Java语言开发基于互联网的项目</p><p>今后主要<strong>使用B/S架构</strong></p><h1 id="软件架构"><a href="#软件架构" class="headerlink" title="软件架构"></a>软件架构</h1><h2 id="C-S：Clien-Server-客服端-服务器端"><a href="#C-S：Clien-Server-客服端-服务器端" class="headerlink" title="C/S：Clien/Server 客服端/服务器端"></a>C/S：Clien/Server 客服端/服务器端</h2><p><strong>在用户本地有一个客户端程序，在远程有一个服务器端。</strong>如：QQ，讯雷……</p><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><ol><li>用户体验好</li></ol><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><ol><li>开发、安装、部署、维护，麻烦</li></ol><h2 id="★B-S：Browser-Server-浏览器-服务器端"><a href="#★B-S：Browser-Server-浏览器-服务器端" class="headerlink" title="★B/S：Browser/Server 浏览器/服务器端"></a>★B/S：Browser/Server 浏览器/服务器端</h2><p>只需要一个浏览器，用户通过不同的网站（URL），客户访问不同的服务器端程序</p><h3 id="优点："><a href="#优点：" class="headerlink" title="优点："></a>优点：</h3><ol><li>开发、安装、部署、维护，简单</li></ol><h3 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h3><ol><li>如果应用过大，用户的体验可能会受到影响</li><li>对硬件要求过高（带宽要高，……）</li></ol><a id="more"></a><h1 id="B-S架构详解"><a href="#B-S架构详解" class="headerlink" title="B/S架构详解"></a>B/S架构详解</h1><p>客户端浏览器<strong>通过URL</strong>，向服务器端发送<strong>请求</strong>，请求一些资源，资源就包括<strong>“静态资源”</strong>和<strong>“动态资源”</strong>。服务器端就会<strong>响应</strong>，返回这些资源。</p><blockquote><p><strong>B/S架构是JavaWeb开发中重要的架构</strong></p></blockquote><p><img src="https://s2.ax1x.com/2020/02/19/3EV1bj.png" srcset="/blog/img/loading.gif" alt="B/S架构"></p><h2 id="资源分类"><a href="#资源分类" class="headerlink" title="资源分类"></a>资源分类</h2><h3 id="静态资源"><a href="#静态资源" class="headerlink" title="静态资源"></a>静态资源</h3><p>使用<strong>静态网页开发技术</strong>发布的资源</p><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><ul><li>所有用户访问，得到的结果是一样的</li><li>如：文本，图片，音频，视频，<strong>HTML，CSS，JavaScript</strong></li><li>如果用户请求的是静态资源，那么服务器会直接将静态资源发送给浏览器。浏览器中内置了静态资源的解析引擎</li><li>静态资源可以直接被浏览器解析</li></ul><blockquote><p>1.HTML，CSS，JavaScript 统称：静态网页开发技术，也称<strong>静态网页三剑客</strong><br>2.经过解析引擎解析后，可以在浏览器中浏览图片、文字、超链接等<br>3.不同浏览器的解析引擎不同，最终显示的网页可能不同</p></blockquote><h4 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h4><p>用于搭建基础网页，展示页面的内容</p><h4 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h4><p>用于美化页面，布局页面</p><h4 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h4><p>控制页面的元素，让页面有一些动态的效果</p><h3 id="★动态资源"><a href="#★动态资源" class="headerlink" title="★动态资源"></a>★动态资源</h3><p>使用<strong>动态网页技术</strong>发布的资源</p><blockquote><p>动态资源是今后学习JavaWeb的重点之一</p></blockquote><h4 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h4><ul><li>所用用户访问，得到的结果可能不一样</li><li>如：<strong>jsp/servlet，php</strong>，asp……</li><li>如果用户请求的是动态资源，那么服务器会执行<strong>动态资源转换为静态资源</strong>，再发送给用户</li></ul><blockquote><p>学习动态资源前，<strong>必须学习静态资源！</strong></p></blockquote><h1 id="网络通信三要素"><a href="#网络通信三要素" class="headerlink" title="网络通信三要素"></a>网络通信三要素</h1><h2 id="IP"><a href="#IP" class="headerlink" title="IP"></a>IP</h2><ul><li>电子设备(计算机)在网络中的唯一标识</li></ul><h2 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h2><ul><li>应用程序在计算机中的唯一标识。</li><li>值范围：0~65536</li></ul><h2 id="传输协议"><a href="#传输协议" class="headerlink" title="传输协议"></a>传输协议</h2><ul><li><p>规定了数据传输的规则</p></li><li><p>基础协议：</p><ol><li><p><strong>tcp</strong>：安全协议，三次握手。 速度稍慢。</p></li><li><p><strong>udp</strong>：不安全协议。 速度快。</p></li></ol></li></ul><h1 id="Web服务器软件"><a href="#Web服务器软件" class="headerlink" title="Web服务器软件"></a>Web服务器软件</h1><h2 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h2><ul><li>安装了服务器软件的计算机</li></ul><h2 id="服务器软件"><a href="#服务器软件" class="headerlink" title="服务器软件"></a>服务器软件</h2><ul><li>接收用户的请求，处理请求，做出响应</li></ul><h2 id="Web服务器软件-1"><a href="#Web服务器软件-1" class="headerlink" title="Web服务器软件"></a>Web服务器软件</h2><ul><li><p>接收用户的请求，处理请求，做出响应。</p></li><li><p>在Web服务器软件中，可以部署Web项目，让用户通过浏览器来访问这些项目</p></li><li><p>Web容器</p></li></ul><h3 id="常见的Java相关的Web服务器软件"><a href="#常见的Java相关的Web服务器软件" class="headerlink" title="常见的Java相关的Web服务器软件"></a>常见的Java相关的Web服务器软件</h3><ul><li><p>WebLogic：oracle公司，大型的JavaEE服务器，支持所有的JavaEE规范，收费的。</p></li><li><p>WebSphere：IBM公司，大型的JavaEE服务器，支持所有的JavaEE规范，收费的。</p></li><li><p>JBOSS：JBOSS公司的，大型的JavaEE服务器，支持所有的JavaEE规范，收费的。</p></li><li><p>Tomcat：Apache基金组织，中小型的JavaEE服务器，仅仅支持少量的JavaEE规范servlet/jsp。<strong>开源的，免费的。</strong></p></li></ul><blockquote><p>JavaEE：Java语言在企业级开发中使用的技术规范的总和，一共规定了13项大的规范</p></blockquote><h1 id="三大组件"><a href="#三大组件" class="headerlink" title="三大组件"></a>三大组件</h1><ul><li>Servlet：服务器小程序</li><li>Filter：过滤器</li><li>Listener：监听器</li></ul><blockquote><p>参照 <a href="https://www.cnblogs.com/kefir/p/9426754.html" target="_blank" rel="noopener">https://www.cnblogs.com/kefir/p/9426754.html</a></p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>JavaWeb</tag>
      
      <tag>笔记</tag>
      
      <tag>Web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Web 概述</title>
    <link href="/blog/2020/02/16/Web%20%E6%A6%82%E8%BF%B0/"/>
    <url>/blog/2020/02/16/Web%20%E6%A6%82%E8%BF%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="JavaWeb"><a href="#JavaWeb" class="headerlink" title="JavaWeb"></a>JavaWeb</h1><p>使用Java语言开发基于互联网的项目</p><p>今后主要<strong>使用B/S架构</strong></p><h1 id="软件架构"><a href="#软件架构" class="headerlink" title="软件架构"></a>软件架构</h1><h2 id="C-S：Clien-Server-客服端-服务器端"><a href="#C-S：Clien-Server-客服端-服务器端" class="headerlink" title="C/S：Clien/Server 客服端/服务器端"></a>C/S：Clien/Server 客服端/服务器端</h2><p><strong>在用户本地有一个客户端程序，在远程有一个服务器端。</strong>如：QQ，讯雷……</p><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><ol><li>用户体验好</li></ol><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><ol><li>开发、安装、部署、维护，麻烦</li></ol><h2 id="★B-S：Browser-Server-浏览器-服务器端"><a href="#★B-S：Browser-Server-浏览器-服务器端" class="headerlink" title="★B/S：Browser/Server 浏览器/服务器端"></a>★B/S：Browser/Server 浏览器/服务器端</h2><p>只需要一个浏览器，用户通过不同的网站（URL），客户访问不同的服务器端程序</p><h3 id="优点："><a href="#优点：" class="headerlink" title="优点："></a>优点：</h3><ol><li>开发、安装、部署、维护，简单</li></ol><h3 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h3><ol><li>如果应用过大，用户的体验可能会受到影响</li><li>对硬件要求过高（带宽要高，……）</li></ol><a id="more"></a><h1 id="B-S架构详解"><a href="#B-S架构详解" class="headerlink" title="B/S架构详解"></a>B/S架构详解</h1><p>客户端浏览器<strong>通过URL</strong>，向服务器端发送<strong>请求</strong>，请求一些资源，资源就包括<strong>“静态资源”</strong>和<strong>“动态资源”</strong>。服务器端就会<strong>响应</strong>，返回这些资源。</p><blockquote><p><strong>B/S架构是JavaWeb开发中重要的架构</strong></p></blockquote><p><img src="https://s2.ax1x.com/2020/02/19/3EV1bj.png" srcset="/blog/img/loading.gif" alt="B/S架构"></p><h2 id="资源分类"><a href="#资源分类" class="headerlink" title="资源分类"></a>资源分类</h2><h3 id="静态资源"><a href="#静态资源" class="headerlink" title="静态资源"></a>静态资源</h3><p>使用<strong>静态网页开发技术</strong>发布的资源</p><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><ul><li>所有用户访问，得到的结果是一样的</li><li>如：文本，图片，音频，视频，<strong>HTML，CSS，JavaScript</strong></li><li>如果用户请求的是静态资源，那么服务器会直接将静态资源发送给浏览器。浏览器中内置了静态资源的解析引擎</li><li>静态资源可以直接被浏览器解析</li></ul><blockquote><p>1.HTML，CSS，JavaScript 统称：静态网页开发技术，也称<strong>静态网页三剑客</strong><br>2.经过解析引擎解析后，可以在浏览器中浏览图片、文字、超链接等<br>3.不同浏览器的解析引擎不同，最终显示的网页可能不同</p></blockquote><h4 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h4><p>用于搭建基础网页，展示页面的内容</p><h4 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h4><p>用于美化页面，布局页面</p><h4 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h4><p>控制页面的元素，让页面有一些动态的效果</p><h3 id="★动态资源"><a href="#★动态资源" class="headerlink" title="★动态资源"></a>★动态资源</h3><p>使用<strong>动态网页技术</strong>发布的资源</p><blockquote><p>动态资源是今后学习JavaWeb的重点之一</p></blockquote><h4 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h4><ul><li>所用用户访问，得到的结果可能不一样</li><li>如：<strong>jsp/servlet，php</strong>，asp……</li><li>如果用户请求的是动态资源，那么服务器会执行<strong>动态资源转换为静态资源</strong>，再发送给用户</li></ul><blockquote><p>学习动态资源前，<strong>必须学习静态资源！</strong></p></blockquote><h1 id="网络通信三要素"><a href="#网络通信三要素" class="headerlink" title="网络通信三要素"></a>网络通信三要素</h1><h2 id="IP"><a href="#IP" class="headerlink" title="IP"></a>IP</h2><ul><li>电子设备(计算机)在网络中的唯一标识</li></ul><h2 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h2><ul><li>应用程序在计算机中的唯一标识。</li><li>值范围：0~65536</li></ul><h2 id="传输协议"><a href="#传输协议" class="headerlink" title="传输协议"></a>传输协议</h2><ul><li><p>规定了数据传输的规则</p></li><li><p>基础协议：</p><ol><li><p><strong>tcp</strong>：安全协议，三次握手。 速度稍慢。</p></li><li><p><strong>udp</strong>：不安全协议。 速度快。</p></li></ol></li></ul><h1 id="Web服务器软件"><a href="#Web服务器软件" class="headerlink" title="Web服务器软件"></a>Web服务器软件</h1><h2 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h2><ul><li>安装了服务器软件的计算机</li></ul><h2 id="服务器软件"><a href="#服务器软件" class="headerlink" title="服务器软件"></a>服务器软件</h2><ul><li>接收用户的请求，处理请求，做出响应</li></ul><h2 id="Web服务器软件-1"><a href="#Web服务器软件-1" class="headerlink" title="Web服务器软件"></a>Web服务器软件</h2><ul><li><p>接收用户的请求，处理请求，做出响应。</p></li><li><p>在Web服务器软件中，可以部署Web项目，让用户通过浏览器来访问这些项目</p></li><li><p>Web容器</p></li></ul><h3 id="常见的Java相关的Web服务器软件"><a href="#常见的Java相关的Web服务器软件" class="headerlink" title="常见的Java相关的Web服务器软件"></a>常见的Java相关的Web服务器软件</h3><ul><li><p>WebLogic：oracle公司，大型的JavaEE服务器，支持所有的JavaEE规范，收费的。</p></li><li><p>WebSphere：IBM公司，大型的JavaEE服务器，支持所有的JavaEE规范，收费的。</p></li><li><p>JBOSS：JBOSS公司的，大型的JavaEE服务器，支持所有的JavaEE规范，收费的。</p></li><li><p>Tomcat：Apache基金组织，中小型的JavaEE服务器，仅仅支持少量的JavaEE规范servlet/jsp。<strong>开源的，免费的。</strong></p></li></ul><blockquote><p>JavaEE：Java语言在企业级开发中使用的技术规范的总和，一共规定了13项大的规范</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>JavaWeb</tag>
      
      <tag>笔记</tag>
      
      <tag>Web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL的数据类型</title>
    <link href="/blog/2020/02/15/MySQL%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <url>/blog/2020/02/15/MySQL%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="MySQL的数据类型"><a href="#MySQL的数据类型" class="headerlink" title="MySQL的数据类型"></a>MySQL的数据类型</h1><p>数据库中的每个列都应该有适当的数据类型，用于限制或允许该列中存储的数据。例如，列中存储的为数字，则相应的数据类型应该为数值类型。</p><p>如果使用错误的数据类型可能会严重影响应用程序的功能和性能，所以在设计表时，应该特别重视数据列所用的数据类型。更改包含数据的列不是一件小事，这样做可能会导致数据丢失。因此，在创建表时必须为每个列设置正确的数据类型和长度。</p><p>MySQL中定义数据字段的类型对你数据库的优化是非常重要的。</p><p>MySQL支持所有标准SQL数值数据类型。</p><p>MySQL支持多种类型，大致可以分为三类：</p><ul><li>数值</li><li>日期/时间</li><li>字符(串)类型。</li></ul><h1 id="数据类型分类"><a href="#数据类型分类" class="headerlink" title="数据类型分类"></a>数据类型分类</h1><ol><li>数值类型（整数类型和小数类型）</li></ol><ul><li>整数类型：包括 TINYINT、SMALLINT、MEDIUMINT、INT、BIGINT。</li><li>小数类型：<ul><li>浮点数类型包括 FLOAT 和 DOUBLE。</li><li>定点数类型为 DECIMAL。</li></ul></li></ul><ol start="2"><li>日期/时间类型</li></ol><ul><li>包括 YEAR、TIME、DATE、DATETIME 和 TIMESTAMP。</li></ul><ol start="3"><li>字符类型（文本字符串和二进制字符串）</li></ol><ul><li>字符串类型：包括 CHAR、VARCHAR、BINARY、VARBINARY、BLOB、TEXT、ENUM 和 SET 等。</li><li>二进制类型：包括 BIT、BINARY、VARBINARY、TINYBLOB、BLOB、MEDIUMBLOB 和 LONGBLOB。</li></ul><a id="more"></a><h2 id="数值类型"><a href="#数值类型" class="headerlink" title="数值类型"></a>数值类型</h2><p>MySQL支持所有标准SQL数值数据类型。</p><p>这些类型包括严格数值(整数)数据类型(INTEGER、SMALLINT、DECIMAL和NUMERIC)，以及近似数值(小数)数据类型(FLOAT、REAL和DOUBLE PRECISION)。</p><p>关键字INT是INTEGER的同义词，关键字DEC是DECIMAL的同义词。</p><p>BIT数据类型保存位字段值，并且支持MyISAM、MEMORY、InnoDB和BDB表。</p><p>作为SQL标准的扩展，MySQL也支持整数类型TINYINT、MEDIUMINT和BIGINT。下面的表显示了需要的每个整数类型的存储和范围。</p><table><thead><tr><th align="left">类型</th><th align="left">大小</th><th align="left">范围（有符号）</th><th align="left">范围（无符号）</th><th align="left">用途</th></tr></thead><tbody><tr><td align="left">TINYINT</td><td align="left">1 字节</td><td align="left">(-128，127)</td><td align="left">(0，255)</td><td align="left">小整数值</td></tr><tr><td align="left">SMALLINT</td><td align="left">2 字节</td><td align="left">(-32 768，32 767)</td><td align="left">(0，65 535)</td><td align="left">大整数值</td></tr><tr><td align="left">MEDIUMINT</td><td align="left">3 字节</td><td align="left">(-8 388 608，8 388 607)</td><td align="left">(0，16 777 215)</td><td align="left">大整数值</td></tr><tr><td align="left">INT或INTEGER</td><td align="left">4 字节</td><td align="left">(-2 147 483 648，2 147 483 647)</td><td align="left">(0，4 294 967 295)</td><td align="left">大整数值</td></tr><tr><td align="left">BIGINT</td><td align="left">8 字节</td><td align="left">(-9,223,372,036,854,775,808，9 223 372 036 854 775 807)</td><td align="left">(0，18 446 744 073 709 551 615)</td><td align="left">极大整数值</td></tr><tr><td align="left">FLOAT</td><td align="left">4 字节</td><td align="left">(-3.402 823 466 E+38，-1.175 494 351 E-38)，0，(1.175 494 351 E-38，3.402 823 466 351 E+38)</td><td align="left">0，(1.175 494 351 E-38，3.402 823 466 E+38)</td><td align="left">单精度 浮点数值</td></tr><tr><td align="left">DOUBLE</td><td align="left">8 字节</td><td align="left">(-1.797 693 134 862 315 7 E+308，-2.225 073 858 507 201 4 E-308)，0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td><td align="left">0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td><td align="left">双精度 浮点数值</td></tr><tr><td align="left">DECIMAL</td><td align="left">对DECIMAL(M,D) ，如果M&gt;D，为M+2否则为D+2</td><td align="left">依赖于M和D的值</td><td align="left">依赖于M和D的值</td><td align="left">小数值</td></tr></tbody></table><h3 id="整数类型"><a href="#整数类型" class="headerlink" title="整数类型"></a>整数类型</h3><blockquote><p>整数类型又称数值型数据，数值型数据类型主要用来存储数字。</p></blockquote><p>MySQL提供了多种数值型数据类型，不同的数据类型提供不同的取值范围，可以存储的值范围越大，所需的存储空间也会越大。</p><p>MySQL 主要提供的整数类型有 <strong>TINYINT</strong>、<strong>SMALLINT</strong>、<strong>MEDIUMINT</strong>、<strong>INT</strong>、<strong>BIGINT</strong>，其属性字段可以添加 AUTO_INCREMENT 自增约束条件。下表中列出了 MySQL 中的数值类型。</p><table><thead><tr><th>类型名称</th><th>说明</th><th>存储需求</th></tr></thead><tbody><tr><td>TINYINT</td><td>很小的整数</td><td>1个字节</td></tr><tr><td>SMALLINT</td><td>小的整数</td><td>2个宇节</td></tr><tr><td>MEDIUMINT</td><td>中等大小的整数</td><td>3个字节</td></tr><tr><td>INT (INTEGHR)</td><td>普通大小的整数</td><td>4个字节</td></tr><tr><td>BIGINT</td><td>大整数</td><td>8个字节</td></tr></tbody></table><p>从上表中可以看到，不同类型的整数存储所需的字节数不相同，占用字节数最小的是 TINYINT 类型，占用字节最大的是 BIGINT 类型，占用的字节越多的类型所能表示的数值范围越大。</p><p>根据占用字节数可以求出每一种数据类型的取值范围。例如，TINYINT 需要 1 个字节（8bit）来存储，那么 TINYINT 无符号数的最大值为 28-1，即 255；TINYINT 有符号数的最大值为 27-1，即 127。其他类型的整数的取值范围计算方法相同，如下表所示。</p><table><thead><tr><th>类型名称</th><th>有符号值</th><th>无符号值</th><th>字节数</th></tr></thead><tbody><tr><td>TINYINT</td><td>-128〜127<br>(-2^7 ~ 2^7-1)</td><td>0 〜255<br>(0 ~ 2^8-1)</td><td>1</td></tr><tr><td>SMALLINT</td><td>-32768〜32767<br>(-2^15 ~ 2^15-1)</td><td>0〜65535<br>(0 ~ 2^16-1)</td><td>2</td></tr><tr><td>MEDIUMINT</td><td>-8388608〜8388607<br>(-2^23 ~ 2^23-1)</td><td>0〜16777215<br>(0 ~ 2^24-1)</td><td>3</td></tr><tr><td>INT (INTEGER)</td><td>-2147483648〜2147483647<br>(-2^31 ~ 2^31-1)</td><td>0〜4294967295<br>(0 ~ 2^32-1)</td><td>4</td></tr><tr><td>BIGINT</td><td>-9223372036854775808〜9223372036854775807<br>(-2^63 ~ 2^63-1)</td><td>0〜18446744073709551615<br>(0 ~ 2^64-1)</td><td>8</td></tr></tbody></table><blockquote><p>提示：显示宽度和数据类型的取值范围是无关的。显示宽度只是指明 MySQL 最大可能显示的数字个数，数值的位数小于指定的宽度时会由空格填充。如果插入了大于显示宽度的值，只要该值不超过该类型整数的取值范围，数值依然可以插入，而且能够显示出来。例如，year 字段插入 19999，当使用 SELECT 查询该列值的时候，MySQL 显示的将是完整的带有 5 位数字的 19999，而不是 4 位数字的值。</p></blockquote><p>其他整型数据类型也可以在定义表结构时指定所需的显示宽度，如果不指定，则系统为每一种类型指定默认的宽度值。</p><p>不同的整数类型有不同的取值范围，并且需要不同的存储空间，因此应根据实际需要选择最合适的类型，这样有利于提高查询的效率和节省存储空间。</p><h3 id="小数类型"><a href="#小数类型" class="headerlink" title="小数类型"></a>小数类型</h3><p>MySQL 中使用浮点数和定点数来表示小数。</p><p>浮点类型有两种，分别是单精度浮点数（<strong>FLOAT</strong>）和双精度浮点数（<strong>DOUBLE</strong>）；定点类型只有一种，就是 <strong>DECIMAL</strong>。</p><p>浮点类型和定点类型都可以用<code>(M, D)</code>来表示，其中<code>M</code>称为精度，表示总共的位数；<code>D</code>称为标度，表示小数的位数。</p><p>浮点数类型的取值范围为 M（1～255）和 D（1～30，且不能大于 M-2），分别表示显示宽度和小数位数。M 和 D 在 FLOAT 和DOUBLE 中是可选的，FLOAT 和 DOUBLE 类型将被保存为硬件所支持的最大精度。DECIMAL 的默认 D 值为 0、M 值为 10。</p><p>下表中列出了 MySQL 中的小数类型和存储需求。</p><table><thead><tr><th>类型名称</th><th>说明</th><th>存储范围</th><th>存储需求</th></tr></thead><tbody><tr><td>FLOAT</td><td>单精度浮点数，精确到大约7位小数位</td><td></td><td>4 个字节</td></tr><tr><td>DOUBLE</td><td>双精度浮点数</td><td></td><td>8 个字节</td></tr><tr><td>DECIMAL (M, D)，DEC</td><td>压缩的“严格”定点数</td><td></td><td>M+2 个字节</td></tr></tbody></table><p>DECIMAL 类型不同于 FLOAT 和 DOUBLE。DOUBLE 实际上是以字符串的形式存放的，DECIMAL 可能的最大取值范围与 DOUBLE 相同，但是有效的取值范围由 M 和 D 决定。如果改变 M 而固定 D，则取值范围将随 M 的变大而变大。</p><p>从上表中可以看到，DECIMAL 的存储空间并不是固定的，而由精度值 M 决定，占用 M+2 个字节。</p><ol><li>FLOAT 类型的取值范围如下：</li></ol><ul><li>有符号的取值范围：-3.402823466E+38～-1.175494351E-38。</li><li>无符号的取值范围：0 和 -1.175494351E-38～-3.402823466E+38。</li></ul><ol start="2"><li>DOUBLE 类型的取值范围如下：</li></ol><ul><li>有符号的取值范围：-1.7976931348623157E+308～-2.2250738585072014E-308。</li><li>无符号的取值范围：0 和 -2.2250738585072014E-308～-1.7976931348623157E+308。</li></ul><blockquote><p>提示：不论是定点还是浮点类型，<strong>如果用户指定的精度超出精度范围，则会四舍五入进行处理</strong>。</p></blockquote><p><strong>FLOAT 和 DOUBLE 在不指定精度时，默认会按照实际的精度（由计算机硬件和操作系统决定），DECIMAL 如果不指定精度，默认为（10，0）。</strong></p><p>浮点数相对于定点数的优点是<strong>在长度一定的情况下，浮点数能够表示更大的范围；缺点是会引起精度问题。</strong></p><p>最后再强调一下：在 MySQL 中，定点数以字符串形式存储，在对精度要求比较高的时候（如货币、科学数据），使用 DECIMAL 的类型比较好，另外两个浮点数进行减法和比较运算时也容易出问题，所以在使用浮点数时需要注意，并尽量避免做浮点数比较。</p><h2 id="日期-时间类型"><a href="#日期-时间类型" class="headerlink" title="日期/时间类型"></a>日期/时间类型</h2><p>MySQL 中有多处表示日期的数据类型：<strong>YEAR</strong>、<strong>TIME</strong>、<strong>DATE</strong>、<strong>DTAETIME</strong>、<strong>TIMESTAMP</strong>。当只记录年信息的时候，可以只使用 YEAR 类型。</p><p>每个时间类型有一个有效值范围和一个”零”值。当指定不合法的MySQL不能表示的值时，系统将“零”值插入数据库中。</p><p>TIMESTAMP类型有专有的自动更新特性，将在后面描述。</p><table><thead><tr><th>类型名称</th><th>日期格式</th><th>日期范围</th><th>存储需求</th></tr></thead><tbody><tr><td>YEAR</td><td>YYYY</td><td>1901 ~ 2155</td><td>1 个字节</td></tr><tr><td>TIME</td><td>HH:MM:SS</td><td>-838:59:59 ~ 838:59:59</td><td>3 个字节</td></tr><tr><td>DATE</td><td>YYYY-MM-DD</td><td>1000-01-01 ~ 9999-12-3</td><td>3 个字节</td></tr><tr><td>DATETIME</td><td>YYYY-MM-DD HH:MM:SS</td><td>1000-01-01 00:00:00 ~ 9999-12-31 23:59:59</td><td>8 个字节</td></tr><tr><td>TIMESTAMP<br>（时间戳）</td><td>YYYY-MM-DD HH:MM:SS</td><td>1970-01-01 00:00:00/2038<br>结束时间是第 <strong>2147483647</strong> 秒，北京时间 <strong>2038-1-19 11:14:07</strong>，格林尼治时间 2038年1月19日 凌晨 03:14:07</td><td>4 个字节</td></tr></tbody></table><h3 id="YEAR-类型"><a href="#YEAR-类型" class="headerlink" title="YEAR 类型"></a>YEAR 类型</h3><p>YEAR 类型是一个单字节类型，用于表示年，在存储时只需要 1 个字节。可以使用各种格式指定 YEAR，如下所示：</p><ul><li>以 4 位字符串或者 4 位数字格式表示的 YEAR，范围为 ‘1901’～’2155’。输入格式为 ‘YYYY’ 或者 YYYY，例如，输入 ‘2010’ 或 2010，插入数据库的值均为 2010。</li><li>以 2 位字符串格式表示的 YEAR，范围为 ‘00’ 到 ‘99’。’00’～’69’ 和 ‘70’～’99’ 范围的值分别被转换为 2000～2069 和 1970～1999 范围的 YEAR 值。’0’ 与 ‘00’ 的作用相同。插入超过取值范围的值将被转换为 2000。</li><li>以 2 位数字表示的 YEAR，范围为 1～99。1～99 和 70～99 范围的值分别被转换为 2001～2069 和 1970～1999 范围的 YEAR 值。注意，在这里 0 值将被转换为 0000，而不是 2000。</li></ul><blockquote><p>提示：两位整数范围与两位字符串范围稍有不同。例如，插入 3000 年，读者可能会使用数字格式的 0 表示 YEAR，实际上，插入数据库的值为 0000，而不是所希望的 3000。只有使用字符串格式的 ‘0’ 或 ‘00’，才可以被正确解释为 3000，非法 YEAR值将被转换为 0000。</p></blockquote><h3 id="TIME-类型"><a href="#TIME-类型" class="headerlink" title="TIME 类型"></a>TIME 类型</h3><p>TIME 类型用于只需要时间信息的值，在存储时需要 3 个字节。格式为 HH:MM:SS。HH 表示小时，MM 表示分钟，SS 表示秒。</p><p>TIME 类型的取值范围为 -838：59：59～838：59：59，小时部分如此大的原因是 TIME 类型不仅可以用于表示一天的时间（必须小于 24 小时），还可能是某个事件过去的时间或两个事件之间的时间间隔（可大于 24 小时，或者甚至为负）。</p><p>可以使用各种格式指定 TIME 值，如下所示。</p><ul><li>‘D HH：MM：SS’ 格式的字符串。还可以使用这些“非严格”的语法：’HH：MM：SS’、’HH：MM’、’D HH’ 或 ‘SS’。这里的 D 表示日，可以取 0～34 之间的值。在插入数据库时，D 被转换为小时保存，格式为 “D*24+HH”。</li><li>‘HHMMSS’ 格式、没有间隔符的字符串或者 HHMMSS 格式的数值，假定是有意义的时间。例如，’101112’ 被理解为’10：11：12’，但是 ‘106112’ 是不合法的（它有一个没有意义的分钟部分），在存储时将变为 00：00：00。</li></ul><blockquote><p>提示：为 TIME 列分配简写值时应注意：如果没有冒号，MySQL 解释值时，假定最右边的两位表示秒。（MySQL 解释 TIME 值为过去的时间而不是当前的时间）。例如，读者可能认为 ‘1112’ 和 1112 表示 11：12：00（即 11 点过 12 分钟），但MySQL 将它们解释为 00：11：12（即 11 分 12 秒）。同样 ‘12’ 和 12 被解释为00：00：12。相反，TIME 值中如果使用冒号则肯定被看作当天的时间，也就是说，’11：12’ 表示 11：12：00，而不是 00：11：12。</p></blockquote><h3 id="DATE-类型"><a href="#DATE-类型" class="headerlink" title="DATE 类型"></a>DATE 类型</h3><p>DATE 类型用于仅需要日期值时，没有时间部分，在存储时需要 3 个字节。日期格式为 ‘YYYY-MM-DD’，其中 YYYY 表示年，MM 表示月，DD 表示日。</p><p>在给 DATE 类型的字段赋值时，可以使用字符串类型或者数字类型的数据插入，只要符合 DATE 的日期格式即可。如下所示：</p><ul><li>以 ‘YYYY-MM-DD’ 或者 ‘YYYYMMDD’ 字符中格式表示的日期，取值范围为 ‘1000-01-01’～’9999-12-3’。例如，输入 ‘2015-12-31’ 或者 ‘20151231’，插入数据库的日期为2015-12-31。</li><li>以 ‘YY-MM-DD’ 或者 ‘YYMMDD’ 字符串格式表示日期，在这里YY表示两位的年值。MySQL 解释两位年值的规则：’00～69’ 范围的年值转换为 ‘2000<del>2069’，’70</del>99’ 范围的年值转换为 ‘1970～1999’。例如，输入 ‘15-12-31’，插入数据库的日期为 2015-12-31；输入 ‘991231’，插入数据库的日期为 1999-12-31。</li><li>以 YYMMDD 数字格式表示的日期，与前面相似，00~69 范围的年值转换为 2000～2069，80～99 范围的年值转换为 1980～1999。例如，输入 151231，插入数据库的日期为 2015-12-31，输入 991231，插入数据库的日期为 1999-12-31。</li><li>使用 CURRENT_DATE 或者 NOW()，插入当前系统日期。</li></ul><blockquote><p>提示：MySQL 允许“不严格”语法：任何标点符号都可以用作日期部分之间的间隔符。例如，’98-11-31’、’98.11.31’、’98/11/31’和‘98@11@31’ 是等价的，这些值也可以正确地插入数据库。</p></blockquote><h3 id="DATETIME-类型"><a href="#DATETIME-类型" class="headerlink" title="DATETIME 类型"></a>DATETIME 类型</h3><p>DATETIME 类型用于需要同时包含日期和时间信息的值，在存储时需要 8 个字节。日期格式为 ‘YYYY-MM-DD HH：MM：SS’，其中 YYYY 表示年，MM 表示月，DD 表示日，HH 表示小时，MM 表示分钟，SS 表示秒。</p><p>在给 DATETIME 类型的字段赋值时，可以使用字符串类型或者数字类型的数据插入，只要符合 DATETIME 的日期格式即可，如下所示。</p><ul><li>以 ‘YYYY-MM-DD HH：MM：SS’ 或者 ‘YYYYMMDDHHMMSS’ 字符串格式表示的日期，取值范围为 ‘1000-01-01 00：00：00’～’9999-12-3 23：59：59’。例如，输入 ‘2014-12-31 05：05：05’ 或者 ‘20141231050505’，插入数据库的 DATETIME 值都为 2014-12-31 05：05：05。</li><li>以 ‘YY-MM-DD HH：MM：SS’ 或者 ‘YYMMDDHHMMSS’ 字符串格式表示的日期，在这里 YY 表示两位的年值。与前面相同，’00～79’ 范围的年值转换为 ‘2000～2079’，’80～99’ 范围的年值转换为 ‘1980～1999’。例如，输入 ‘14-12-31 05：05：05’，插入数据库的 DATETIME 为 2014-12-31 05：05：05；输入 141231050505，插入数据库的 DATETIME 为 2014-12-31 05：05：05。</li><li>以 YYYYMMDDHHMMSS 或者 YYMMDDHHMMSS 数字格式表示的日期和时间。例如，输入 20141231050505，插入数据库的 DATETIME 为 2014-12-31 05：05：05；输入 140505050505，插入数据库的 DATETIME 为 2014-12-31 05：05：05。</li></ul><blockquote><p>提示：MySQL 允许“不严格”语法：任何标点符号都可用作日期部分或时间部分之间的间隔符。例如，’98-12-31 11：30：45’、’98.12.31 11+30+35’、’98/12/31 11<em>30</em>45’ 和 ‘98@12@31 11^30^45’ 是等价的，这些值都可以正确地插入数据库。</p></blockquote><h3 id="TIMESTAMP-类型"><a href="#TIMESTAMP-类型" class="headerlink" title="TIMESTAMP 类型"></a>TIMESTAMP 类型</h3><p>TIMESTAMP 的显示格式与 DATETIME 相同，显示宽度固定在 19 个字符，日期格式为 YYYY-MM-DD HH：MM：SS，在存储时需要 4 个字节。但是 TIMESTAMP 列的取值范围小于 DATETIME 的取值范围，为 ‘1970-01-01 00：00：01’UTC～’2038-01-19 03：14：07’UTC。在插入数据时，要保证在合法的取值范围内。</p><blockquote><p>提示：协调世界时（英：Coordinated Universal Time，法：Temps Universel Coordonné）又称为世界统一时间、世界标准时间、国际协调时间。英文（CUT）和法文（TUC）的缩写不同，作为妥协，简称 UTC。</p></blockquote><p>TIMESTAMP 与 DATETIME 除了存储字节和支持的范围不同外，还有一个最大的区别是：</p><ul><li>DATETIME 在存储日期数据时，按实际输入的格式存储，即输入什么就存储什么，与时区无关；</li><li>而 TIMESTAMP 值的存储是以 UTC（世界标准时间）格式保存的，存储时对当前时区进行转换，检索时再转换回当前时区。即查询时，根据当前时区的不同，显示的时间值是不同的。</li></ul><blockquote><p>提示：如果为一个 DATETIME 或 TIMESTAMP 对象分配一个 DATE 值，结果值的时间部分被设置为 ‘00：00：00’，因此 DATE 值未包含时间信息。如果为一个 DATE 对象分配一个 DATETIME 或 TIMESTAMP 值，结果值的时间部分被删除，因此DATE 值未包含时间信息。</p></blockquote><h2 id="字符类型"><a href="#字符类型" class="headerlink" title="字符类型"></a>字符类型</h2><p>MySQL 支持两类字符型数据：<strong>字符串类型和二进制类型</strong></p><p>包括CHAR、VARCHAR、BINARY、VARBINARY、BLOB、TEXT、ENUM和SET。该节描述了这些类型如何工作以及如何在查询中使用这些类型。</p><table><thead><tr><th align="left">类型</th><th align="left">大小/存储需求</th><th align="left">说明/用途</th></tr></thead><tbody><tr><td align="left">CHAR</td><td align="left">0-255字节</td><td align="left">定长字符串</td></tr><tr><td align="left">CHAR(M)</td><td align="left">M 字节，1&lt;=M&lt;=255</td><td align="left">固定长度非二进制字符串</td></tr><tr><td align="left">VARCHAR</td><td align="left">0-65535 字节</td><td align="left">变长字符串</td></tr><tr><td align="left">1VARCHAR(M)</td><td align="left">L+1字节，在此，L&lt; = M和 1&lt;=M&lt;=255</td><td align="left">变长非二进制字符串</td></tr><tr><td align="left">TINYBLOB</td><td align="left">0-255字节</td><td align="left">不超过 255 个字符的二进制字符串</td></tr><tr><td align="left">TINYTEXT</td><td align="left">0-255字节</td><td align="left">短文本字符串</td></tr><tr><td align="left">BLOB</td><td align="left">0-65 535字节</td><td align="left">二进制形式的长文本数据</td></tr><tr><td align="left">TEXT</td><td align="left">0-65 535字节</td><td align="left">长文本数据</td></tr><tr><td align="left">MEDIUMBLOB</td><td align="left">0-16 777 215字节</td><td align="left">二进制形式的中等长度文本数据</td></tr><tr><td align="left">MEDIUMTEXT</td><td align="left">0-16 777 215字节</td><td align="left">中等长度文本数据</td></tr><tr><td align="left">LONGBLOB</td><td align="left">0-4 294 967 295字节</td><td align="left">二进制形式的极大文本数据</td></tr><tr><td align="left">LONGTEXT</td><td align="left">0-4 294 967 295字节</td><td align="left">极大文本数据</td></tr><tr><td align="left">ENUM<br>（枚举值）</td><td align="left">1或2个字节，取决于枚举值的数目 (最大值为65535)</td><td align="left">枚举类型，只能有一个枚举字符串值。<strong>一次从中只选择一个。</strong></td></tr><tr><td align="left">SET<br>（集合）</td><td align="left">1、2、3、4或8个字节，取决于集合 成员的数量（最多64个成员）</td><td align="left">一个设置，字符串对象可以有零个或 多个SET成员。<strong>在集合中做任意的排列组合（任取一个或几个数据）</strong></td></tr></tbody></table><p>CHAR 和 VARCHAR 类型类似，但它们保存和检索的方式不同。它们的最大长度和是否尾部空格被保留等方面也不同。在存储或检索过程中不进行大小写转换。</p><p>BINARY 和 VARBINARY 类似于 CHAR 和 VARCHAR，不同的是它们包含二进制字符串而不要非二进制字符串。也就是说，它们包含字节字符串而不是字符字符串。这说明它们没有字符集，并且排序和比较基于列值字节的数值值。</p><p>BLOB 是一个二进制大对象，可以容纳可变数量的数据。有 4 种 BLOB 类型：TINYBLOB、BLOB、MEDIUMBLOB 和 LONGBLOB。它们区别在于可容纳存储范围不同。</p><p>有 4 种 TEXT 类型：TINYTEXT、TEXT、MEDIUMTEXT 和 LONGTEXT。对应的这 4 种 BLOB 类型，可存储的最大长度不同，可根据实际情况选择。</p><h3 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h3><blockquote><p>又称“文本字符串类型”。</p></blockquote><p>字符串类型用来存储字符串数据，还可以存储图片和声音的二进制数据。字符串可以区分或者不区分大小写的串比较，还可以进行正则表达式的匹配查找。</p><p>MySQL 中的字符串类型有 <strong>CHAR</strong>、<strong>VARCHAR</strong>、<strong>TINYTEXT</strong>、<strong>TEXT</strong>、<strong>MEDIUMTEXT</strong>、<strong>LONGTEXT</strong>、<strong>ENUM</strong>、<strong>SET</strong> 等。</p><p>下表中列出了 MySQL 中的字符串数据类型，括号中的<code>M</code>表示可以为其指定长度。</p><table><thead><tr><th>类型名称</th><th>说明</th><th>存储需求</th></tr></thead><tbody><tr><td>CHAR(M)</td><td>固定长度非二进制字符串</td><td>M 字节，1&lt;=M&lt;=255</td></tr><tr><td>VARCHAR(M)</td><td>变长非二进制字符串</td><td>L+1字节，在此，L&lt; = M和 1&lt;=M&lt;=255</td></tr><tr><td>TINYTEXT</td><td>非常小的非二进制字符串</td><td>L+1字节，在此，L&lt;2^8</td></tr><tr><td>TEXT</td><td>小的非二进制字符串</td><td>L+2字节，在此，L&lt;2^16</td></tr><tr><td>MEDIUMTEXT</td><td>中等大小的非二进制字符串</td><td>L+3字节，在此，L&lt;2^24</td></tr><tr><td>LONGTEXT</td><td>大的非二进制字符串</td><td>L+4字节，在此，L&lt;2^32</td></tr><tr><td>ENUM</td><td>枚举类型，只能有一个枚举字符串值</td><td>1或2个字节，取决于枚举值的数目 (最大值为65535)</td></tr><tr><td>SET</td><td>一个设置，字符串对象可以有零个或 多个SET成员</td><td>1、2、3、4或8个字节，取决于集合 成员的数量（最多64个成员）</td></tr></tbody></table><p>VARCHAR 和 TEXT 类型是变长类型，其存储需求取决于列值的实际长度（在前面的表格中用 L 表示），而不是取决于类型的最大可能尺寸。</p><p>例如，一个 VARCHAR(10) 列能保存一个最大长度为 10 个字符的字符串，实际的存储需要字符串的长度 L 加上一个字节以记录字符串的长度。对于字符 “abcd”，L 是 4，而存储要求 5 个字节。</p><h4 id="CHAR-和-VARCHAR-类型"><a href="#CHAR-和-VARCHAR-类型" class="headerlink" title="CHAR 和 VARCHAR 类型"></a>CHAR 和 VARCHAR 类型</h4><p>CHAR(M) 为固定长度字符串，在定义时指定字符串列长。当保存时，在右侧填充空格以达到指定的长度。M 表示列的长度，范围是 0～255 个字符。</p><p>例如，CHAR(4) 定义了一个固定长度的字符串列，包含的字符个数最大为 4。当检索到 CHAR 值时，尾部的空格将被删除。</p><p>VARCHAR(M) 是长度可变的字符串，M 表示最大列的长度，M 的范围是 0～65535。VARCHAR 的最大实际长度由最长的行的大小和使用的字符集确定，而实际占用的空间为字符串的实际长度加 1。</p><p>例如，VARCHAR(50) 定义了一个最大长度为 50 的字符串，如果插入的字符串只有 10 个字符，则实际存储的字符串为 10 个字符和一个字符串结束字符。VARCHAR 在值保存和检索时尾部的空格仍保留。</p><p>【实例】下面将不同的字符串保存到 CHAR(4) 和 VARCHAR(4) 列，说明 CHAR 和 VARCHAR 之间的差别，如下表所示。</p><table><thead><tr><th>插入值</th><th>CHAR(4)</th><th>存储需求</th><th>VARCHAR(4)</th><th>存储需求</th></tr></thead><tbody><tr><td>‘ ‘</td><td>‘  ‘</td><td>4字节</td><td>‘’</td><td>1字节</td></tr><tr><td>‘ab’</td><td>‘ab ‘</td><td>4字节</td><td>‘ab’</td><td>3字节</td></tr><tr><td>‘abc’</td><td>‘abc ‘</td><td>4字节</td><td>‘abc’</td><td>4字节</td></tr><tr><td>‘abcd’</td><td>‘abcd’</td><td>4字节</td><td>‘abcd’</td><td>5字节</td></tr><tr><td>‘abcdef’</td><td>‘abcd’</td><td>4字节</td><td>‘abcd’</td><td>5字节</td></tr></tbody></table><p>对比结果可以看到，CHAR(4) 定义了固定长度为 4 的列，无论存入的数据长度为多少，所占用的空间均为 4 个字节。VARCHAR(4) 定义的列所占的字节数为实际长度加 1。</p><h4 id="TEXT-类型"><a href="#TEXT-类型" class="headerlink" title="TEXT 类型"></a>TEXT 类型</h4><p>TEXT 列保存非二进制字符串，如文章内容、评论等。当保存或查询 TEXT 列的值时，不删除尾部空格。</p><p>TEXT 类型分为 4 种：TINYTEXT、TEXT、MEDIUMTEXT 和 LONGTEXT。不同的 TEXT 类型的存储空间和数据长度不同。</p><ul><li>TINYTEXT 表示长度为 255（28-1）字符的 TEXT 列。</li><li>TEXT 表示长度为 65535（216-1）字符的 TEXT 列。</li><li>MEDIUMTEXT 表示长度为 16777215（224-1）字符的 TEXT 列。</li><li>LONGTEXT 表示长度为 4294967295 或 4GB（232-1）字符的 TEXT 列。</li></ul><h4 id="ENUM-类型"><a href="#ENUM-类型" class="headerlink" title="ENUM 类型"></a>ENUM 类型</h4><p>ENUM 是一个字符串对象，值为表创建时列规定中枚举的一列值。其语法格式如下：</p><div class="hljs"><pre><code class="hljs autoit">&lt;字段名&gt; <span class="hljs-keyword">ENUM</span>( <span class="hljs-string">'值1'</span>, <span class="hljs-string">'值1'</span>, …, <span class="hljs-string">'值n'</span> )</code></pre></div><p>字段名指将要定义的字段，值 n 指枚举列表中第 n 个值。</p><p>ENUM 类型的字段在取值时，能在指定的枚举列表中获取，而且一次只能取一个。如果创建的成员中有空格，尾部的空格将自动被删除。</p><p>ENUM 值在内部用整数表示，每个枚举值均有一个索引值；列表值所允许的成员值从 1 开始编号，MySQL 存储的就是这个索引编号，枚举最多可以有 65535 个元素。</p><p>例如，定义 ENUM 类型的列（’first’，’second’，’third’），该列可以取的值和每个值的索引如下表所示。</p><table><thead><tr><th>值</th><th>索引</th></tr></thead><tbody><tr><td>NULL</td><td>NULL</td></tr><tr><td>‘’</td><td>0</td></tr><tr><td>’first</td><td>1</td></tr><tr><td>second</td><td>2</td></tr><tr><td>third</td><td>3</td></tr></tbody></table><p>ENUM 值依照列索引顺序排列，并且空字符串排在非空字符串前，NULL 值排在其他所有枚举值前。</p><blockquote><p>提示：ENUM 列总有一个默认值。如果将 ENUM 列声明为 NULL，NULL 值则为该列的一个有效值，并且默认值为 NULL。如果 ENUM 列被声明为 NOT NULL，其默认值为允许的值列表的第 1 个元素。</p></blockquote><h4 id="SET-类型"><a href="#SET-类型" class="headerlink" title="SET 类型"></a>SET 类型</h4><p>SET 是一个字符串的对象，可以有零或多个值，SET 列最多可以有 64 个成员，值为表创建时规定的一列值。指定包括多个 SET 成员的 SET 列值时，各成员之间用逗号<code>,</code>隔开，语法格式如下：</p><div class="hljs"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">SET</span><span class="hljs-params">( <span class="hljs-string">'值1'</span>, <span class="hljs-string">'值2'</span>, …, <span class="hljs-string">'值n'</span> )</span></span></code></pre></div><p>与 ENUM 类型相同，SET 值在内部用整数表示，列表中每个值都有一个索引编号。当创建表时，SET 成员值的尾部空格将自动删除。</p><p>但与 ENUM 类型不同的是，ENUM 类型的字段只能从定义的列值中选择一个值插入，而 SET 类型的列可从定义的列值中选择多个字符的联合。</p><blockquote><p>提示：如果插入 SET 字段中的列值有重复，则 MySQL 自动删除重复的值；插入 SET 字段的值的顺序并不重要，MySQL 会在存入数据库时，按照定义的顺序显示；如果插入了不正确的值，默认情况下，MySQL 将忽视这些值，给出警告。</p></blockquote><h3 id="二进制类型"><a href="#二进制类型" class="headerlink" title="二进制类型"></a>二进制类型</h3><blockquote><p> 二进制字符串类型有时候也直接被称为“二进制类型”。</p></blockquote><p>MySQL 中的二进制字符串有 <strong>BIT</strong>、<strong>BINARY</strong>、<strong>VARBINARY</strong>、<strong>TINYBLOB</strong>、<strong>BLOB</strong>、<strong>MEDIUMBLOB</strong> 和 <strong>LONGBLOB</strong>。</p><p>下表中列出了 MySQL 中的二进制数据类型，括号中的<code>M</code>表示可以为其指定长度。</p><table><thead><tr><th>类型名称</th><th>说明</th><th>存储需求</th></tr></thead><tbody><tr><td>BIT(M)</td><td>位字段类型</td><td>大约 (M+7)/8 字节</td></tr><tr><td>BINARY(M)</td><td>固定长度二进制字符串</td><td>M 字节</td></tr><tr><td>VARBINARY (M)</td><td>可变长度二进制字符串</td><td>M+1 字节</td></tr><tr><td>TINYBLOB (M)</td><td>非常小的BLOB</td><td>L+1 字节，在此，L&lt;2^8</td></tr><tr><td>BLOB (M)</td><td>小 BLOB</td><td>L+2 字节，在此，L&lt;2^16</td></tr><tr><td>MEDIUMBLOB (M)</td><td>中等大小的BLOB</td><td>L+3 字节，在此，L&lt;2^24</td></tr><tr><td>LONGBLOB (M)</td><td>非常大的BLOB</td><td>L+4 字节，在此，L&lt;2^32</td></tr></tbody></table><h4 id="BIT-类型"><a href="#BIT-类型" class="headerlink" title="BIT 类型"></a>BIT 类型</h4><p>位字段类型。M 表示每个值的位数，范围为 1～64。如果 M 被省略，默认值为 1。如果为 BIT(M) 列分配的值的长度小于 M 位，在值的左边用 0 填充。例如，为 BIT(6) 列分配一个值 b’101’，其效果与分配 b’000101’ 相同。</p><p>BIT 数据类型用来保存位字段值，例如以二进制的形式保存数据 13，13 的二进制形式为 1101，在这里需要位数至少为 4 位的 BIT 类型，即可以定义列类型为 BIT(4)。大于二进制 1111 的数据是不能插入 BIT(4) 类型的字段中的。</p><blockquote><p>提示：默认情况下，MySQL 不可以插入超出该列允许范围的值，因而插入数据时要确保插入的值在指定的范围内。</p></blockquote><h4 id="BINARY-和-VARBINARY-类型"><a href="#BINARY-和-VARBINARY-类型" class="headerlink" title="BINARY 和 VARBINARY 类型"></a>BINARY 和 VARBINARY 类型</h4><p>BINARY 和 VARBINARY 类型类似于 CHAR 和 VARCHAR，不同的是它们包含二进制字节字符串。使用的语法格式如下：</p><p>列名称 BINARY(M) 或者 VARBINARY(M)</p><p>BINARY 类型的长度是固定的，指定长度后，不足最大长度的，将在它们右边填充 “\0” 补齐，以达到指定长度。例如，指定列数据类型为 BINARY(3)，当插入 a 时，存储的内容实际为 “\a0\0”，当插入 ab 时，实际存储的内容为“ab\0”，无论存储的内容是否达到指定的长度，存储空间均为指定的值 M。</p><p>VARBINARY 类型的长度是可变的，指定好长度之后，长度可以在 0 到最大值之间。例如，指定列数据类型为 VARBINARY(20)，如果插入的值长度只有 10，则实际存储空间为 10 加 1，实际占用的空间为字符串的实际长度加 1。</p><h4 id="BLOB-类型"><a href="#BLOB-类型" class="headerlink" title="BLOB 类型"></a>BLOB 类型</h4><p>BLOB 是一个二进制的对象，用来存储可变数量的数据。BLOB 类型分为 4 种：TINYBLOB、BLOB、MEDIUMBLOB 和 LONGBLOB，它们可容纳值的最大长度不同，如下表所示。</p><table><thead><tr><th>数据类型</th><th>存储范围</th></tr></thead><tbody><tr><td>TINYBLOB</td><td>最大长度为255 (28-1)字节</td></tr><tr><td>BLOB</td><td>最大长度为65535 (216-1)字节</td></tr><tr><td>MEDIUMBLOB</td><td>最大长度为16777215 (224-1)字节</td></tr><tr><td>LONGBLOB</td><td>最大长度为4294967295或4GB (231-1)字节BLOB 列存储的是二进制字符串（字节字符串），TEXT 列存储的是非进制字符串（字符字符串）。BLOB 列是字符集，并且排序和比较基于列值字节的数值；TEXT 列有一个字符集，并且根据字符集对值进行排序和比较。</td></tr></tbody></table><hr><p>以上笔记部分来自 <a href="http://c.biancheng.net" target="_blank" rel="noopener">C语言中文网</a> 、百度知道、<a href="https://www.csdn.net/" target="_blank" rel="noopener">CSDN</a>。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo d后，网页出现乱码？</title>
    <link href="/blog/2020/02/15/hexo%20d%E8%BF%9E%E5%90%8E%EF%BC%8C%E7%BD%91%E9%A1%B5%E5%87%BA%E7%8E%B0%E4%B9%B1%E7%A0%81%EF%BC%9F/"/>
    <url>/blog/2020/02/15/hexo%20d%E8%BF%9E%E5%90%8E%EF%BC%8C%E7%BD%91%E9%A1%B5%E5%87%BA%E7%8E%B0%E4%B9%B1%E7%A0%81%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2020/02/15/1xJCUx.png" srcset="/blog/img/loading.gif" alt="hexo d后乱码"></p><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>如平时一样<code>hexo d</code>部署我的博客，但是当我去浏览时候，竟发现乱码。</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>重新<strong>hexo三连</strong>即可。</p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>![rejected]master-&gt;master(fetch first)问题的解决方案</title>
    <link href="/blog/2020/02/14/rejected-master-master-fetch-first-%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <url>/blog/2020/02/14/rejected-master-master-fetch-first-%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
    
    <content type="html"><![CDATA[<p>今天在做<code>git push -u origin master</code>时出现了如下错误：</p><div class="hljs"><pre><code class="hljs crmsh">! [rejected]        <span class="hljs-keyword">master</span> <span class="hljs-title">-&gt; master</span> (fetch first)</code></pre></div><p>分析原因，基本上可以确定是因为github上的远程库与本地库版本不一致（我对github上的文件做了编辑操作，且未更新到本地，当然也可能还有其他原因…），通过一番研究，找到了两种解决方案：</p><h2 id="温柔型方案："><a href="#温柔型方案：" class="headerlink" title="温柔型方案："></a>温柔型方案：</h2><ol><li><p>通过<code>git pull</code>先将本地库更新到与远程库一致的版本，但要注意本地库后来做的修改可能被覆盖，最好使用<code>git fetch</code>(不会自动合并)，查看更新情况再有选择合并，或者先将本地库修改过的文件备份，<code>git pull</code>后再重新修改；</p></li><li><p>再运行<code>git push</code>即可成功。</p></li></ol><h2 id="暴力型方案："><a href="#暴力型方案：" class="headerlink" title="暴力型方案："></a>暴力型方案：</h2><p>git提供了一种强制上传的方式：<code>git push -f</code>，它会忽略版本不一致等问题，强制将本地库上传的远程库，但是一定要谨慎使用，因为-f会用本地库覆盖掉远程库，如果远程库上有重要更新，或者有其他同伴做的修改，也都会被覆盖，所以一定要在确定无严重后果的前提下使用此操作。</p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>GitHub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[转]使用Cmder替换cmd,让开发更高效</title>
    <link href="/blog/2020/02/14/%E8%BD%AC-%E4%BD%BF%E7%94%A8Cmder%E6%9B%BF%E6%8D%A2cmd-%E8%AE%A9%E5%BC%80%E5%8F%91%E6%9B%B4%E9%AB%98%E6%95%88/"/>
    <url>/blog/2020/02/14/%E8%BD%AC-%E4%BD%BF%E7%94%A8Cmder%E6%9B%BF%E6%8D%A2cmd-%E8%AE%A9%E5%BC%80%E5%8F%91%E6%9B%B4%E9%AB%98%E6%95%88/</url>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2020/02/14/1juWVg.png" srcset="/blog/img/loading.gif" alt="cmder"></p><a id="more"></a><p>第一篇文章<a href="https://segmentfault.com/a/1190000021029858?utm_source=tag-newest" target="_blank" rel="noopener">https://segmentfault.com/a/1190000021029858?utm_source=tag-newest</a></p><p>以下为第二篇文章的内容</p><hr><h1 id="一、为什么要更换为cmder"><a href="#一、为什么要更换为cmder" class="headerlink" title="一、为什么要更换为cmder"></a>一、为什么要更换为cmder</h1><p>在做项目时，有些时候我想复制控制台上面的代码时，<strong>cmd</strong>有的时候复制粘贴很麻烦，<strong>Cmder</strong>则不会，并且<strong>Cmder</strong>可以分屏多开窗口，可以设置窗口颜色,字体大小，并且很多快捷键和谷歌浏览器操作类似,等等很多功能。</p><h1 id="二、官网下载地址"><a href="#二、官网下载地址" class="headerlink" title="二、官网下载地址:"></a>二、官网下载地址:</h1><blockquote><p><a href="https://links.jianshu.com/go?to=http%3A%2F%2Fcmder.net%2F" target="_blank" rel="noopener">http://cmder.net/</a></p></blockquote><h5 id="关于下载"><a href="#关于下载" class="headerlink" title="关于下载"></a>关于下载</h5><p>进入官网以后，有<strong>mini版</strong>和<strong>完整版</strong>，建议完整版，完整版功能更齐全，还可以使用<code>git</code>，下载好解压文件包以后就可以使用。</p><p><img src="https:////upload-images.jianshu.io/upload_images/13479263-a8a6450b69cb136c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" srcset="/blog/img/loading.gif" alt="img"></p><h5 id="Cmder界面展示"><a href="#Cmder界面展示" class="headerlink" title="Cmder界面展示"></a>Cmder界面展示</h5><p>启动Cmder界面如下，当然我设置了背景色，透明度，字体样式，隐藏标签栏栏，增加底部的状态栏，以及分屏功能。</p><p><img src="https:////upload-images.jianshu.io/upload_images/13479263-ef580c697474880d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" srcset="/blog/img/loading.gif" alt="img"></p><p>Cmder界面展示</p><h1 id="三、关于cmder的一些配置"><a href="#三、关于cmder的一些配置" class="headerlink" title="三、关于cmder的一些配置"></a>三、关于cmder的一些配置</h1><h4 id="1-配置环境变量"><a href="#1-配置环境变量" class="headerlink" title="1. 配置环境变量:"></a>1. 配置环境变量:</h4><p>在系统属性里面配置环境变量，将<code>Cmder.exe</code>所在文件路径添加至<code>Path</code>里</p><p><img src="https:////upload-images.jianshu.io/upload_images/13479263-87db9162416bf29b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/418/format/webp" srcset="/blog/img/loading.gif" alt="img"></p><p><img src="https:////upload-images.jianshu.io/upload_images/13479263-e2f1e706bf445886.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/390/format/webp" srcset="/blog/img/loading.gif" alt="img"></p><h4 id="2-配置右键快捷启动"><a href="#2-配置右键快捷启动" class="headerlink" title="2. 配置右键快捷启动:"></a>2. 配置右键快捷启动:</h4><p>以管理员身份打开<code>cmd</code>，执行以下命令即可，完了以后在任意地方点击右键即可使用cmder</p><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-comment">// 设置任意地方鼠标右键启动Cmder</span>Cmder.exe /REGISTER ALL</code></pre></div><p><img src="https:////upload-images.jianshu.io/upload_images/13479263-46f0ec91b15cd4e5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/182/format/webp" srcset="/blog/img/loading.gif" alt="img"></p><p>鼠标右键启动Cmder</p><h4 id="3-界面效果的设置"><a href="#3-界面效果的设置" class="headerlink" title="3. 界面效果的设置"></a>3. 界面效果的设置</h4><p>首先使用<code>windows+alt+p</code>进入界面设置<br> 背景色设置</p><p><img src="https:////upload-images.jianshu.io/upload_images/13479263-cd9f51de6a6464e6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/776/format/webp" srcset="/blog/img/loading.gif" alt="img"></p><p> 字体设置</p><p><img src="https:////upload-images.jianshu.io/upload_images/13479263-5d90f5c67e4be767.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/771/format/webp" srcset="/blog/img/loading.gif" alt="img"></p><p> 背景透明度</p><p><img src="https:////upload-images.jianshu.io/upload_images/13479263-7b1f5ba987021346.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/761/format/webp" srcset="/blog/img/loading.gif" alt="img"></p><p> 隐藏标签栏</p><p><img src="https:////upload-images.jianshu.io/upload_images/13479263-5ef33c025ac01d61.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/766/format/webp" srcset="/blog/img/loading.gif" alt="img"></p><p> 显示底部状态栏</p><p><img src="https:////upload-images.jianshu.io/upload_images/13479263-be5705ebc73910bf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/777/format/webp" srcset="/blog/img/loading.gif" alt="img"></p><p> 将Cmder默认的命令提示符<code>"λ"</code>改为<code>“$”</code>，<br> 在<code>cmder\vendor</code>中的<code>clink.lua</code>内做如下修改”λ”替换成”$”</p><p><img src="https:////upload-images.jianshu.io/upload_images/13479263-7de88efa37a7999b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/900/format/webp" srcset="/blog/img/loading.gif" alt="img"></p><h1 id="四、关于Cmder的一些常用快捷键"><a href="#四、关于Cmder的一些常用快捷键" class="headerlink" title="四、关于Cmder的一些常用快捷键"></a>四、关于Cmder的一些常用快捷键</h1><div class="hljs"><pre><code class="hljs css"><span class="hljs-selector-tag">Tab</span>       自动路径补全<span class="hljs-selector-tag">Ctrl</span>+<span class="hljs-selector-tag">T</span>    建立新页签<span class="hljs-selector-tag">Ctrl</span>+<span class="hljs-selector-tag">W</span>    关闭页签<span class="hljs-selector-tag">Ctrl</span>+<span class="hljs-selector-tag">Tab</span>  切换页签<span class="hljs-selector-tag">Alt</span>+<span class="hljs-selector-tag">F4</span>    关闭所有页签<span class="hljs-selector-tag">Alt</span>+<span class="hljs-selector-tag">Shift</span>+1 开启<span class="hljs-selector-tag">cmd</span><span class="hljs-selector-class">.exe</span><span class="hljs-selector-tag">Alt</span>+<span class="hljs-selector-tag">Shift</span>+2 开启<span class="hljs-selector-tag">powershell</span><span class="hljs-selector-class">.exe</span><span class="hljs-selector-tag">Alt</span>+<span class="hljs-selector-tag">Shift</span>+3 开启<span class="hljs-selector-tag">powershell</span><span class="hljs-selector-class">.exe</span> (系统管理员权限)<span class="hljs-selector-tag">Ctrl</span>+1      快速切换到第1个页签<span class="hljs-selector-tag">Ctrl</span>+<span class="hljs-selector-tag">n</span>      快速切换到第<span class="hljs-selector-tag">n</span>个页签( <span class="hljs-selector-tag">n</span>值无上限)<span class="hljs-selector-tag">Alt</span> + <span class="hljs-selector-tag">enter</span> 切换到全屏状态<span class="hljs-selector-tag">Ctr</span>+<span class="hljs-selector-tag">r</span>       历史命令搜索<span class="hljs-selector-tag">Tab</span>         自动路径补全<span class="hljs-selector-tag">Ctrl</span>+<span class="hljs-selector-tag">T</span>      建立新页签<span class="hljs-selector-tag">Ctrl</span>+<span class="hljs-selector-tag">W</span>      关闭页签<span class="hljs-selector-tag">Ctrl</span>+<span class="hljs-selector-tag">Tab</span>    切换页签<span class="hljs-selector-tag">Alt</span>+<span class="hljs-selector-tag">F4</span>      关闭所有页签<span class="hljs-selector-tag">Alt</span>+<span class="hljs-selector-tag">Shift</span>+1 开启<span class="hljs-selector-tag">cmd</span><span class="hljs-selector-class">.exe</span><span class="hljs-selector-tag">Alt</span>+<span class="hljs-selector-tag">Shift</span>+2 开启<span class="hljs-selector-tag">powershell</span><span class="hljs-selector-class">.exe</span><span class="hljs-selector-tag">Alt</span>+<span class="hljs-selector-tag">Shift</span>+3 开启<span class="hljs-selector-tag">powershell</span><span class="hljs-selector-class">.exe</span> (系统管理员权限)<span class="hljs-selector-tag">Ctrl</span>+1      快速切换到第1个页签<span class="hljs-selector-tag">Ctrl</span>+<span class="hljs-selector-tag">n</span>      快速切换到第<span class="hljs-selector-tag">n</span>个页签( <span class="hljs-selector-tag">n</span>值无上限)<span class="hljs-selector-tag">Alt</span> + <span class="hljs-selector-tag">enter</span> 切换到全屏状态<span class="hljs-selector-tag">Ctr</span>+<span class="hljs-selector-tag">r</span>       历史命令搜索<span class="hljs-selector-tag">Win</span>+<span class="hljs-selector-tag">Alt</span>+<span class="hljs-selector-tag">P</span>   开启工具选项视窗</code></pre></div><h1 id="五、关于中文乱码问题："><a href="#五、关于中文乱码问题：" class="headerlink" title="五、关于中文乱码问题："></a>五、关于中文乱码问题：</h1><p>将下面的4行命令添加到cmder/config/aliases文件末尾,如果还是不行参考前面字体设置，将前面提到的字体设置里面的Monospace的复选框不选中。还有就是养成良好的编码习惯文件命名最好不要有中文。</p><div class="hljs"><pre><code class="hljs dart">l=ls --<span class="hljs-keyword">show</span>-control-chars la=ls -aF --<span class="hljs-keyword">show</span>-control-chars ll=ls -alF --<span class="hljs-keyword">show</span>-control-chars</code></pre></div><hr><p>作者：_123hhh<br>链接：<a href="https://www.jianshu.com/p/5b7c985240a7" target="_blank" rel="noopener">https://www.jianshu.com/p/5b7c985240a7</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>删除磁盘管理中的OEM分区</title>
    <link href="/blog/2020/02/14/%E5%88%A0%E9%99%A4%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86%E4%B8%AD%E7%9A%84OEM%E5%88%86%E5%8C%BA/"/>
    <url>/blog/2020/02/14/%E5%88%A0%E9%99%A4%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86%E4%B8%AD%E7%9A%84OEM%E5%88%86%E5%8C%BA/</url>
    
    <content type="html"><![CDATA[<p>用windows自带的工具-DISKPART来实现，而且不会破坏其他分区的数据，具体操作如下：</p><p>首先打开CMD，输入  diskpart.exe 回车   提示转入DISKPART</p><p>然后输入 rescan 回车   （扫描硬盘）</p><p>接着输入 list disk 回车   （硬盘列表，可以看到连接到该主机的硬盘列表）</p><p>选择一个磁盘：  select disk 磁盘号 回车</p><p>显示磁盘中的分区： list partition 回车</p><p>选择一个分区：  select partition 分区号 回车</p><p>删除分区：      delete partition override 回车</p><p>基本就能删除OEM分区了。</p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[工具]ScreenToGif:一款小而实用的屏幕录制生成gif工具</title>
    <link href="/blog/2020/02/14/%E5%B7%A5%E5%85%B7-ScreenToGif-%E4%B8%80%E6%AC%BE%E5%B0%8F%E8%80%8C%E5%AE%9E%E7%94%A8%E7%9A%84%E5%B1%8F%E5%B9%95%E5%BD%95%E5%88%B6%E7%94%9F%E6%88%90gif%E5%B7%A5%E5%85%B7/"/>
    <url>/blog/2020/02/14/%E5%B7%A5%E5%85%B7-ScreenToGif-%E4%B8%80%E6%AC%BE%E5%B0%8F%E8%80%8C%E5%AE%9E%E7%94%A8%E7%9A%84%E5%B1%8F%E5%B9%95%E5%BD%95%E5%88%B6%E7%94%9F%E6%88%90gif%E5%B7%A5%E5%85%B7/</url>
    
    <content type="html"><![CDATA[<blockquote><p>因为写博客或工作等原因，经常需要录制屏幕并制作gif图。ScreenToGif使用了小半年了，给我的感觉就是“小而实用”，大小仅2M多（压缩后才几百K），但却包含了录制及常用的gif处理功能。</p></blockquote><p><img src="https:////upload-images.jianshu.io/upload_images/9166166-09c81f536b3acdfb.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/500/format/webp" srcset="/blog/img/loading.gif" alt="ScreenToGif"></p><p>ScreenToGif：仅从名字就可以了解到它是一款屏幕转gif图的软件。而事实上，它不仅可以录制屏幕，同时也包含了摄像头录制，白板书写录制等功能，并且在录制后，可以对录制内容进行增删、修改、压缩等处理。</p><p><img src="https:////upload-images.jianshu.io/upload_images/9166166-d23dc9e5227845ff.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/512/format/webp" srcset="/blog/img/loading.gif" alt="ScreenToGif"></p><p>ScreenToGif是一款免安装软件，下载并解压缩后，双击exe文件就可以运行。ScreenToGif还支持打开多次，以上Gif就是用一个ScreenToGif来录制另一个ScreenToGif界面。</p><p><img src="https:////upload-images.jianshu.io/upload_images/9166166-3e089a594b649874.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/500/format/webp" srcset="/blog/img/loading.gif" alt="ScreenToGif界面"></p><p> 上图是ScreenToGif编辑器主页，ScreenToGif分两大功能，录制和编辑，从上图可以看到其编辑功能还是蛮强大的，至少在常规gif制作的功能都包含了：</p><blockquote><ol><li>在编辑中有很多对帧的操作如:增加删除、循环、反转，特别是移除重复帧功能，能很好的减小gif占用内存大小；</li><li>而在图片选项中则包含了水印、微动、模糊、字幕、自由文本、自由绘制等功能；</li><li>ScreenToGif还支持简单的过渡动画；</li><li>统计功能则提供了总帧数、总时长、帧大小、延时、帧分辨率等数据的统计；</li><li>如下图：在编辑结束后，我们可以根据需求选择适合的类型及编码进行保存；</li><li>到目前为止，ScreenToGif已适配20多种语言，并提供上传服务。</li></ol></blockquote><p><img src="https:////upload-images.jianshu.io/upload_images/9166166-a00c74e3501a6851.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/288/format/webp" srcset="/blog/img/loading.gif" alt="ScreenToGif文件类型及编码"></p><blockquote><p>ScreenToGif是一个开源项目<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FNickeManarin%2FScreenToGif%2Freleases" target="_blank" rel="noopener">ScreenToGif Github</a>，本文下方也提供目前最新的2.14.1版本免安装exe程序。</p></blockquote><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fitlao5.com%2Fwp%2Ftools%2FScreenToGif2.14.1.rar" target="_blank" rel="noopener">版本2.14.1下载地址</a></p><hr><p>作者：ThinkinLiu_IT老五<br>链接：<a href="https://www.jianshu.com/p/17121d0587fc" target="_blank" rel="noopener">https://www.jianshu.com/p/17121d0587fc</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[随笔]相信自己</title>
    <link href="/blog/2020/02/14/%E9%9A%8F%E7%AC%94-%E7%9B%B8%E4%BF%A1%E8%87%AA%E5%B7%B1/"/>
    <url>/blog/2020/02/14/%E9%9A%8F%E7%AC%94-%E7%9B%B8%E4%BF%A1%E8%87%AA%E5%B7%B1/</url>
    
    <content type="html"><![CDATA[<p>下午，起兴想整理笔记本里的数据时，发现了一些有趣的东西，拿出一部分来记作随笔。</p><h1 id="相信自己"><a href="#相信自己" class="headerlink" title="相信自己"></a>相信自己</h1><p>在个人文件夹中，发现一个名为<strong><font size="5" color="#86b0ed">“相信自己”</font></strong>的Word文档，点开来，里面就一句话，简简单单的一句<strong><font size="5" color="rgb(26,188,156)">“如果有时候怀疑了，觉得不知道自己为什么一开始要做这个选择，或者觉得自己付出太多不值得，那就想想当初自己做这个决定的初心。或许一切就能释然了”</font></strong>。</p><p><img src="https://s2.ax1x.com/2020/02/14/1XO0hR.png" srcset="/blog/img/loading.gif" alt=""></p><p><img src="https://s2.ax1x.com/2020/02/14/1XLKRx.png" srcset="/blog/img/loading.gif" alt=""></p><h1 id="一起玩耍吧"><a href="#一起玩耍吧" class="headerlink" title="一起玩耍吧"></a>一起玩耍吧</h1><p>18年，在网上看到一个视频，教用一些简单VB代码来制作的小程序。</p><p>只有连续点击<strong>确定/是</strong>，才能结束程序。</p><p>用来<strong>表白/坑人</strong>，挺不错的hh</p><p>猜猜我用来干嘛呢 <strong>( ͡° ͜ʖ ͡°)✧ ~</strong></p><p><img src="https://s2.ax1x.com/2020/02/14/1Xzpi4.png" srcset="/blog/img/loading.gif" alt=""></p><p>演示👇</p><p><img src="https://s2.ax1x.com/2020/02/14/1jS5CQ.gif" srcset="/blog/img/loading.gif" alt=""></p><p>制作过程很简单，新建一个<strong>txt文本</strong>，粘贴我写好的代码，保存后修改后缀为<strong>.vbs</strong>，完事。</p><p>代码👇</p><div class="hljs"><pre><code class="hljs vbscript"><span class="hljs-built_in">msgbox</span> <span class="hljs-string">"我们可以一起玩吗？"</span>,vbQuestion,<span class="hljs-string">"在吗？"</span><span class="hljs-built_in">msgbox</span> (<span class="hljs-string">"可以吗？"</span>)<span class="hljs-keyword">dim</span> j<span class="hljs-keyword">do</span> <span class="hljs-keyword">while</span> j&lt;<span class="hljs-number">1</span><span class="hljs-keyword">Select</span> <span class="hljs-keyword">Case</span> <span class="hljs-built_in">msgbox</span>(<span class="hljs-string">"真的真的真的可以吗？"</span>,<span class="hljs-number">68</span>,<span class="hljs-string">"请郑重的回答我"</span>)<span class="hljs-keyword">Case</span> <span class="hljs-number">6</span> j=<span class="hljs-number">1</span><span class="hljs-keyword">Case</span> <span class="hljs-number">7</span> <span class="hljs-built_in">msgbox</span>(<span class="hljs-string">"别嘛，我就是要和你一起玩"</span>)<span class="hljs-keyword">end</span> <span class="hljs-keyword">Select</span><span class="hljs-keyword">loop</span><span class="hljs-built_in">msgbox</span>(<span class="hljs-string">"我就知道你会同意的，啦啦啦"</span>)</code></pre></div><a id="more"></a><h1 id="💗我爱你们，爸妈！"><a href="#💗我爱你们，爸妈！" class="headerlink" title="💗我爱你们，爸妈！"></a>💗我爱你们，爸妈！</h1><p>💗看到，我才发现我原来备份了一部分19年七八两月的一些照片。</p><p><img src="https://s2.ax1x.com/2020/02/14/1jVPr4.png" srcset="/blog/img/loading.gif" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>IDEA添加jar包的三种方式(小结)</title>
    <link href="/blog/2020/02/13/IDEA%20%E6%B7%BB%E5%8A%A0jar%E5%8C%85%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F(%E5%B0%8F%E7%BB%93)/"/>
    <url>/blog/2020/02/13/IDEA%20%E6%B7%BB%E5%8A%A0jar%E5%8C%85%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F(%E5%B0%8F%E7%BB%93)/</url>
    
    <content type="html"><![CDATA[<p>相关文章：</p><p>1、<a href="https://www.jb51.net/article/145327.htm" target="_blank" rel="noopener">https://www.jb51.net/article/145327.htm</a></p><p>2、<a href="https://blog.csdn.net/wangxinyao1997/article/details/87527391" target="_blank" rel="noopener">https://blog.csdn.net/wangxinyao1997/article/details/87527391</a></p><p>3、<a href="https://blog.csdn.net/simple_start/article/details/92422833" target="_blank" rel="noopener">https://blog.csdn.net/simple_start/article/details/92422833</a></p><p>4、<a href="https://blog.csdn.net/yogima/article/details/81186092?depth_1-utm_source=distribute.pc_relevant.none-task&amp;utm_source=distribute.pc_relevant.none-task" target="_blank" rel="noopener">https://blog.csdn.net/yogima/article/details/81186092?depth_1-utm_source=distribute.pc_relevant.none-task&amp;utm_source=distribute.pc_relevant.none-task</a></p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>JavaWeb</tag>
      
      <tag>IDEA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>绚丽彩虹播放器</title>
    <link href="/blog/2020/02/13/%E7%BB%9A%E4%B8%BD%E5%BD%A9%E8%99%B9%E6%92%AD%E6%94%BE%E5%99%A8/"/>
    <url>/blog/2020/02/13/%E7%BB%9A%E4%B8%BD%E5%BD%A9%E8%99%B9%E6%92%AD%E6%94%BE%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<p>代码来自<a href="https://www.badapple.top/?mod=User" target="_blank" rel="noopener">绚丽彩虹播放器</a></p><div class="hljs"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- Your XlchPlayerKey --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="actionscript">XlchKey=<span class="hljs-string">"O7NQ6f6YIg"</span>;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-comment">&lt;!-- font-awesome 4.2.0 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://lib.baomitu.com/font-awesome/4.2.0/css/font-awesome.min.css"</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"stylesheet"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/css"</span>&gt;</span><span class="hljs-comment">&lt;!-- JQuery 2.2.4 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://lib.baomitu.com/jquery/2.2.4/jquery.min.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-comment">&lt;!-- JQuery-mousewheel 3.1.9 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://lib.baomitu.com/jquery-mousewheel/3.1.9/jquery.mousewheel.min.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-comment">&lt;!-- Scrollbar --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://static.https.badapple.top/BadApplePlayer/js/scrollbar.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-comment">&lt;!-- BadApplePlayer --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://static.https.badapple.top/BadApplePlayer/Player.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre></div><p>教程：<a href="https://www.liaofuzhan.com/posts/2636059693.html" target="_blank" rel="noopener">https://www.liaofuzhan.com/posts/2636059693.html</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>动态时钟</title>
    <link href="/blog/2020/02/13/%E5%8A%A8%E6%80%81%E6%97%B6%E9%92%9F/"/>
    <url>/blog/2020/02/13/%E5%8A%A8%E6%80%81%E6%97%B6%E9%92%9F/</url>
    
    <content type="html"><![CDATA[<p>效果：</p><p><img src="https://s2.ax1x.com/2020/02/13/1q2qr8.png" srcset="/blog/img/loading.gif" alt=""></p><a id="more"></a><p>在相应位置添加如下代码：</p><div class="hljs"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">center</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"canvas"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"width:20%"</span> <span class="hljs-attr">width</span>=<span class="hljs-string">"820"</span> <span class="hljs-attr">height</span>=<span class="hljs-string">"250"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">async</span>=<span class="hljs-string">""</span>&gt;</span><span class="javascript">!<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>{<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">t</span>(<span class="hljs-params">t</span>)</span>{<span class="hljs-keyword">var</span> r=[];a.fillStyle=<span class="hljs-string">"#1bc3fb"</span>;<span class="hljs-keyword">var</span> h=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>,u=<span class="hljs-number">70</span>,s=<span class="hljs-number">30</span>,v=h.getHours(),g=<span class="hljs-built_in">Math</span>.floor(v/<span class="hljs-number">10</span>),m=v%<span class="hljs-number">10</span>;r.push({<span class="hljs-attr">num</span>:g}),r.push({<span class="hljs-attr">num</span>:m}),r.push({<span class="hljs-attr">num</span>:<span class="hljs-number">10</span>});<span class="hljs-keyword">var</span> c=h.getMinutes(),g=<span class="hljs-built_in">Math</span>.floor(c/<span class="hljs-number">10</span>),m=c%<span class="hljs-number">10</span>;r.push({<span class="hljs-attr">num</span>:g}),r.push({<span class="hljs-attr">num</span>:m}),r.push({<span class="hljs-attr">num</span>:<span class="hljs-number">10</span>});<span class="hljs-keyword">var</span> M=h.getSeconds(),g=<span class="hljs-built_in">Math</span>.floor(M/<span class="hljs-number">10</span>),m=M%<span class="hljs-number">10</span>;r.push({<span class="hljs-attr">num</span>:g}),r.push({<span class="hljs-attr">num</span>:m});<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> p=<span class="hljs-number">0</span>;p&lt;r.length;p++)r[p].offsetX=u,u=f(u,s,r[p].num,t),p&lt;r.length<span class="hljs-number">-1</span>&amp;&amp;<span class="hljs-number">10</span>!=r[p].num&amp;&amp;<span class="hljs-number">10</span>!=r[p+<span class="hljs-number">1</span>].num&amp;&amp;(u+=l);<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>==i.length)i=r;<span class="hljs-keyword">else</span> <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> C=<span class="hljs-number">0</span>;C&lt;i.length;C++)i[C].num!=r[C].num&amp;&amp;(n(r[C]),i[C].num=r[C].num);<span class="hljs-keyword">return</span> e(t),o(),h}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">n</span>(<span class="hljs-params">t</span>)</span>{<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> n=t.num,e=m[n],o=<span class="hljs-number">0</span>;o&lt;e.length;o++)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> f=<span class="hljs-number">0</span>;f&lt;e[o].length;f++)<span class="hljs-keyword">if</span>(<span class="hljs-number">1</span>==e[o][f]){<span class="hljs-keyword">var</span> a={<span class="hljs-attr">offsetX</span>:t.offsetX+u+<span class="hljs-number">2</span>*u*f,<span class="hljs-attr">offsetY</span>:<span class="hljs-number">30</span>+u+<span class="hljs-number">2</span>*u*o,<span class="hljs-attr">color</span>:g[<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random()*g.length)],<span class="hljs-attr">g</span>:<span class="hljs-number">1.5</span>+<span class="hljs-built_in">Math</span>.random(),<span class="hljs-attr">vx</span>:<span class="hljs-number">4</span>*<span class="hljs-built_in">Math</span>.pow(<span class="hljs-number">-1</span>,<span class="hljs-built_in">Math</span>.ceil(<span class="hljs-number">10</span>*<span class="hljs-built_in">Math</span>.random()))+<span class="hljs-built_in">Math</span>.random(),<span class="hljs-attr">vy</span>:<span class="hljs-number">-5</span>};v.push(a)}}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">e</span>(<span class="hljs-params">t</span>)</span>{<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> n=<span class="hljs-number">0</span>;n&lt;v.length;n++)t.beginPath(),t.fillStyle=v[n].color,t.arc(v[n].offsetX,v[n].offsetY,u,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>*<span class="hljs-built_in">Math</span>.PI),t.fill()}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">o</span>(<span class="hljs-params"></span>)</span>{<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> t=<span class="hljs-number">0</span>,n=<span class="hljs-number">0</span>;n&lt;v.length;n++){<span class="hljs-keyword">var</span> e=v[n];e.offsetX+=e.vx,e.offsetY+=e.vy,e.vy+=e.g,e.offsetY&gt;h-u&amp;&amp;(e.offsetY=h-u,e.vy=-e.vy*s),e.offsetX&gt;u&amp;&amp;e.offsetX&lt;r-u&amp;&amp;(v[t]=v[n],t++)}<span class="hljs-keyword">for</span>(;t&lt;v.length;t++)v.pop()}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">f</span>(<span class="hljs-params">t,n,e,o</span>)</span>{<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> f=m[e],a=<span class="hljs-number">0</span>;a&lt;f.length;a++)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> r=<span class="hljs-number">0</span>;r&lt;f[a].length;r++)<span class="hljs-number">1</span>==f[a][r]&amp;&amp;(o.beginPath(),o.arc(t+u+<span class="hljs-number">2</span>*u*r,n+u+<span class="hljs-number">2</span>*u*a,u,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>*<span class="hljs-built_in">Math</span>.PI),o.fill());<span class="hljs-keyword">return</span> o.beginPath(),t+=f[<span class="hljs-number">0</span>].length*u*<span class="hljs-number">2</span>}<span class="hljs-keyword">var</span> a,r=<span class="hljs-number">820</span>,h=<span class="hljs-number">250</span>,u=<span class="hljs-number">7</span>,l=<span class="hljs-number">10</span>,s=<span class="hljs-number">.65</span>,v=[];<span class="hljs-keyword">const</span> g=[<span class="hljs-string">"#33B5E5"</span>,<span class="hljs-string">"#0099CC"</span>,<span class="hljs-string">"#AA66CC"</span>,<span class="hljs-string">"#9933CC"</span>,<span class="hljs-string">"#99CC00"</span>,<span class="hljs-string">"#669900"</span>,<span class="hljs-string">"#FFBB33"</span>,<span class="hljs-string">"#FF8800"</span>,<span class="hljs-string">"#FF4444"</span>,<span class="hljs-string">"#CC0000"</span>];<span class="hljs-keyword">var</span> i=[],m=[[[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>]],[[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>]],[[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>]],[[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>]],[[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>]],[[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>]],[[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>]],[[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>]],[[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>]],[[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>]],[[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>]]],c=<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"canvas"</span>);c.width=r,c.height=h,a=c.getContext(<span class="hljs-string">"2d"</span>);<span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>;setInterval(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>{a.clearRect(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,a.canvas.width,a.canvas.height),t(a)},<span class="hljs-number">50</span>)}()</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">center</span>&gt;</span></code></pre></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[转]Hexo主题使用Valine-Admin管理评论和评论提醒</title>
    <link href="/blog/2020/02/13/%E8%BD%AC-Hexo%E4%B8%BB%E9%A2%98%E4%BD%BF%E7%94%A8Valine-Admin%E7%AE%A1%E7%90%86%E8%AF%84%E8%AE%BA%E5%92%8C%E8%AF%84%E8%AE%BA%E6%8F%90%E9%86%92/"/>
    <url>/blog/2020/02/13/%E8%BD%AC-Hexo%E4%B8%BB%E9%A2%98%E4%BD%BF%E7%94%A8Valine-Admin%E7%AE%A1%E7%90%86%E8%AF%84%E8%AE%BA%E5%92%8C%E8%AF%84%E8%AE%BA%E6%8F%90%E9%86%92/</url>
    
    <content type="html"><![CDATA[<p>原文链接：<a href="https://segmentfault.com/a/1190000021474516?utm_source=tag-newest" target="_blank" rel="noopener">https://segmentfault.com/a/1190000021474516?utm_source=tag-newest</a></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>原本今天在写文章，然后没事就去博客看了一下。突然发现有人在文章下面评论。是早上评论的但是我晚上才看到。</p><p>我的留言系统使用的是<code>Valine</code>,发现留言并没有提醒，只有回复了才会有提醒。</p><p>这不能忍。毕竟好不容易来个朋友竟然没有交流上你说难受不难受😡</p><p>然后我就去百度了一下<code>Valine-Admin</code></p><blockquote><p>Valine-Admin 是一个对 Valine 评论系统的拓展应用，可增强 <code>Valine</code> 的邮件通知功能。基于 Leancloud 的云引擎与云函数。可以提供邮件 <code>通知站长</code> 和 <code>@ 通知</code> 的功能，而且还支持自定义邮件通知模板。</p></blockquote><p>发现这个插件很不错我就研究了一下。下面是整合教程。</p><a id="more"></a><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>首先其他的不错说了，在阅读本篇文章之前你最好已经整合了<code>Valine</code>留言。</p><p>由于我已经整合过了所以前面几个步骤的图片来源自@Valine-Admin</p><p>首先登陆账号，找到云引擎在点击设置。</p><blockquote><p>复制仓库地址：<a href="https://github.com/zhaojun1998/Valine-Admin.git" target="_blank" rel="noopener">https://github.com/zhaojun199…</a></p></blockquote><p><img src="https://segmentfault.com/img/remote/1460000021474520" srcset="/blog/img/loading.gif" alt="img"></p><p>把git仓库地址房子代码库输入框中。</p><p>切换到部署标签页，分支使用 master，点击部署。</p><p><img src="https://segmentfault.com/img/remote/1460000021474521" srcset="/blog/img/loading.gif" alt="img"></p><p>接下来输入分支为<code>master</code></p><p><img src="https://segmentfault.com/img/remote/1460000021474522" srcset="/blog/img/loading.gif" alt="img"></p><p>部署完成之后就是设置环境变量</p><h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><p>点击设置，找到自定义环境变量点击新增变量</p><p><img src="https://segmentfault.com/img/remote/1460000021474523" srcset="/blog/img/loading.gif" alt="img"></p><ul><li><code>SITE_NAME</code> : 网站名称。</li><li><code>SITE_URL</code> : 网站地址, <strong>最后不要加 <code>/</code> 。</strong></li><li><code>SMTP_USER</code> : SMTP 服务用户名，一般为邮箱地址。</li><li><code>SMTP_PASS</code> : SMTP 密码，一般为授权码，而不是邮箱的登陆密码，请自行查询对应邮件服务商的获取方式</li><li><code>SMTP_SERVICE</code> : 邮件服务提供商，支持 <code>QQ</code>、<code>163</code>、<code>126</code>、<code>Gmail</code>、<code>"Yahoo"</code>、<code>......</code> ，全部支持请参考 : <a href="https://nodemailer.com/smtp/well-known/#supported-services" target="_blank" rel="noopener">Nodemailer Supported services</a>。 — <em>如这里没有你使用的邮件提供商，请查看<a href="https://www.nhtzj.com/高级配置.md#自定义邮件服务器" target="_blank" rel="noopener">自定义邮件服务器</a></em></li><li><code>SENDER_NAME</code> : 寄件人名称。</li><li><code>TO_EMAIL</code>：这个是填收邮件提醒的邮箱地址，若没有这个字段，则将邮件发到<code>SMTP_USER</code>。</li><li><code>TEMPLATE_NAME</code>：设置提醒邮件的主题，目前内置了两款主题，分别为 <code>default</code> 与 <code>rainbow</code>。默认为 <code>default</code></li></ul><p>设置好以上变量之后 点击实例</p><p><img src="https://segmentfault.com/img/remote/1460000021474524" srcset="/blog/img/loading.gif" alt="img"></p><p>然后重启项目，注意任何变动都要重启项目</p><p>然后看一下效果</p><p><img src="https://segmentfault.com/img/remote/1460000021474525" srcset="/blog/img/loading.gif" alt="img"></p><p>还不错</p><h2 id="自定义后台"><a href="#自定义后台" class="headerlink" title="自定义后台"></a>自定义后台</h2><p>点击设置然后点击Web主机域名找到自己的后台地址</p><p><img src="https://segmentfault.com/img/remote/1460000021474527" srcset="/blog/img/loading.gif" alt="img"></p><p>然后在<code>存储-数据-_User表</code>中增加账号， 只需要填写 <code>email</code>、<code>password</code>、<code>username</code> 其中邮箱必须设置为你的上面环境变量的邮箱</p><p><img src="https://ask.qcloudimg.com/http-save/yehe-1001860/kshxbtfh6x.png?imageView2/2/w/1620"></p><p>设置完之后登录就能在你的后台管理评论</p><h2 id="解决休眠"><a href="#解决休眠" class="headerlink" title="解决休眠"></a>解决休眠</h2><p>免费版的 LeanCloud 容器，是有强制性休眠策略的，不能 24 小时运行：</p><ul><li>每天必须休眠 6 个小时</li><li>30 分钟内没有外部请求，则休眠。</li><li>休眠后如果有新的外部请求实例则马上启动（但激活时此次发送邮件会失败）。</li></ul><p>也就是如果服务器休眠了的话用户第一次评论是提醒不了的。</p><p>参考了Valine-Admin官网找到了解决办法。</p><p>首先在环境变量<code>ADMIN_URL</code>增加服务器地址，就是你的后台服务器地址</p><p><img src="https://segmentfault.com/img/remote/1460000021474526" srcset="/blog/img/loading.gif" alt="img"></p><p>下面是你的服务器地址，可以自定义</p><p>同样登录后台</p><p>找到定时任务</p><p><img src="https://segmentfault.com/img/remote/1460000021474528" srcset="/blog/img/loading.gif" alt="img"></p><p>然后点击创建任务，上面是我创建好的</p><p><img src="https://segmentfault.com/img/remote/1460000021474529" srcset="/blog/img/loading.gif" alt="img"></p><p>选择self_wake函数，然后运行时间使用cron表达式</p><blockquote><p>0 0/30 7-23 ? 表示每天6点到11点 每30分钟叫醒服务器一次</p></blockquote><p>这样就完美的解决了服务器休眠的问题</p><p>那如果用户不在时间范围内发留言了怎么办？我们也可以创建一个捡漏的定时任务</p><p><img src="https://segmentfault.com/img/remote/1460000021474531" srcset="/blog/img/loading.gif" alt="img"></p><p>创建捡漏定时任务</p><p>然后运行函数选择resend_mails,同样使用cron表达式</p><blockquote><p>0 0 8 ?</p></blockquote><p>表示每八个小时进行捡漏一次，这样如果有留言遗漏的话就能即使的提醒。</p><p><strong>附 <code>crontab</code> 定时器代码：**</strong></p><div class="hljs"><pre><code class="hljs angelscript">*/<span class="hljs-number">20</span> <span class="hljs-number">7</span><span class="hljs-number">-23</span> * * * curl https:<span class="hljs-comment">//你配置的域名前缀.leanapp.cn</span></code></pre></div><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>有人会说了不久一个破博客吗？都不知道有没有人看干嘛还要这么麻烦。其实并不麻烦，这只是一个态度而已。</p><p>欢迎关注我的公众号，也可在公众号进行留言会及时回复</p><p><img src="https://segmentfault.com/img/remote/1460000021474530" srcset="/blog/img/loading.gif" alt="img"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一些关于halo博客的资源</title>
    <link href="/blog/2020/02/11/%E4%B8%80%E4%BA%9B%E5%85%B3%E4%BA%8Ehalo%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%B5%84%E6%BA%90/"/>
    <url>/blog/2020/02/11/%E4%B8%80%E4%BA%9B%E5%85%B3%E4%BA%8Ehalo%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%B5%84%E6%BA%90/</url>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/halo-dev/halo-app/releases" target="_blank" rel="noopener">https://github.com/halo-dev/halo-app/releases</a></p><p>halo教程<br><a href="https://ryanc.cc/tags/halo" target="_blank" rel="noopener">https://ryanc.cc/tags/halo</a></p><p>Docker Compose 部署Halo教程<br><a href="https://ryanc.cc/archives/docker-compose-run-halo" target="_blank" rel="noopener">https://ryanc.cc/archives/docker-compose-run-halo</a></p><p>halo替换hexo<br><a href="https://wenthywang.cn/archives/2019070217154001586/" target="_blank" rel="noopener">https://wenthywang.cn/archives/2019070217154001586/</a></p><p>halo替换hexo<br><a href="https://www.shizuri.net/Z-Turn/halo.html" target="_blank" rel="noopener">https://www.shizuri.net/Z-Turn/halo.html</a></p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>博客</tag>
      
      <tag>halo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>任正非:唯一有愧的是对不起父母</title>
    <link href="/blog/2020/02/11/%E4%BB%BB%E6%AD%A3%E9%9D%9E-%E5%94%AF%E4%B8%80%E6%9C%89%E6%84%A7%E7%9A%84%E6%98%AF%E5%AF%B9%E4%B8%8D%E8%B5%B7%E7%88%B6%E6%AF%8D/"/>
    <url>/blog/2020/02/11/%E4%BB%BB%E6%AD%A3%E9%9D%9E-%E5%94%AF%E4%B8%80%E6%9C%89%E6%84%A7%E7%9A%84%E6%98%AF%E5%AF%B9%E4%B8%8D%E8%B5%B7%E7%88%B6%E6%AF%8D/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>​        前几天，弟在做高考语文预测卷时，突然跟我说“老哥，你去看看<strong>任正非的文章《我的父亲母亲》</strong>，很有深意”。在看完文章后还有一篇<strong>作者是柳传志的读后感</strong>。对这两篇文章深有感触，所以专门开设并记录在博文里。</p><a id="more"></a><h2 id="《我的父亲母亲》——-任正非"><a href="#《我的父亲母亲》——-任正非" class="headerlink" title="《我的父亲母亲》—— 任正非"></a>《我的父亲母亲》—— 任正非</h2><blockquote><p><strong>《我的父亲母亲》</strong></p><p><strong>任正非</strong></p><img src="http://5b0988e595225.cdn.sohucs.com/images/20190602/63bf99f49c4847838b5d18d603cb753b.jpeg"><p><strong>【一】</strong></p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;上世纪末最后一天，我总算良心发现，在公务结束之后，买了一张从北京去昆明的机票，去看看妈妈。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;买好机票后，我没有给她打电话，我知道一打电话她一下午都会忙碌，不管多晚到达，都会给我做一些我小时候喜欢吃的东西。直到飞机起飞，我才告诉她，让她不要告诉别人，不要车来接，我自己坐出租车回家，目的就是好好陪陪她。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;前几年我每年也去看看妈妈，但一下飞机就给办事处接走了，说这个客户很重要，要拜见一下，那个客户很重要，要陪他们吃顿饭，忙来忙去，忙到上飞机时回家取行李，与父母匆匆告别。妈妈盼星星、盼月亮，盼唠唠家常，却一次又一次地落空。</p><p><strong>【二】</strong></p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;一个普通的早上，妈妈从菜市场出来，提着两小包菜，被汽车撞成重伤。我身在伊朗，飞机要多次中转才能回来，在巴林转机要待6.5个小时，真是心如煎熬，又遇巴林雷雨，飞机延误两个小时，到曼谷时又晚了10分钟，没有及时赶上回昆明的飞机，直到深夜才赶到昆明。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;回到昆明，就知道妈妈不行了，她的头部全部给撞坏了，当时的心跳、呼吸全是靠药物和机器维持，之所以在电话上不告诉我，是怕我在旅途中出事。我看见妈妈一声不响地安详地躺在病床上，不用操劳、烦心，好像她一生也没有这么休息过。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;我真后悔没有在伊朗给妈妈打一个电话。因为以前不管我在国内、国外给她打电话时，她都唠叨：“你又出差了”，“非非你的身体还不如我好呢”，“非非你的皱纹比妈妈还多呢”，“非非你走路还不如我呢，你这么年纪轻轻就这么多病”，“非非，糖尿病参加宴会多了，坏得更快呢，你的心脏又不好”……</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;我想伊朗条件这么差，我一打电话，妈妈又唠叨，反正过不了几天就见面了，就没有打，而这是我一生中最大的憾事。如果我真打了，拖延她一两分钟出门，也许妈妈就躲过了这场灾难。这种悔恨的心情，真是难以形容。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;我看了妈妈最后一眼，妈妈溘然去世。</p><p><strong>【三】</strong></p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1995年，我父亲在昆明街头的小摊上买了一瓶塑料包装的软饮料，喝后拉肚子，一直到全身衰竭去世。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;父亲任摩逊，尽职尽责一生，可以说是一个乡村教育家。妈妈程远昭，是一个陪伴父亲在贫困山区与穷孩子厮混了一生的一个普通得不能再普通的园丁。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;父亲穿着土改工作队的棉衣，随解放军剿匪部队一同进入贵州少数民族山区去筹建一所民族中学。一头扎进去就是几十年，他培养的学生不少成为党和国家的高级干部，有些还是中央院校的校级领导，而父亲还是那么位卑言微。</p><p><strong>【四】</strong></p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;我与父母相处的青少年时代，印象最深的就是度过三年自然灾害的困难时期。今天想来还历历在目。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;我们兄妹七个，加上父母共九人。全靠父母微薄的工资来生活，毫无其他来源。本来生活就十分困难，儿女一天天在长大，衣服一天天在变短，而且都要读书，开支很大，每个学期每人要交2-3元的学费，到交费时，妈妈每次都发愁。我经常看到妈妈月底就到处向人借钱度饥荒，而且常常走了几家都未必借到。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;直到高中毕业我没有穿过衬衣。有同学看到很热的天，我还穿着厚厚的外衣，就让我向妈妈要一件衬衣，我不敢，因为我知道做不到。我上大学时妈妈一次送我两件衬衣，我真想哭，因为，我有衬衣了，弟妹们就会更难了。我家当时是2-3人合用一条被盖，而且破旧的被单下面铺的是稻草。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;上大学我要拿走一条被子，就更困难了，因为那时还实行布票、棉花票管制，最少的一年，每人只发0.5米布票。没有被单，妈妈捡了毕业学生丢弃的几床破被单缝缝补补，洗干净，这条被单就在重庆陪我度过了五年的大学生活。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;我们家当时每餐实行严格分饭制，控制所有人欲望的配给制，保证人人都能活下来。如果不是这样，总会有一个、两个弟妹活不到今天。我真正能理解活下去这句话的含义。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;高三快高考时，我有时在家复习功课，实在饿得受不了了，用米糠和菜合一下，烙着吃，被父亲碰上几次，他心疼了。其实那时我家穷得连一个可上锁的柜子都没有，粮食是用瓦缸装着，我也不敢去随便抓一把。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;高考前三个月，妈妈经常在早上塞给我一个小小的玉米饼，要我安心复习功课，我能考上大学，小玉米饼功劳巨大。如果不是这样，也许我就进不了华为这样的公司，社会上多了一名养猪能手，或街边多了一名能工巧匠而已。这个小小的玉米饼，是从父母与弟妹的口中抠出来的，我无以报答他们。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;“记住知识就是力量，别人不学，你要学，不要随大流。”“以后有能力要帮助弟妹。”背负着这种重托，我在当时的环境下，将樊映川的高等数学习题集从头到尾做了两遍，学习了逻辑、哲学。还自学了三门外语，当时已到可以阅读大学课本的程度，终因我不是语言天才，加之在军队服务时用不上，20多年荒废，完全忘光了。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;我当年穿走父亲的皮鞋，没念及父亲那时是做苦工的，泥里水里，冰冷潮湿，他更需要鞋子。现在回忆起来，感觉自己太自私了。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;回顾我自己已走过的历史，唯一有愧的是对不起父母，没条件时没有照顾他们，有条件时也没有照顾他们。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;爸爸，妈妈，千声万声呼唤你们，千声万声唤不回。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;逝者已经逝去，活着的还要前行。</p><p>​                                                                                                                ——2001年2月8日 于深圳</p></blockquote><hr><h2 id="《要想富就要知道为何穷》——柳传志"><a href="#《要想富就要知道为何穷》——柳传志" class="headerlink" title="《要想富就要知道为何穷》——柳传志"></a>《要想富就要知道为何穷》——柳传志</h2><blockquote><p><strong>《要想富就要知道为何穷》</strong></p><p><strong>柳传志</strong></p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;在手机上读着一篇任正非写的怀念他的父母亲的文章，而脑子里却想起了另一件事。那是2013年9月，我接到了一个邀请函。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;那天我是真的有事，但出于对老任发自内心的敬佩和尊重，我尽力挤开了别的事情，花了一个半小时的车程赶到了会场。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;老任的面子确实大，那天是贵州都匀一中的“校训研讨会”，真请来了不少领导和知名的企业家。他看见我来了显得非常高兴。我也高兴，那是因为在企业工作者里面，我们都是属于少有的“老家伙”序列里的人，相互都比较了解，然而又极少见面，所以紧紧的握手不愿松开。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;原来都匀一中就是任正非的母校，他的父亲在此曾任过三年校长，他毕生从事教育工作，50多年来倾注了全部的心血。在现任学校领导介绍学校的历史，介绍老任的父亲任摩逊先生事迹的时候，我注意盯着任正非，我想这样的内容他应该听过无数遍了，他却依然听得那么专注，那么动情!</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;此刻我正在读他写的怀念他的父母的文章，我认真读这篇文章，是因为深深引起了我的共鸣。我和他是同年生人，我们的出生背景有所不同，但是上一辈在政治上受到的磨难和考验几乎是相同的。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;任正非谈到他的父亲在这考验的重压之下，依旧勤勤恳恳拼力地工作，为他自己后来在华为拼命地工作做出了表率，而父辈的榜样在他身上打下了深深的烙印。我的父亲也是我的榜样。给我最深刻的印象是在强大的政治压力下，他能够像以前教导我的那样，用行动做出表率-做一个正直的人。正直，这是一个多么平常的词藻，然而在特殊的考验面前，这个词就超过了千钧的分量。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1966年文化革命爆发的第一个年头，我亲眼看到我的父亲在威逼面前不肯诬陷当年的战友，被开除党籍。当时的气氛紧张惊恐。这深深地印在了我的脑海中，而我的父亲以身教的方式告诉了我如何做人，什么叫正直!</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;联想发展到今天的三十年中，经过的风险无其数，尤其在早期还有一定的政策风险，我自诩是个敢担当的人，而在联想结出胜利果实时，我也以为自己是个舍得让利的人，这对联想能发展到今天也许有一定的影响。和任正非一样，我们能以身作则地把企业利益放在个人利益的前面。追根溯源，是我们的父辈给我们打下了如何做人的基础。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;当我读到任正非的母亲是因为意外车祸辞世的，我的心一下子揪了起来。我能想象对他那是一种什么样的撕心裂肺!</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;任正非讲到他在高三那年(也应该是我高三的那年吧，就是最困难的1961年)，母亲经常早上塞给他一个小小的玉米饼，他说我能考上大学，小玉米饼的功劳巨大，这个小小的玉米饼是从父母与弟妹的口中抠出来的，我无以报答他们。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;我相信绝大多数的80后、90后的朋友是读不出玉米饼的感觉的，因为他们不懂什么叫饥饿。61年，我是北京25中的一名高三学生，我们中学生是早上8、9点钟的太阳，所以享受着最高待遇，一个月32斤粮，半斤油，半斤肉。知道什么叫一个月半斤油吗?</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;那是在一锅熬白菜煮熟的时候，油瓶口顺着筷子点入几滴油，使锅里漂着油花，一个月下来，这半斤油就用完了。知道什么叫饿吗?那就是耗干净你身上的脂肪，然后再耗你的肌肉。有一天夜里，我饿的实在受不了，想起抽屉里有一盒中药是羚翘解毒丸，我就吃了两颗，几小时后药性发作，抽筋断肠，头痛欲裂。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;经过饥饿的人才知道什么叫从父母弟妹的嘴里面抠出的玉米饼。任正非想念着母亲，我何尝不想念自己的母亲、不想起在那最艰难的岁月里，母亲对我的慈爱。我的父母都已经去世了，我和老任一样也是老大，我会永远记住父母的恩德慈爱。我有兄弟姐妹四人，我们会永远相亲相爱。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;我在想，读了老任的文章，是什么让我会拿起笔说了上边这段话，我想说给谁听呢?</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;说给老任?让他知道我是他的知音?说给我的亲人、朋友、同学、同事?让我们更加珍惜今天的生活?</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;好像是，但也不是。<strong>我明白，我最想说给那些年青、年少的，甚至是儿童，让他们长大了听。</strong>   </p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;我一直告诫自己不要成为一个碎嘴唠叨的老头。而说这些话，我估计孩子们是不爱听的。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;前些天，我看了一部叫“归来”的电影，写的是我亲眼看见过的年代，亲眼看见过的事情，电影演毕，潸然泪下。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;问过几个年青人是否看过这部片子，都说没有。有一个对我说：人总是要向前看么，老说那些老话，凄凄惨惨有什么意思?!他们爱看光鲜亮丽、富有、任性的电影，那是他们的追求。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;他们不爱看“归来”，不爱听我碎嘴唠叨，但我还是忍不住想对他们说，到底为了什么?</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<strong>因为我们这个民族就在不久以前还很苦，很凄惨，很窝囊。你要想今后过得富有光鲜亮丽，你就要知道过去为什么穷，为什么苦，为什么受人欺负。你就要懂得历史，你就要从中学到教训，我们已经是为数不多的见过那段历史的尾巴的人了，尽量还原真实的历史是我们的责任。不管你是哪国国籍，但你和你的子孙血管中流的是中国人的血，这是无法改变的事实!</strong>     </p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;我谈不上是高尚的人，更谈不上是纯粹的人。但我努力在做一个知恩图报的人，做一个懂廉耻、要自强的人。我希望几十年以后，今天年青、年少的人们能凭追求、凭团结、凭实力让中国富强，让自己过上光鲜亮丽富有的生活。</p></blockquote><hr><h1 id="重要文献"><a href="#重要文献" class="headerlink" title="重要文献"></a>重要文献</h1><p>[1] 题目《任正非：唯一有愧的是对不起父母》，摘自百家号“金融界”， <a href="https://baijiahao.baidu.com/s?id=1644249222074823165&amp;wfr=spider&amp;for=pc" target="_blank" rel="noopener">https://baijiahao.baidu.com/s?id=1644249222074823165&amp;wfr=spider&amp;for=pc</a></p><p>[2] 原文，转自凤凰网，<a href="http://news.ifeng.com/c/7nKjN9F2Uy0" target="_blank" rel="noopener">http://news.ifeng.com/c/7nKjN9F2Uy0</a></p><p>[3] 插图，来自网络</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>文章</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>解决bash: hexo: command not found</title>
    <link href="/blog/2020/02/10/%E8%A7%A3%E5%86%B3bash-hexo-command-not-found/"/>
    <url>/blog/2020/02/10/%E8%A7%A3%E5%86%B3bash-hexo-command-not-found/</url>
    
    <content type="html"><![CDATA[<p><br>记录一次离奇的车祸现场。</p><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>今天用<code>hexo</code>新建文章<code>hexo new</code>时<code>git</code>报错：</p><div class="hljs"><pre><code class="hljs groovy"><span class="hljs-string">bash:</span> <span class="hljs-string">hexo:</span> command not found</code></pre></div><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><p>将<code>G:\blog_gitee\node_modules\.bin</code>添加进PATH。</p><h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p>可能是因为我今天更新<code>npm</code>了？</p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[转]CentOS 7镜像下载</title>
    <link href="/blog/2020/02/10/%E8%BD%AC-CentOS-7%E9%95%9C%E5%83%8F%E4%B8%8B%E8%BD%BD/"/>
    <url>/blog/2020/02/10/%E8%BD%AC-CentOS-7%E9%95%9C%E5%83%8F%E4%B8%8B%E8%BD%BD/</url>
    
    <content type="html"><![CDATA[<p>官网下载链接：<a href="http://isoredirect.centos.org/centos/7.4.1708/isos/x86_64/" target="_blank" rel="noopener">http://isoredirect.centos.org/centos/7/isos/x86_64/</a></p><p><strong><em>step1: 进入下载页，选择阿里云站点进行下载</em></strong></p><p>Actual Country 国内资源          Nearby Countries 周边国家资源</p><p>阿里云站点：<a href="http://mirrors.aliyun.com/centos/7/isos/x86_64/" target="_blank" rel="noopener">http://mirrors.aliyun.com/centos/7/isos/x86_64/</a></p><p>每个链接都包括了镜像文件的地址、类型及版本号等信息</p><p>选择当前国家资源区站点下载，获取资源速度比较快</p><img src="https:////upload-images.jianshu.io/upload_images/4170765-6a8d1c8f689e6545.png?imageMogr2/auto-orient/strip|imageView2/2/w/502/format/webp" srcset="/blog/img/loading.gif" alt="img" style="zoom:80%;"><img src="https:////upload-images.jianshu.io/upload_images/4170765-079a53e5b94f35f8.png?imageMogr2/auto-orient/strip|imageView2/2/w/472/format/webp" srcset="/blog/img/loading.gif" alt="img" style="zoom:80%;"><p><strong><em>step1: 进入阿里云站点，选择</em></strong> <strong>CentOS-7-x86_64-DVD-1804.iso下载</strong></p><img src="https:////upload-images.jianshu.io/upload_images/4170765-74d8c1e65e699710.png?imageMogr2/auto-orient/strip|imageView2/2/w/776/format/webp" srcset="/blog/img/loading.gif" alt="img" style="zoom:80%;"><p>各个版本的ISO镜像文件说明：</p><p>CentOS-7-x86_64-DVD-1708.iso        标准安装版（推荐）</p><p>CentOS-7-x86_64-Everything-1708.iso    完整版，集成所有软件（以用来补充系统的软件或者填充本地镜像）</p><p>CentOS-7-x86_64-LiveGNOME-1708.iso     GNOME桌面版  </p><p>CentOS-7-x86_64-LiveKDE-1708.iso      KDE桌面版  </p><p>CentOS-7-x86_64-Minimal-1708.iso      精简版，自带的软件最少</p><p>CentOS-7-x86_64-NetInstall-1708.iso    网络安装版（从网络安装或者救援系统） </p><hr><p>作者：Ada54<br>链接：<a href="https://www.jianshu.com/p/a63f47e096e8" target="_blank" rel="noopener">https://www.jianshu.com/p/a63f47e096e8</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>镜像</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>给Hexo博客添加不蒜子统计</title>
    <link href="/blog/2020/02/10/%E7%BB%99Hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E4%B8%8D%E8%92%9C%E5%AD%90%E7%BB%9F%E8%AE%A1/"/>
    <url>/blog/2020/02/10/%E7%BB%99Hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E4%B8%8D%E8%92%9C%E5%AD%90%E7%BB%9F%E8%AE%A1/</url>
    
    <content type="html"><![CDATA[<a id="more"></a><h4 id="引入不蒜子"><a href="#引入不蒜子" class="headerlink" title="引入不蒜子"></a>引入<a href="https://link.jianshu.com?t=http://busuanzi.ibruce.info/" target="_blank" rel="noopener">不蒜子</a></h4><div class="hljs"><pre><code class="hljs javascript">&lt;script <span class="hljs-keyword">async</span> src=<span class="hljs-string">"//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span></code></pre></div><p>这段代码可以写在footer.ejs里或者header.ejs里或者layout.ejs里</p><h4 id="添加站点访问量"><a href="#添加站点访问量" class="headerlink" title="添加站点访问量"></a>添加站点访问量</h4><p>通常站点的总访问量会显示在footer的位置，所以我们可以在footer.ejs里加上如下标签：</p><div class="hljs"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"busuanzi_container_site_uv"</span>&gt;</span>   本站访客数<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"busuanzi_value_site_uv"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>人次<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></code></pre></div><p>计算访问量的方法有两种：</p><ul><li>算法a：pv的方式，单个用户连续点击n篇文章，记录 n次访问量。</li><li>算法b：uv的方式，单个用户连续点击n篇文章，只记录1次访客数。</li></ul><h4 id="添加文章访问量"><a href="#添加文章访问量" class="headerlink" title="添加文章访问量"></a>添加文章访问量</h4><p>文章的访问量显示在文章里面，所以在article.ejs里加上文章访问量的标签：</p><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"busuanzi_container_page_pv"</span>&gt;</span>   本文总阅读量<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"busuanzi_value_page_pv"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>次<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></code></pre></div><p>这个标签里的汉字可以自行修改，还可以给标签写上你想要的样式。</p><p>参考：<br> <a href="https://link.jianshu.com?t=http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="noopener">不蒜子|不如</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>到博客里养鱼</title>
    <link href="/blog/2020/02/09/%E5%88%B0%E5%8D%9A%E5%AE%A2%E9%87%8C%E5%85%BB%E9%B1%BC/"/>
    <url>/blog/2020/02/09/%E5%88%B0%E5%8D%9A%E5%AE%A2%E9%87%8C%E5%85%BB%E9%B1%BC/</url>
    
    <content type="html"><![CDATA[<p>鱼🐟</p><p><img src="https://s2.ax1x.com/2020/02/19/3VmMX8.png" srcset="/blog/img/loading.gif" alt=""></p><a id="more"></a><div class="hljs"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 底部加了小鱼&lt;・)))&gt;&lt;&lt;~ --&gt;</span></code></pre></div><div class="hljs"><pre><code class="hljs kotlin">&lt;a name=<span class="hljs-string">"top"</span>&gt;&lt;/a&gt;&lt;div id=<span class="hljs-string">"page_begin_html"</span>&gt;&lt;marquee hspace=<span class="hljs-string">"20"</span> vspace=<span class="hljs-string">"20"</span> width=<span class="hljs-string">"220"</span> bgcolor=<span class="hljs-string">"White"</span>&gt;公告：欢迎访问我的博客😘，希望你在这里可以找到你需要的东西！本站内容为个人经验之谈，如有错误，欢迎指正！&lt;/marquee&gt;    &lt;script type=<span class="hljs-string">"text/javascript"</span>&gt;window[<span class="hljs-string">'__document_write_ajax_callbacks__'</span>][<span class="hljs-string">'2'</span>]();&lt;/script&gt;&lt;script&gt;window[<span class="hljs-string">'__document_write_ajax_callbacks__'</span>][<span class="hljs-string">'1'</span>]();&lt;/script&gt;&lt;/div&gt;&lt;!--done--&gt;&lt;!--end: home 自定义的最大容器 --&gt;&lt;div id=<span class="hljs-string">"page_end_html"</span>&gt;    &lt;script type=<span class="hljs-string">"text/javascript"</span> src=<span class="hljs-string">"https://js.users.noscript.cnitblog.com/20537745.js"</span>&gt;&lt;/script&gt;    &lt;!-- 鼠标点击特效 --&gt;    &lt;script src=<span class="hljs-string">"https://example.com/cursor-effects.js"</span>&gt;&lt;/script&gt;    &lt;!-- 鼠标点击特效end --&gt;    &lt;!-- 页面点击小红心 --&gt;    &lt;script&gt;!function(e,t,a){function n(){c(<span class="hljs-string">".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}"</span>),o(),r()}function r(){<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> e=<span class="hljs-number">0</span>;e&lt;d.length;e++)d[e].alpha&lt;=<span class="hljs-number">0</span>?(t.body.removeChild(d[e].el),d.splice(e,<span class="hljs-number">1</span>)):(d[e].y--,d[e].scale+=.<span class="hljs-number">004</span>,d[e].alpha-=.<span class="hljs-number">013</span>,d[e].el.style.cssText=<span class="hljs-string">"left:"</span>+d[e].x+<span class="hljs-string">"px;top:"</span>+d[e].y+<span class="hljs-string">"px;opacity:"</span>+d[e].alpha+<span class="hljs-string">";transform:scale("</span>+d[e].scale+<span class="hljs-string">","</span>+d[e].scale+<span class="hljs-string">") rotate(45deg);background:"</span>+d[e].color+<span class="hljs-string">";z-index:99999"</span>);requestAnimationFrame(r)}function o(){<span class="hljs-keyword">var</span> t=<span class="hljs-string">"function"</span>==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e){t&amp;&amp;t(),i(e)}}function i(e){<span class="hljs-keyword">var</span> a=t.createElement(<span class="hljs-string">"div"</span>);a.className=<span class="hljs-string">"heart"</span>,d.push({el:a,x:e.clientX-<span class="hljs-number">5</span>,y:e.clientY-<span class="hljs-number">5</span>,scale:<span class="hljs-number">1</span>,alpha:<span class="hljs-number">1</span>,color:s()}),t.body.appendChild(a)}function c(e){<span class="hljs-keyword">var</span> a=t.createElement(<span class="hljs-string">"style"</span>);a.type=<span class="hljs-string">"text/css"</span>;<span class="hljs-keyword">try</span>{a.appendChild(t.createTextNode(e))}<span class="hljs-keyword">catch</span>(t){a.styleSheet.cssText=e}t.getElementsByTagName(<span class="hljs-string">"head"</span>)[<span class="hljs-number">0</span>].appendChild(a)}function s(){<span class="hljs-keyword">return</span><span class="hljs-string">"rgb("</span>+~~(<span class="hljs-number">255</span>*Math.random())+<span class="hljs-string">","</span>+~~(<span class="hljs-number">255</span>*Math.random())+<span class="hljs-string">","</span>+~~(<span class="hljs-number">255</span>*Math.random())+<span class="hljs-string">")"</span>}<span class="hljs-keyword">var</span> d=[];e.requestAnimationFrame=function(){<span class="hljs-keyword">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e){setTimeout(e,<span class="hljs-number">1e3</span>/<span class="hljs-number">60</span>)}}(),n()}(window,document);&lt;/script&gt;            &lt;!-- 底部加了小鱼&lt;・)))&gt;&lt;&lt;~ --&gt;      &lt;script src=<span class="hljs-string">"https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"</span>&gt;&lt;/script&gt;&lt;!-- 底部加了小鱼&lt;・)))&gt;&lt;&lt;~ --&gt;  &lt;div id=<span class="hljs-string">"jsi-flying-fish-container"</span> <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">container</span>"&gt;&lt;<span class="hljs-type">canvas width="1010" height="153"</span>&gt;&lt;<span class="hljs-type">/canvas</span>&gt;&lt;<span class="hljs-type">/div</span>&gt;</span>  &lt;script src=<span class="hljs-string">"https://blog-static.cnblogs.com/files/elkyo/fish.js"</span>&gt;&lt;/script&gt;       &lt;script src=<span class="hljs-string">"https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"</span>&gt;&lt;/script&gt;    &lt;div id=<span class="hljs-string">"jsi-flying-fish-container"</span> <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">container</span>"&gt;&lt;<span class="hljs-type">canvas width="1058" height="158"</span>&gt;&lt;<span class="hljs-type">/canvas</span>&gt;&lt;<span class="hljs-type">/div</span>&gt;</span>    &lt;script&gt;        <span class="hljs-keyword">var</span> RENDERER = {            POINT_INTERVAL : <span class="hljs-number">5</span>,            FISH_COUNT : <span class="hljs-number">3</span>,            MAX_INTERVAL_COUNT : <span class="hljs-number">50</span>,            INIT_HEIGHT_RATE : <span class="hljs-number">0.5</span>,            THRESHOLD : <span class="hljs-number">50</span>,            <span class="hljs-keyword">init</span> : function(){                <span class="hljs-keyword">this</span>.setParameters();                <span class="hljs-keyword">this</span>.reconstructMethods();                <span class="hljs-keyword">this</span>.setup();                <span class="hljs-keyword">this</span>.bindEvent();                <span class="hljs-keyword">this</span>.render();            },            setParameters : function(){                <span class="hljs-keyword">this</span>.$window = $(window);                <span class="hljs-keyword">this</span>.$container = $(<span class="hljs-string">'#jsi-flying-fish-container'</span>);                <span class="hljs-keyword">this</span>.$canvas = $(<span class="hljs-string">'&lt;canvas /&gt;'</span>);                <span class="hljs-keyword">this</span>.context = <span class="hljs-keyword">this</span>.$canvas.appendTo(<span class="hljs-keyword">this</span>.$container).<span class="hljs-keyword">get</span>(<span class="hljs-number">0</span>).getContext(<span class="hljs-string">'2d'</span>);                <span class="hljs-keyword">this</span>.points = [];                <span class="hljs-keyword">this</span>.fishes = [];                <span class="hljs-keyword">this</span>.watchIds = [];            },            createSurfacePoints : function(){                <span class="hljs-keyword">var</span> count = Math.round(<span class="hljs-keyword">this</span>.width / <span class="hljs-keyword">this</span>.POINT_INTERVAL);                <span class="hljs-keyword">this</span>.pointInterval = <span class="hljs-keyword">this</span>.width / (count - <span class="hljs-number">1</span>);                <span class="hljs-keyword">this</span>.points.push(new SURFACE_POINT(<span class="hljs-keyword">this</span>, <span class="hljs-number">0</span>));                <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">1</span>; i &lt; count; i++){                    <span class="hljs-keyword">var</span> point = new SURFACE_POINT(<span class="hljs-keyword">this</span>, i * <span class="hljs-keyword">this</span>.pointInterval),                        previous = <span class="hljs-keyword">this</span>.points[i - <span class="hljs-number">1</span>];                    point.setPreviousPoint(previous);                    previous.setNextPoint(point);                    <span class="hljs-keyword">this</span>.points.push(point);                }            },            reconstructMethods : function(){                <span class="hljs-keyword">this</span>.watchWindowSize = <span class="hljs-keyword">this</span>.watchWindowSize.bind(<span class="hljs-keyword">this</span>);                <span class="hljs-keyword">this</span>.jdugeToStopResize = <span class="hljs-keyword">this</span>.jdugeToStopResize.bind(<span class="hljs-keyword">this</span>);                <span class="hljs-keyword">this</span>.startEpicenter = <span class="hljs-keyword">this</span>.startEpicenter.bind(<span class="hljs-keyword">this</span>);                <span class="hljs-keyword">this</span>.moveEpicenter = <span class="hljs-keyword">this</span>.moveEpicenter.bind(<span class="hljs-keyword">this</span>);                <span class="hljs-keyword">this</span>.reverseVertical = <span class="hljs-keyword">this</span>.reverseVertical.bind(<span class="hljs-keyword">this</span>);                <span class="hljs-keyword">this</span>.render = <span class="hljs-keyword">this</span>.render.bind(<span class="hljs-keyword">this</span>);            },            setup : function(){                <span class="hljs-keyword">this</span>.points.length = <span class="hljs-number">0</span>;                <span class="hljs-keyword">this</span>.fishes.length = <span class="hljs-number">0</span>;                <span class="hljs-keyword">this</span>.watchIds.length = <span class="hljs-number">0</span>;                <span class="hljs-keyword">this</span>.intervalCount = <span class="hljs-keyword">this</span>.MAX_INTERVAL_COUNT;                <span class="hljs-keyword">this</span>.width = <span class="hljs-keyword">this</span>.$container.width();                <span class="hljs-keyword">this</span>.height = <span class="hljs-keyword">this</span>.$container.height();                <span class="hljs-keyword">this</span>.fishCount = <span class="hljs-keyword">this</span>.FISH_COUNT * <span class="hljs-keyword">this</span>.width / <span class="hljs-number">500</span> * <span class="hljs-keyword">this</span>.height / <span class="hljs-number">500</span>;                <span class="hljs-keyword">this</span>.$canvas.attr({width : <span class="hljs-keyword">this</span>.width, height : <span class="hljs-keyword">this</span>.height});                <span class="hljs-keyword">this</span>.reverse = <span class="hljs-literal">false</span>;                <span class="hljs-keyword">this</span>.fishes.push(new FISH(<span class="hljs-keyword">this</span>));                <span class="hljs-keyword">this</span>.createSurfacePoints();            },            watchWindowSize : function(){                <span class="hljs-keyword">this</span>.clearTimer();                <span class="hljs-keyword">this</span>.tmpWidth = <span class="hljs-keyword">this</span>.$window.width();                <span class="hljs-keyword">this</span>.tmpHeight = <span class="hljs-keyword">this</span>.$window.height();                <span class="hljs-keyword">this</span>.watchIds.push(setTimeout(<span class="hljs-keyword">this</span>.jdugeToStopResize, <span class="hljs-keyword">this</span>.WATCH_INTERVAL));            },            clearTimer : function(){                <span class="hljs-keyword">while</span>(<span class="hljs-keyword">this</span>.watchIds.length &gt; <span class="hljs-number">0</span>){                    clearTimeout(<span class="hljs-keyword">this</span>.watchIds.pop());                }            },            jdugeToStopResize : function(){                <span class="hljs-keyword">var</span> width = <span class="hljs-keyword">this</span>.$window.width(),                    height = <span class="hljs-keyword">this</span>.$window.height(),                    stopped = (width == <span class="hljs-keyword">this</span>.tmpWidth &amp;&amp; height == <span class="hljs-keyword">this</span>.tmpHeight);                <span class="hljs-keyword">this</span>.tmpWidth = width;                <span class="hljs-keyword">this</span>.tmpHeight = height;                <span class="hljs-keyword">if</span>(stopped){                    <span class="hljs-keyword">this</span>.setup();                }            },            bindEvent : function(){                <span class="hljs-keyword">this</span>.$window.on(<span class="hljs-string">'resize'</span>, <span class="hljs-keyword">this</span>.watchWindowSize);                <span class="hljs-keyword">this</span>.$container.on(<span class="hljs-string">'mouseenter'</span>, <span class="hljs-keyword">this</span>.startEpicenter);                <span class="hljs-keyword">this</span>.$container.on(<span class="hljs-string">'mousemove'</span>, <span class="hljs-keyword">this</span>.moveEpicenter);                <span class="hljs-keyword">this</span>.$container.on(<span class="hljs-string">'click'</span>, <span class="hljs-keyword">this</span>.reverseVertical);            },            getAxis : function(event){                <span class="hljs-keyword">var</span> offset = <span class="hljs-keyword">this</span>.$container.offset();                <span class="hljs-keyword">return</span> {                    x : event.clientX - offset.left + <span class="hljs-keyword">this</span>.$window.scrollLeft(),                    y : event.clientY - offset.top + <span class="hljs-keyword">this</span>.$window.scrollTop()                };            },            startEpicenter : function(event){                <span class="hljs-keyword">this</span>.axis = <span class="hljs-keyword">this</span>.getAxis(event);            },            moveEpicenter : function(event){                <span class="hljs-keyword">var</span> axis = <span class="hljs-keyword">this</span>.getAxis(event);                <span class="hljs-keyword">if</span>(!<span class="hljs-keyword">this</span>.axis){                    <span class="hljs-keyword">this</span>.axis = axis;                }                <span class="hljs-keyword">this</span>.generateEpicenter(axis.x, axis.y, axis.y - <span class="hljs-keyword">this</span>.axis.y);                <span class="hljs-keyword">this</span>.axis = axis;            },            generateEpicenter : function(x, y, velocity){                <span class="hljs-keyword">if</span>(y &lt; <span class="hljs-keyword">this</span>.height / <span class="hljs-number">2</span> - <span class="hljs-keyword">this</span>.THRESHOLD || y &gt; <span class="hljs-keyword">this</span>.height / <span class="hljs-number">2</span> + <span class="hljs-keyword">this</span>.THRESHOLD){                    <span class="hljs-keyword">return</span>;                }                <span class="hljs-keyword">var</span> index = Math.round(x / <span class="hljs-keyword">this</span>.pointInterval);                <span class="hljs-keyword">if</span>(index &lt; <span class="hljs-number">0</span> || index &gt;= <span class="hljs-keyword">this</span>.points.length){                    <span class="hljs-keyword">return</span>;                }                <span class="hljs-keyword">this</span>.points[index].interfere(y, velocity);            },            reverseVertical : function(){                <span class="hljs-keyword">this</span>.reverse = !<span class="hljs-keyword">this</span>.reverse;                <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>, count = <span class="hljs-keyword">this</span>.fishes.length; i &lt; count; i++){                    <span class="hljs-keyword">this</span>.fishes[i].reverseVertical();                }            },            controlStatus : function(){                <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>, count = <span class="hljs-keyword">this</span>.points.length; i &lt; count; i++){                    <span class="hljs-keyword">this</span>.points[i].updateSelf();                }                <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>, count = <span class="hljs-keyword">this</span>.points.length; i &lt; count; i++){                    <span class="hljs-keyword">this</span>.points[i].updateNeighbors();                }                <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.fishes.length &lt; <span class="hljs-keyword">this</span>.fishCount){                    <span class="hljs-keyword">if</span>(--<span class="hljs-keyword">this</span>.intervalCount == <span class="hljs-number">0</span>){                        <span class="hljs-keyword">this</span>.intervalCount = <span class="hljs-keyword">this</span>.MAX_INTERVAL_COUNT;                        <span class="hljs-keyword">this</span>.fishes.push(new FISH(<span class="hljs-keyword">this</span>));                    }                }            },            render : function(){                requestAnimationFrame(<span class="hljs-keyword">this</span>.render);                <span class="hljs-keyword">this</span>.controlStatus();                <span class="hljs-keyword">this</span>.context.clearRect(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-keyword">this</span>.width, <span class="hljs-keyword">this</span>.height);                <span class="hljs-keyword">this</span>.context.fillStyle = <span class="hljs-string">'hsl(0, 0%, 95%)'</span>;                <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>, count = <span class="hljs-keyword">this</span>.fishes.length; i &lt; count; i++){                    <span class="hljs-keyword">this</span>.fishes[i].render(<span class="hljs-keyword">this</span>.context);                }                <span class="hljs-keyword">this</span>.context.save();                <span class="hljs-keyword">this</span>.context.globalCompositeOperation = <span class="hljs-string">'xor'</span>;                <span class="hljs-keyword">this</span>.context.beginPath();                <span class="hljs-keyword">this</span>.context.moveTo(<span class="hljs-number">0</span>, <span class="hljs-keyword">this</span>.reverse ? <span class="hljs-number">0</span> : <span class="hljs-keyword">this</span>.height);                <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>, count = <span class="hljs-keyword">this</span>.points.length; i &lt; count; i++){                    <span class="hljs-keyword">this</span>.points[i].render(<span class="hljs-keyword">this</span>.context);                }                <span class="hljs-keyword">this</span>.context.lineTo(<span class="hljs-keyword">this</span>.width, <span class="hljs-keyword">this</span>.reverse ? <span class="hljs-number">0</span> : <span class="hljs-keyword">this</span>.height);                <span class="hljs-keyword">this</span>.context.closePath();                <span class="hljs-keyword">this</span>.context.fill();                <span class="hljs-keyword">this</span>.context.restore();            }        };        <span class="hljs-keyword">var</span> SURFACE_POINT = function(renderer, x){            <span class="hljs-keyword">this</span>.renderer = renderer;            <span class="hljs-keyword">this</span>.x = x;            <span class="hljs-keyword">this</span>.<span class="hljs-keyword">init</span>();        };        SURFACE_POINT.prototype = {            SPRING_CONSTANT : <span class="hljs-number">0.03</span>,            SPRING_FRICTION : <span class="hljs-number">0.9</span>,            WAVE_SPREAD : <span class="hljs-number">0.3</span>,            ACCELARATION_RATE : <span class="hljs-number">0.01</span>,            <span class="hljs-keyword">init</span> : function(){                <span class="hljs-keyword">this</span>.initHeight = <span class="hljs-keyword">this</span>.renderer.height * <span class="hljs-keyword">this</span>.renderer.INIT_HEIGHT_RATE;                <span class="hljs-keyword">this</span>.height = <span class="hljs-keyword">this</span>.initHeight;                <span class="hljs-keyword">this</span>.fy = <span class="hljs-number">0</span>;                <span class="hljs-keyword">this</span>.force = {previous : <span class="hljs-number">0</span>, next : <span class="hljs-number">0</span>};            },            setPreviousPoint : function(previous){                <span class="hljs-keyword">this</span>.previous = previous;            },            setNextPoint : function(next){                <span class="hljs-keyword">this</span>.next = next;            },            interfere : function(y, velocity){                <span class="hljs-keyword">this</span>.fy = <span class="hljs-keyword">this</span>.renderer.height * <span class="hljs-keyword">this</span>.ACCELARATION_RATE * ((<span class="hljs-keyword">this</span>.renderer.height - <span class="hljs-keyword">this</span>.height - y) &gt;= <span class="hljs-number">0</span> ? -<span class="hljs-number">1</span> : <span class="hljs-number">1</span>) * Math.abs(velocity);            },            updateSelf : function(){                <span class="hljs-keyword">this</span>.fy += <span class="hljs-keyword">this</span>.SPRING_CONSTANT * (<span class="hljs-keyword">this</span>.initHeight - <span class="hljs-keyword">this</span>.height);                <span class="hljs-keyword">this</span>.fy *= <span class="hljs-keyword">this</span>.SPRING_FRICTION;                <span class="hljs-keyword">this</span>.height += <span class="hljs-keyword">this</span>.fy;            },            updateNeighbors : function(){                <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.previous){                    <span class="hljs-keyword">this</span>.force.previous = <span class="hljs-keyword">this</span>.WAVE_SPREAD * (<span class="hljs-keyword">this</span>.height - <span class="hljs-keyword">this</span>.previous.height);                }                <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.next){                    <span class="hljs-keyword">this</span>.force.next = <span class="hljs-keyword">this</span>.WAVE_SPREAD * (<span class="hljs-keyword">this</span>.height - <span class="hljs-keyword">this</span>.next.height);                }            },            render : function(context){                <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.previous){                    <span class="hljs-keyword">this</span>.previous.height += <span class="hljs-keyword">this</span>.force.previous;                    <span class="hljs-keyword">this</span>.previous.fy += <span class="hljs-keyword">this</span>.force.previous;                }                <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.next){                    <span class="hljs-keyword">this</span>.next.height += <span class="hljs-keyword">this</span>.force.next;                    <span class="hljs-keyword">this</span>.next.fy += <span class="hljs-keyword">this</span>.force.next;                }                context.lineTo(<span class="hljs-keyword">this</span>.x, <span class="hljs-keyword">this</span>.renderer.height - <span class="hljs-keyword">this</span>.height);            }        };        <span class="hljs-keyword">var</span> FISH = function(renderer){            <span class="hljs-keyword">this</span>.renderer = renderer;            <span class="hljs-keyword">this</span>.<span class="hljs-keyword">init</span>();        };        FISH.prototype = {            GRAVITY : <span class="hljs-number">0.4</span>,            <span class="hljs-keyword">init</span> : function(){                <span class="hljs-keyword">this</span>.direction = Math.random() &lt; <span class="hljs-number">0.5</span>;                <span class="hljs-keyword">this</span>.x = <span class="hljs-keyword">this</span>.direction ? (<span class="hljs-keyword">this</span>.renderer.width + <span class="hljs-keyword">this</span>.renderer.THRESHOLD) : -<span class="hljs-keyword">this</span>.renderer.THRESHOLD;                <span class="hljs-keyword">this</span>.previousY = <span class="hljs-keyword">this</span>.y;                <span class="hljs-keyword">this</span>.vx = <span class="hljs-keyword">this</span>.getRandomValue(<span class="hljs-number">4</span>, <span class="hljs-number">10</span>) * (<span class="hljs-keyword">this</span>.direction ? -<span class="hljs-number">1</span> : <span class="hljs-number">1</span>);                <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.renderer.reverse){                    <span class="hljs-keyword">this</span>.y = <span class="hljs-keyword">this</span>.getRandomValue(<span class="hljs-keyword">this</span>.renderer.height * <span class="hljs-number">1</span> / <span class="hljs-number">10</span>, <span class="hljs-keyword">this</span>.renderer.height * <span class="hljs-number">4</span> / <span class="hljs-number">10</span>);                    <span class="hljs-keyword">this</span>.vy = <span class="hljs-keyword">this</span>.getRandomValue(<span class="hljs-number">2</span>, <span class="hljs-number">5</span>);                    <span class="hljs-keyword">this</span>.ay = <span class="hljs-keyword">this</span>.getRandomValue(<span class="hljs-number">0.05</span>, <span class="hljs-number">0.2</span>);                }<span class="hljs-keyword">else</span>{                    <span class="hljs-keyword">this</span>.y = <span class="hljs-keyword">this</span>.getRandomValue(<span class="hljs-keyword">this</span>.renderer.height * <span class="hljs-number">6</span> / <span class="hljs-number">10</span>, <span class="hljs-keyword">this</span>.renderer.height * <span class="hljs-number">9</span> / <span class="hljs-number">10</span>);                    <span class="hljs-keyword">this</span>.vy = <span class="hljs-keyword">this</span>.getRandomValue(-<span class="hljs-number">5</span>, -<span class="hljs-number">2</span>);                    <span class="hljs-keyword">this</span>.ay = <span class="hljs-keyword">this</span>.getRandomValue(-<span class="hljs-number">0.2</span>, -<span class="hljs-number">0.05</span>);                }                <span class="hljs-keyword">this</span>.isOut = <span class="hljs-literal">false</span>;                <span class="hljs-keyword">this</span>.theta = <span class="hljs-number">0</span>;                <span class="hljs-keyword">this</span>.phi = <span class="hljs-number">0</span>;            },            getRandomValue : function(min, max){                <span class="hljs-keyword">return</span> min + (max - min) * Math.random();            },            reverseVertical : function(){                <span class="hljs-keyword">this</span>.isOut = !<span class="hljs-keyword">this</span>.isOut;                <span class="hljs-keyword">this</span>.ay *= -<span class="hljs-number">1</span>;            },            controlStatus : function(context){                <span class="hljs-keyword">this</span>.previousY = <span class="hljs-keyword">this</span>.y;                <span class="hljs-keyword">this</span>.x += <span class="hljs-keyword">this</span>.vx;                <span class="hljs-keyword">this</span>.y += <span class="hljs-keyword">this</span>.vy;                <span class="hljs-keyword">this</span>.vy += <span class="hljs-keyword">this</span>.ay;                <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.renderer.reverse){                    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.y &gt; <span class="hljs-keyword">this</span>.renderer.height * <span class="hljs-keyword">this</span>.renderer.INIT_HEIGHT_RATE){                        <span class="hljs-keyword">this</span>.vy -= <span class="hljs-keyword">this</span>.GRAVITY;                        <span class="hljs-keyword">this</span>.isOut = <span class="hljs-literal">true</span>;                    }<span class="hljs-keyword">else</span>{                        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.isOut){                            <span class="hljs-keyword">this</span>.ay = <span class="hljs-keyword">this</span>.getRandomValue(<span class="hljs-number">0.05</span>, <span class="hljs-number">0.2</span>);                        }                        <span class="hljs-keyword">this</span>.isOut = <span class="hljs-literal">false</span>;                    }                }<span class="hljs-keyword">else</span>{                    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.y &lt; <span class="hljs-keyword">this</span>.renderer.height * <span class="hljs-keyword">this</span>.renderer.INIT_HEIGHT_RATE){                        <span class="hljs-keyword">this</span>.vy += <span class="hljs-keyword">this</span>.GRAVITY;                        <span class="hljs-keyword">this</span>.isOut = <span class="hljs-literal">true</span>;                    }<span class="hljs-keyword">else</span>{                        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.isOut){                            <span class="hljs-keyword">this</span>.ay = <span class="hljs-keyword">this</span>.getRandomValue(-<span class="hljs-number">0.2</span>, -<span class="hljs-number">0.05</span>);                        }                        <span class="hljs-keyword">this</span>.isOut = <span class="hljs-literal">false</span>;                    }                }                <span class="hljs-keyword">if</span>(!<span class="hljs-keyword">this</span>.isOut){                    <span class="hljs-keyword">this</span>.theta += Math.PI / <span class="hljs-number">20</span>;                    <span class="hljs-keyword">this</span>.theta %= Math.PI * <span class="hljs-number">2</span>;                    <span class="hljs-keyword">this</span>.phi += Math.PI / <span class="hljs-number">30</span>;                    <span class="hljs-keyword">this</span>.phi %= Math.PI * <span class="hljs-number">2</span>;                }                <span class="hljs-keyword">this</span>.renderer.generateEpicenter(<span class="hljs-keyword">this</span>.x + (<span class="hljs-keyword">this</span>.direction ? -<span class="hljs-number">1</span> : <span class="hljs-number">1</span>) * <span class="hljs-keyword">this</span>.renderer.THRESHOLD, <span class="hljs-keyword">this</span>.y, <span class="hljs-keyword">this</span>.y - <span class="hljs-keyword">this</span>.previousY);                <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.vx &gt; <span class="hljs-number">0</span> &amp;&amp; <span class="hljs-keyword">this</span>.x &gt; <span class="hljs-keyword">this</span>.renderer.width + <span class="hljs-keyword">this</span>.renderer.THRESHOLD || <span class="hljs-keyword">this</span>.vx &lt; <span class="hljs-number">0</span> &amp;&amp; <span class="hljs-keyword">this</span>.x &lt; -<span class="hljs-keyword">this</span>.renderer.THRESHOLD){                    <span class="hljs-keyword">this</span>.<span class="hljs-keyword">init</span>();                }            },            render : function(context){                context.save();                context.translate(<span class="hljs-keyword">this</span>.x, <span class="hljs-keyword">this</span>.y);                context.rotate(Math.PI + Math.atan2(<span class="hljs-keyword">this</span>.vy, <span class="hljs-keyword">this</span>.vx));                context.scale(<span class="hljs-number">1</span>, <span class="hljs-keyword">this</span>.direction ? <span class="hljs-number">1</span> : -<span class="hljs-number">1</span>);                context.beginPath();                context.moveTo(-<span class="hljs-number">30</span>, <span class="hljs-number">0</span>);                context.bezierCurveTo(-<span class="hljs-number">20</span>, <span class="hljs-number">15</span>, <span class="hljs-number">15</span>, <span class="hljs-number">10</span>, <span class="hljs-number">40</span>, <span class="hljs-number">0</span>);                context.bezierCurveTo(<span class="hljs-number">15</span>, -<span class="hljs-number">10</span>, -<span class="hljs-number">20</span>, -<span class="hljs-number">15</span>, -<span class="hljs-number">30</span>, <span class="hljs-number">0</span>);                context.fill();                context.save();                context.translate(<span class="hljs-number">40</span>, <span class="hljs-number">0</span>);                context.scale(<span class="hljs-number">0.9</span> + <span class="hljs-number">0.2</span> * Math.sin(<span class="hljs-keyword">this</span>.theta), <span class="hljs-number">1</span>);                context.beginPath();                context.moveTo(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>);                context.quadraticCurveTo(<span class="hljs-number">5</span>, <span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-number">8</span>);                context.quadraticCurveTo(<span class="hljs-number">12</span>, <span class="hljs-number">5</span>, <span class="hljs-number">10</span>, <span class="hljs-number">0</span>);                context.quadraticCurveTo(<span class="hljs-number">12</span>, -<span class="hljs-number">5</span>, <span class="hljs-number">20</span>, -<span class="hljs-number">8</span>);                context.quadraticCurveTo(<span class="hljs-number">5</span>, -<span class="hljs-number">10</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);                context.fill();                context.restore();                context.save();                context.translate(-<span class="hljs-number">3</span>, <span class="hljs-number">0</span>);                context.rotate((Math.PI / <span class="hljs-number">3</span> + Math.PI / <span class="hljs-number">10</span> * Math.sin(<span class="hljs-keyword">this</span>.phi)) * (<span class="hljs-keyword">this</span>.renderer.reverse ? -<span class="hljs-number">1</span> : <span class="hljs-number">1</span>));                context.beginPath();                <span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.renderer.reverse){                    context.moveTo(<span class="hljs-number">5</span>, <span class="hljs-number">0</span>);                    context.bezierCurveTo(<span class="hljs-number">10</span>, <span class="hljs-number">10</span>, <span class="hljs-number">10</span>, <span class="hljs-number">30</span>, <span class="hljs-number">0</span>, <span class="hljs-number">40</span>);                    context.bezierCurveTo(-<span class="hljs-number">12</span>, <span class="hljs-number">25</span>, -<span class="hljs-number">8</span>, <span class="hljs-number">10</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);                }<span class="hljs-keyword">else</span>{                    context.moveTo(-<span class="hljs-number">5</span>, <span class="hljs-number">0</span>);                    context.bezierCurveTo(-<span class="hljs-number">10</span>, -<span class="hljs-number">10</span>, -<span class="hljs-number">10</span>, -<span class="hljs-number">30</span>, <span class="hljs-number">0</span>, -<span class="hljs-number">40</span>);                    context.bezierCurveTo(<span class="hljs-number">12</span>, -<span class="hljs-number">25</span>, <span class="hljs-number">8</span>, -<span class="hljs-number">10</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);                }                context.closePath();                context.fill();                context.restore();                context.restore();                <span class="hljs-keyword">this</span>.controlStatus(context);            }        };        $(function(){            RENDERER.<span class="hljs-keyword">init</span>();        });    &lt;/script&gt;    &lt;style&gt;        <span class="hljs-meta">@media</span> only screen and (max-width: <span class="hljs-number">767</span>px){            #sidebar_search_box input[type=text]{width:calc(<span class="hljs-number">100</span>% - <span class="hljs-number">24</span>px)}        }    &lt;/style&gt;&lt;/div&gt;</code></pre></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[转]MySQL数据库引擎</title>
    <link href="/blog/2020/02/09/%E8%BD%AC-MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BC%95%E6%93%8E/"/>
    <url>/blog/2020/02/09/%E8%BD%AC-MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BC%95%E6%93%8E/</url>
    
    <content type="html"><![CDATA[<p>接下来介绍一下存储引擎的基本概念、MySQL支持的存储引擎、存储引擎的选择以及操作默认存储引擎。</p><a id="more"></a><h2 id="什么是存储引擎"><a href="#什么是存储引擎" class="headerlink" title="什么是存储引擎"></a>什么是存储引擎</h2><p>数据库存储引擎是数据库底层软件组件，数据库管理系统使用数据引擎进行创建、查询、更新和删除数据操作。不同的存储引擎提供不同的存储机制、索引技巧、锁定水平等功能，使用不同的存储引擎还可以获得特定的功能。</p><p>现在许多数据库管理系统都支持多种不同的存储引擎。MySQL 的核心就是存储引擎。</p><blockquote><p>提示：InnoDB 事务型数据库的首选引擎，支持事务安全表（ACID），支持行锁定和外键。MySQL 5.5.5 之后，InnoDB 作为默认存储引擎。</p></blockquote><p>MyISAM 是基于 ISAM 的存储引擎，并对其进行扩展，是在 Web、数据仓储和其他应用环境下最常使用的存储引擎之一。MyISAM 拥有较高的插入、查询速度，但不支持事务。</p><p>MEMORY 存储引擎将表中的数据存储到内存中，为查询和引用其他数据提供快速访问。</p><h2 id="MySQL-5-7-支持的存储引擎"><a href="#MySQL-5-7-支持的存储引擎" class="headerlink" title="MySQL 5.7 支持的存储引擎"></a>MySQL 5.7 支持的存储引擎</h2><p>MySQL 支持多种类型的数据库引擎，可分别根据各个引擎的功能和特性为不同的数据库处理任务提供各自不同的适应性和灵活性。在 MySQL 中，可以利用 SHOW ENGINES 语句来显示可用的数据库引擎和默认引擎。</p><p>MySQL 提供了多个不同的存储引擎，包括处理事务安全表的引擎和处理非事务安全表的引擎。在 MySQL 中，不需要在整个服务器中使用同一种存储引擎，针对具体的要求，可以对每一个表使用不同的存储引擎。</p><p>MySQL 5.7 支持的存储引擎有 InnoDB、MyISAM、Memory、Merge、Archive、Federated、CSV、BLACKHOLE 等。可以使用<code>SHOW ENGINES</code>语句查看系统所支持的引擎类型，结果如图所示。</p><p><fancybox><img src="http://c.biancheng.net/uploads/allimg/190222/4-1Z2221K006125.gif" srcset="/blog/img/loading.gif" alt="MySQL数据库中的存储引擎"></fancybox></p><p>Support 列的值表示某种引擎是否能使用，<code>YES</code>表示可以使用，<code>NO</code>表示不能使用，<code>DEFAULT</code>表示该引擎为当前默认的存储引擎。</p><h2 id="如何选择-MySQL-存储引擎"><a href="#如何选择-MySQL-存储引擎" class="headerlink" title="如何选择 MySQL 存储引擎"></a>如何选择 MySQL 存储引擎</h2><p>不同的存储引擎都有各自的特点，以适应不同的需求，如表所示。为了做出选择，首先要考虑每一个存储引擎提供了哪些不同的功能。</p><table><thead><tr><th>功能</th><th>MylSAM</th><th>MEMORY</th><th>InnoDB</th><th>Archive</th></tr></thead><tbody><tr><td>存储限制</td><td>256TB</td><td>RAM</td><td>64TB</td><td>None</td></tr><tr><td>支持事务</td><td>No</td><td>No</td><td>Yes</td><td>No</td></tr><tr><td>支持全文索引</td><td>Yes</td><td>No</td><td>No</td><td>No</td></tr><tr><td>支持树索引</td><td>Yes</td><td>Yes</td><td>Yes</td><td>No</td></tr><tr><td>支持哈希索引</td><td>No</td><td>Yes</td><td>No</td><td>No</td></tr><tr><td>支持数据缓存</td><td>No</td><td>N/A</td><td>Yes</td><td>No</td></tr><tr><td>支持外键</td><td>No</td><td>No</td><td>Yes</td><td>No</td></tr></tbody></table><p>可以根据以下的原则来选择 MySQL 存储引擎：</p><ul><li>如果要提供提交、回滚和恢复的事务安全（ACID 兼容）能力，并要求实现并发控制，InnoDB 是一个很好的选择。</li><li>如果数据表主要用来插入和查询记录，则 MyISAM 引擎提供较高的处理效率。</li><li>如果只是临时存放数据，数据量不大，并且不需要较高的数据安全性，可以选择将数据保存在内存的 MEMORY 引擎中，MySQL 中使用该引擎作为临时表，存放查询的中间结果。</li><li>如果只有 INSERT 和 SELECT 操作，可以选择Archive 引擎，Archive 存储引擎支持高并发的插入操作，但是本身并不是事务安全的。Archive 存储引擎非常适合存储归档数据，如记录日志信息可以使用 Archive 引擎。</li></ul><blockquote><p>提示：使用哪一种引擎要根据需要灵活选择，一个数据库中多个表可以使用不同的引擎以满足各种性能和实际需求。使用合适的存储引擎将会提高整个数据库的性能。</p></blockquote><h2 id="MySQL-默认存储引擎"><a href="#MySQL-默认存储引擎" class="headerlink" title="MySQL 默认存储引擎"></a>MySQL 默认存储引擎</h2><p>InnoDB 是系统的默认引擎，支持可靠的事务处理。</p><p>使用下面的语句可以修改数据库临时的默认存储引擎</p><p>SET default_storage_engine=&lt; 存储引擎名 &gt;</p><p>例如，将 MySQL 数据库的临时默认存储引擎修改为 MyISAM，输入的 SQL 语句和运行结果如图所示。</p><p><fancybox><img src="http://c.biancheng.net/uploads/allimg/190222/4-1Z2221K501L1.gif" srcset="/blog/img/loading.gif" alt="修改MySQL数据库中的默认存储引擎"></fancybox></p><p>此时，可以发现 MySQL 的默认存储引擎已经变成了 MyISAM。但是当再次重启客户端时，默认存储引擎仍然是 InnoDB。</p><hr><p>原文链接：<a href="http://c.biancheng.net/view/2418.html" target="_blank" rel="noopener">http://c.biancheng.net/view/2418.html</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[转]MySQL区别大小写字母的问题</title>
    <link href="/blog/2020/02/09/%E8%BD%AC-MySQL%E5%8C%BA%E5%88%AB%E5%A4%A7%E5%B0%8F%E5%86%99%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <url>/blog/2020/02/09/%E8%BD%AC-MySQL%E5%8C%BA%E5%88%AB%E5%A4%A7%E5%B0%8F%E5%86%99%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>如果直接使用MYSQL客户端用SQL语句查询数据库中的数据，SQL语句中字段的大写或小写查出的数据是一样的，说明查询条件对字段的大小写是不敏感（默认）。</p><h1 id="怎样让MYSQL对大小字母写敏感？"><a href="#怎样让MYSQL对大小字母写敏感？" class="headerlink" title="怎样让MYSQL对大小字母写敏感？"></a>怎样让MYSQL对大小字母写敏感？</h1><a id="more"></a><h2 id="解决方案一"><a href="#解决方案一" class="headerlink" title="解决方案一"></a>解决方案一</h2><p>MYSQL区别大小写需要设置collate（校对） 。 </p><p><strong>collate规则：</strong></p><ul><li><p>*_bin: 表示的是 <code>binary casesensitive collation</code>，也就是说是区分大小写的</p></li><li><p>*_cs: 表示的是 <code>casesensitive collation</code>，区分大小写</p></li><li><p>*_ci: 表示的是 <code>caseinsensitive collation</code>，不区分大小写</p></li></ul><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><ol><li><p>可以将查询条件用binary()括起来。 比如： </p><div class="hljs"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">where</span> <span class="hljs-built_in">binary</span> username= <span class="hljs-string">'jack'</span>;</code></pre></div></li><li><p>可以修改该字段的collation 为 binary。比如：</p><div class="hljs"><pre><code class="hljs routeros">ALTER TABLE TABLENAME MODIFY COLUMN COLUMNNAME VARCHAR(50) BINARY CHARACTER <span class="hljs-builtin-name">SET</span> utf8 COLLATE utf8_bin<span class="hljs-built_in"> DEFAULT </span><span class="hljs-literal">NULL</span>;</code></pre></div></li></ol><h2 id="解决方案二"><a href="#解决方案二" class="headerlink" title="解决方案二"></a>解决方案二</h2><p>mysql查询默认是不区分大小写的 如:</p><div class="hljs"><pre><code class="hljs vbnet"><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">where</span> username=‘jack<span class="hljs-comment">';</span><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">where</span> username=<span class="hljs-comment">'JACK';</span></code></pre></div><p>得到的结果是一样的，如果我们需要进行区分的话可以按照如下方法来做：</p><h3 id="第一种方法"><a href="#第一种方法" class="headerlink" title="第一种方法"></a>第一种方法</h3><p>要让mysql查询区分大小写，可以：</p><div class="hljs"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">where</span> <span class="hljs-built_in">binary</span> username=<span class="hljs-string">'jack'</span><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">where</span> <span class="hljs-built_in">binary</span> username=<span class="hljs-string">'JACK'</span></code></pre></div><h3 id="第二种方法"><a href="#第二种方法" class="headerlink" title="第二种方法"></a>第二种方法</h3><p>在建表时时候加以标识</p><div class="hljs"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> emp(   username <span class="hljs-built_in">varchar</span>(<span class="hljs-number">20</span>) <span class="hljs-built_in">binary</span>)</code></pre></div><blockquote><p>原理：对于CHAR、VARCHAR和TEXT类型，BINARY属性可以为列分配该列字符集的校对规则。<strong>BINARY属性是指定列字符集的二元校对规则的简写。排序和比较基于数值字符值,因此也就自然区分了大小写。</strong></p></blockquote><hr><p>原文链接：<a href="https://blog.csdn.net/qq_15160079/article/details/100976519" target="_blank" rel="noopener">https://blog.csdn.net/qq_15160079/article/details/100976519</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Navicat Premium连接MySQL失败？</title>
    <link href="/blog/2020/02/09/Navicat-Premium%E8%BF%9E%E6%8E%A5MySQL%E5%A4%B1%E8%B4%A5%EF%BC%9F/"/>
    <url>/blog/2020/02/09/Navicat-Premium%E8%BF%9E%E6%8E%A5MySQL%E5%A4%B1%E8%B4%A5%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>使用Navicat Premium连接MySQL失败，并弹窗提示👇</p><p><img src="https://s2.ax1x.com/2020/02/09/1fOM4A.png" srcset="/blog/img/loading.gif" alt=""></p><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>从错误信息可知caching_sha2_password不能加载。</p><p>以上报错是由于目前已有的客户端连接软件还不支持Mysql8新增加的加密方式caching_sha2_password，所以我们需要修改用户的加密方式，将其改为老的加密验证方式。</p><p>大安装Mysql数据库的主机上登录Mysql对应的用户，上面连接时用的用户为root，所以我们登录root用户。</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><ol><li>执行命令，查看当前用户的加密方式：</li></ol><div class="hljs"><pre><code class="hljs mysql">use mysql;select user,plugin from user where user='root';</code></pre></div><p>可以看到当前用户的加密方式为caching_sha2_password。</p><ol start="2"><li>登录MySQL后输入，执行命令：</li></ol><div class="hljs"><pre><code class="hljs mysql">ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'YourPassword';FLUSH PRIVILEGES;</code></pre></div><p>将用户的加密方式改为mysql_native_password。</p><ol start="3"><li>再次尝试连接Mysql，连接成功。</li></ol><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文章内跳转</title>
    <link href="/blog/2020/02/09/%E6%96%87%E7%AB%A0%E5%86%85%E8%B7%B3%E8%BD%AC/"/>
    <url>/blog/2020/02/09/%E6%96%87%E7%AB%A0%E5%86%85%E8%B7%B3%E8%BD%AC/</url>
    
    <content type="html"><![CDATA[<p><a href="#jump">点击我跳转</a></p><div class="hljs"><pre><code class="hljs markdown"><span class="hljs-bullet">1. </span>跳转起点[<span class="hljs-string">点击我跳转</span>](<span class="hljs-link">#jump</span>)2.跳转终点<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"jump"</span>&gt;</span></span><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">font</span> <span class="hljs-attr">color</span>=<span class="hljs-string">'blue'</span>&gt;</span></span>[我是跳转内容]<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">font</span>&gt;</span></span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#jump"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"footnote-backref"</span>&gt;</span></span>↩<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span></code></pre></div><p><span id="jump"><font color="blue">[我是跳转内容]</font></span><a href="#jump" class="footnote-backref">↩</a></p><p>参考文章：</p><p><a href="https://www.jianshu.com/p/4898c2e9a36d" target="_blank" rel="noopener">https://www.jianshu.com/p/4898c2e9a36d</a></p><p><a href="https://blog.csdn.net/qq_38276669/article/details/86748936" target="_blank" rel="noopener">https://blog.csdn.net/qq_38276669/article/details/86748936</a></p><a id="more"></a><h1 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h1><hr><p>在MarkDown中是通过 <code>链接</code> 和 <code>标题</code> 来实现页面内跳转的，所以先讲下MarkDown中 <code>链接</code> 和 <code>标题</code> 的语法，然后再讲 MarkDown 中实现页面内跳转的方法；</p><h1 id="一-链接的定义"><a href="#一-链接的定义" class="headerlink" title="一. 链接的定义"></a>一. 链接的定义</h1><p>Markdown 支持两种形式的链接语法： 行内式 和 参考式 两种形式。</p><h2 id="1-行内式链接"><a href="#1-行内式链接" class="headerlink" title="1. 行内式链接"></a>1. 行内式链接</h2><p><strong>语法：</strong></p><div class="hljs"><pre><code class="hljs bash">行内式链接 = [内容](地址 <span class="hljs-string">"标题"</span>)</code></pre></div><p><strong>说明：</strong></p><ul><li><code>标题</code> 是可选的，可以用单引号 或 双引号；</li></ul><p><strong>转换成HTML后，会生成如下标签：</strong></p><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"地址"</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"标题"</span>&gt;</span>内容<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre></div><p><strong>示例：</strong></p><div class="hljs"><pre><code class="hljs csharp">[<span class="hljs-meta">我的博客</span>](https:<span class="hljs-comment">//www.jianshu.com/u/7ecaba2d594c "郭斌勇的主页")</span></code></pre></div><p><strong>渲染成HTML后，会生成如下标签：</strong></p><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://www.jianshu.com/u/7ecaba2d594c"</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"郭斌勇的主页"</span>&gt;</span>我的博客<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre></div><p><strong>效果如下：</strong></p><p><a href="https://www.jianshu.com/u/7ecaba2d594c" target="_blank" rel="noopener">我的博客</a></p><h2 id="2-参考式链接"><a href="#2-参考式链接" class="headerlink" title="2. 参考式链接"></a>2. 参考式链接</h2><p><strong>语法：</strong></p><div class="hljs"><pre><code class="hljs bash">参考式链接 = [内容][参考标识符]参考标识符 = [标识符]: 地址 <span class="hljs-string">"标题"</span></code></pre></div><p><strong>说明：</strong></p><ul><li><code>参考式链接</code> 和 <code>参考标识符</code> 的定义没有先后顺序；</li><li><code>[内容]</code> 和 <code>[参考标识符]</code> 之间可以有一个空格，也可以没有空格；</li><li>如果 <code>内容</code> 和 <code>参考标识符</code> 一样，也可简写成 <code>[参考标识符][]</code> ;</li><li><code>标题</code> 是可选的，可以用单引号、双引号或是圆括弧包着；</li></ul><p><strong>转换成HTML后，会生成如下标签：</strong></p><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"地址"</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"标题"</span>&gt;</span>内容<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre></div><p><strong>示例：</strong></p><div class="hljs"><pre><code class="hljs csharp">[<span class="hljs-meta">博客</span>]: https:<span class="hljs-comment">//www.jianshu.com/u/7ecaba2d594c "郭斌勇的主页"</span>[<span class="hljs-meta">我的博客</span>][博客][<span class="hljs-meta">博客</span>][]</code></pre></div><p><strong>渲染成HTML后，会生成如下标签：</strong></p><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://www.jianshu.com/u/7ecaba2d594c"</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"郭斌勇的主页"</span>&gt;</span>我的博客<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://www.jianshu.com/u/7ecaba2d594c"</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"郭斌勇的主页"</span>&gt;</span>博客<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre></div><p><strong>效果如下：</strong></p><p><a href="https://www.jianshu.com/u/7ecaba2d594c" target="_blank" rel="noopener">我的博客</a><br> <a href="https://www.jianshu.com/u/7ecaba2d594c" target="_blank" rel="noopener">博客</a></p><h1 id="三-页面内跳转"><a href="#三-页面内跳转" class="headerlink" title="三.页面内跳转"></a>三.页面内跳转</h1><p>MarkDown中是通过定义链接的方式来定义跳转的，在这里，跳转也称为<code>锚点</code>，跳转的目标称为<code>锚点目标</code>；</p><p>所以，在 MarkDown 中实现页面内跳转的方法就是：定义一个 <code>锚点目标</code> 和 对应的 <code>锚点</code> ，用户点击 <code>锚点</code> 便可跳转到对应的 <code>锚点目标</code> 位置处；</p><p><code>锚点</code> 和 <code>锚点目标</code> 的定义格式如下：</p><h2 id="1-锚点的定义"><a href="#1-锚点的定义" class="headerlink" title="1. 锚点的定义"></a>1. 锚点的定义</h2><p>锚点就是一个链接，另外，由于在MarkDown中可以直接写HTML，所以在MarkDown中实现锚点有两种方式：MarkDown方式 和 HTML方式；</p><h3 id="1-1-MarkDown锚点"><a href="#1-1-MarkDown锚点" class="headerlink" title="1.1 MarkDown锚点"></a>1.1 MarkDown锚点</h3><p>MarkDown锚点本质上就是一个<a href="#链接的定义">MarkDown链接</a>，只是链接地址的格式为：</p><div class="hljs"><pre><code class="hljs bash">链接地址 = <span class="hljs-comment">#目标内容</span></code></pre></div><p>所以 MarkDown锚点 的定义也有两种方式</p><h4 id="行内式"><a href="#行内式" class="headerlink" title="行内式"></a>行内式</h4><p><strong>语法：</strong></p><div class="hljs"><pre><code class="hljs objectivec">锚点 = [内容](<span class="hljs-meta">#目标内容 <span class="hljs-meta-string">"标题"</span>)</span></code></pre></div><p><strong>说明：</strong></p><ul><li><code>标题</code> 是可选的，可以用单引号 或 双引号；</li></ul><p><strong>转换成HTML后，会生成如下标签：</strong></p><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#目标内容"</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"标题"</span>&gt;</span>内容<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre></div><p><strong>示例：</strong></p><div class="hljs"><pre><code class="hljs csharp">[<span class="hljs-meta">MarkDown方式的锚点</span>](<span class="hljs-meta">#MarkDown锚点)</span></code></pre></div><p><strong>渲染成HTML后，会生成如下标签：</strong></p><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#MarkDown锚点"</span> &gt;</span>MarkDown方式的锚点<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre></div><p><strong>效果如下：点击下面的锚点</strong></p><p><a href="#MarkDown锚点">MarkDown方式的锚点</a></p><h4 id="参考式"><a href="#参考式" class="headerlink" title="参考式"></a>参考式</h4><p><strong>语法：</strong></p><div class="hljs"><pre><code class="hljs objectivec">锚点 = [内容][参考标识符]参考标识符 = [标识符]: <span class="hljs-meta">#目标内容 <span class="hljs-meta-string">"标题"</span></span></code></pre></div><p><strong>说明：</strong></p><ul><li><code>锚点</code> 和 <code>参考标识符</code> 的定义没有先后顺序；</li><li><code>[内容]</code> 和 <code>[参考标识符]</code> 之间可以有一个空格，也可以没有空格；</li><li>如果 <code>内容</code> 和 <code>参考标识符</code> 一样，也可简写成 <code>[参考标识符][]</code> ;</li><li><code>标题</code> 是可选的，可以用单引号、双引号或是圆括弧包着；</li></ul><p><strong>转换成HTML后，会生成如下标签：</strong></p><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#目标内容"</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"标题"</span>&gt;</span>内容<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre></div><p><strong>示例：</strong></p><div class="hljs"><pre><code class="hljs css"><span class="hljs-selector-attr">[MarkDown方式的锚点]</span>: <span class="hljs-selector-id">#MarkDown</span>锚点<span class="hljs-selector-attr">[MD锚点]</span><span class="hljs-selector-attr">[MarkDown方式的锚点]</span><span class="hljs-selector-attr">[MarkDown方式的锚点]</span><span class="hljs-selector-attr">[]</span></code></pre></div><p><strong>渲染成HTML后，会生成如下标签：</strong></p><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#MarkDown锚点"</span>&gt;</span>MD锚点<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#MarkDown锚点"</span>&gt;</span>MarkDown方式的锚点<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre></div><p><strong>效果如下：</strong></p><p><a href="#MarkDown锚点">MD锚点</a></p><p><a href="#MarkDown锚点">MarkDown方式的锚点</a></p><h4 id="1-2-HTML锚点"><a href="#1-2-HTML锚点" class="headerlink" title="1.2 HTML锚点"></a>1.2 HTML锚点</h4><p>HTML锚点本质上就是一个a链接，格式为：</p><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#目标内容"</span>&gt;</span>内容<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre></div><p><strong>注意：</strong></p><ul><li><code>HTML锚点</code> 的目标锚点只能是 <a href="#标签形式的锚点目标">标签形式的锚点目标</a></li></ul><p><strong>示例：</strong></p><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#html锚点"</span>&gt;</span>HTML方式的锚点<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre></div><p><strong>效果如下：点击下面的锚点</strong></p><p><a href="#html锚点">HTML方式的锚点</a></p><h2 id="2-锚点目标的定义"><a href="#2-锚点目标的定义" class="headerlink" title="2. 锚点目标的定义"></a>2. 锚点目标的定义</h2><p>锚点目标有2种定义方式：MarkDown形式 和 标签形式；</p><h3 id="MarkDown形式的锚点目标"><a href="#MarkDown形式的锚点目标" class="headerlink" title="MarkDown形式的锚点目标"></a>MarkDown形式的锚点目标</h3><p>MarkDown形式的锚点目标的定义其实就是<a href="#MarkDowm实现页面内跳转的方式">标题</a>的定义，即：任何级别的标题可以直接作为锚点目标；</p><div class="hljs"><pre><code class="hljs undefined">标题内容 = 目标内容</code></pre></div><p>所以，类Setext形式 和 类atx形式 的标题都可作为 <code>锚点目标</code> ；</p><p><strong>锚点目标定义的示例：</strong></p><div class="hljs"><pre><code class="hljs bash">这是一个锚点目标====这是一个锚点目标---<span class="hljs-comment"># 这是一个锚点目标</span><span class="hljs-comment">## 这是一个锚点目标</span><span class="hljs-comment">### 这是一个锚点目标</span><span class="hljs-comment">#### 这是一个锚点目标</span><span class="hljs-comment">##### 这是一个锚点目标</span><span class="hljs-comment">###### 这是一个锚点目标</span></code></pre></div><p><strong>注意：</strong></p><ul><li><p><a href="#锚点的定义">锚点</a>的 <code>目标内容</code> 中不能有大家字母和空格，所以如果锚点目标的 <code>目标内容</code> 中有大写字母或空格，则需要在定义锚点中的 <code>目标内容</code> 时，把大写字母改成小写字母，把空格改成 <code>-</code>；</p></li><li><p>锚点</p><p>  的 </p>  <div class="hljs"><pre><code class="hljs plain">目标内容</code></pre></div><p>   中不能含有以下字符：</p><ul><li>半角点(即英文中的句号)<code>.</code></li></ul></li></ul><h3 id="标签形式的锚点目标"><a href="#标签形式的锚点目标" class="headerlink" title="标签形式的锚点目标"></a>标签形式的锚点目标</h3><p>因为MarkDown链接会被转成a标签，并且MarkDown中也可以写标签，所以可以利用HTML的锚点机制直接定义一个带 <code>id</code> 特性的任意标签 或 带 <code>name</code> 特性的 a 标签（注意：在HTML5中，a标签已经不再支持 name 特性）作为锚点目标，然后把MarkDown中的锚点地址的目标内容设置为 <code>id</code> 或 <code>name</code> 特性的值；这样便可以实现页面内跳转；</p><p>这种形式的锚点目标的定义格式为：</p><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">标签名</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"目标内容"</span>&gt;</span>元素内容<span class="hljs-tag">&lt;/<span class="hljs-name">标签名</span>&gt;</span></code></pre></div><p>或</p><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"目标内容"</span>&gt;</span>元素内容<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre></div><p><strong>注意：</strong></p><ul><li>标签形式的锚点目标的id特性值中是不能含有中文字符；</li><li><code>name</code> 特性只能应用在 a 标签上；</li><li>HTML5不支持通过a标签的 <code>name</code> 特性来定义锚点目标；</li></ul><p><strong>示例：</strong></p><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"这是锚点目标"</span>&gt;</span>跳转到这里<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></div><p>或</p><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"这是锚点目标"</span>&gt;</span>跳转到这里<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre></div><h1 id="四-总结"><a href="#四-总结" class="headerlink" title="四. 总结"></a>四. 总结</h1><p>MarkDown中实现页面跳转的方法如下：</p><ol><li>定义锚点目标；锚点目标的定义方式有4种：类Setext形式的标题、类atx形式的标题、带id特性的HTML标签（id特性的值为<code>目标内容</code>）、带name特性的a标签（name特性的值为<code>目标内容</code>）；</li><li>定义锚点；锚点的定义方式有3种：行内式链接、参考式链接、HTML的a链接；</li></ol><p><strong>说明：</strong></p><ul><li>锚点 和 锚点目标 的定义不分先后顺序；</li></ul><p><strong>注意：</strong></p><ul><li><p><a href="#锚点的定义">锚点</a>的 <code>目标内容</code> 中不能有大家字母和空格，所以如果锚点目标的 <code>目标内容</code> 中有大写字母或空格，则需要在定义锚点中的 <code>目标内容</code> 时，把大写字母改成小写字母，把空格改成 <code>-</code>；</p></li><li><p>锚点</p><p>  的 </p>  <div class="hljs"><pre><code class="hljs plain">目标内容</code></pre></div><p>   中不能含有以下字符：</p><ul><li>半角点(即英文中的句号)<code>.</code></li></ul></li><li><p>标签形式的锚点目标的id特性值中是不能含有中文字符；</p></li><li><p><code>name</code> 特性只能应用在 a 标签上；</p></li><li><p>HTML5不支持通过a标签的 <code>name</code> 特性来定义锚点目标；</p></li><li><p><code>HTML锚点</code> 的目标锚点只能是 <a href="#标签形式的锚点目标">标签形式的锚点目标</a></p></li></ul><h1 id="五-示例"><a href="#五-示例" class="headerlink" title="五. 示例"></a>五. 示例</h1><h2 id="示例1"><a href="#示例1" class="headerlink" title="示例1"></a>示例1</h2><p><strong>锚点：</strong></p><div class="hljs"><pre><code class="hljs csharp">[<span class="hljs-meta">跳转到个人简介</span>](<span class="hljs-meta">#个人简介)</span></code></pre></div><p><strong>锚点目标：</strong></p><div class="hljs"><pre><code class="hljs bash"><span class="hljs-comment"># 个人简介</span></code></pre></div><h2 id="示例2"><a href="#示例2" class="headerlink" title="示例2"></a>示例2</h2><p><strong>锚点：</strong></p><div class="hljs"><pre><code class="hljs csharp">[<span class="hljs-meta">跳转到个人简介</span>]: <span class="hljs-meta">#个人简介</span>[<span class="hljs-meta">跳转到个人简介</span>][]</code></pre></div><p><strong>锚点目标：</strong></p><div class="hljs"><pre><code class="hljs undefined">个人简介=====</code></pre></div><h2 id="示例3"><a href="#示例3" class="headerlink" title="示例3"></a>示例3</h2><p><strong>锚点：</strong></p><div class="hljs"><pre><code class="hljs csharp">[<span class="hljs-meta">跳转到个人简介</span>](<span class="hljs-meta">#个人简介)</span></code></pre></div><p><strong>锚点目标：</strong></p><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"个人简介"</span>&gt;</span>这是个人简介<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></code></pre></div><h2 id="示例4"><a href="#示例4" class="headerlink" title="示例4"></a>示例4</h2><p><strong>锚点：</strong></p><div class="hljs"><pre><code class="hljs csharp">[<span class="hljs-meta">跳转到个人简介</span>](<span class="hljs-meta">#个人简介)</span></code></pre></div><p><strong>锚点目标：</strong></p><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"个人简介"</span>&gt;</span>这是个人简介<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre></div><h2 id="示例5"><a href="#示例5" class="headerlink" title="示例5"></a>示例5</h2><p><strong>锚点：</strong></p><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#个人简介"</span>&gt;</span>跳转到个人简介<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre></div><p><strong>锚点目标：</strong></p><div class="hljs"><pre><code class="hljs undefined">个人简介----</code></pre></div><h2 id="示例6"><a href="#示例6" class="headerlink" title="示例6"></a>示例6</h2><p><strong>锚点：</strong></p><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#个人简介"</span>&gt;</span>跳转到个人简介<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre></div><p><strong>锚点目标：</strong></p><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"个人简介"</span>&gt;</span>这是个人简介<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></code></pre></div><h2 id="示例7"><a href="#示例7" class="headerlink" title="示例7"></a>示例7</h2><p><strong>锚点：</strong></p><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#个人简介"</span>&gt;</span>跳转到个人简介<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre></div><p><strong>锚点目标：</strong></p><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"个人简介"</span>&gt;</span>这是个人简介<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>输入密码后登录不上MySQL？</title>
    <link href="/blog/2020/02/09/%E8%BE%93%E5%85%A5%E5%AF%86%E7%A0%81%E5%90%8E%E7%99%BB%E5%BD%95%E4%B8%8D%E4%B8%8AMySQL%EF%BC%9F/"/>
    <url>/blog/2020/02/09/%E8%BE%93%E5%85%A5%E5%AF%86%E7%A0%81%E5%90%8E%E7%99%BB%E5%BD%95%E4%B8%8D%E4%B8%8AMySQL%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<p>昨晚安装好MySQL后，可以登录。但是今天输入密码后，总是没办法登录。</p><p>刚开始我是用DOS窗口的，我检查了命令，命令也没输错啊。</p><p><img src="https://s2.ax1x.com/2020/02/09/1fTjC6.png" srcset="/blog/img/loading.gif" alt=""></p><p>接着转去MySQL Command Line Client试试，一直没反应。</p><p><img src="https://s2.ax1x.com/2020/02/09/1f7rPx.png" srcset="/blog/img/loading.gif" alt=""></p><p>我突然想到“是不是MySQL服务没有启动？”</p><p>果然！看了一下，这个时候MySQL需要手动启动，于是我把MySQL服务设置成<strong>开机自动启动</strong>，以后就省去手动启动这个麻烦。</p><p><img src="https://s2.ax1x.com/2020/02/09/1f7XZj.png" srcset="/blog/img/loading.gif" alt=""></p><p>回到DOS，输入<code>mysql -h localhost -u root -p</code>试试，可以正常登录MySQL了hh  <strong>o(<em>￣▽￣</em>)o</strong></p><p><img src="https://s2.ax1x.com/2020/02/09/1fHVoR.png" srcset="/blog/img/loading.gif" alt=""></p><hr><p>除了上面这种到<strong>【服务】</strong>手动开启MySQL服务的方法外，也可以用<strong>PowerShell(管理员)</strong>来启动。</p><p>输入命令<code>net start mysql</code>，启动MySQL服务。启动成功会在左下角弹窗提示👇</p><p><img src="https://s2.ax1x.com/2020/02/09/1fHo79.png" srcset="/blog/img/loading.gif" alt=""></p><p>一定是要<strong>带有管理员权限的PowerShell</strong>，否者只会是这个样子👇</p><p><img src="https://s2.ax1x.com/2020/02/09/1fbPht.png" srcset="/blog/img/loading.gif" alt=""></p><blockquote><p>输入<code>net start mysql</code>，按回车键，就能启动 MySQL 服务，停止服务的命令为<code>net stop mysql</code>。</p></blockquote><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[工具]文件加密软件</title>
    <link href="/blog/2020/02/09/%E5%B7%A5%E5%85%B7-%E6%96%87%E4%BB%B6%E5%8A%A0%E5%AF%86%E8%BD%AF%E4%BB%B6/"/>
    <url>/blog/2020/02/09/%E5%B7%A5%E5%85%B7-%E6%96%87%E4%BB%B6%E5%8A%A0%E5%AF%86%E8%BD%AF%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h1 id="Folder-locker"><a href="#Folder-locker" class="headerlink" title="Folder-locker"></a>Folder-locker</h1><p>这是一个小巧的文件上锁软件，<strong>没有压缩和加密过程</strong>，方便快捷。</p><h2 id="功能展示"><a href="#功能展示" class="headerlink" title="功能展示"></a>功能展示</h2><p><img src="https://albert-w.github.io/Folder-locker/locker.gif" srcset="/blog/img/loading.gif" alt="img"></p><p>在想加密的文件夹上，右键则可呼出加密面板，输入两次密码确认加密。</p><p>在已加密的文件夹上，右键，输入密码，则取消加密</p><h2 id="项目介绍"><a href="#项目介绍" class="headerlink" title="项目介绍"></a>项目介绍</h2><p>项目分了两个目录：</p><ul><li>DButility 用于通过轻量极数据库SQLite 保存密码。<ul><li>通过Md5算法对密码加密，通过SQL参数防止SQL注入。</li></ul></li><li>folderLocker 用于实现业务逻辑。</li></ul><h2 id="软件使用"><a href="#软件使用" class="headerlink" title="软件使用"></a>软件使用</h2><ul><li>下载软件安装包 <a href="https://github.com/Albert-W/Folder-locker/blob/master/FolderLocker.exe" target="_blank" rel="noopener">Folder Locker.exe</a></li><li>进行安装，建议安装在D盘。</li><li>可以右键使用，也可以打开软件主页面使用。</li></ul><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li>密码保存在本机数据库，没有上传任何服务器。</li><li>删除软件会同时删除数据库，因而删除密码。</li></ul><p>如果忘记密码：</p><p>如果密码遗失，文件被锁，可以通过命令行工具重命名：</p><div class="hljs"><pre><code class="hljs stata"><span class="hljs-keyword">cd</span> C:\Users\91991\Music<span class="hljs-keyword">ren</span> <span class="hljs-string">"Test.{2559a1f2-21d7-11d4-bdaf-00c04f60b9f0}"</span> <span class="hljs-string">"Test1"</span></code></pre></div><p>或者把文件复制出来。</p><div class="hljs"><pre><code class="hljs taggerscript">cd C:<span class="hljs-symbol">\U</span>sers<span class="hljs-symbol">\9</span>1991<span class="hljs-symbol">\M</span>usiccd '.<span class="hljs-symbol">\T</span>est.{2559a1f2-21d7-11d4-bdaf-00c04f60b9f0}<span class="hljs-symbol">\'</span>lsmv .<span class="hljs-symbol">\*</span> ..<span class="hljs-symbol">\T</span>est1\</code></pre></div><p><strong>项目地址：</strong> <a href="https://github.com/Albert-W/Folder-locker" target="_blank" rel="noopener">https://github.com/Albert-W/Folder-locker</a> </p><p><strong>项目展示：</strong> <a href="https://albert-w.github.io/Folder-locker/" target="_blank" rel="noopener">https://albert-w.github.io/Folder-locker/</a></p><a id="more"></a><hr><h1 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h1><p>这是国人开发的一款开源加密小程序，它只有一个功能，就是给文件夹上密码。</p><p>下载后安装，需要注意的是，软件默认安装到D盘，你可以改成其他盘，但不建议安装到C盘，因为可能导致数据库丢失，影响解密；</p><p><img src="https://s2.ax1x.com/2020/02/09/1fyfyV.png" srcset="/blog/img/loading.gif" alt=""></p><p>加密过程也很简单，右键需要加密的文件夹 – Folder locker – 输入密码– lock 即可；</p><p><img src="https://mmbiz.qpic.cn/mmbiz_gif/Ecxs2iaUkqAVLoOZyqETaiaHdBHWDXNOQvkQo84auX1K4Km3lewun6PkxiaVYprsNfbYzHpauaCbcYOByeHtvnFGg/640?wx_fmt=gif&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1" srcset="/blog/img/loading.gif" alt="img"></p><p>加密后文件夹图标会变成锁，无法双击打开，需要解密的话，右键已加密文件夹 –  Folder locker – 输入密码– unlock 即可；</p><p><img src="https://mmbiz.qpic.cn/mmbiz_gif/Ecxs2iaUkqAVLoOZyqETaiaHdBHWDXNOQvzHsKGtF2QZko01ria7rticuSF0USbugHey0neP8juaLjF73zUfzPbPJA/640?wx_fmt=gif&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1" srcset="/blog/img/loading.gif" alt="img"></p><p>整个过程没有任何数据上传，你的密码会通过Md5算法加密，并保存在本机数据库，卸载软件会同时删除数据库，导致密码丢失。</p><p>这个小程序原理非常简单，就是利用 Windows 的注册表修改了文件夹属性，使其不能直接已文件夹的形式打开，就像「上帝模式」一样，小程序并没有对文件夹内的文件做任何修改，没有压缩和加密过程，所以速度非常快。</p><p>但也正因为其简单，知道原理的话不需要程序也能解密。</p><p>忘记密码的解密方法：</p><p><img src="https://mmbiz.qpic.cn/mmbiz_gif/Ecxs2iaUkqAVLoOZyqETaiaHdBHWDXNOQv2cOTd04ms28wARznDX7x9HnicoMqaicjIQFGK4E7SkjRhLn8LOe9kSYA/640?wx_fmt=gif&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1" srcset="/blog/img/loading.gif" alt="img"></p><p>以上就是使用这个小程序所有的方法，它的安全系数不高，不适用来加密非常重要的机密文件，但保护普通用户的小秘密应该是搓搓有余的。</p><p>目前这款软件好像在 Windows 2004 版本上失效了。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>登录MySQL</title>
    <link href="/blog/2020/02/08/%E7%99%BB%E5%BD%95MySQL/"/>
    <url>/blog/2020/02/08/%E7%99%BB%E5%BD%95MySQL/</url>
    
    <content type="html"><![CDATA[<p>安装好MySQL后，默认启动服务，这时候开始尝试登录MySQL数据库。</p><p>有两种登录方式：</p><ul><li>Power Shell 或 CMD（DOS窗口）</li><li>命令行客户端（MySQL Command Line Client）【安装软件时，一般会安装的】</li></ul><h2 id="Power-Shell"><a href="#Power-Shell" class="headerlink" title="Power Shell"></a>Power Shell</h2><ol><li>启动 Power Shell 。</li><li>输入命令<code>cd C:\Program Files\MySQL\MySQL Server 8.0\bin</code>（cd+空格+安装目录/bin），回车。</li><li>输入登录命令，回车。登录命令有4中，选其一即可：</li></ol><div class="hljs"><pre><code class="hljs mysql">#第一种 服务器主机地址+不接密码mysql -h localhost -u root -p#第二种 服务器主机地址+密码mysql -h localhost -u root -proot#第三种 省略服务器主机地址+不接密码，默认localhostmysql -u root -p#第四种 省略服务器主机地址+密码，默认localhostmysql -u root -proot</code></pre></div><blockquote><blockquote><p>提示：mysql 为登录命令，-h 后面的参数是服务器的主机地址，在这里客户端和服务器在同一台机器上，所以输入 localhost 或者 IP 地址；-u 后面跟登录数据库的用户名称，在这里为 root；-p 后面是用户登录密码。</p></blockquote><p>在 DOS 窗口下运行该命令后，系统会提示输入密码。密码输入正确以后，即可登录到 MySQL 数据库。</p><p>可以在 mysql 命令中直接加上密码，该命令为 mysql -h localhost -u root -proot。这里的 -p 后面的 root 就是密码。此处<strong>特别注意 -p 和密码之间没有空格</strong>。如果出现空格，系统将不会把后面的字符串当成密码来对待。</p></blockquote><ol start="4"><li>系统提示输入密码。（若选用第二/四种方式进行登录，则跳过本步骤）</li><li>成功登录到MySQL数据库。登录成功后进入 MySQL 初始界面，会出现“Welcome to the MySQL monitor”的欢迎语，如下图所示。</li></ol><p><fancybox><img src="https://s2.ax1x.com/2020/02/08/1Whw0P.png" srcset="/blog/img/loading.gif" alt=""></fancybox></p><blockquote><p>登录成功后进入 MySQL 初始界面，会出现“Welcome to the MySQL monitor”的欢迎语，然后下面还有一些说明性的语句，如图所示。</p><p>这些说明性语句介绍如下：</p><ul><li>Commands end with; or\g：说明 mysql 命令行下的命令是以分号（;）或“\g”来结束的，遇到这个结束符就开始执行命令。</li><li>Your MySQL connection id is 3：id 表示 MySQL 数据库的连接次数。</li><li>Server version: 5. 7.29-log MySQL Community Server（GPL）：Server version 后面说明数据库的版本，这个版本为 5.7.29。Community 表示该版本是社区版。</li><li>Type ‘help;’ or ‘\h’ for help：表示输入”help;“或者”\h“可以看到帮助信息。</li><li>Type ‘\c’ to clear the current input statement：表示遇到”\c“就清除前面的命令。</li></ul><blockquote><p>提示：当窗口中出现如上图所示的说明信息，命令提示符变为“<strong>mysql&gt;</strong>”时，表明已经成功登录 MySQL 服务器，可以开始对数据库进行操作了。 </p></blockquote></blockquote><ol start="4"><li>输入命令<code>exit</code>，即可退出MySQL。</li></ol><h2 id="MySQL-Command-Line-Client"><a href="#MySQL-Command-Line-Client" class="headerlink" title="MySQL Command Line Client"></a>MySQL Command Line Client</h2><p>打开 MySQL Command Line Client 进入提示输入密码的界面，如图所示。</p><p><img src="https://s2.ax1x.com/2020/02/08/1WhohF.png" srcset="/blog/img/loading.gif" alt=""></p><blockquote><p>输入正确的密码后，登录到 MySQL 软件。<strong>如果以这种方式登录 MySQL，需要保证 MySQL 服务处于启动状态。</strong></p></blockquote><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>博客中的icon</title>
    <link href="/blog/2020/02/08/%E5%8D%9A%E5%AE%A2%E4%B8%AD%E7%9A%84icon/"/>
    <url>/blog/2020/02/08/%E5%8D%9A%E5%AE%A2%E4%B8%AD%E7%9A%84icon/</url>
    
    <content type="html"><![CDATA[<p>在主题的配置文件中的 icon 是 <code>fontawesome</code> 图标名，你要显示什么图标，去 <a href="https://fontawesome.com/icons?d=gallery&amp;m=free" target="_blank" rel="noopener">fontawesome.com</a> 找免费版的就可以了。</p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL基础教学</title>
    <link href="/blog/2020/02/08/MySQL%E5%9F%BA%E7%A1%80%E6%95%99%E5%AD%A6/"/>
    <url>/blog/2020/02/08/MySQL%E5%9F%BA%E7%A1%80%E6%95%99%E5%AD%A6/</url>
    
    <content type="html"><![CDATA[<p>两个学习MySQL基础的网站：</p><ul><li><a href="https://www.runoob.com/mysql/mysql-tutorial.html" target="_blank" rel="noopener">C语言中文网</a></li><li><a href="http://c.biancheng.net/mysql/" target="_blank" rel="noopener">菜鸟教程</a></li></ul><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[转]MySQL安装</title>
    <link href="/blog/2020/02/08/%E8%BD%AC-MySQL%E5%AE%89%E8%A3%85/"/>
    <url>/blog/2020/02/08/%E8%BD%AC-MySQL%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<p>转载一份非常详细的【MySQL】的安装教程。</p><a id="more"></a><ol><li>进入官网找到自己所需的安装包：<a href="https://dev.mysql.com/" target="_blank" rel="noopener">https://dev.mysql.com/</a>  ，路径：DOWNLOAD–&gt;MYSQL Community Edition(GRL)–&gt;MYSQL on Windows (Installer &amp; Tool) </li></ol><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722225513168-99169810.png" srcset="/blog/img/loading.gif" alt="img"></p><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722225525340-1635922988.png" srcset="/blog/img/loading.gif" alt="img"></p><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722225535090-1925937407.png" srcset="/blog/img/loading.gif" alt="img"></p><ol start="2"><li><p>找到所需的安装包:<br> 这里提供了直链下载【MySQL-5.7.20】：<a href="https://downloads.mysql.com/archives/get/p/25/file/mysql-installer-community-5.7.20.0.msi" target="_blank" rel="noopener">https://downloads.mysql.com/archives/get/p/25/file/mysql-installer-community-5.7.20.0.msi</a></p><p> <img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722225609184-438065502.png" srcset="/blog/img/loading.gif" alt="img"></p></li><li><p>点击download。这里选择的是安装版（mysql -install-community）</p></li></ol><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722225738356-88388521.png" srcset="/blog/img/loading.gif" alt="img"></p><ol start="4"><li>选择不登陆下载。</li></ol><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722225950840-2044210671.png" srcset="/blog/img/loading.gif" alt="img"></p><ol start="5"><li>双击运行下载好的mysql-installer-community-5.7.19.0.msi，程序运行需要一些时间，请等待一下。</li></ol><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722230026215-1797155710.png" srcset="/blog/img/loading.gif" alt="img"></p><ol start="6"><li>运行成功之后，进入欢迎的界面.选择我同意协议，不然无法进行下一步。</li></ol><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722230046043-978659071.png" srcset="/blog/img/loading.gif" alt="img"></p><ol start="7"><li>进入类型选择页面，本人需要mysql云服务就选择了developer default（7.1是默认安装的步骤），如果只想安装mysql server的就选择custom模式（7.2步骤是选择自己需要的服务器类型，所选择的用于做一些数据分析）</li></ol><div class="hljs"><pre><code class="hljs routeros">developer default（开发者默认）：安装mysql开发所需的所有产品server only（服务器）：只安装mysql服务器产品client only（客户端）：只安装没有服务器的mysql客户端产品full（完全）：安装所有包含的mysql产品和功能custom（手动）：手动选择系统上应安装的产品</code></pre></div><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722230201246-220989429.png" srcset="/blog/img/loading.gif" alt="img"></p><ul><li>7.1 开发者默认模式检测以下程序会安装不成功，点击下一步进入下一个安装流程—&gt;跳到第八步。</li></ul><p>check requirements：以下产品的请求失败，安装程序将自动尝试解决其中一些问题。标记为手动的要求无法自动解决。单击这些项目以尝试手动恢复。</p><p> <img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722230232793-1759462371.png" srcset="/blog/img/loading.gif" alt="img"></p><p>检测到不可安装的程序说明：</p><p>Visual Studio：是一款代码编辑工具（可编写C#、Visual Basic、C++、TypeScript、F# ），如果你安装的话就安装要求去安装Visual Studio version：2012.2013.2015.2017其中一个版本</p><p>Connector/pyton 3.4：电脑有python3.6了就没选择3.4版本的。如果你没安装有python可按要求去安装一些内容。</p><ul><li><p>7.2 选择mysql server（服务） 5.7.19 x64</p><p> 选择mysql workbench(mysql 的工作薄) 6.3.9 x64</p><p> 选择mysql notiyier(通知) 1.1.7 x86(因为这里只有一个选择所以选择了86)点击下一步进入下一个安装流程—&gt;跳到第九步。</p></li></ul><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722230314340-1501335191.png" srcset="/blog/img/loading.gif" alt="img"></p><ol start="8"><li>当我们点击下一步的时候安装程序出现了提示：（一个或者移动产品要求没有得到满足，那些符合要求的产品将不会安装/升级。你想要继续吗），这里我选择的是：YES</li></ol><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722230439528-92431868.png" srcset="/blog/img/loading.gif" alt="img"></p><ol start="9"><li>在安装所选界面能看到我们接下来所需要安装的程序，点击execute</li></ol><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722230506262-176699446.png" srcset="/blog/img/loading.gif" alt="img"></p><ol start="10"><li>安装程序进度界面，安装需要一些时间。点击dide tails能看到安装日志</li></ol><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722230524700-2060141633.png" srcset="/blog/img/loading.gif" alt="img"></p><ol start="11"><li>程序安装完成之后，点击next</li></ol><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722230808200-494027333.png" srcset="/blog/img/loading.gif" alt="img"></p><ol start="12"><li>在product configutration（产品配置）页面能看到需要配置的程序，点击next（页面英语介绍：现在我们将逐一介绍以下产品的配置向导。您可以随时取消，如果您希望离开此向导，而不必配置所有产品）</li></ol><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722230838934-1132653366.png" srcset="/blog/img/loading.gif" alt="img"></p><ol start="13"><li>先配置mysql server的类型以及网络：type and networking（类型和网络），这里有两种mysql server类型，选择第一种类型点击next。</li></ol><div class="hljs"><pre><code class="hljs routeros">有两种类型简单介绍1.standalone mysql server/classic mysql replication：独立的mysql服务器/经典的mysql复制choose this option <span class="hljs-keyword">if</span> you want <span class="hljs-keyword">to</span> <span class="hljs-builtin-name">run</span> the mysql<span class="hljs-built_in"> server </span>either standalone with the opportunity <span class="hljs-keyword">to</span> later configure classic mysql replication：选择这个选项，如果你想运行mysql服务器是独立的，有机会以后配置经典的mysql复制2. innodb cluster sandbox thst setup(<span class="hljs-keyword">for</span> testing only)：innodb集群沙箱thst设置（仅用于测试）</code></pre></div><p> <img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722230918575-127114164.png" srcset="/blog/img/loading.gif" alt="img"></p><ol start="14"><li>设置服务器配置类型以及连接端口：继续next</li></ol><div class="hljs"><pre><code class="hljs routeros">Config Type:选择Development Machine，用于小型以及学习所用足够了。Port number：输入3306，也可以输入其他最好是3306-3309之间。</code></pre></div><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722231058356-1269244144.png" srcset="/blog/img/loading.gif" alt="img"></p><ol start="15"><li>配置root的密码（该密码要记住），系统提示这密码虚弱</li></ol><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722231209903-956653442.png" srcset="/blog/img/loading.gif" alt="img"></p><ol start="16"><li><em>添加其他管理员，点击add user 输入账号密码点击ok（如果添加的管理员只允许在本地登录就将host改成</em>local），回到界面之后点击next</li></ol><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722231228387-1590560639.png" srcset="/blog/img/loading.gif" alt="img"></p><ol start="17"><li>配置mysql在windows系统中的名字，是否选择开机启动mysql服务，其它的没进行修改，点击“Next”. </li></ol><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722231608825-2099636815.png" srcset="/blog/img/loading.gif" alt="img"></p><ol start="18"><li>配置插件和扩展页面没进行修改直接下一步：</li></ol><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722231638887-180558399.png" srcset="/blog/img/loading.gif" alt="img"></p><ol start="19"><li>Mysql server :apply configuration（应用配置页面），选择execute进行安装配置</li></ol><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722231654278-649027984.png" srcset="/blog/img/loading.gif" alt="img"></p><ol start="20"><li>mysql server应用配置的log，选择finish</li></ol><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722231714809-1553936235.png" srcset="/blog/img/loading.gif" alt="img"></p><ol start="21"><li>安装程序又回到了product configutration（产品配置）页面，此时我们看到mysql server安装成功的显示，继续下一步：</li></ol><p><em><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722231738825-1692782858.png" srcset="/blog/img/loading.gif" alt="img"></em></p><ol start="22"><li>配置mysql router：勾选configure mysql route for innoDB cluster之后输入密码。（如果不想输入密码可直接点击点一下）点击下一步</li></ol><p><em><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722231755762-1299837152.png" srcset="/blog/img/loading.gif" alt="img"></em></p><ol start="23"><li>Mysql router :apply configuration（应用配置页面）点击execute,</li></ol><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722231811528-357673493.png" srcset="/blog/img/loading.gif" alt="img"></p><ol start="24"><li>安装完成之后点击选择finish</li></ol><p><em><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722231826746-634086390.png" srcset="/blog/img/loading.gif" alt="img"></em></p><ol start="25"><li>检测root密码</li></ol><div class="hljs"><pre><code class="hljs plain"></code></pre></div><p> <img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722231844528-1242732523.png" srcset="/blog/img/loading.gif" alt="img"></p><ol start="26"><li>安装一些server，老规矩点击execute，完成之后点击finish</li></ol><p><em><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722231902950-256599456.png" srcset="/blog/img/loading.gif" alt="img"></em></p><ol start="27"><li>程序回到产品配置页面。继续下一步：</li></ol><ol start="28"><li>安装程序完成界面。</li></ol><p><em><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722231933637-179722774.png" srcset="/blog/img/loading.gif" alt="img"></em></p><ol start="29"><li>双击运行之前下载的安装包，能看到我们所安装的产品。</li></ol><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722232012418-1876643408.png" srcset="/blog/img/loading.gif" alt="img"></p><ol start="30"><li>配置mysql环境变量</li></ol><div class="hljs"><pre><code class="hljs routeros">上面安装的是时候我们看到mysql默认安装路径是：C:\Program Files\MySQL\MySQL<span class="hljs-built_in"> Server </span>5.7我的电脑右键—&gt;属性à高级系统设置à环境变量à新建MYSQL_HOME,将安装目录输入：</code></pre></div><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722232031684-1843508.png" srcset="/blog/img/loading.gif" alt="img"></p><div class="hljs"><pre><code class="hljs dos">找到<span class="hljs-built_in">path</span>编辑：输入<span class="hljs-variable">%MYSQL_HOME%</span>\bin</code></pre></div><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722232044090-1304683536.png" srcset="/blog/img/loading.gif" alt="img"></p><div class="hljs"><pre><code class="hljs dockerfile">打开<span class="hljs-keyword">cmd</span><span class="bash">输入mysql –u root –p</span>输入root的密码</code></pre></div><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722232055731-2127042770.png" srcset="/blog/img/loading.gif" alt="img"></p><hr><p><em>原文链接：<a href="https://www.cnblogs.com/xiaodingdong/p/7223245.html" target="_blank" rel="noopener">https://www.cnblogs.com/xiaodingdong/p/7223245.html</a></em></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>元宵团圆饭</title>
    <link href="/blog/2020/02/08/%E5%85%83%E5%AE%B5%E5%9B%A2%E5%9C%86%E9%A5%AD/"/>
    <url>/blog/2020/02/08/%E5%85%83%E5%AE%B5%E5%9B%A2%E5%9C%86%E9%A5%AD/</url>
    
    <content type="html"><![CDATA[<p>🌸于我们，这是妈走后的第一个除夕、春节。</p><p>💓“老妈，我们都在等你回来。就差你了，快和我们一起来吃团圆饭啦！”</p><fancybox></fancybox><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>第一个元宵</title>
    <link href="/blog/2020/02/08/%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%85%83%E5%AE%B5/"/>
    <url>/blog/2020/02/08/%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%85%83%E5%AE%B5/</url>
    
    <content type="html"><![CDATA[<p>🌸于我们，这是妈走后的第一个元宵。</p><p>🎈这次没有汤圆……</p><p>💓“老妈，我们都在等你回来。就差你了，快和我们一起来吃团圆饭啦！”</p><p>👍附上老爸的新作(暂时想不出名字来hh，反正好吃hh)</p><fancybox><img src="https://s2.ax1x.com/2020/02/08/1WiCfe.png" srcset="/blog/img/loading.gif" style="zoom:67%;"><img src="https://s2.ax1x.com/2020/02/08/1WiFld.png" srcset="/blog/img/loading.gif" alt="老爸的新作" style="zoom:67%;"></fancybox><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[转]jsdelivr的使用</title>
    <link href="/blog/2020/02/08/%E8%BD%AC-jsdelivr%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <url>/blog/2020/02/08/%E8%BD%AC-jsdelivr%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p>本文链接：<a href="https://blog.csdn.net/qq_36910987/article/details/89562291" target="_blank" rel="noopener">https://blog.csdn.net/qq_36910987/article/details/89562291</a></p><a id="more"></a><div class="hljs"><pre><code class="hljs java">jsdelivr https:<span class="hljs-comment">//www.jsdelivr.com/</span>下面就以举例子的方式说明我是用 jsdelivr 来访问 github的资源，做博客来着我的github  https:<span class="hljs-comment">//github.com/yuDuChen/yuduchen</span>下面直接说怎么用jsdelivr，就不提如何创建github了首先需要创建 releases</code></pre></div><p><img src="https://img-blog.csdnimg.cn/20190426170728348.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2OTEwOTg3,size_16,color_FFFFFF,t_70" srcset="/blog/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190426170744905.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2OTEwOTg3,size_16,color_FFFFFF,t_70" srcset="/blog/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190426170753634.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2OTEwOTg3,size_16,color_FFFFFF,t_70" srcset="/blog/img/loading.gif" alt="在这里插入图片描述"></p><div class="hljs"><pre><code class="hljs java">创建完,随便进入到一个文件,注意地址名<span class="hljs-number">1</span></code></pre></div><p><img src="https://img-blog.csdnimg.cn/20190426171039798.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2OTEwOTg3,size_16,color_FFFFFF,t_70" srcset="/blog/img/loading.gif" alt="在这里插入图片描述"></p><div class="hljs"><pre><code class="hljs java">https:<span class="hljs-comment">//github.com/yuDuChen/yuduchen/blob/v1.5.6/layui/layui.js </span>这个地址用jsdelivr来访问https:<span class="hljs-comment">//cdn.jsdelivr.net/gh/yuDuChen/yuduchen@v1.5.6/layui/layui.js </span>对比一下就发现怎么用了吧注* 不使用jsdelivr直接引用github的文件  content-type 是 text/plain  页面无法解析</code></pre></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>博客</tag>
      
      <tag>jQuery</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>蓝桥杯-基础练习-01字串</title>
    <link href="/blog/2020/02/07/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0-01%E5%AD%97%E4%B8%B2/"/>
    <url>/blog/2020/02/07/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0-01%E5%AD%97%E4%B8%B2/</url>
    
    <content type="html"><![CDATA[<br><p>在刷蓝桥杯试题时候，有一道很意思又有丶烧脑的题目👇</p><hr><h1 id="资源限制"><a href="#资源限制" class="headerlink" title="资源限制"></a>资源限制</h1><p>时间限制：1.0s  内存限制：256.0MB</p><h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>对于长度为5位的一个01串，每一位都可能是0或1，一共有32种可能。它们的前几个是：</p><p>00000</p><p>00001</p><p>00010</p><p>00011</p><p>00100</p><p>请按从小到大的顺序输出这32种01串。</p><h1 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h1><p>本试题没有输入。</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出32行，按从小到大的顺序每行一个长度为5的01串。</p><h1 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h1><p>00000<br>00001<br>00010<br>00011<br>&lt;以下部分省略&gt;</p><a id="more"></a><h1 id="提交代码（Java）"><a href="#提交代码（Java）" class="headerlink" title="提交代码（Java）"></a>提交代码（Java）</h1><h2 id="暴力输出"><a href="#暴力输出" class="headerlink" title="暴力输出"></a>暴力输出</h2><p>刚开始想不出什么好办法，就<strong>直接把32个都写出来</strong>。抱着玩的心态，试试<strong>暴力输出</strong>看看系统给不给过，但是没想到，还真给我<strong>过了</strong>hhh</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> </span>{<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{System.out.println(<span class="hljs-string">"00000"</span>);System.out.println(<span class="hljs-string">"00001"</span>);System.out.println(<span class="hljs-string">"00010"</span>);System.out.println(<span class="hljs-string">"00011"</span>);System.out.println(<span class="hljs-string">"00100"</span>);System.out.println(<span class="hljs-string">"00101"</span>);System.out.println(<span class="hljs-string">"00110"</span>);System.out.println(<span class="hljs-string">"00111"</span>);System.out.println(<span class="hljs-string">"01000"</span>);System.out.println(<span class="hljs-string">"01001"</span>);System.out.println(<span class="hljs-string">"01010"</span>);System.out.println(<span class="hljs-string">"01011"</span>);System.out.println(<span class="hljs-string">"01100"</span>);System.out.println(<span class="hljs-string">"01101"</span>);System.out.println(<span class="hljs-string">"01110"</span>);System.out.println(<span class="hljs-string">"01111"</span>);System.out.println(<span class="hljs-string">"10000"</span>);System.out.println(<span class="hljs-string">"10001"</span>);System.out.println(<span class="hljs-string">"10010"</span>);System.out.println(<span class="hljs-string">"10011"</span>);System.out.println(<span class="hljs-string">"10100"</span>);System.out.println(<span class="hljs-string">"10101"</span>);System.out.println(<span class="hljs-string">"10110"</span>);System.out.println(<span class="hljs-string">"10111"</span>);System.out.println(<span class="hljs-string">"11000"</span>);System.out.println(<span class="hljs-string">"11001"</span>);System.out.println(<span class="hljs-string">"11010"</span>);System.out.println(<span class="hljs-string">"11011"</span>);System.out.println(<span class="hljs-string">"11100"</span>);System.out.println(<span class="hljs-string">"11101"</span>);System.out.println(<span class="hljs-string">"11110"</span>);System.out.println(<span class="hljs-string">"11111"</span>);}}</code></pre></div><p><img src="https://s2.ax1x.com/2020/02/07/12u7RK.png" srcset="/blog/img/loading.gif" alt=""></p><h2 id="五层循环"><a href="#五层循环" class="headerlink" title="五层循环"></a>五层循环</h2><p>这是我想到的第二个方法，就类似说的<strong>“逢二进一”</strong>吧</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> </span>{<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{<span class="hljs-keyword">int</span> a,b,c,d,e;<span class="hljs-keyword">for</span>(a=<span class="hljs-number">0</span>;a&lt;<span class="hljs-number">2</span>;++a)  <span class="hljs-keyword">for</span>(b=<span class="hljs-number">0</span>;b&lt;<span class="hljs-number">2</span>;++b)<span class="hljs-keyword">for</span>(c=<span class="hljs-number">0</span>;c&lt;<span class="hljs-number">2</span>;++c)  <span class="hljs-keyword">for</span>(d=<span class="hljs-number">0</span>;d&lt;<span class="hljs-number">2</span>;++d)<span class="hljs-keyword">for</span>(e=<span class="hljs-number">0</span>;e&lt;<span class="hljs-number">2</span>;++e)                    System.out.printf(<span class="hljs-string">"%d%d%d%d%d\n"</span>,a,b,c,d,e);}}</code></pre></div><p><img src="https://s2.ax1x.com/2020/02/07/12MN7j.png" srcset="/blog/img/loading.gif" alt=""></p><hr><p>以下两种方法均来自网络。</p><hr><h2 id="十进制转换二进制"><a href="#十进制转换二进制" class="headerlink" title="十进制转换二进制"></a>十进制转换二进制</h2><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> </span>{<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">32</span>;i++){<span class="hljs-keyword">int</span> a,b,c,d,e;a = i%<span class="hljs-number">32</span>/<span class="hljs-number">16</span>;b = i%<span class="hljs-number">16</span>/<span class="hljs-number">8</span>;c = i%<span class="hljs-number">8</span>/<span class="hljs-number">4</span>;d = i%<span class="hljs-number">4</span>/<span class="hljs-number">2</span>;e = i%<span class="hljs-number">2</span>;System.out.printf(<span class="hljs-string">"%d%d%d%d%d\n"</span>,a,b,c,d,e);    }}}</code></pre></div><h2 id="以下标求1"><a href="#以下标求1" class="headerlink" title="以下标求1"></a>以下标求1</h2><p>一共是32个串，给每个串设置0-31的下标。<strong>根据下标，寻找对应串中1出现的位置。</strong>👇</p><blockquote><p>比如，下标3表示的串是“00011”，利用while循环可以找到出现1的下标是1、2</p></blockquote><div class="hljs"><pre><code class="hljs Java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> </span>{<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;=<span class="hljs-number">31</span>;i++){<span class="hljs-keyword">int</span> a[]= <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[<span class="hljs-number">5</span>];<span class="hljs-comment">// 默认初始化值为0</span><span class="hljs-comment">//或 int a[]= {0,0,0,0,0};</span><span class="hljs-keyword">int</span> temp=i;<span class="hljs-keyword">int</span> index=<span class="hljs-number">0</span>;<span class="hljs-keyword">while</span>(temp!=<span class="hljs-number">0</span>){a[index]=temp%<span class="hljs-number">2</span>;index++;temp/=<span class="hljs-number">2</span>;}<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> idx=<span class="hljs-number">4</span>;idx&gt;=<span class="hljs-number">0</span>;idx--)System.out.print(a[idx]);System.out.println();}}}</code></pre></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>Java</tag>
      
      <tag>蓝桥杯</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用fancybox标签实现图片浏览器</title>
    <link href="/blog/2020/02/07/%E4%BD%BF%E7%94%A8-fancybox-%E6%A0%87%E7%AD%BE%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    <url>/blog/2020/02/07/%E4%BD%BF%E7%94%A8-fancybox-%E6%A0%87%E7%AD%BE%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E6%B5%8F%E8%A7%88%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<p>使用<code>&lt;fancybox&gt;&lt;/fancybox&gt;</code>标签实现图片浏览器</p><ul><li>单张图，只提供<strong>放大</strong>🔍<strong>关闭❌</strong>两个按钮，见黄色标记👇</li></ul><fancybox><p><img src="https://s2.ax1x.com/2020/02/07/12ZifU.png" srcset="/blog/img/loading.gif" alt=""></p></fancybox><ul><li>多张图，可<strong>幻灯片播放</strong>，见红色标记👇</li></ul><p><fancybox><img src="https://s2.ax1x.com/2020/02/07/12AON8.png" srcset="/blog/img/loading.gif" alt=""></fancybox></p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>蓝桥杯-入门训练-Fibonacci数列</title>
    <link href="/blog/2020/02/07/%E8%93%9D%E6%A1%A5%E6%9D%AF%E2%80%94-%E5%85%A5%E9%97%A8%E8%AE%AD%E7%BB%83-Fibonacci%E6%95%B0%E5%88%97/"/>
    <url>/blog/2020/02/07/%E8%93%9D%E6%A1%A5%E6%9D%AF%E2%80%94-%E5%85%A5%E9%97%A8%E8%AE%AD%E7%BB%83-Fibonacci%E6%95%B0%E5%88%97/</url>
    
    <content type="html"><![CDATA[<h2 id="资源限制"><a href="#资源限制" class="headerlink" title="资源限制"></a>资源限制</h2><p>时间限制：1.0s  内存限制：256.0MB</p><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>Fibonacci数列的递推公式为：Fn=Fn-1+Fn-2，其中F1=F2=1。</p><p>当n比较大时，Fn也非常大，现在我们想知道，Fn除以10007的余数是多少。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>输入包含一个整数n。</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出一行，包含一个整数，表示Fn除以10007的余数。</p><blockquote><p>说明：在本题中，答案是要求Fn除以10007的余数，因此我们只要能算出这个余数即可，而不需要先计算出Fn的准确值，再将计算的结果除以10007取余数，直接计算余数往往比先算出原数再取余简单。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><p>10</p><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><p>55</p><h2 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h2><p>22</p><h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><p>7704</p><h2 id="数据规模与约定"><a href="#数据规模与约定" class="headerlink" title="数据规模与约定"></a>数据规模与约定</h2><p>1 &lt;= n &lt;= 1,000,000。</p><a id="more"></a><h2 id="提交代码（Java）"><a href="#提交代码（Java）" class="headerlink" title="提交代码（Java）"></a>提交代码（Java）</h2><h3 id="第一次提交"><a href="#第一次提交" class="headerlink" title="第一次提交"></a>第一次提交</h3><p>第一次时候，我想使用<strong>递归</strong>的方式👇</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.Scanner;<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> </span>{<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{Scanner sc = <span class="hljs-keyword">new</span> Scanner(System.in);<span class="hljs-keyword">int</span> n = sc.nextInt();System.out.println(F(n)%<span class="hljs-number">10007</span>);sc.close();}<span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">F</span><span class="hljs-params">(<span class="hljs-keyword">int</span> n)</span> </span>{<span class="hljs-keyword">if</span>(n==<span class="hljs-number">1</span>||n==<span class="hljs-number">2</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<span class="hljs-keyword">else</span><span class="hljs-keyword">return</span> F(n-<span class="hljs-number">1</span>)+F(n-<span class="hljs-number">2</span>);}}</code></pre></div><p>提交后，系统提示【<strong>运行超时</strong>】👇</p><p><fancybox><img src="https://i.loli.net/2020/02/07/d6o8x2OnvDZ7luL.png" srcset="/blog/img/loading.gif" alt=""></fancybox></p><h3 id="第二次提交"><a href="#第二次提交" class="headerlink" title="第二次提交"></a>第二次提交</h3><p>使用递归来处理，比较耗时。</p><p>而且这次我按照题目的提示【<strong>说明：在本题中，答案是要求Fn除以10007的余数，因此我们只要能算出这个余数即可，而不需要先计算出Fn的准确值，再将计算的结果除以10007取余数，直接计算余数往往比先算出原数再取余简单。</strong>】来处理，就改用数组来实现👇</p><div class="hljs"><pre><code class="hljs Java"><span class="hljs-keyword">import</span> java.util.Scanner;<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> </span>{<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{Scanner sc = <span class="hljs-keyword">new</span> Scanner(System.in);<span class="hljs-keyword">int</span> n = sc.nextInt();<span class="hljs-keyword">int</span> F[] = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[n+<span class="hljs-number">2</span>];F[<span class="hljs-number">1</span>] = F[<span class="hljs-number">2</span>] = <span class="hljs-number">1</span>;<span class="hljs-keyword">if</span>(n &gt; <span class="hljs-number">2</span>) {<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">3</span>; i&lt;=n; i++)<span class="hljs-comment">// F[i]直接计算到求余数的值，即保存余数</span>F[i]=(F[i-<span class="hljs-number">1</span>]+F[i-<span class="hljs-number">2</span>])%<span class="hljs-number">10007</span>;}<span class="hljs-comment">//F[n]即所求值</span>System.out.println(F[n]);sc.close();}}</code></pre></div><p>这次直接通过👇</p><fancybox><p><img src="https://s2.ax1x.com/2020/02/07/12F55D.png" srcset="/blog/img/loading.gif" alt=""></p></fancybox><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>Java</tag>
      
      <tag>蓝桥杯</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java之printf格式化输出的例子</title>
    <link href="/blog/2020/02/07/Java%E4%B9%8Bprintf%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BE%93%E5%87%BA%E7%9A%84%E4%BE%8B%E5%AD%90/"/>
    <url>/blog/2020/02/07/Java%E4%B9%8Bprintf%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BE%93%E5%87%BA%E7%9A%84%E4%BE%8B%E5%AD%90/</url>
    
    <content type="html"><![CDATA[<p>转载自<a href="https://www.runoob.com/w3cnote/java-printf-formate-demo.html" target="_blank" rel="noopener">菜鸟教程</a></p><a id="more"></a><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.Date; <span class="hljs-comment">/**</span><span class="hljs-comment"> * 使用printf输出</span><span class="hljs-comment"> */</span><span class="hljs-comment">/**关键技术点</span><span class="hljs-comment"> * 使用java.io.PrintStream的printf方法实现C风格的输出</span><span class="hljs-comment"> * printf 方法的第一个参数为输出的格式,第二个参数是可变长的,表示待输出的数据对象</span><span class="hljs-comment"> */</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Printf</span> </span>{        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{              <span class="hljs-comment">/*** 输出字符串 ***/</span>              <span class="hljs-comment">// %s表示输出字符串，也就是将后面的字符串替换模式中的%s</span>              System.out.printf(<span class="hljs-string">"%s"</span>, <span class="hljs-keyword">new</span> Integer(<span class="hljs-number">1212</span>));              <span class="hljs-comment">// %n表示换行</span>              System.out.printf(<span class="hljs-string">"%s%n"</span>, <span class="hljs-string">"end line"</span>);              <span class="hljs-comment">// 还可以支持多个参数</span>              System.out.printf(<span class="hljs-string">"%s = %s%n"</span>, <span class="hljs-string">"Name"</span>, <span class="hljs-string">"Zhangsan"</span>);              <span class="hljs-comment">// %S将字符串以大写形式输出</span>              System.out.printf(<span class="hljs-string">"%S = %s%n"</span>, <span class="hljs-string">"Name"</span>, <span class="hljs-string">"Zhangsan"</span>);              <span class="hljs-comment">// 支持多个参数时，可以在%s之间插入变量编号，1$表示第一个字符串，3$表示第3个字符串</span>              System.out.printf(<span class="hljs-string">"%1$s = %3$s %2$s%n"</span>, <span class="hljs-string">"Name"</span>, <span class="hljs-string">"san"</span>, <span class="hljs-string">"Zhang"</span>);                           <span class="hljs-comment">/*** 输出boolean类型 ***/</span>              System.out.printf(<span class="hljs-string">"true = %b; false = "</span>, <span class="hljs-keyword">true</span>);              System.out.printf(<span class="hljs-string">"%b%n"</span>, <span class="hljs-keyword">false</span>);               <span class="hljs-comment">/*** 输出整数类型***/</span>              Integer iObj = <span class="hljs-number">342</span>;              <span class="hljs-comment">// %d表示将整数格式化为10进制整数</span>              System.out.printf(<span class="hljs-string">"%d; %d; %d%n"</span>, -<span class="hljs-number">500</span>, <span class="hljs-number">2343L</span>, iObj);              <span class="hljs-comment">// %o表示将整数格式化为8进制整数</span>              System.out.printf(<span class="hljs-string">"%o; %o; %o%n"</span>, -<span class="hljs-number">500</span>, <span class="hljs-number">2343L</span>, iObj);              <span class="hljs-comment">// %x表示将整数格式化为16进制整数</span>              System.out.printf(<span class="hljs-string">"%x; %x; %x%n"</span>, -<span class="hljs-number">500</span>, <span class="hljs-number">2343L</span>, iObj);              <span class="hljs-comment">// %X表示将整数格式化为16进制整数，并且字母变成大写形式</span>              System.out.printf(<span class="hljs-string">"%X; %X; %X%n"</span>, -<span class="hljs-number">500</span>, <span class="hljs-number">2343L</span>, iObj);                           <span class="hljs-comment">/*** 输出浮点类型***/</span>              Double dObj = <span class="hljs-number">45.6</span>d;              <span class="hljs-comment">// %e表示以科学技术法输出浮点数</span>              System.out.printf(<span class="hljs-string">"%e; %e; %e%n"</span>, -<span class="hljs-number">756.403f</span>, <span class="hljs-number">7464.232641</span>d, dObj);              <span class="hljs-comment">// %E表示以科学技术法输出浮点数，并且为大写形式            </span>              System.out.printf(<span class="hljs-string">"%E; %E; %E%n"</span>, -<span class="hljs-number">756.403f</span>, <span class="hljs-number">7464.232641</span>d, dObj);              <span class="hljs-comment">// %f表示以十进制格式化输出浮点数</span>              System.out.printf(<span class="hljs-string">"%f; %f; %f%n"</span>, -<span class="hljs-number">756.403f</span>, <span class="hljs-number">7464.232641</span>d, dObj);              <span class="hljs-comment">// 还可以限制小数点后的位数</span>              System.out.printf(<span class="hljs-string">"%.1f; %.3f; %f%n"</span>, -<span class="hljs-number">756.403f</span>, <span class="hljs-number">7464.232641</span>d, dObj);                           <span class="hljs-comment">/*** 输出日期类型***/</span>              <span class="hljs-comment">// %t表示格式化日期时间类型，%T是时间日期的大写形式，在%t之后用特定的字母表示不同的输出格式</span>              Date date = <span class="hljs-keyword">new</span> Date();              <span class="hljs-keyword">long</span> dataL = date.getTime();              <span class="hljs-comment">// 格式化年月日</span>              <span class="hljs-comment">// %t之后用y表示输出日期的年份（2位数的年，如99）</span>              <span class="hljs-comment">// %t之后用m表示输出日期的月份，%t之后用d表示输出日期的日号</span>              System.out.printf(<span class="hljs-string">"%1$ty-%1$tm-%1$td; %2$ty-%2$tm-%2$td%n"</span>, date, dataL);              <span class="hljs-comment">// %t之后用Y表示输出日期的年份（4位数的年），</span>              <span class="hljs-comment">// %t之后用B表示输出日期的月份的完整名， %t之后用b表示输出日期的月份的简称</span>              System.out.printf(<span class="hljs-string">"%1$tY-%1$tB-%1$td; %2$tY-%2$tb-%2$td%n"</span>, date, dataL);                           <span class="hljs-comment">// 以下是常见的日期组合</span>              <span class="hljs-comment">// %t之后用D表示以 "%tm/%td/%ty"格式化日期</span>              System.out.printf(<span class="hljs-string">"%1$tD%n"</span>, date);              <span class="hljs-comment">//%t之后用F表示以"%tY-%tm-%td"格式化日期</span>              System.out.printf(<span class="hljs-string">"%1$tF%n"</span>, date);                           <span class="hljs-comment">/*** 输出时间类型***/</span>              <span class="hljs-comment">// 输出时分秒</span>              <span class="hljs-comment">// %t之后用H表示输出时间的时（24进制），%t之后用I表示输出时间的时（12进制），</span>              <span class="hljs-comment">// %t之后用M表示输出时间的分，%t之后用S表示输出时间的秒</span>              System.out.printf(<span class="hljs-string">"%1$tH:%1$tM:%1$tS; %2$tI:%2$tM:%2$tS%n"</span>, date, dataL);              <span class="hljs-comment">// %t之后用L表示输出时间的秒中的毫秒</span>              System.out.printf(<span class="hljs-string">"%1$tH:%1$tM:%1$tS %1$tL%n"</span>, date);              <span class="hljs-comment">// %t之后p表示输出时间的上午或下午信息</span>              System.out.printf(<span class="hljs-string">"%1$tH:%1$tM:%1$tS %1$tL %1$tp%n"</span>, date);                           <span class="hljs-comment">// 以下是常见的时间组合</span>              <span class="hljs-comment">// %t之后用R表示以"%tH:%tM"格式化时间</span>              System.out.printf(<span class="hljs-string">"%1$tR%n"</span>, date);              <span class="hljs-comment">// %t之后用T表示以"%tH:%tM:%tS"格式化时间</span>              System.out.printf(<span class="hljs-string">"%1$tT%n"</span>, date);              <span class="hljs-comment">// %t之后用r表示以"%tI:%tM:%tS %Tp"格式化时间</span>              System.out.printf(<span class="hljs-string">"%1$tr%n"</span>, date);                           <span class="hljs-comment">/*** 输出星期***/</span>              <span class="hljs-comment">// %t之后用A表示得到星期几的全称</span>              System.out.printf(<span class="hljs-string">"%1$tF %1$tA%n"</span>, date);              <span class="hljs-comment">// %t之后用a表示得到星期几的简称</span>              System.out.printf(<span class="hljs-string">"%1$tF %1$ta%n"</span>, date);                           <span class="hljs-comment">// 输出时间日期的完整信息</span>              System.out.printf(<span class="hljs-string">"%1$tc%n"</span>, date);       }}<span class="hljs-comment">/**</span><span class="hljs-comment"> *printf方法中,格式为"%s"表示以字符串的形式输出第二个可变长参数的第一个参数值;</span><span class="hljs-comment"> *格式为"%n"表示换行;格式为"%S"表示将字符串以大写形式输出;在"%s"之间用"n$"表示</span><span class="hljs-comment"> *输出可变长参数的第n个参数值.格式为"%b"表示以布尔值的形式输出第二个可变长参数</span><span class="hljs-comment"> *的第一个参数值.</span><span class="hljs-comment"> */</span><span class="hljs-comment">/**</span><span class="hljs-comment"> * 格式为"%d"表示以十进制整数形式输出;"%o"表示以八进制形式输出;"%x"表示以十六进制</span><span class="hljs-comment"> * 输出;"%X"表示以十六进制输出,并且将字母(A、B、C、D、E、F)换成大写.格式为"%e"表</span><span class="hljs-comment"> * 以科学计数法输出浮点数;格式为"%E"表示以科学计数法输出浮点数,而且将e大写;格式为</span><span class="hljs-comment"> * "%f"表示以十进制浮点数输出,在"%f"之间加上".n"表示输出时保留小数点后面n位.</span><span class="hljs-comment"> */</span><span class="hljs-comment">/**</span><span class="hljs-comment"> * 格式为"%t"表示输出时间日期类型."%t"之后用y表示输出日期的二位数的年份(如99)、用m</span><span class="hljs-comment"> * 表示输出日期的月份,用d表示输出日期的日号;"%t"之后用Y表示输出日期的四位数的年份</span><span class="hljs-comment"> * (如1999)、用B表示输出日期的月份的完整名,用b表示输出日期的月份的简称."%t"之后用D</span><span class="hljs-comment"> * 表示以"%tm/%td/%ty"的格式输出日期、用F表示以"%tY-%tm-%td"的格式输出日期.</span><span class="hljs-comment"> */</span><span class="hljs-comment">/**</span><span class="hljs-comment"> * "%t"之后用H表示输出时间的时(24进制),用I表示输出时间的时(12进制),用M表示输出时间</span><span class="hljs-comment"> * 分,用S表示输出时间的秒,用L表示输出时间的秒中的毫秒数、用 p 表示输出时间的是上午还是</span><span class="hljs-comment"> * 下午."%t"之后用R表示以"%tH:%tM"的格式输出时间、用T表示以"%tH:%tM:%tS"的格式输出</span><span class="hljs-comment"> * 时间、用r表示以"%tI:%tM:%tS %Tp"的格式输出时间.</span><span class="hljs-comment"> */</span><span class="hljs-comment">/**</span><span class="hljs-comment"> * "%t"之后用A表示输出日期的全称,用a表示输出日期的星期简称.</span><span class="hljs-comment"> */</span></code></pre></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>给博客添加一些挂件</title>
    <link href="/blog/2020/02/05/%E8%BD%AC-%E7%BB%99%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E4%B8%80%E4%BA%9B%E6%8C%82%E4%BB%B6/"/>
    <url>/blog/2020/02/05/%E8%BD%AC-%E7%BB%99%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E4%B8%80%E4%BA%9B%E6%8C%82%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<p>阅读了<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">官方文档</a> 和 <a href="https://www.itrhx.com/" target="_blank" rel="noopener">TRHX‘S BLOG</a> 等文档/文章后，搜集了一部分教程</p><a id="more"></a><h1 id="自定义鼠标指针样式"><a href="#自定义鼠标指针样式" class="headerlink" title="自定义鼠标指针样式"></a>自定义鼠标指针样式</h1><p>在 <code>\themes\material-x\source\less\_base.less</code> 文件 body 样式里写入如下代码：</p><div class="hljs"><pre><code class="hljs less"><span class="hljs-selector-tag">body</span> {    <span class="hljs-attribute">cursor</span>: url(<span class="hljs-string">https://cdn.jsdelivr.net/gh/TRHX/CDN-for-itrhx.com@2.1.6/images/mouse.cur</span>),auto;    <span class="hljs-attribute">background-color</span>: <span class="hljs-variable">@theme_background</span>;    ......    ......}</code></pre></div><p>鼠标指针可以用 Axialis CursorWorkshop 这个软件自己制作，不同主题具体放的文件有所不同，确保在博客主体 body 的 CSS 文件中即可，其中的鼠标指针链接可替换成自己的，首先尝试加载 <a href="https://cdn.jsdelivr.net/gh/TRHX/CDN-for-itrhx.com@2.1.6/images/mouse.cur" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/TRHX/CDN-for-itrhx.com@2.1.6/images/mouse.cur</a> ，如果该文件不存在或由于其他原因无效，那么 auto 会被使用，也就是自动默认效果，图片格式为.ico、.ani、.cur，建议使用.cur，如果使用.ani或者其他格式无效，原因是浏览器兼容问题，请阅读<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Basic_User_Interface/Using_URL_values_for_the_cursor_property" target="_blank" rel="noopener">参考文档</a>或者参考以下兼容表：</p><table><thead><tr><th align="center">浏览器</th><th align="center">最低版本</th><th align="center">格式</th></tr></thead><tbody><tr><td align="center">Internet Explorer</td><td align="center">6.0</td><td align="center">.cur / .ani</td></tr><tr><td align="center">Firefox (Gecko), Windows and Linux</td><td align="center">1.5 (1.8)</td><td align="center">.cur / .png / .gif / .jpg</td></tr><tr><td align="center">Firefox (Gecko)</td><td align="center">4.0 (2.0)</td><td align="center">.cur / .png / .gif / .jpg / .svg</td></tr><tr><td align="center">Opera</td><td align="center">—</td><td align="center">—</td></tr><tr><td align="center">Safari (Webkit)</td><td align="center">3.0 (522-523)</td><td align="center">.cur / .png / .gif / .jpg</td></tr></tbody></table><p>拓展阅读：<a href="https://blog.csdn.net/ixygj197875/article/details/79338360" target="_blank" rel="noopener">《CSS 鼠标样式 cursor属性》</a> （By：歪脖先生的博客）</p><h1 id="打字特效（蓝色）"><a href="#打字特效（蓝色）" class="headerlink" title="打字特效（蓝色）"></a>打字特效（蓝色）</h1><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://cdn.jsdelivr.net/npm/typed.js@2.0.11"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="actionscript"><span class="hljs-keyword">var</span> typed = <span class="hljs-keyword">new</span> Typed(<span class="hljs-string">"#subtitle"</span>, { strings: [<span class="hljs-string">"Live a good life, write some good code !!!"</span>, <span class="hljs-string">"愿自己的努力终将获得回报。"</span>, <span class="hljs-string">"花开不是为了花落，而是为了开的更加灿烂。"</span>, <span class="hljs-string">"没有伞的孩子必须努力奔跑！"</span>, <span class="hljs-string">"欲望以提升热忱，毅力以磨平高山。"</span>, <span class="hljs-string">"如果放弃太早，你永远都不知道自己会错过什么。"</span>, <span class="hljs-string">"没有礁石，就没有美丽的浪花；没有挫折，就没有壮丽的人生。"</span>], startDelay: <span class="hljs-number">1000</span>, typeSpeed: <span class="hljs-number">100</span>, loop: !<span class="hljs-number">0</span>, backSpeed: <span class="hljs-number">60</span>, backDelay: <span class="hljs-number">2000</span>, showCursor: !<span class="hljs-number">0</span> })</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"text-align: center;font-weight: bold;color: #1BC3FB;"</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"subtitle"</span>&gt;</span>没有伞的孩子必须努力奔跑！<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"typed-cursor typed-cursor--blink"</span>&gt;</span>|<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"typed-cursor"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></div><p>效果 👇</p><script src="https://cdn.jsdelivr.net/npm/typed.js@2.0.11"></script>  <script>var typed = new Typed("#subtitle", { strings: ["Live a good life, write some good code !!!", "愿自己的努力终将获得回报。", "花开不是为了花落，而是为了开的更加灿烂。", "没有伞的孩子必须努力奔跑！", "欲望以提升热忱，毅力以磨平高山。", "如果放弃太早，你永远都不知道自己会错过什么。", "没有礁石，就没有美丽的浪花；没有挫折，就没有壮丽的人生。"], startDelay: 1000, typeSpeed: 100, loop: !0, backSpeed: 60, backDelay: 2000, showCursor: !0 })</script><div style="text-align: center;font-weight: bold;color: #1BC3FB;">      <span id="subtitle">没有伞的孩子必须努力奔跑！</span><span class="typed-cursor typed-cursor--blink">|</span>      <span id="typed-cursor"></span>    </div><h1 id="网站访客地理信息"><a href="#网站访客地理信息" class="headerlink" title="网站访客地理信息"></a>网站访客地理信息</h1><ul><li>在<strong><code>.\themes\material-x\layout\layout.ejs</code></strong>中加入以下代码：</li></ul><div class="hljs"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--网站访客地理信息--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"//rf.revolvermaps.com/0/0/8.js?i=5eqiqb8vl6p&amp;amp;m=2&amp;amp;c=ff0000&amp;amp;cr1=ffffff&amp;amp;f=arial&amp;amp;l=33&amp;amp;z=17&amp;amp;rx=-40&amp;amp;lx=-540&amp;amp;ly=520&amp;amp;hi=60"</span> <span class="hljs-attr">async</span>=<span class="hljs-string">"async"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre></div><ul><li>效果 👇</li></ul><script type="text/javascript" src="//rf.revolvermaps.com/0/0/8.js?i=5eqiqb8vl6p&amp;m=2&amp;c=ff0000&amp;cr1=ffffff&amp;f=arial&amp;l=33&amp;z=17&amp;rx=-40&amp;lx=-540&amp;ly=520&amp;hi=60" async="async"></script><h1 id="天气挂件"><a href="#天气挂件" class="headerlink" title="天气挂件"></a>天气挂件</h1><ul><li>JS代码，用于将插件插入到网页内</li></ul><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"tp-weather-widget"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">    (<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">a,h,g,f,e,d,c,b</span>)</span>{b=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>{d=h.createElement(g);c=h.getElementsByTagName(g)[<span class="hljs-number">0</span>];d.src=e;d.charset=<span class="hljs-string">"utf-8"</span>;d.async=<span class="hljs-number">1</span>;c.parentNode.insertBefore(d,c)};a[<span class="hljs-string">"SeniverseWeatherWidgetObject"</span>]=f;a[f]||(a[f]=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>{(a[f].q=a[f].q||[]).push(<span class="hljs-built_in">arguments</span>)});a[f].l=+<span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>();<span class="hljs-keyword">if</span>(a.attachEvent){a.attachEvent(<span class="hljs-string">"onload"</span>,b)}<span class="hljs-keyword">else</span>{a.addEventListener(<span class="hljs-string">"load"</span>,b,<span class="hljs-literal">false</span>)}}(<span class="hljs-built_in">window</span>,<span class="hljs-built_in">document</span>,<span class="hljs-string">"script"</span>,<span class="hljs-string">"SeniverseWeatherWidget"</span>,<span class="hljs-string">"//cdn.sencdn.com/widget2/static/js/bundle.js?t="</span>+<span class="hljs-built_in">parseInt</span>((<span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().getTime() / <span class="hljs-number">100000000</span>).toString(),<span class="hljs-number">10</span>)));</span><span class="javascript">    <span class="hljs-built_in">window</span>.SeniverseWeatherWidget(<span class="hljs-string">'show'</span>, {</span><span class="actionscript">      flavor: <span class="hljs-string">"bubble"</span>,</span><span class="actionscript">      location: <span class="hljs-string">"WS0E9D8WN298"</span>,</span><span class="actionscript">      geolocation: <span class="hljs-literal">true</span>,</span><span class="actionscript">      language: <span class="hljs-string">"zh-Hans"</span>,</span><span class="actionscript">      unit: <span class="hljs-string">"c"</span>,</span><span class="actionscript">      theme: <span class="hljs-string">"auto"</span>,</span><span class="actionscript">      token: <span class="hljs-string">"5fd5b254-57fe-4f8a-8a13-f92485efeb0b"</span>,</span><span class="actionscript">      hover: <span class="hljs-string">"enabled"</span>,</span><span class="actionscript">      container: <span class="hljs-string">"tp-weather-widget"</span></span>    })  <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre></div><ul><li>插件网页版链接，用于嵌入到iframe或webview中</li></ul><div class="hljs"><pre><code class="hljs lsl">&lt;iframe&gt;weather.seniverse.com/?token=<span class="hljs-number">5</span>fd5b254<span class="hljs-number">-57</span>fe<span class="hljs-number">-4</span>f8a<span class="hljs-number">-8</span>a13-f92485efeb0b&lt;/iframe&gt;</code></pre></div><ul><li>效果：见本博客页面左上角</li></ul><h1 id="背景添加动态线条效果"><a href="#背景添加动态线条效果" class="headerlink" title="背景添加动态线条效果"></a>背景添加动态线条效果</h1><p>在 <strong><code>.\themes\hexo-theme-spfk\layout\layout.ejs</code></strong>文件中添加如下代码：</p><div class="hljs"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--动态线条背景--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span></span><span class="hljs-tag"><span class="hljs-attr">color</span>=<span class="hljs-string">"220,220,220"</span> <span class="hljs-attr">opacity</span>=<span class="hljs-string">'0.7'</span> <span class="hljs-attr">zIndex</span>=<span class="hljs-string">"-2"</span> <span class="hljs-attr">count</span>=<span class="hljs-string">"200"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre></div><p>其中：</p><ul><li>color：表示线条颜色，三个数字分别为(R,G,B)，默认：（0,0,0）</li><li>opacity：表示线条透明度（0~1），默认：0.5</li><li>count：表示线条的总数量，默认：150</li><li>zIndex：表示背景的z-index属性，css属性用于控制所在层的位置，默认：-1</li></ul><h1 id="人体时钟"><a href="#人体时钟" class="headerlink" title="人体时钟"></a>人体时钟</h1><p>无意中发现了个有趣的人体时钟 HONE HONE CLOCK，作者是个日本人，<a href="http://chabudai.org/blog/" target="_blank" rel="noopener">点击此处</a>访问作者博客，<a href="http://chabudai.org/blog/?p=59" target="_blank" rel="noopener">点击此处</a>在作者原博客上查看动态样式，<a href="http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.swf" target="_blank" rel="noopener">点击此处</a>查看动态大图，如果你的博客上有合适的地方，加上一个人体时钟会很有趣的</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/030.png" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/030.png" srcset="/blog/img/loading.gif" alt="030"></a></p><p>实现代码：</p><div class="hljs"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--人体时钟背景透明--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">"Shift_JIS"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-comment">&lt;!--人体时钟背景白--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">"Shift_JIS"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_wh.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre></div><h1 id="背景动态彩带效果"><a href="#背景动态彩带效果" class="headerlink" title="背景动态彩带效果"></a>背景动态彩带效果</h1><p>样式一是鼠标点击后彩带自动更换样式，样式二是飘动的彩带：</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/034.png" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/034.png" srcset="/blog/img/loading.gif" alt="034"></a></p><p>实现方法：在 \themes\material-x\layout\layout.ejs 文件的body前面添加如下代码：</p><div class="hljs"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 样式一（鼠标点击更换样式） --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://g.joyinshare.com/hc/ribbon.min.js"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre></div><div class="hljs"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 样式二（飘动的彩带） --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://g.joyinshare.com/hc/piao.js"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre></div><h1 id="樱花特效"><a href="#樱花特效" class="headerlink" title="樱花特效"></a>樱花特效</h1><p><a href="https://www.17sucai.com/pins/28586.html" target="_blank" rel="noopener">canvas樱花飘落动画特效</a></p><div class="hljs"><pre><code class="hljs kotlin">&lt;script&gt;<span class="hljs-keyword">var</span> RENDERER = {INIT_CHERRY_BLOSSOM_COUNT : <span class="hljs-number">30</span>,MAX_ADDING_INTERVAL : <span class="hljs-number">10</span>,<span class="hljs-keyword">init</span> : function(){<span class="hljs-keyword">this</span>.setParameters();<span class="hljs-keyword">this</span>.reconstructMethods();<span class="hljs-keyword">this</span>.createCherries();<span class="hljs-keyword">this</span>.render();},setParameters : function(){<span class="hljs-keyword">this</span>.$container = $(<span class="hljs-string">'#jsi-cherry-container'</span>);<span class="hljs-keyword">this</span>.width = <span class="hljs-keyword">this</span>.$container.width();<span class="hljs-keyword">this</span>.height = <span class="hljs-keyword">this</span>.$container.height();<span class="hljs-keyword">this</span>.context = $(<span class="hljs-string">'&lt;canvas /&gt;'</span>).attr({width : <span class="hljs-keyword">this</span>.width, height : <span class="hljs-keyword">this</span>.height}).appendTo(<span class="hljs-keyword">this</span>.$container).<span class="hljs-keyword">get</span>(<span class="hljs-number">0</span>).getContext(<span class="hljs-string">'2d'</span>);<span class="hljs-keyword">this</span>.cherries = [];<span class="hljs-keyword">this</span>.maxAddingInterval = Math.round(<span class="hljs-keyword">this</span>.MAX_ADDING_INTERVAL * <span class="hljs-number">1000</span> / <span class="hljs-keyword">this</span>.width);<span class="hljs-keyword">this</span>.addingInterval = <span class="hljs-keyword">this</span>.maxAddingInterval;},reconstructMethods : function(){<span class="hljs-keyword">this</span>.render = <span class="hljs-keyword">this</span>.render.bind(<span class="hljs-keyword">this</span>);},createCherries : function(){<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>, length = Math.round(<span class="hljs-keyword">this</span>.INIT_CHERRY_BLOSSOM_COUNT * <span class="hljs-keyword">this</span>.width / <span class="hljs-number">1000</span>); i &lt; length; i++){<span class="hljs-keyword">this</span>.cherries.push(new CHERRY_BLOSSOM(<span class="hljs-keyword">this</span>, <span class="hljs-literal">true</span>));}},render : function(){requestAnimationFrame(<span class="hljs-keyword">this</span>.render);<span class="hljs-keyword">this</span>.context.clearRect(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-keyword">this</span>.width, <span class="hljs-keyword">this</span>.height);<span class="hljs-keyword">this</span>.cherries.sort(function(cherry1, cherry2){<span class="hljs-keyword">return</span> cherry1.z - cherry2.z;});<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-keyword">this</span>.cherries.length - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i--){<span class="hljs-keyword">if</span>(!<span class="hljs-keyword">this</span>.cherries[i].render(<span class="hljs-keyword">this</span>.context)){<span class="hljs-keyword">this</span>.cherries.splice(i, <span class="hljs-number">1</span>);}}<span class="hljs-keyword">if</span>(--<span class="hljs-keyword">this</span>.addingInterval == <span class="hljs-number">0</span>){<span class="hljs-keyword">this</span>.addingInterval = <span class="hljs-keyword">this</span>.maxAddingInterval;<span class="hljs-keyword">this</span>.cherries.push(new CHERRY_BLOSSOM(<span class="hljs-keyword">this</span>, <span class="hljs-literal">false</span>));}}};<span class="hljs-keyword">var</span> CHERRY_BLOSSOM = function(renderer, isRandom){<span class="hljs-keyword">this</span>.renderer = renderer;<span class="hljs-keyword">this</span>.<span class="hljs-keyword">init</span>(isRandom);};CHERRY_BLOSSOM.prototype = {FOCUS_POSITION : <span class="hljs-number">300</span>,FAR_LIMIT : <span class="hljs-number">600</span>,MAX_RIPPLE_COUNT : <span class="hljs-number">100</span>,RIPPLE_RADIUS : <span class="hljs-number">100</span>,SURFACE_RATE : <span class="hljs-number">0.5</span>,SINK_OFFSET : <span class="hljs-number">20</span>,<span class="hljs-keyword">init</span> : function(isRandom){<span class="hljs-keyword">this</span>.x = <span class="hljs-keyword">this</span>.getRandomValue(-<span class="hljs-keyword">this</span>.renderer.width, <span class="hljs-keyword">this</span>.renderer.width);<span class="hljs-keyword">this</span>.y = isRandom ? <span class="hljs-keyword">this</span>.getRandomValue(<span class="hljs-number">0</span>, <span class="hljs-keyword">this</span>.renderer.height) : <span class="hljs-keyword">this</span>.renderer.height * <span class="hljs-number">1.5</span>;<span class="hljs-keyword">this</span>.z = <span class="hljs-keyword">this</span>.getRandomValue(<span class="hljs-number">0</span>, <span class="hljs-keyword">this</span>.FAR_LIMIT);<span class="hljs-keyword">this</span>.vx = <span class="hljs-keyword">this</span>.getRandomValue(-<span class="hljs-number">2</span>, <span class="hljs-number">2</span>);<span class="hljs-keyword">this</span>.vy = -<span class="hljs-number">2</span>;<span class="hljs-keyword">this</span>.theta = <span class="hljs-keyword">this</span>.getRandomValue(<span class="hljs-number">0</span>, Math.PI * <span class="hljs-number">2</span>);<span class="hljs-keyword">this</span>.phi = <span class="hljs-keyword">this</span>.getRandomValue(<span class="hljs-number">0</span>, Math.PI * <span class="hljs-number">2</span>);<span class="hljs-keyword">this</span>.psi = <span class="hljs-number">0</span>;<span class="hljs-keyword">this</span>.dpsi = <span class="hljs-keyword">this</span>.getRandomValue(Math.PI / <span class="hljs-number">600</span>, Math.PI / <span class="hljs-number">300</span>);<span class="hljs-keyword">this</span>.opacity = <span class="hljs-number">0</span>;<span class="hljs-keyword">this</span>.endTheta = <span class="hljs-literal">false</span>;<span class="hljs-keyword">this</span>.endPhi = <span class="hljs-literal">false</span>;<span class="hljs-keyword">this</span>.rippleCount = <span class="hljs-number">0</span>;<span class="hljs-keyword">var</span> axis = <span class="hljs-keyword">this</span>.getAxis(),theta = <span class="hljs-keyword">this</span>.theta + Math.ceil(-(<span class="hljs-keyword">this</span>.y + <span class="hljs-keyword">this</span>.renderer.height * <span class="hljs-keyword">this</span>.SURFACE_RATE) / <span class="hljs-keyword">this</span>.vy) * Math.PI / <span class="hljs-number">500</span>;theta %= Math.PI * <span class="hljs-number">2</span>;<span class="hljs-keyword">this</span>.offsetY = <span class="hljs-number">40</span> * ((theta &lt;= Math.PI / <span class="hljs-number">2</span> || theta &gt;= Math.PI * <span class="hljs-number">3</span> / <span class="hljs-number">2</span>) ? -<span class="hljs-number">1</span> : <span class="hljs-number">1</span>);<span class="hljs-keyword">this</span>.thresholdY = <span class="hljs-keyword">this</span>.renderer.height / <span class="hljs-number">2</span> + <span class="hljs-keyword">this</span>.renderer.height * <span class="hljs-keyword">this</span>.SURFACE_RATE * axis.rate;<span class="hljs-keyword">this</span>.entityColor = <span class="hljs-keyword">this</span>.renderer.context.createRadialGradient(<span class="hljs-number">0</span>, <span class="hljs-number">40</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">40</span>, <span class="hljs-number">80</span>);<span class="hljs-keyword">this</span>.entityColor.addColorStop(<span class="hljs-number">0</span>, <span class="hljs-string">'hsl(330, 70%, '</span> + <span class="hljs-number">50</span> * (<span class="hljs-number">0.3</span> + axis.rate) + <span class="hljs-string">'%)'</span>);<span class="hljs-keyword">this</span>.entityColor.addColorStop(<span class="hljs-number">0.05</span>, <span class="hljs-string">'hsl(330, 40%,'</span> + <span class="hljs-number">55</span> * (<span class="hljs-number">0.3</span> + axis.rate) + <span class="hljs-string">'%)'</span>);<span class="hljs-keyword">this</span>.entityColor.addColorStop(<span class="hljs-number">1</span>, <span class="hljs-string">'hsl(330, 20%, '</span> + <span class="hljs-number">70</span> * (<span class="hljs-number">0.3</span> + axis.rate) + <span class="hljs-string">'%)'</span>);<span class="hljs-keyword">this</span>.shadowColor = <span class="hljs-keyword">this</span>.renderer.context.createRadialGradient(<span class="hljs-number">0</span>, <span class="hljs-number">40</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">40</span>, <span class="hljs-number">80</span>);<span class="hljs-keyword">this</span>.shadowColor.addColorStop(<span class="hljs-number">0</span>, <span class="hljs-string">'hsl(330, 40%, '</span> + <span class="hljs-number">30</span> * (<span class="hljs-number">0.3</span> + axis.rate) + <span class="hljs-string">'%)'</span>);<span class="hljs-keyword">this</span>.shadowColor.addColorStop(<span class="hljs-number">0.05</span>, <span class="hljs-string">'hsl(330, 40%,'</span> + <span class="hljs-number">30</span> * (<span class="hljs-number">0.3</span> + axis.rate) + <span class="hljs-string">'%)'</span>);<span class="hljs-keyword">this</span>.shadowColor.addColorStop(<span class="hljs-number">1</span>, <span class="hljs-string">'hsl(330, 20%, '</span> + <span class="hljs-number">40</span> * (<span class="hljs-number">0.3</span> + axis.rate) + <span class="hljs-string">'%)'</span>);},getRandomValue : function(min, max){<span class="hljs-keyword">return</span> min + (max - min) * Math.random();},getAxis : function(){<span class="hljs-keyword">var</span> rate = <span class="hljs-keyword">this</span>.FOCUS_POSITION / (<span class="hljs-keyword">this</span>.z + <span class="hljs-keyword">this</span>.FOCUS_POSITION),x = <span class="hljs-keyword">this</span>.renderer.width / <span class="hljs-number">2</span> + <span class="hljs-keyword">this</span>.x * rate,y = <span class="hljs-keyword">this</span>.renderer.height / <span class="hljs-number">2</span> - <span class="hljs-keyword">this</span>.y * rate;<span class="hljs-keyword">return</span> {rate : rate, x : x, y : y};},renderCherry : function(context, axis){context.beginPath();context.moveTo(<span class="hljs-number">0</span>, <span class="hljs-number">40</span>);context.bezierCurveTo(-<span class="hljs-number">60</span>, <span class="hljs-number">20</span>, -<span class="hljs-number">10</span>, -<span class="hljs-number">60</span>, <span class="hljs-number">0</span>, -<span class="hljs-number">20</span>);context.bezierCurveTo(<span class="hljs-number">10</span>, -<span class="hljs-number">60</span>, <span class="hljs-number">60</span>, <span class="hljs-number">20</span>, <span class="hljs-number">0</span>, <span class="hljs-number">40</span>);context.fill();<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = -<span class="hljs-number">4</span>; i &lt; <span class="hljs-number">4</span>; i++){context.beginPath();context.moveTo(<span class="hljs-number">0</span>, <span class="hljs-number">40</span>);context.quadraticCurveTo(i * <span class="hljs-number">12</span>, <span class="hljs-number">10</span>, i * <span class="hljs-number">4</span>, -<span class="hljs-number">24</span> + Math.abs(i) * <span class="hljs-number">2</span>);context.stroke();}},render : function(context){<span class="hljs-keyword">var</span> axis = <span class="hljs-keyword">this</span>.getAxis();<span class="hljs-keyword">if</span>(axis.y == <span class="hljs-keyword">this</span>.thresholdY &amp;&amp; <span class="hljs-keyword">this</span>.rippleCount &lt; <span class="hljs-keyword">this</span>.MAX_RIPPLE_COUNT){context.save();context.lineWidth = <span class="hljs-number">2</span>;context.strokeStyle = <span class="hljs-string">'hsla(0, 0%, 100%, '</span> + (<span class="hljs-keyword">this</span>.MAX_RIPPLE_COUNT - <span class="hljs-keyword">this</span>.rippleCount) / <span class="hljs-keyword">this</span>.MAX_RIPPLE_COUNT + <span class="hljs-string">')'</span>;context.translate(axis.x + <span class="hljs-keyword">this</span>.offsetY * axis.rate * (<span class="hljs-keyword">this</span>.theta &lt;= Math.PI ? -<span class="hljs-number">1</span> : <span class="hljs-number">1</span>), axis.y);context.scale(<span class="hljs-number">1</span>, <span class="hljs-number">0.3</span>);context.beginPath();context.arc(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-keyword">this</span>.rippleCount / <span class="hljs-keyword">this</span>.MAX_RIPPLE_COUNT * <span class="hljs-keyword">this</span>.RIPPLE_RADIUS * axis.rate, <span class="hljs-number">0</span>, Math.PI * <span class="hljs-number">2</span>, <span class="hljs-literal">false</span>);context.stroke();context.restore();<span class="hljs-keyword">this</span>.rippleCount++;}<span class="hljs-keyword">if</span>(axis.y &lt; <span class="hljs-keyword">this</span>.thresholdY || (!<span class="hljs-keyword">this</span>.endTheta || !<span class="hljs-keyword">this</span>.endPhi)){<span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.y &lt;= <span class="hljs-number">0</span>){<span class="hljs-keyword">this</span>.opacity = Math.min(<span class="hljs-keyword">this</span>.opacity + <span class="hljs-number">0.01</span>, <span class="hljs-number">1</span>);}context.save();context.globalAlpha = <span class="hljs-keyword">this</span>.opacity;context.fillStyle = <span class="hljs-keyword">this</span>.shadowColor;context.strokeStyle = <span class="hljs-string">'hsl(330, 30%,'</span> + <span class="hljs-number">40</span> * (<span class="hljs-number">0.3</span> + axis.rate) + <span class="hljs-string">'%)'</span>;context.translate(axis.x, Math.max(axis.y, <span class="hljs-keyword">this</span>.thresholdY + <span class="hljs-keyword">this</span>.thresholdY - axis.y));context.rotate(Math.PI - <span class="hljs-keyword">this</span>.theta);context.scale(axis.rate * -Math.sin(<span class="hljs-keyword">this</span>.phi), axis.rate);context.translate(<span class="hljs-number">0</span>, <span class="hljs-keyword">this</span>.offsetY);<span class="hljs-keyword">this</span>.renderCherry(context, axis);context.restore();}context.save();context.fillStyle = <span class="hljs-keyword">this</span>.entityColor;context.strokeStyle = <span class="hljs-string">'hsl(330, 40%,'</span> + <span class="hljs-number">70</span> * (<span class="hljs-number">0.3</span> + axis.rate) + <span class="hljs-string">'%)'</span>;context.translate(axis.x, axis.y + Math.abs(<span class="hljs-keyword">this</span>.SINK_OFFSET * Math.sin(<span class="hljs-keyword">this</span>.psi) * axis.rate));context.rotate(<span class="hljs-keyword">this</span>.theta);context.scale(axis.rate * Math.sin(<span class="hljs-keyword">this</span>.phi), axis.rate);context.translate(<span class="hljs-number">0</span>, <span class="hljs-keyword">this</span>.offsetY);<span class="hljs-keyword">this</span>.renderCherry(context, axis);context.restore();<span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.y &lt;= -<span class="hljs-keyword">this</span>.renderer.height / <span class="hljs-number">4</span>){<span class="hljs-keyword">if</span>(!<span class="hljs-keyword">this</span>.endTheta){<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> theta = Math.PI / <span class="hljs-number">2</span>, end = Math.PI * <span class="hljs-number">3</span> / <span class="hljs-number">2</span>; theta &lt;= end; theta += Math.PI){<span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.theta &lt; theta &amp;&amp; <span class="hljs-keyword">this</span>.theta + Math.PI / <span class="hljs-number">200</span> &gt; theta){<span class="hljs-keyword">this</span>.theta = theta;<span class="hljs-keyword">this</span>.endTheta = <span class="hljs-literal">true</span>;<span class="hljs-keyword">break</span>;}}}<span class="hljs-keyword">if</span>(!<span class="hljs-keyword">this</span>.endPhi){<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> phi = Math.PI / <span class="hljs-number">8</span>, end = Math.PI * <span class="hljs-number">7</span> / <span class="hljs-number">8</span>; phi &lt;= end; phi += Math.PI * <span class="hljs-number">3</span> / <span class="hljs-number">4</span>){<span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.phi &lt; phi &amp;&amp; <span class="hljs-keyword">this</span>.phi + Math.PI / <span class="hljs-number">200</span> &gt; phi){<span class="hljs-keyword">this</span>.phi = Math.PI / <span class="hljs-number">8</span>;<span class="hljs-keyword">this</span>.endPhi = <span class="hljs-literal">true</span>;<span class="hljs-keyword">break</span>;}}}}<span class="hljs-keyword">if</span>(!<span class="hljs-keyword">this</span>.endTheta){<span class="hljs-keyword">if</span>(axis.y == <span class="hljs-keyword">this</span>.thresholdY){<span class="hljs-keyword">this</span>.theta += Math.PI / <span class="hljs-number">200</span> * ((<span class="hljs-keyword">this</span>.theta &lt; Math.PI / <span class="hljs-number">2</span> || (<span class="hljs-keyword">this</span>.theta &gt;= Math.PI &amp;&amp; <span class="hljs-keyword">this</span>.theta &lt; Math.PI * <span class="hljs-number">3</span> / <span class="hljs-number">2</span>)) ? <span class="hljs-number">1</span> : -<span class="hljs-number">1</span>);}<span class="hljs-keyword">else</span>{<span class="hljs-keyword">this</span>.theta += Math.PI / <span class="hljs-number">500</span>;}<span class="hljs-keyword">this</span>.theta %= Math.PI * <span class="hljs-number">2</span>;}<span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.endPhi){<span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.rippleCount == <span class="hljs-keyword">this</span>.MAX_RIPPLE_COUNT){<span class="hljs-keyword">this</span>.psi += <span class="hljs-keyword">this</span>.dpsi;<span class="hljs-keyword">this</span>.psi %= Math.PI * <span class="hljs-number">2</span>;}}<span class="hljs-keyword">else</span>{<span class="hljs-keyword">this</span>.phi += Math.PI / ((axis.y == <span class="hljs-keyword">this</span>.thresholdY) ? <span class="hljs-number">200</span> : <span class="hljs-number">500</span>);<span class="hljs-keyword">this</span>.phi %= Math.PI;}<span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.y &lt;= -<span class="hljs-keyword">this</span>.renderer.height * <span class="hljs-keyword">this</span>.SURFACE_RATE){<span class="hljs-keyword">this</span>.x += <span class="hljs-number">2</span>;<span class="hljs-keyword">this</span>.y = -<span class="hljs-keyword">this</span>.renderer.height * <span class="hljs-keyword">this</span>.SURFACE_RATE;}<span class="hljs-keyword">else</span>{<span class="hljs-keyword">this</span>.x += <span class="hljs-keyword">this</span>.vx;<span class="hljs-keyword">this</span>.y += <span class="hljs-keyword">this</span>.vy;}<span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.z &gt; -<span class="hljs-keyword">this</span>.FOCUS_POSITION &amp;&amp; <span class="hljs-keyword">this</span>.z &lt; <span class="hljs-keyword">this</span>.FAR_LIMIT &amp;&amp; <span class="hljs-keyword">this</span>.x &lt; <span class="hljs-keyword">this</span>.renderer.width * <span class="hljs-number">1.5</span>;}};$(function(){RENDERER.<span class="hljs-keyword">init</span>();});&lt;/script&gt;</code></pre></div><p>或者</p><div class="hljs"><pre><code class="hljs kotlin">&lt;div id=<span class="hljs-string">"jsi-cherry-container"</span> <span class="hljs-class"><span class="hljs-keyword">class</span>="<span class="hljs-title">container</span>"&gt;&lt;<span class="hljs-type">canvas width="1536" height="80"</span>&gt;&lt;<span class="hljs-type">/canvas</span>&gt;&lt;<span class="hljs-type">/div</span>&gt;&lt;<span class="hljs-type">script</span>&gt;</span><span class="hljs-keyword">var</span> RENDERER = {INIT_CHERRY_BLOSSOM_COUNT : <span class="hljs-number">30</span>,MAX_ADDING_INTERVAL : <span class="hljs-number">10</span>,<span class="hljs-keyword">init</span> : function(){<span class="hljs-keyword">this</span>.setParameters();<span class="hljs-keyword">this</span>.reconstructMethods();<span class="hljs-keyword">this</span>.createCherries();<span class="hljs-keyword">this</span>.render();},setParameters : function(){<span class="hljs-keyword">this</span>.$container = $(<span class="hljs-string">'#jsi-cherry-container'</span>);<span class="hljs-keyword">this</span>.width = <span class="hljs-keyword">this</span>.$container.width();<span class="hljs-keyword">this</span>.height = <span class="hljs-keyword">this</span>.$container.height();<span class="hljs-keyword">this</span>.context = $(<span class="hljs-string">'&lt;canvas /&gt;'</span>).attr({width : <span class="hljs-keyword">this</span>.width, height : <span class="hljs-keyword">this</span>.height}).appendTo(<span class="hljs-keyword">this</span>.$container).<span class="hljs-keyword">get</span>(<span class="hljs-number">0</span>).getContext(<span class="hljs-string">'2d'</span>);<span class="hljs-keyword">this</span>.cherries = [];<span class="hljs-keyword">this</span>.maxAddingInterval = Math.round(<span class="hljs-keyword">this</span>.MAX_ADDING_INTERVAL * <span class="hljs-number">1000</span> / <span class="hljs-keyword">this</span>.width);<span class="hljs-keyword">this</span>.addingInterval = <span class="hljs-keyword">this</span>.maxAddingInterval;},reconstructMethods : function(){<span class="hljs-keyword">this</span>.render = <span class="hljs-keyword">this</span>.render.bind(<span class="hljs-keyword">this</span>);},createCherries : function(){<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>, length = Math.round(<span class="hljs-keyword">this</span>.INIT_CHERRY_BLOSSOM_COUNT * <span class="hljs-keyword">this</span>.width / <span class="hljs-number">1000</span>); i &lt; length; i++){<span class="hljs-keyword">this</span>.cherries.push(new CHERRY_BLOSSOM(<span class="hljs-keyword">this</span>, <span class="hljs-literal">true</span>));}},render : function(){requestAnimationFrame(<span class="hljs-keyword">this</span>.render);<span class="hljs-keyword">this</span>.context.clearRect(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-keyword">this</span>.width, <span class="hljs-keyword">this</span>.height);<span class="hljs-keyword">this</span>.cherries.sort(function(cherry1, cherry2){<span class="hljs-keyword">return</span> cherry1.z - cherry2.z;});<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-keyword">this</span>.cherries.length - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i--){<span class="hljs-keyword">if</span>(!<span class="hljs-keyword">this</span>.cherries[i].render(<span class="hljs-keyword">this</span>.context)){<span class="hljs-keyword">this</span>.cherries.splice(i, <span class="hljs-number">1</span>);}}<span class="hljs-keyword">if</span>(--<span class="hljs-keyword">this</span>.addingInterval == <span class="hljs-number">0</span>){<span class="hljs-keyword">this</span>.addingInterval = <span class="hljs-keyword">this</span>.maxAddingInterval;<span class="hljs-keyword">this</span>.cherries.push(new CHERRY_BLOSSOM(<span class="hljs-keyword">this</span>, <span class="hljs-literal">false</span>));}}};<span class="hljs-keyword">var</span> CHERRY_BLOSSOM = function(renderer, isRandom){<span class="hljs-keyword">this</span>.renderer = renderer;<span class="hljs-keyword">this</span>.<span class="hljs-keyword">init</span>(isRandom);};CHERRY_BLOSSOM.prototype = {FOCUS_POSITION : <span class="hljs-number">300</span>,FAR_LIMIT : <span class="hljs-number">600</span>,MAX_RIPPLE_COUNT : <span class="hljs-number">100</span>,RIPPLE_RADIUS : <span class="hljs-number">100</span>,SURFACE_RATE : <span class="hljs-number">0.5</span>,SINK_OFFSET : <span class="hljs-number">20</span>,<span class="hljs-keyword">init</span> : function(isRandom){<span class="hljs-keyword">this</span>.x = <span class="hljs-keyword">this</span>.getRandomValue(-<span class="hljs-keyword">this</span>.renderer.width, <span class="hljs-keyword">this</span>.renderer.width);<span class="hljs-keyword">this</span>.y = isRandom ? <span class="hljs-keyword">this</span>.getRandomValue(<span class="hljs-number">0</span>, <span class="hljs-keyword">this</span>.renderer.height) : <span class="hljs-keyword">this</span>.renderer.height * <span class="hljs-number">1.5</span>;<span class="hljs-keyword">this</span>.z = <span class="hljs-keyword">this</span>.getRandomValue(<span class="hljs-number">0</span>, <span class="hljs-keyword">this</span>.FAR_LIMIT);<span class="hljs-keyword">this</span>.vx = <span class="hljs-keyword">this</span>.getRandomValue(-<span class="hljs-number">2</span>, <span class="hljs-number">2</span>);<span class="hljs-keyword">this</span>.vy = -<span class="hljs-number">2</span>;<span class="hljs-keyword">this</span>.theta = <span class="hljs-keyword">this</span>.getRandomValue(<span class="hljs-number">0</span>, Math.PI * <span class="hljs-number">2</span>);<span class="hljs-keyword">this</span>.phi = <span class="hljs-keyword">this</span>.getRandomValue(<span class="hljs-number">0</span>, Math.PI * <span class="hljs-number">2</span>);<span class="hljs-keyword">this</span>.psi = <span class="hljs-number">0</span>;<span class="hljs-keyword">this</span>.dpsi = <span class="hljs-keyword">this</span>.getRandomValue(Math.PI / <span class="hljs-number">600</span>, Math.PI / <span class="hljs-number">300</span>);<span class="hljs-keyword">this</span>.opacity = <span class="hljs-number">0</span>;<span class="hljs-keyword">this</span>.endTheta = <span class="hljs-literal">false</span>;<span class="hljs-keyword">this</span>.endPhi = <span class="hljs-literal">false</span>;<span class="hljs-keyword">this</span>.rippleCount = <span class="hljs-number">0</span>;<span class="hljs-keyword">var</span> axis = <span class="hljs-keyword">this</span>.getAxis(),theta = <span class="hljs-keyword">this</span>.theta + Math.ceil(-(<span class="hljs-keyword">this</span>.y + <span class="hljs-keyword">this</span>.renderer.height * <span class="hljs-keyword">this</span>.SURFACE_RATE) / <span class="hljs-keyword">this</span>.vy) * Math.PI / <span class="hljs-number">500</span>;theta %= Math.PI * <span class="hljs-number">2</span>;<span class="hljs-keyword">this</span>.offsetY = <span class="hljs-number">40</span> * ((theta &lt;= Math.PI / <span class="hljs-number">2</span> || theta &gt;= Math.PI * <span class="hljs-number">3</span> / <span class="hljs-number">2</span>) ? -<span class="hljs-number">1</span> : <span class="hljs-number">1</span>);<span class="hljs-keyword">this</span>.thresholdY = <span class="hljs-keyword">this</span>.renderer.height / <span class="hljs-number">2</span> + <span class="hljs-keyword">this</span>.renderer.height * <span class="hljs-keyword">this</span>.SURFACE_RATE * axis.rate;<span class="hljs-keyword">this</span>.entityColor = <span class="hljs-keyword">this</span>.renderer.context.createRadialGradient(<span class="hljs-number">0</span>, <span class="hljs-number">40</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">40</span>, <span class="hljs-number">80</span>);<span class="hljs-keyword">this</span>.entityColor.addColorStop(<span class="hljs-number">0</span>, <span class="hljs-string">'hsl(330, 70%, '</span> + <span class="hljs-number">50</span> * (<span class="hljs-number">0.3</span> + axis.rate) + <span class="hljs-string">'%)'</span>);<span class="hljs-keyword">this</span>.entityColor.addColorStop(<span class="hljs-number">0.05</span>, <span class="hljs-string">'hsl(330, 40%,'</span> + <span class="hljs-number">55</span> * (<span class="hljs-number">0.3</span> + axis.rate) + <span class="hljs-string">'%)'</span>);<span class="hljs-keyword">this</span>.entityColor.addColorStop(<span class="hljs-number">1</span>, <span class="hljs-string">'hsl(330, 20%, '</span> + <span class="hljs-number">70</span> * (<span class="hljs-number">0.3</span> + axis.rate) + <span class="hljs-string">'%)'</span>);<span class="hljs-keyword">this</span>.shadowColor = <span class="hljs-keyword">this</span>.renderer.context.createRadialGradient(<span class="hljs-number">0</span>, <span class="hljs-number">40</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">40</span>, <span class="hljs-number">80</span>);<span class="hljs-keyword">this</span>.shadowColor.addColorStop(<span class="hljs-number">0</span>, <span class="hljs-string">'hsl(330, 40%, '</span> + <span class="hljs-number">30</span> * (<span class="hljs-number">0.3</span> + axis.rate) + <span class="hljs-string">'%)'</span>);<span class="hljs-keyword">this</span>.shadowColor.addColorStop(<span class="hljs-number">0.05</span>, <span class="hljs-string">'hsl(330, 40%,'</span> + <span class="hljs-number">30</span> * (<span class="hljs-number">0.3</span> + axis.rate) + <span class="hljs-string">'%)'</span>);<span class="hljs-keyword">this</span>.shadowColor.addColorStop(<span class="hljs-number">1</span>, <span class="hljs-string">'hsl(330, 20%, '</span> + <span class="hljs-number">40</span> * (<span class="hljs-number">0.3</span> + axis.rate) + <span class="hljs-string">'%)'</span>);},getRandomValue : function(min, max){<span class="hljs-keyword">return</span> min + (max - min) * Math.random();},getAxis : function(){<span class="hljs-keyword">var</span> rate = <span class="hljs-keyword">this</span>.FOCUS_POSITION / (<span class="hljs-keyword">this</span>.z + <span class="hljs-keyword">this</span>.FOCUS_POSITION),x = <span class="hljs-keyword">this</span>.renderer.width / <span class="hljs-number">2</span> + <span class="hljs-keyword">this</span>.x * rate,y = <span class="hljs-keyword">this</span>.renderer.height / <span class="hljs-number">2</span> - <span class="hljs-keyword">this</span>.y * rate;<span class="hljs-keyword">return</span> {rate : rate, x : x, y : y};},renderCherry : function(context, axis){context.beginPath();context.moveTo(<span class="hljs-number">0</span>, <span class="hljs-number">40</span>);context.bezierCurveTo(-<span class="hljs-number">60</span>, <span class="hljs-number">20</span>, -<span class="hljs-number">10</span>, -<span class="hljs-number">60</span>, <span class="hljs-number">0</span>, -<span class="hljs-number">20</span>);context.bezierCurveTo(<span class="hljs-number">10</span>, -<span class="hljs-number">60</span>, <span class="hljs-number">60</span>, <span class="hljs-number">20</span>, <span class="hljs-number">0</span>, <span class="hljs-number">40</span>);context.fill();<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = -<span class="hljs-number">4</span>; i &lt; <span class="hljs-number">4</span>; i++){context.beginPath();context.moveTo(<span class="hljs-number">0</span>, <span class="hljs-number">40</span>);context.quadraticCurveTo(i * <span class="hljs-number">12</span>, <span class="hljs-number">10</span>, i * <span class="hljs-number">4</span>, -<span class="hljs-number">24</span> + Math.abs(i) * <span class="hljs-number">2</span>);context.stroke();}},render : function(context){<span class="hljs-keyword">var</span> axis = <span class="hljs-keyword">this</span>.getAxis();<span class="hljs-keyword">if</span>(axis.y == <span class="hljs-keyword">this</span>.thresholdY &amp;&amp; <span class="hljs-keyword">this</span>.rippleCount &lt; <span class="hljs-keyword">this</span>.MAX_RIPPLE_COUNT){context.save();context.lineWidth = <span class="hljs-number">2</span>;context.strokeStyle = <span class="hljs-string">'hsla(0, 0%, 100%, '</span> + (<span class="hljs-keyword">this</span>.MAX_RIPPLE_COUNT - <span class="hljs-keyword">this</span>.rippleCount) / <span class="hljs-keyword">this</span>.MAX_RIPPLE_COUNT + <span class="hljs-string">')'</span>;context.translate(axis.x + <span class="hljs-keyword">this</span>.offsetY * axis.rate * (<span class="hljs-keyword">this</span>.theta &lt;= Math.PI ? -<span class="hljs-number">1</span> : <span class="hljs-number">1</span>), axis.y);context.scale(<span class="hljs-number">1</span>, <span class="hljs-number">0.3</span>);context.beginPath();context.arc(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-keyword">this</span>.rippleCount / <span class="hljs-keyword">this</span>.MAX_RIPPLE_COUNT * <span class="hljs-keyword">this</span>.RIPPLE_RADIUS * axis.rate, <span class="hljs-number">0</span>, Math.PI * <span class="hljs-number">2</span>, <span class="hljs-literal">false</span>);context.stroke();context.restore();<span class="hljs-keyword">this</span>.rippleCount++;}<span class="hljs-keyword">if</span>(axis.y &lt; <span class="hljs-keyword">this</span>.thresholdY || (!<span class="hljs-keyword">this</span>.endTheta || !<span class="hljs-keyword">this</span>.endPhi)){<span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.y &lt;= <span class="hljs-number">0</span>){<span class="hljs-keyword">this</span>.opacity = Math.min(<span class="hljs-keyword">this</span>.opacity + <span class="hljs-number">0.01</span>, <span class="hljs-number">1</span>);}context.save();context.globalAlpha = <span class="hljs-keyword">this</span>.opacity;context.fillStyle = <span class="hljs-keyword">this</span>.shadowColor;context.strokeStyle = <span class="hljs-string">'hsl(330, 30%,'</span> + <span class="hljs-number">40</span> * (<span class="hljs-number">0.3</span> + axis.rate) + <span class="hljs-string">'%)'</span>;context.translate(axis.x, Math.max(axis.y, <span class="hljs-keyword">this</span>.thresholdY + <span class="hljs-keyword">this</span>.thresholdY - axis.y));context.rotate(Math.PI - <span class="hljs-keyword">this</span>.theta);context.scale(axis.rate * -Math.sin(<span class="hljs-keyword">this</span>.phi), axis.rate);context.translate(<span class="hljs-number">0</span>, <span class="hljs-keyword">this</span>.offsetY);<span class="hljs-keyword">this</span>.renderCherry(context, axis);context.restore();}context.save();context.fillStyle = <span class="hljs-keyword">this</span>.entityColor;context.strokeStyle = <span class="hljs-string">'hsl(330, 40%,'</span> + <span class="hljs-number">70</span> * (<span class="hljs-number">0.3</span> + axis.rate) + <span class="hljs-string">'%)'</span>;context.translate(axis.x, axis.y + Math.abs(<span class="hljs-keyword">this</span>.SINK_OFFSET * Math.sin(<span class="hljs-keyword">this</span>.psi) * axis.rate));context.rotate(<span class="hljs-keyword">this</span>.theta);context.scale(axis.rate * Math.sin(<span class="hljs-keyword">this</span>.phi), axis.rate);context.translate(<span class="hljs-number">0</span>, <span class="hljs-keyword">this</span>.offsetY);<span class="hljs-keyword">this</span>.renderCherry(context, axis);context.restore();<span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.y &lt;= -<span class="hljs-keyword">this</span>.renderer.height / <span class="hljs-number">4</span>){<span class="hljs-keyword">if</span>(!<span class="hljs-keyword">this</span>.endTheta){<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> theta = Math.PI / <span class="hljs-number">2</span>, end = Math.PI * <span class="hljs-number">3</span> / <span class="hljs-number">2</span>; theta &lt;= end; theta += Math.PI){<span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.theta &lt; theta &amp;&amp; <span class="hljs-keyword">this</span>.theta + Math.PI / <span class="hljs-number">200</span> &gt; theta){<span class="hljs-keyword">this</span>.theta = theta;<span class="hljs-keyword">this</span>.endTheta = <span class="hljs-literal">true</span>;<span class="hljs-keyword">break</span>;}}}<span class="hljs-keyword">if</span>(!<span class="hljs-keyword">this</span>.endPhi){<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> phi = Math.PI / <span class="hljs-number">8</span>, end = Math.PI * <span class="hljs-number">7</span> / <span class="hljs-number">8</span>; phi &lt;= end; phi += Math.PI * <span class="hljs-number">3</span> / <span class="hljs-number">4</span>){<span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.phi &lt; phi &amp;&amp; <span class="hljs-keyword">this</span>.phi + Math.PI / <span class="hljs-number">200</span> &gt; phi){<span class="hljs-keyword">this</span>.phi = Math.PI / <span class="hljs-number">8</span>;<span class="hljs-keyword">this</span>.endPhi = <span class="hljs-literal">true</span>;<span class="hljs-keyword">break</span>;}}}}<span class="hljs-keyword">if</span>(!<span class="hljs-keyword">this</span>.endTheta){<span class="hljs-keyword">if</span>(axis.y == <span class="hljs-keyword">this</span>.thresholdY){<span class="hljs-keyword">this</span>.theta += Math.PI / <span class="hljs-number">200</span> * ((<span class="hljs-keyword">this</span>.theta &lt; Math.PI / <span class="hljs-number">2</span> || (<span class="hljs-keyword">this</span>.theta &gt;= Math.PI &amp;&amp; <span class="hljs-keyword">this</span>.theta &lt; Math.PI * <span class="hljs-number">3</span> / <span class="hljs-number">2</span>)) ? <span class="hljs-number">1</span> : -<span class="hljs-number">1</span>);}<span class="hljs-keyword">else</span>{<span class="hljs-keyword">this</span>.theta += Math.PI / <span class="hljs-number">500</span>;}<span class="hljs-keyword">this</span>.theta %= Math.PI * <span class="hljs-number">2</span>;}<span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.endPhi){<span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.rippleCount == <span class="hljs-keyword">this</span>.MAX_RIPPLE_COUNT){<span class="hljs-keyword">this</span>.psi += <span class="hljs-keyword">this</span>.dpsi;<span class="hljs-keyword">this</span>.psi %= Math.PI * <span class="hljs-number">2</span>;}}<span class="hljs-keyword">else</span>{<span class="hljs-keyword">this</span>.phi += Math.PI / ((axis.y == <span class="hljs-keyword">this</span>.thresholdY) ? <span class="hljs-number">200</span> : <span class="hljs-number">500</span>);<span class="hljs-keyword">this</span>.phi %= Math.PI;}<span class="hljs-keyword">if</span>(<span class="hljs-keyword">this</span>.y &lt;= -<span class="hljs-keyword">this</span>.renderer.height * <span class="hljs-keyword">this</span>.SURFACE_RATE){<span class="hljs-keyword">this</span>.x += <span class="hljs-number">2</span>;<span class="hljs-keyword">this</span>.y = -<span class="hljs-keyword">this</span>.renderer.height * <span class="hljs-keyword">this</span>.SURFACE_RATE;}<span class="hljs-keyword">else</span>{<span class="hljs-keyword">this</span>.x += <span class="hljs-keyword">this</span>.vx;<span class="hljs-keyword">this</span>.y += <span class="hljs-keyword">this</span>.vy;}<span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.z &gt; -<span class="hljs-keyword">this</span>.FOCUS_POSITION &amp;&amp; <span class="hljs-keyword">this</span>.z &lt; <span class="hljs-keyword">this</span>.FAR_LIMIT &amp;&amp; <span class="hljs-keyword">this</span>.x &lt; <span class="hljs-keyword">this</span>.renderer.width * <span class="hljs-number">1.5</span>;}};$(function(){RENDERER.<span class="hljs-keyword">init</span>();});&lt;/script&gt;</code></pre></div><p>其他：</p><p><a href="https://www.17sucai.com/pins/36303.html" target="_blank" rel="noopener">H5樱花掉落背景动画特效</a> ：<a href="https://www.17sucai.com/pins/36303.html" target="_blank" rel="noopener">https://www.17sucai.com/pins/36303.html</a></p><h1 id="添加背景代码雨特效"><a href="#添加背景代码雨特效" class="headerlink" title="添加背景代码雨特效"></a>添加背景代码雨特效</h1><p>新建 <code>DigitalRain.js</code>，写入以下代码：</p><div class="hljs"><pre><code class="hljs javascript">复制<span class="hljs-built_in">window</span>.onload = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>{    <span class="hljs-comment">//获取画布对象</span>    <span class="hljs-keyword">var</span> canvas = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"canvas"</span>);    <span class="hljs-comment">//获取画布的上下文</span>    <span class="hljs-keyword">var</span> context =canvas.getContext(<span class="hljs-string">"2d"</span>);    <span class="hljs-keyword">var</span> s = <span class="hljs-built_in">window</span>.screen;    <span class="hljs-keyword">var</span> W = canvas.width = s.width;    <span class="hljs-keyword">var</span> H = canvas.height;    <span class="hljs-comment">//获取浏览器屏幕的宽度和高度</span>    <span class="hljs-comment">//var W = window.innerWidth;</span>    <span class="hljs-comment">//var H = window.innerHeight;</span>    <span class="hljs-comment">//设置canvas的宽度和高度</span>    canvas.width = W;    canvas.height = H;    <span class="hljs-comment">//每个文字的字体大小</span>    <span class="hljs-keyword">var</span> fontSize = <span class="hljs-number">12</span>;    <span class="hljs-comment">//计算列</span>    <span class="hljs-keyword">var</span> colunms = <span class="hljs-built_in">Math</span>.floor(W /fontSize);    <span class="hljs-comment">//记录每列文字的y轴坐标</span>    <span class="hljs-keyword">var</span> drops = [];    <span class="hljs-comment">//给每一个文字初始化一个起始点的位置</span>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;colunms;i++){        drops.push(<span class="hljs-number">0</span>);    }    <span class="hljs-comment">//运动的文字</span>    <span class="hljs-keyword">var</span> str =<span class="hljs-string">"WELCOME TO WWW.ITRHX.COM"</span>;    <span class="hljs-comment">//4:fillText(str,x,y);原理就是去更改y的坐标位置</span>    <span class="hljs-comment">//绘画的函数</span>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">draw</span>(<span class="hljs-params"></span>)</span>{        context.fillStyle = <span class="hljs-string">"rgba(238,238,238,.08)"</span>;<span class="hljs-comment">//遮盖层</span>        context.fillRect(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,W,H);        <span class="hljs-comment">//给字体设置样式</span>        context.font = <span class="hljs-string">"600 "</span>+fontSize+<span class="hljs-string">"px  Georgia"</span>;        <span class="hljs-comment">//给字体添加颜色</span>        context.fillStyle = [<span class="hljs-string">"#33B5E5"</span>, <span class="hljs-string">"#0099CC"</span>, <span class="hljs-string">"#AA66CC"</span>, <span class="hljs-string">"#9933CC"</span>, <span class="hljs-string">"#99CC00"</span>, <span class="hljs-string">"#669900"</span>, <span class="hljs-string">"#FFBB33"</span>, <span class="hljs-string">"#FF8800"</span>, <span class="hljs-string">"#FF4444"</span>, <span class="hljs-string">"#CC0000"</span>][<span class="hljs-built_in">parseInt</span>(<span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">10</span>)];<span class="hljs-comment">//randColor();可以rgb,hsl, 标准色，十六进制颜色</span>        <span class="hljs-comment">//写入画布中</span>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;colunms;i++){            <span class="hljs-keyword">var</span> index = <span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random() * str.length);            <span class="hljs-keyword">var</span> x = i*fontSize;            <span class="hljs-keyword">var</span> y = drops[i] *fontSize;            context.fillText(str[index],x,y);            <span class="hljs-comment">//如果要改变时间，肯定就是改变每次他的起点</span>            <span class="hljs-keyword">if</span>(y &gt;= canvas.height &amp;&amp; <span class="hljs-built_in">Math</span>.random() &gt; <span class="hljs-number">0.99</span>){                drops[i] = <span class="hljs-number">0</span>;            }            drops[i]++;        }    };    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">randColor</span>(<span class="hljs-params"></span>)</span>{<span class="hljs-comment">//随机颜色</span>        <span class="hljs-keyword">var</span> r = <span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">256</span>);        <span class="hljs-keyword">var</span> g = <span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">256</span>);        <span class="hljs-keyword">var</span> b = <span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">256</span>);        <span class="hljs-keyword">return</span> <span class="hljs-string">"rgb("</span>+r+<span class="hljs-string">","</span>+g+<span class="hljs-string">","</span>+b+<span class="hljs-string">")"</span>;    }    draw();    setInterval(draw,<span class="hljs-number">35</span>);};</code></pre></div><p>在主题文件的相关css文件中（以 Material X 1.2.1 主题为例，在\themes\material-x-1.2.1\source\less_main.less 文件末尾）添加以下代码：</p><div class="hljs"><pre><code class="hljs css">复制<span class="hljs-selector-tag">canvas</span> {  <span class="hljs-attribute">position</span>: fixed;  <span class="hljs-attribute">right</span>: <span class="hljs-number">0px</span>;  <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0px</span>;  <span class="hljs-attribute">min-width</span>: <span class="hljs-number">100%</span>;  <span class="hljs-attribute">min-height</span>: <span class="hljs-number">100%</span>;  <span class="hljs-attribute">height</span>: auto;  <span class="hljs-attribute">width</span>: auto;  <span class="hljs-attribute">z-index</span>: -<span class="hljs-number">1</span>;}</code></pre></div><p>然后在主题的 layout.ejs 文件中引入即可：</p><div class="hljs"><pre><code class="hljs xml">复制<span class="hljs-comment">&lt;!-- 数字雨 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"canvas"</span> <span class="hljs-attr">width</span>=<span class="hljs-string">"1440"</span> <span class="hljs-attr">height</span>=<span class="hljs-string">"900"</span> &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"/js/DigitalRain.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre></div><p>最终效果：</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/035.png" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/035.png" srcset="/blog/img/loading.gif" alt="035"></a></p><h1 id="自定义一个不使用主题模板渲染的独立页面"><a href="#自定义一个不使用主题模板渲染的独立页面" class="headerlink" title="自定义一个不使用主题模板渲染的独立页面"></a>自定义一个不使用主题模板渲染的独立页面</h1><p>  有时候我们需要新建一个独立的页面，这个页面不使用主题的渲染，具有自己独立的样式，可以放一些自己的作品，相册什么的，以下就介绍这种独立页面的实现方法。</p><p>方法一：</p><p>  使用 Hexo 提供的跳过渲染配置，在博客根目录的配置文件 <code>_config.yml</code> 里找到 <code>skip_render</code> 关键字，在后面添加想要跳过渲染的页面，比如我们创建 <code>\source\about\index.html</code>， 配置文件填写：<code>skip_render: about\**</code>，那么就表示 <code>\source\about</code> 里所有的文件将跳过渲染，里面的文件将会被直接复制到 public 文件夹，此时就会得到一个独立的 about 页面；官方文档：<a href="https://hexo.io/docs/configuration" target="_blank" rel="noopener">https://hexo.io/docs/configuration</a></p><p>方法二：</p><p>  在文章头部的 Front-matter 里添加配置 <code>layout: false</code> 来跳过渲染配置，比如我们要使 about 页面跳过渲染，创建 <code>\source\about\index.md</code>，将这个页面的相关 HTML 代码写进<code>.md</code>文件并保存，然后在 <code>index.md</code> 的头部写入：</p><div class="hljs"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><span class="hljs-attr">layout:</span> <span class="hljs-literal">false</span><span class="hljs-meta">---</span><span class="hljs-string">{%</span> <span class="hljs-string">raw</span> <span class="hljs-string">%}</span><span class="hljs-string">这里是</span> <span class="hljs-string">HTML</span> <span class="hljs-string">代码</span><span class="hljs-string">{%</span> <span class="hljs-string">endraw</span> <span class="hljs-string">%}</span></code></pre></div><p>PS：Front-matter 是 <code>.md</code> 文件最上方以 — 分隔的区域，用于指定个别文件的变量，官方文档：<a href="https://hexo.io/docs/front-matter" target="_blank" rel="noopener">https://hexo.io/docs/front-matter</a></p><p>效果可以对比我的<a href="https://www.itrhx.com/" target="_blank" rel="noopener">博客主页</a>和<a href="https://www.itrhx.com/about/" target="_blank" rel="noopener">关于页面</a></p><h1 id="更改本地预览端口号"><a href="#更改本地预览端口号" class="headerlink" title="更改本地预览端口号"></a>更改本地预览端口号</h1><p>hexo博客在执行 <code>hexo s</code> 进行本地预览的时候，默认端口号是4000，当该端口号被占用时会报错 <code>Error: listen EADDRINUSE 0.0.0.0:4000</code> ，此时可以关闭占用该端口的进程，也可以更换端口号，更换端口号可以通过以下两种方法实现：</p><p>方法一：在根目录的 <code>_config.yml</code> 配置文件内加上如下代码更改 <code>hexo s</code> 运行时的端口号：</p><div class="hljs"><pre><code class="hljs yaml"><span class="hljs-attr">server:</span>  <span class="hljs-attr">port:</span> <span class="hljs-number">5000</span>  <span class="hljs-attr">compress:</span> <span class="hljs-literal">true</span>  <span class="hljs-attr">header:</span> <span class="hljs-literal">true</span></code></pre></div><p>方法二：通过 <code>hexo server -p 5000</code> 命令来指定端口，这种方法只是本次执行有效</p><h1 id="其他网页小挂件推荐"><a href="#其他网页小挂件推荐" class="headerlink" title="其他网页小挂件推荐"></a>其他网页小挂件推荐</h1><ul><li><a href="http://abowman.com/" target="_blank" rel="noopener">http://abowman.com/</a> 里面有很多有趣的小挂件，可以养养鱼、龟、狗、仓鼠等各式各样的虚拟宠物，能根据你的鼠标指针位置移动，直接复制代码就可以用</li><li><a href="http://www.revolvermaps.com/" target="_blank" rel="noopener">http://www.revolvermaps.com/</a> 它提供网站访客地理信息，可以以2D、3D等形式显示</li><li><a href="http://www.amazingcounters.com/" target="_blank" rel="noopener">http://www.amazingcounters.com/</a> 免费网站计数器，有非常多的样式供你选择，可以设置计数器初始数值，可以设置按访问量计数，也可以按独立访问者计数</li><li><a href="https://www.seniverse.com/widget/get" target="_blank" rel="noopener">https://www.seniverse.com/widget/get</a> 心知天气提供基于Web的免费天气插件，可以为你的网站添加一项简洁美观的天气预报功能，并自动适配PC和手机上的浏览</li></ul><!--more--><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[转]使用Hexo-Git-Backup插件备份你的Hexo博客</title>
    <link href="/blog/2020/02/05/%E8%BD%AC-%E4%BD%BF%E7%94%A8Hexo-Git-Backup%E6%8F%92%E4%BB%B6%E5%A4%87%E4%BB%BD%E4%BD%A0%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2/"/>
    <url>/blog/2020/02/05/%E8%BD%AC-%E4%BD%BF%E7%94%A8Hexo-Git-Backup%E6%8F%92%E4%BB%B6%E5%A4%87%E4%BB%BD%E4%BD%A0%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<p>欢迎关注我的 CSDN 专栏：<a href="https://blog.csdn.net/qq_36759224/article/category/9285510" target="_blank" rel="noopener">《个人博客搭建：Hexo+Github Pages》</a>，从搭建到美化一条龙，帮你解决 Hexo 常见问题！</p><hr><p>由于 Hexo 博客是静态托管的，所有的原始数据都保存在本地，如果哪一天电脑坏了，或者是误删了本地数据，那就是叫天天不应叫地地不灵了，此时定时备份就显得比较重要了，常见的备份方法有：打包数据保存到U盘、云盘或者其他地方，但是早就有大神开发了备份插件：<a href="https://github.com/coneycode/hexo-git-backup" target="_blank" rel="noopener">hexo-git-backup</a> ，只需要一个命令就可以将所有数据包括主题文件备份到 github 了</p><a id="more"></a><p>首先进入你博客目录，输入命令 <code>hexo version</code> 查看 Hexo 版本，如图所示，我的版本是 3.7.1：</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A53/01.png" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A53/01.png" srcset="/blog/img/loading.gif" alt="01"></a></p><p>安装备份插件，如果你的 Hexo 版本是 2.x.x，则使用以下命令安装：</p><div class="hljs"><pre><code class="hljs angelscript">$ npm install hexo-git-<span class="hljs-symbol">backup@</span><span class="hljs-number">0.0</span><span class="hljs-number">.91</span> --save</code></pre></div><p>如果你的 Hexo 版本是 3.x.x，则使用以下命令安装：</p><div class="hljs"><pre><code class="hljs sql">$ npm <span class="hljs-keyword">install</span> hexo-git-<span class="hljs-keyword">backup</span> <span class="hljs-comment">--save</span></code></pre></div><p>到 Hexo 博客根目录的 <code>_config.yml</code> 配置文件里添加以下配置：</p><div class="hljs"><pre><code class="hljs less"><span class="hljs-attribute">backup</span>:  <span class="hljs-attribute">type</span>: git  <span class="hljs-attribute">theme</span>: material-x-<span class="hljs-number">1.2</span>.<span class="hljs-number">1</span>  <span class="hljs-attribute">message</span>: Back up my www.itrhx.com blog  <span class="hljs-attribute">repository</span>:    <span class="hljs-attribute">github</span>: git<span class="hljs-variable">@github</span>.<span class="hljs-attribute">com</span>:TRHX/TRHX.github.io.git,backup    <span class="hljs-attribute">coding</span>: git<span class="hljs-variable">@git</span>.dev.tencent.<span class="hljs-attribute">com</span>:TRHX/TRHX.git,backup</code></pre></div><p>参数解释：</p><ul><li>theme：你要备份的主题名称</li><li>message：自定义提交信息</li><li>repository：仓库名，注意仓库地址后面要添加一个分支名，比如我就创建了一个 backup 分支</li></ul><p>最后使用以下命令备份你的博客：</p><div class="hljs"><pre><code class="hljs elixir"><span class="hljs-variable">$ </span>hexo backup</code></pre></div><p>或者使用以下简写命令也可以：</p><div class="hljs"><pre><code class="hljs elixir"><span class="hljs-variable">$ </span>hexo b</code></pre></div><p>备份成功后可以在你的仓库分支下看到备份的原始文件：</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A53/02.png" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A53/02.png" srcset="/blog/img/loading.gif" alt="02"></a></p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A53/03.png" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A53/03.png" srcset="/blog/img/loading.gif" alt="03"></a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>博客</tag>
      
      <tag>GitHub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>RSS订阅(含转载内容)</title>
    <link href="/blog/2020/02/05/RSS%E8%AE%A2%E9%98%85-%E5%90%AB%E8%BD%AC%E8%BD%BD%E5%86%85%E5%AE%B9/"/>
    <url>/blog/2020/02/05/RSS%E8%AE%A2%E9%98%85-%E5%90%AB%E8%BD%AC%E8%BD%BD%E5%86%85%E5%AE%B9/</url>
    
    <content type="html"><![CDATA[<h1 id="添加RSS订阅"><a href="#添加RSS订阅" class="headerlink" title="添加RSS订阅"></a>添加RSS订阅</h1><p>RSS订阅是站点用来和其他站点之间共享内容的一种简易方式，即Really Simple Syndication（简易信息聚合），如果不会使用，可以参见百度百科：<a href="https://baike.baidu.com/item/RSS订阅/663114" target="_blank" rel="noopener">https://baike.baidu.com/item/RSS%E8%AE%A2%E9%98%85/663114</a> ；首先我们安装feed插件，在本地hexo目录下右键<code>git bash here</code>，输入以下命令：</p><div class="hljs"><pre><code class="hljs cmake">$ npm <span class="hljs-keyword">install</span> hexo-generator-feed</code></pre></div><p>等待安装完成后，打开hexo目录下配置文件的<code>_config.yml</code>，在末尾添加以下配置：</p><div class="hljs"><pre><code class="hljs dts"><span class="hljs-meta"># Extensions</span><span class="hljs-meta">## Plugins: http:<span class="hljs-comment">//hexo.io/plugins/</span></span><span class="hljs-meta">#RSS订阅</span><span class="hljs-symbol">plugin:</span>- hexo-generator-feed<span class="hljs-meta">#Feed Atom</span><span class="hljs-symbol">feed:</span><span class="hljs-symbol">type:</span> atom<span class="hljs-symbol">path:</span> atom.xml<span class="hljs-symbol">limit:</span> <span class="hljs-number">20</span></code></pre></div><p>随后打开主题配置文件<code>_config.yml</code>，添加以下配置：</p><div class="hljs"><pre><code class="hljs avrasm"><span class="hljs-symbol">rss:</span> /atom.xml</code></pre></div><p>至此，RSS订阅功能添加完成</p><hr><p><font size="5">【注】</font>以下内容转载自互联网，其作者：奔跑中的奶酪<img src="https://www.runningcheese.com/wp-content/uploads/2019070607074296.png" srcset="/blog/img/loading.gif" style="zoom:25%;"></p><h1 id="《可能是目前最全的RSS订阅源了》"><a href="#《可能是目前最全的RSS订阅源了》" class="headerlink" title="《可能是目前最全的RSS订阅源了》"></a>《可能是目前最全的RSS订阅源了》</h1><h2 id="导读"><a href="#导读" class="headerlink" title="导读"></a>导读</h2><p><img src="https://tva3.sinaimg.cn/large/7a6a15d5gy1fieoorpfd0j20l4034jsj.jpg" srcset="/blog/img/loading.gif" alt="可能是目前最全的RSS订阅源了"><br>继上一篇文章《<a href="https://www.runningcheese.com/go?url=http://www.runningcheese.com/rss-feed" target="_blank" rel="noopener">当我们谈论RSS时，我们在谈论什么？</a> 》发布后，阅读甚少，反响也是平平。奶酪不得不承认一个事实，RSS 做为一种“上古神器”，如果你经历过 RSS 的风光时期，你会一直喜欢它。但如果你对它了解甚少，尽管我再如何推荐，高使用门槛还是很难让你对RSS喜欢得起来。</p><p>RSS 高门槛的主要原因在于，优质RSS阅读器选择少，以及订阅源的缺失。上一期我极力推荐了一款在线 RSS 阅读器 <a href="https://www.runningcheese.com/go?url=https://feeder.co/reader" target="_blank" rel="noopener">Feeder.co</a>，它已经足够的优秀了。所以接下来的问题，就是解决如何寻找订阅源的问题了，而本期内容正是解决如何查找RSS 订阅源的问题。</p><a id="more"></a><h2 id="一、万物皆可RSS"><a href="#一、万物皆可RSS" class="headerlink" title="一、万物皆可RSS"></a>一、万物皆可RSS</h2><p>如果你细心观察就会发现，提供 RSS 相关服务的网站都是国外的，国内与 RSS 相关的网站都相继宣布关闭了。你会发现国内提供 RSS 相关服务的网站都是个人或者小机构，这其中有一个叫 <a href="https://www.runningcheese.com/go?url=https://docs.rsshub.app/" target="_blank" rel="noopener">RSSHub</a> 的网站，是这其中的集大成者，它的作用是可以给任何奇奇怪怪的内容生成 RSS 订阅源。</p><p><a href="https://tva1.sinaimg.cn/large/7a6a15d5gy1fz8lxt0w3nj20sn0g8juc.jpg" target="_blank" rel="noopener"><img src="https://tva1.sinaimg.cn/large/7a6a15d5gy1fz8lxt0w3nj20sn0g8juc.jpg" srcset="/blog/img/loading.gif" alt="RSSHub"></a></p><ol><li><p>一般网站和博客：</p><p> 1). 通常在顶部菜单、右侧菜单、底部菜单等地方会有RSS图标。<br> 2). 如果没有，可以尝试在网站地址后面加上/rss或者/feed，有时会出现在二级域名里。<br> 3). 如果还没有，可以使用奶酪制作的小书签来自动查找RSS订阅源，<a href="javascript:(function(){window.open('https://feeder.co/settings/feeds/new?ctx=extension&amp;q='+escape(location.href))})();">订阅到Feeder</a> ，<a href="javascript:location.href='https://www.inoreader.com/feed/'+encodeURIComponent(location.href)">订阅到Inoreader</a> ，<a href="javascript:location.href='javascript:(function(){window.open('https://feedly.com/i/discover/sources/search/feed/'+escape(location.href))})();">订阅到Feedly</a><br> 4). 如果还是没有，可能网站没有提供RSS订阅。可以借用 <a href="https://www.runningcheese.com/go?url=http://createfeed.fivefilters.org/" target="_blank" rel="noopener">Fivefilters.org</a> 或者 <a href="https://www.runningcheese.com/go?url=https://feedity.com/default.aspx" target="_blank" rel="noopener">Feedity.com</a>来制作订阅源。<br> 5). 对于一些只提供了摘要RSS的网站，可以使用 <a href="https://www.runningcheese.com/go?url=https://feedex.net/" target="_blank" rel="noopener">FeedEx.Net</a> 来制作全文RSS。</p></li><li><p>论坛：</p><p> 一般会有 RSS 图标，如果没有，在网址后面加上 ?mod=rss。</p><p> 比如网址</p></li></ol><div class="hljs"><pre><code>http://bbs.kafan.cn/forum-215-1.html，其 rss 地址为http://bbs.kafan.cn/forum-215-1.html?mod=rss</code></pre></div><ol start="3"><li><p>微博：</p><p> <a href="https://rsshub.app/weibo/user2/博主ID，比如" target="_blank" rel="noopener">https://rsshub.app/weibo/user2/博主ID，比如</a></p></li></ol><div class="hljs"><pre><code>https://rsshub.app/weibo/user2/1195230310</code></pre></div><ol start="4"><li><p>微信公众号：</p><p> 在</p></li></ol><div class="hljs"><pre><code>瓦斯阅读搜索要订阅的公众号名称，就会有专门的RSS订阅地址。</code></pre></div><ol start="5"><li><p>简书：</p><p> <a href="https://rsshub.app/jianshu/user/作者ID，比如" target="_blank" rel="noopener">https://rsshub.app/jianshu/user/作者ID，比如</a></p></li></ol><div class="hljs"><pre><code>https://rsshub.app/jianshu/user/yZq3ZV</code></pre></div><ol start="6"><li><p>B站：</p><p> <a href="https://rsshub.app/bilibili/user/video/UP主ID，比如" target="_blank" rel="noopener">https://rsshub.app/bilibili/user/video/UP主ID，比如</a></p></li></ol><div class="hljs"><pre><code>https://rsshub.app/bilibili/user/video/2267573</code></pre></div><ol start="7"><li><p>贴吧：</p><p> 精品贴订阅：<a href="https://rsshub.app/tieba/forum/good/贴吧吧名（支持中文），" target="_blank" rel="noopener">https://rsshub.app/tieba/forum/good/贴吧吧名（支持中文），</a></p><p> 比如</p></li></ol><div class="hljs"><pre><code>https://rsshub.app/tieba/forum/good/哲学</code></pre></div><ol start="8"><li><p>知乎：</p><p> 知乎热榜：</p><p> <a href="https://rsshub.app/zhihu/hotlist" target="_blank" rel="noopener">https://rsshub.app/zhihu/hotlist</a></p><p> 用户动态：<a href="https://rsshub.app/zhihu/people/activities/用户ID，" target="_blank" rel="noopener">https://rsshub.app/zhihu/people/activities/用户ID，</a></p><p> 比如</p></li></ol><div class="hljs"><pre><code>https://rsshub.app/zhihu/people/activities/runningcheese知乎专栏：https://rsshub.app/zhihu/zhuanlan/专栏ID，比如https://rsshub.app/zhihu/zhuanlan/methodology</code></pre></div><ol start="9"><li><p>知乎日报：</p><p> 订阅：</p><p> <a href="https://rsshub.app/zhihu/daily" target="_blank" rel="noopener">https://rsshub.app/zhihu/daily</a></p><p> 分栏订阅：</p></li></ol><div class="hljs"><pre><code>http://zhihurss.miantiao.me/section</code></pre></div><ol start="10"><li><p>豆瓣小组：</p><p><a href="https://www.douban.com/feed/group/豆瓣小组ID/discussion，" target="_blank" rel="noopener">https://www.douban.com/feed/group/豆瓣小组ID/discussion，</a></p><p>比如</p></li></ol><div class="hljs"><pre><code>https://www.douban.com/feed/group/beijing/discussion</code></pre></div><ol start="11"><li><p>Twiter：</p><p><a href="https://rsshub.app/twitter/user/用户ID，比如" target="_blank" rel="noopener">https://rsshub.app/twitter/user/用户ID，比如</a></p></li></ol><div class="hljs"><pre><code>https://rsshub.app/twitter/user/runningcheese</code></pre></div><ol start="12"><li><p>Instagram：</p><p><a href="https://rsshub.app/instagram/user/用户ID，比如" target="_blank" rel="noopener">https://rsshub.app/instagram/user/用户ID，比如</a></p></li></ol><div class="hljs"><pre><code>https://rsshub.app/instagram/user/runningcheeselive</code></pre></div><ol start="13"><li><p>U2B：</p><p><a href="https://rsshub.app/youtube/user/用户ID，比如" target="_blank" rel="noopener">https://rsshub.app/youtube/user/用户ID，比如</a></p></li></ol><div class="hljs"><pre><code>https://rsshub.app/youtube/user/JFlaMusic/https://rsshub.app/youtube/channel/频道ID，比如https://rsshub.app/youtube/channel/UCDwDMPOZfxVV0x_dz0eQ8KQ</code></pre></div><ol start="14"><li><p>Reddit：</p><p>在当前链接后面加入.rss，比如</p></li></ol><div class="hljs"><pre><code>https://www.reddit.com/r/nba/top/改成https://www.reddit.com/r/nba/top/.rss</code></pre></div><ol start="15"><li><p>抖音：</p><p><a href="https://rsshub.app/douyin/user/用户ID，比如" target="_blank" rel="noopener">https://rsshub.app/douyin/user/用户ID，比如</a></p></li></ol><div class="hljs"><pre><code>https://rsshub.app/douyin/user/93610979153</code></pre></div><ol start="16"><li><p>网易云音乐：</p><p>1). 歌单歌曲<br><a href="https://rsshub.app/ncm/playlist/歌单ID，比如" target="_blank" rel="noopener">https://rsshub.app/ncm/playlist/歌单ID，比如</a> <a href="https://www.runningcheese.com/go?url=https://rsshub.app/ncm/playlist/152306943" target="_blank" rel="noopener">https://rsshub.app/ncm/playlist/152306943</a><br>2). 用户歌单<br><a href="https://rsshub.app/ncm/user/playlist/用户ID，比如" target="_blank" rel="noopener">https://rsshub.app/ncm/user/playlist/用户ID，比如</a> <a href="https://www.runningcheese.com/go?url=https://rsshub.app/ncm/user/playlist/70938242" target="_blank" rel="noopener">https://rsshub.app/ncm/user/playlist/70938242</a><br>3). 电台节目<br><a href="https://rsshub.app/ncm/djradio/电台ID，比如" target="_blank" rel="noopener">https://rsshub.app/ncm/djradio/电台ID，比如</a> <a href="https://www.runningcheese.com/go?url=https://rsshub.app/ncm/djradio/347317067" target="_blank" rel="noopener">https://rsshub.app/ncm/djradio/347317067</a></p></li><li><p>喜马拉雅：</p><p><a href="https://rsshub.app/ximalaya/album/专辑ID，比如" target="_blank" rel="noopener">https://rsshub.app/ximalaya/album/专辑ID，比如</a></p></li></ol><div class="hljs"><pre><code>https://rsshub.app/ximalaya/album/299146</code></pre></div><ol start="18"><li><p>Github：</p><p>1). 用户动态: 地址 + .atom，比如 <a href="https://www.runningcheese.com/go?url=https://github.com/runningcheese.atom" target="_blank" rel="noopener">https://github.com/runningcheese.atom</a><br>2). 仓库releases: 地址 + .atom，比如 <a href="https://www.runningcheese.com/go?url=https://github.com/soimort/you-get/releases.atom" target="_blank" rel="noopener">https://github.com/soimort/you-get/releases.atom</a><br>3). 仓库commits: 地址 + .atom，比如 <a href="https://www.runningcheese.com/go?url=https://github.com/runningcheese/RunningCheese-Firefox/commits/master.atom" target="_blank" rel="noopener">https://github.com/runningcheese/RunningCheese-Firefox/commits/master.atom</a><br>4). 仓库issues：<a href="https://rsshub.app/github/issue/用户名/仓库名，比如" target="_blank" rel="noopener">https://rsshub.app/github/issue/用户名/仓库名，比如</a> <a href="https://www.runningcheese.com/go?url=https://rsshub.app/github/issue/runningcheese/RunningCheese-Firefox" target="_blank" rel="noopener">https://rsshub.app/github/issue/runningcheese/RunningCheese-Firefox</a></p></li><li><p>V2EX：</p><p>周报：</p><p><a href="http://vdaily.iu.vc/old-weekly.xml" target="_blank" rel="noopener">http://vdaily.iu.vc/old-weekly.xml</a></p></li></ol><ol start="20"><li><p>Dribble：</p><p><a href="https://rsshub.app/dribbble/user/用户ID，比如" target="_blank" rel="noopener">https://rsshub.app/dribbble/user/用户ID，比如</a></p></li></ol><div class="hljs"><pre><code>https://rsshub.app/dribbble/user/google</code></pre></div><h2 id="二、RSS的一些其他玩用法"><a href="#二、RSS的一些其他玩用法" class="headerlink" title="二、RSS的一些其他玩用法"></a>二、RSS的一些其他玩用法</h2><p>1、<strong>监视网页内任意内容的变化。</strong></p><p>有一款叫 Distill Web Monitor 的拓展 （支持 Firefox / Chrome），可以让你监视网页某处内容的变化，并在第一时间通知你。</p><p>使用的场景非常多，比如监控某商城网站商品是否有货是否有降价，某网站上的房价涨跌提醒，某个页面是否有内容更新，某视频网站Po主发布新视频的提醒，再比如你是做运营的，想要监视竞争对手产品的动态，这款拓展都能做到。更加强大的地方在于它可以自定义提醒的条件，比如价格变化超过10%才提醒你。</p><p>2，<strong>指定新闻内容动态提醒。</strong></p><p><a href="https://www.runningcheese.com/go?url=https://www.google.com/alerts" target="_blank" rel="noopener">Google Alerts</a> 可以让用户指定监控的关键词，Google 会在第一时间内向用户推送新内容更新提醒，支持邮件提醒，也支持RSS提醒，非常方便，用户可以用这个功能来跟踪一些新闻报道，业界动态，获取最新的国际事件等等。</p><p>Google Alerts的最大作用就是：让用户能迅速而方便地获得其所关注的信息。Google Alerts能将有价值的信息主动推给用户，大大减少了用户获取信息的时间。实现了“不上网而知天下事”。百度也有<a href="https://www.runningcheese.com/go?url=https://www.baidu.com/search/rss.html" target="_blank" rel="noopener">类似产品</a>。</p><p>3，<strong>RSS 配合 IFTTT</strong></p><p>IFTTT是“if this then that”的缩写，可以让你的网络行为能够引发连锁反应。以RSS为例，比如在你的RSS订阅源里出现了有关于”iPhone8”的信息，联接上IFTTT后就可以在手机上弹窗通知我们了。</p><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>1，整理RSS订阅源是一件有趣的事情，上一期奶酪说过不推荐使用本地RSS阅读器，但本地RSS阅读器在整理RSS订阅源的时候非常方便（推荐使用拓展Feedbro，支持 <a href="https://www.runningcheese.com/go?url=https://addons.mozilla.org/zh-CN/firefox/addon/feedbroreader/?src=search" target="_blank" rel="noopener">Firefox</a> / <a href="https://www.runningcheese.com/go?url=https://chrome.google.com/webstore/detail/feedbro/mefgmmbdailogpfhfblcnnjfmnpnmdfa/" target="_blank" rel="noopener">Chrome</a>），你可以把订阅源在本地RSS阅读器里整理好后导出为 opml文件，再导入到在线RSS阅读器中去。<br>2，下载链接如若失效，关注奶酪<a href="https://tva1.sinaimg.cn/large/7a6a15d5gy1fr3v1xxt8ej205k05kt8p.jpg" target="_blank" rel="noopener">公众号</a>（ID：runningcheese01）回复关键字“RSS”获取奶酪的opml文件，可一键导入。</p><p><a href="https://www.runningcheese.com/tag/高效方法论" target="_blank" rel="noopener">高效方法论(8)</a></p><p>注：本文由 奔跑中的奶酪 作者：<a href="https://www.runningcheese.com/author/1" target="_blank" rel="noopener">奔跑中的奶酪</a> 发表，其版权均为作者所有，如需转载，请注明作者名字以及文章来源。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>将本地文件上传到GitHub</title>
    <link href="/blog/2020/02/05/%E5%B0%86%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B0Github/"/>
    <url>/blog/2020/02/05/%E5%B0%86%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B0Github/</url>
    
    <content type="html"><![CDATA[<p>百度“如何将文件上传到Github”，其中发现两篇很有用的教程：</p><h1 id="使用git将项目上传到github（最简单方法）"><a href="#使用git将项目上传到github（最简单方法）" class="headerlink" title="使用git将项目上传到github（最简单方法）"></a><a href="https://www.cnblogs.com/cxk1995/p/5800196.html" target="_blank" rel="noopener">使用git将项目上传到github（最简单方法）</a></h1><h1 id="如何使用git把本地代码上传（更新）到github上"><a href="#如何使用git把本地代码上传（更新）到github上" class="headerlink" title="如何使用git把本地代码上传（更新）到github上"></a><a href="https://baijiahao.baidu.com/s?id=1619544681032320225&amp;wfr=spider&amp;for=pc" target="_blank" rel="noopener">如何使用git把本地代码上传（更新）到github上</a></h1><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>GitHub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>浏览器网页标签页图标显示</title>
    <link href="/blog/2020/02/04/%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BD%91%E9%A1%B5%E6%A0%87%E7%AD%BE%E9%A1%B5%E5%9B%BE%E6%A0%87%E6%98%BE%E7%A4%BA/"/>
    <url>/blog/2020/02/04/%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BD%91%E9%A1%B5%E6%A0%87%E7%AD%BE%E9%A1%B5%E5%9B%BE%E6%A0%87%E6%98%BE%E7%A4%BA/</url>
    
    <content type="html"><![CDATA[<ul><li>对于IE浏览器：把需要显示的16x16像素的ICO图标命名为favicon.ICO放置在网站根目录下，浏览器会自动检索</li><li>对于其他浏览器通用的在标签页加入指定图标的方法：<div class="hljs"><pre><code>把favicon.ico图标放到网站根目录下，在网页的``&lt;head&gt;&lt;/head&gt;``中加入</code></pre></div></li></ul><div class="hljs"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 地址栏显示 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"Shortcut Icon"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"./favicon.ico"</span>  <span class="hljs-attr">type</span>=<span class="hljs-string">"image/x-icon"</span> /&gt;</span><span class="hljs-comment">&lt;!-- 收藏栏也显示 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"Bookmark"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"./favicon.ico"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"image/x-icon"</span> /&gt;</span></code></pre></div><ul><li><p>火狐浏览器对图标格式没有那么严格，GIF和PNG格式的图标也可以显示，图标名称也可以不是favcion</p></li><li><p>链接在线的图片</p>  <div class="hljs"><pre><code class="hljs routeros">&lt;link <span class="hljs-attribute">rel</span>=<span class="hljs-string">"Shortcut Icon"</span> <span class="hljs-attribute">href</span>=<span class="hljs-string">"http://csdnimg.cn/www/images/favicon.ico"</span>&gt;</code></pre></div></li><li><p>获取ico图标的资源网</p><p>  <a href="http://sc.chinaz.com/" target="_blank" rel="noopener">http://sc.chinaz.com/</a></p><p>  favicon在线制作网站  </p><p>  <a href="https://tool.lu/favicon/" target="_blank" rel="noopener">https://tool.lu/favicon/</a>    </p><p>  图标制作，经常搞一些图标替换桌面图标</p><p>  <a href="http://www.faviconico.org/" target="_blank" rel="noopener">http://www.faviconico.org/</a>  </p></li><li><p>或者在html的head表头中加</p><p>  <code>&lt;link rel="shortcut icon" href="favicon.ico" type="image/x-icon" /&gt;</code></p><p>  如果icon是gif动态图需要修改type属性</p><p>  <code>&lt;link rel="icon" href="gif_favicon.gif" type="image/gif" &gt;</code></p></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>HTML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文章作者</title>
    <link href="/blog/2020/02/03/%E6%96%87%E7%AB%A0%E4%BD%9C%E8%80%85/"/>
    <url>/blog/2020/02/03/%E6%96%87%E7%AB%A0%E4%BD%9C%E8%80%85/</url>
    
    <content type="html"><![CDATA[<p>由于支持多作者共同维护一个博客，所以可以设置单独一篇文章的作者：</p><div class="hljs"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><span class="hljs-attr">author:</span>  <span class="hljs-attr">name:</span> <span class="hljs-string">作者</span>  <span class="hljs-attr">avatar:</span> <span class="hljs-string">https://img.vim-cn.com/a1/d53c11fb5d4fd69529bc805d385fe818feb3f6.png</span>  <span class="hljs-attr">url:</span> <span class="hljs-string">https://baidu.com</span><span class="hljs-meta">---</span></code></pre></div><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文章置顶</title>
    <link href="/blog/2020/02/03/%E6%96%87%E7%AB%A0%E7%BD%AE%E9%A1%B6/"/>
    <url>/blog/2020/02/03/%E6%96%87%E7%AB%A0%E7%BD%AE%E9%A1%B6/</url>
    
    <content type="html"><![CDATA[<p>在Front-matter中设置以下值：</p><div class="hljs"><pre><code class="hljs yaml"><span class="hljs-attr">top:</span> <span class="hljs-literal">true</span></code></pre></div><p>如果想自定义置顶标签的文字，可以直接设置为字符串，例如：</p><div class="hljs"><pre><code class="hljs avrasm"><span class="hljs-symbol">top:</span> 近期更新</code></pre></div><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文章分类</title>
    <link href="/blog/2020/02/03/%E6%96%87%E7%AB%A0%E5%88%86%E7%B1%BB/"/>
    <url>/blog/2020/02/03/%E6%96%87%E7%AB%A0%E5%88%86%E7%B1%BB/</url>
    
    <content type="html"><![CDATA[<p>多个分类有两种关系，一种是层级（等同于文件夹），一种是并列（等同于标签）。</p><p><strong>多级分类</strong></p><div class="hljs"><pre><code class="hljs apache"><span class="hljs-attribute">categories</span>:<span class="hljs-meta"> [分类A, 分类B]</span></code></pre></div><p>或者</p><div class="hljs"><pre><code class="hljs markdown">categories:<span class="hljs-bullet">  - </span>分类A<span class="hljs-bullet">  - </span>分类B</code></pre></div><p><strong>并列分类</strong></p><div class="hljs"><pre><code class="hljs css"><span class="hljs-selector-tag">categories</span>:  <span class="hljs-selector-tag">-</span> <span class="hljs-selector-attr">[分类A]</span>  <span class="hljs-selector-tag">-</span> <span class="hljs-selector-attr">[分类B]</span></code></pre></div><p><strong>多级+并列分类</strong></p><div class="hljs"><pre><code class="hljs css"><span class="hljs-selector-tag">categories</span>:  <span class="hljs-selector-tag">-</span> <span class="hljs-selector-attr">[分类A, 分类B]</span>  <span class="hljs-selector-tag">-</span> <span class="hljs-selector-attr">[分类C, 分类D]</span></code></pre></div><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文章音乐bgm</title>
    <link href="/blog/2020/02/03/%E6%96%87%E7%AB%A0%E9%9F%B3%E4%B9%90bgm/"/>
    <url>/blog/2020/02/03/%E6%96%87%E7%AB%A0%E9%9F%B3%E4%B9%90bgm/</url>
    
    <content type="html"><![CDATA[<p>标题右边显示迷你音乐播放器，支持的字段有：<code>server</code>、<code>type</code>、<code>id</code>，取值详见【进阶设定 -&gt; 第三方服务 -&gt; APlayer】。</p><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><div class="hljs"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><span class="hljs-attr">music:</span>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span>      <span class="hljs-comment"># true（文章内和文章列表都显示） internal（只在文章内显示）</span>  <span class="hljs-attr">autoplay:</span> <span class="hljs-literal">true</span><span class="hljs-comment"># 自动播放。默认：false</span>  <span class="hljs-attr">server:</span> <span class="hljs-string">netease</span>   <span class="hljs-comment"># netease（网易云音乐）tencent（QQ音乐） xiami（虾米） kugou（酷狗）</span>  <span class="hljs-attr">type:</span> <span class="hljs-string">song</span>        <span class="hljs-comment"># song （单曲） album （专辑） playlist （歌单） search （搜索）</span>  <span class="hljs-attr">id:</span> <span class="hljs-number">26664345</span>      <span class="hljs-comment"># 歌曲/专辑/歌单 ID</span>  <span class="hljs-attr">volume:</span> <span class="hljs-number">0.3</span>       <span class="hljs-comment">#声音大小</span><span class="hljs-meta">---</span></code></pre></div><p>实际效果见：<a href="https://mxclub.github.io/example/文章专属BGM/" target="_blank" rel="noopener">《文章专属BGM》</a></p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>添加CNZZ统计代码</title>
    <link href="/blog/2020/02/03/%E6%B7%BB%E5%8A%A0CNZZ%E7%BB%9F%E8%AE%A1%E4%BB%A3%E7%A0%81/"/>
    <url>/blog/2020/02/03/%E6%B7%BB%E5%8A%A0CNZZ%E7%BB%9F%E8%AE%A1%E4%BB%A3%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<p>先在博客主题配置文件themes\material-x_config.yml添加代码：</p><div class="hljs"><pre><code class="hljs yaml"><span class="hljs-comment">#添加CNZZ统计</span><span class="hljs-attr">cnzz:</span> <span class="hljs-literal">true</span></code></pre></div><p>这里这个cnzz的名字可以自己取；然后在themes\material-x\layout_partial里面创建一个 cnzz.ejs文件；把cnzz给的代码复制进去；</p><div class="hljs"><pre><code class="hljs gcode">&lt;<span class="hljs-meta">%</span> <span class="hljs-keyword">if</span> <span class="hljs-comment">(theme.cnzz)</span>{ <span class="hljs-meta">%</span>&gt; <span class="hljs-comment">//这里添加复制的CNZZ代码</span>&lt;<span class="hljs-meta">%</span> } <span class="hljs-meta">%</span>&gt;</code></pre></div><p>然后再在footer.ejs的后面添加上一行代码就可以显示了（这里的位置可以换，可以不是scripts.ejs，或者是head.ejs，看自己的喜好）</p><div class="hljs"><pre><code class="hljs erb"><span class="xml"><span class="hljs-comment">&lt;!--CNZZ统计--&gt;</span></span><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">%-</span></span></span><span class="ruby"> partial(<span class="hljs-string">'cnzz'</span>) </span><span class="xml"><span class="hljs-tag">%&gt;</span></span></code></pre></div><p>对百度统计也可以进行同样的处理；</p><div class="hljs"><pre><code class="hljs gcode">&lt;<span class="hljs-meta">%</span> <span class="hljs-keyword">if</span> <span class="hljs-comment">(theme.cnzz)</span>{ <span class="hljs-meta">%</span>&gt;<span class="hljs-comment">//前面要添加的代码</span><span class="hljs-comment">//百度统计的代码</span>&lt;<span class="hljs-meta">%</span> } <span class="hljs-meta">%</span>&gt;</code></pre></div><p>与上面的操作基本一致只是取得名字不一样。</p><p>上面的是一种方法；</p><p>如果嫌麻烦的话直接就在footer.ejs的后面添加cnzz的代码；直接就可以显示了（同理，可以添加在其他位置），貌似添加在这里速度最快。</p><div class="hljs"><pre><code class="hljs gcode">&lt;<span class="hljs-meta">%</span> <span class="hljs-keyword">if</span> <span class="hljs-comment">(theme.cnzz)</span>{ <span class="hljs-meta">%</span>&gt; <span class="hljs-comment">//前面要添加的代码</span><span class="hljs-comment">//这里添加复制的CNZZ代码</span>&lt;<span class="hljs-meta">%</span> } <span class="hljs-meta">%</span>&gt; <span class="hljs-comment">//后面要添加的</span></code></pre></div><p>参考链接：<a href="https://blog.csdn.net/whjkm/article/details/37884563" target="_blank" rel="noopener">https://blog.csdn.net/whjkm/article/details/37884563</a></p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>即日起，博客双平台同步发布</title>
    <link href="/blog/2020/02/03/%E5%8D%B3%E6%97%A5%E8%B5%B7%EF%BC%8C%E5%8D%9A%E5%AE%A2%E5%8F%8C%E5%B9%B3%E5%8F%B0%E5%90%8C%E6%AD%A5%E5%8F%91%E5%B8%83/"/>
    <url>/blog/2020/02/03/%E5%8D%B3%E6%97%A5%E8%B5%B7%EF%BC%8C%E5%8D%9A%E5%AE%A2%E5%8F%8C%E5%B9%B3%E5%8F%B0%E5%90%8C%E6%AD%A5%E5%8F%91%E5%B8%83/</url>
    
    <content type="html"><![CDATA[<p>为了确保博客网站的连接，经历6h的打造，现<strong>新增Gitee版</strong>，目前两个可用博客如下：</p><ul><li>Hexo+Github 版  <a href="https://melodyhub.ltd/" target="_blank" rel="noopener">https://melodyhub.ltd/</a></li><li>Hexo+Gitee 版 <a href="https://melodyjerry.gitee.io/" target="_blank" rel="noopener">https://melodyjerry.gitee.io/</a>（新增）</li></ul><p>值得注意的是，除去连接速度的差异外，两个网站的区别：</p><ul><li><input checked="" disabled="" type="checkbox"> 后增的Gitee版暂无HomePage（动画主页），后续会计划加入</li><li><input checked="" disabled="" type="checkbox"> 计划加入一些新的动画、特效等</li><li><input disabled="" type="checkbox"> 优化部分cdn</li><li><input checked="" disabled="" type="checkbox"> 调整卡片的透明度，计划值：80%</li><li><input disabled="" type="checkbox"> 其他，略</li></ul><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[转]Hexo 博客主题个性化</title>
    <link href="/blog/2020/02/02/%5B%E8%BD%AC%5DHexo%20%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96/"/>
    <url>/blog/2020/02/02/%5B%E8%BD%AC%5DHexo%20%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<p>permalink: <a href="https://www.itrhx.com/2018/08/27/A04-Hexo-blog-topic-personalization/" target="_blank" rel="noopener">https://www.itrhx.com/2018/08/27/A04-Hexo-blog-topic-personalization/</a></p><p><strong>以下为原文的摘要：</strong></p><p>本文将讲述一些博客主题的美化、实用功能的添加，本文以作者 <a href="https://luuman.github.io/Home/H1/index.html" target="_blank" rel="noopener">luuman</a> 的 <a href="https://github.com/luuman/hexo-theme-spfk" target="_blank" rel="noopener">spfk</a> 主题和作者 <a href="https://xaoxuu.com/" target="_blank" rel="noopener">xaoxuu</a> 的 <a href="https://xaoxuu.com/wiki/material-x/" target="_blank" rel="noopener">Material X</a> 主题为例，文章会不定时进行更新。文章涉及有关参考资料、教程、链接如有侵权请联系我删除！</p><p>本文在CSDN的链接：<a href="https://itrhx.blog.csdn.net/article/details/85420403" target="_blank" rel="noopener">《Hexo 博客优化之博客美化》</a>、<a href="https://itrhx.blog.csdn.net/article/details/85010191" target="_blank" rel="noopener">《Hexo 博客优化之实用功能添加》</a>，Hexo 博客专栏，从前期搭建到后期美化，帮您解决常见问题：<a href="https://itrhx.blog.csdn.net/category_9285510.html" target="_blank" rel="noopener">《Github/Coding Pages + Hexo》</a>，对您有帮助就点个赞吧❤️</p><p><strong>请注意：</strong>不同主题可能方法有些不同，相同主题不同版本，配置方法也有所差异！</p><p><strong>博客美化前提条件：</strong>有一定的前端基础，了解 HTML、CSS、JS，了解 CSS 预处理语言 Sass、Less、Stylus，搞懂 hexo 的目录结构。</p><p><strong>博客美化通用步骤：</strong>选定主题，认真阅读主题文档，分析主题目录结构，了解每个文件是对应网页哪个部分的，认真阅读美化教程，美化教程本质上只为你提供核心代码和思路，具体代码要添加到哪个地方，需要你自己搞懂主题结构，添加到需要的、合适的位置！</p><p><strong>博客美化终极奥秘：</strong>创作第一，体验第二，避免繁杂，简洁为上！</p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[转]如何搭建基于Hexo的独立博客</title>
    <link href="/blog/2020/02/01/%5B%E8%BD%AC%5D%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%9F%BA%E4%BA%8EHexo%E7%9A%84%E7%8B%AC%E7%AB%8B%E5%8D%9A%E5%AE%A2/"/>
    <url>/blog/2020/02/01/%5B%E8%BD%AC%5D%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%9F%BA%E4%BA%8EHexo%E7%9A%84%E7%8B%AC%E7%AB%8B%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<p>permalink: <a href="https://xaoxuu.com/blog/2017-07-05-hexo-blog/" target="_blank" rel="noopener">https://xaoxuu.com/blog/2017-07-05-hexo-blog/</a><br><img src="https://img.vim-cn.com/d9/a9af7dc49fc0af8ca3e6dd2450a2f7095a87db.png" srcset="/blog/img/loading.gif" alt=""></p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>第一个除夕</title>
    <link href="/blog/2020/01/24/%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%99%A4%E5%A4%95/"/>
    <url>/blog/2020/01/24/%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%99%A4%E5%A4%95/</url>
    
    <content type="html"><![CDATA[<p>🌸于我们，这是妈走后的第一个除夕、春节。</p><p>💓“老妈，我们都在等你回来。就差你了，快和我们一起来吃团圆饭啦！”</p><p><fancybox><img src="https://s2.ax1x.com/2020/02/08/1RLj1K.png" srcset="/blog/img/loading.gif" alt="除夕团圆饭"></fancybox></p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>再见2019，你好2020</title>
    <link href="/blog/2020/01/01/%E5%86%8D%E8%A7%81%EF%BC%8C2019%EF%BC%9B%E4%BD%A0%E5%A5%BD%EF%BC%8C2020/"/>
    <url>/blog/2020/01/01/%E5%86%8D%E8%A7%81%EF%BC%8C2019%EF%BC%9B%E4%BD%A0%E5%A5%BD%EF%BC%8C2020/</url>
    
    <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&amp;id=32217265&amp;auto=0&amp;height=66"></iframe># 前言<p>这是作为我2019年最后一年博客，同时是2020的第一篇博客。</p><p>起手写这篇博客时候是2019年12月晚上8点57分，距离2019的结束约3个小时👇</p><p><img src="https://i.loli.net/2019/12/31/OFSKCE5qIWHJMza.png" srcset="/blog/img/loading.gif" alt=""></p><a id="more"></a><h1 id="概括"><a href="#概括" class="headerlink" title="概括"></a>概括</h1><p>用一个词来概括我的2019年，我想到的是“酸甜苦辣咸”。</p><p>没错，我整一年的经历就和这五种味道一样，多而杂……</p><p>我在成长的路上，一步一步地，独自前进……</p><p>没错，独自，我甚至是常常自己对自己聊天。</p><p>我的微信置顶是自己，把想说的就发给自己，这样舒服些了👇</p><p><img src="https://i.loli.net/2019/12/31/iX7qDePz53IysKY.png" srcset="/blog/img/loading.gif" alt=""></p><p>基本每天都有，随笔、想说的话、计划、临时的想法……👇</p><center><div style="position:relative;width:400px;  height:400px; overflow:auto"><img src="https://i.loli.net/2019/12/31/LiP98f6XqgoHmla.png"></div></center>这一年来到现在，因为经历、看清一些事情后，我性格有所改变，为人处事有了较大的变化。<p>最为突出的就是暑假和国庆这两段时间，我对我自己“重新洗牌”了。</p><p>思考是我最常做的事情之一，思考什么呢？</p><ul><li>我现在到底在做什么？</li><li>我为什么做？</li><li>我想做什么？</li><li>我要做什么？</li><li>我还有多少时间做？</li><li>未来我会往哪里去，往哪里回？</li><li>现在的我我是不是我要的那个“我”？</li><li></li><li>……</li><li>……</li></ul><p>还有很多，为什么呢？</p><h1 id="“好好做人”"><a href="#“好好做人”" class="headerlink" title="“好好做人”"></a>“好好做人”</h1><p>“好好做人“</p><p>是我从小听到大，被唠叨最多次的话之一就是它。</p><p>除了经常被爸妈唠叨，我最近一次看见听见是在一部网剧《一起同过窗》（背景是大一大二），里面的叶老师是班主任，他的口头禅就是“好好做人”，学生惹没惹事，他都挂嘴上。</p><p>可是，真的明白“好好做人”吗？</p><p>“好好”在这是副词，用来修饰动词“做人”。</p><p>今年经历了太多太多难以忘记的事情，我似乎开始懂得为什么爸妈在我七岁时候就开始教导我要“好好做人”。</p><p>想必他们可能花费了几十年的阅历才懂得为什么吧……</p><h1 id="感动、感谢、感恩"><a href="#感动、感谢、感恩" class="headerlink" title="感动、感谢、感恩"></a>感动、感谢、感恩</h1><p>初略地把涉及到”感动“、”感恩“、”感谢“的人列在这里~</p><p>“因为感动，所以感谢，更要感恩！”这是爸妈教育我的。</p><p>我凭我的记忆最大限度地检索了这些人，但一定还是会有漏的……</p><p>家人：爸和妈、弟弟（妮）、外公外婆、奶奶、大姨一家人、二姨一家人、小姨、小姨丈、大舅一家人、小舅、奕剑叔、文燕姑姑姑、还有很多不记得称呼的亲戚……</p><p>朋友：廖鑫圣、陈波、赖洁莹、何庆钊、冼俊贤、张桂源、刘千瑜、朱茜妍、吴嘉隆、蔡泽佳、钟叶茂、杨迎、杨天瑞、谢佳豪、冯皓明、梁大浩、袁舒恩、欧芝妍、陈晓霞、吴森、陈子平……</p><p>师兄姐（归属于朋友）：邱海燕、纪秋荣、卢情波、海英姐（李海英）、海雯师姐、王梁兴、张康、林逸豪、何庄芸、键林、林金翼、王景华、钟榴炜、吴丹婷（广外）、周卓颖、陈庆鸿……</p><p>老师：倪宇班主任、老罗（罗智杰老师）、陈鑫老师、廖老师（勤工网络中心）、郭世仁老师、史婷婷老师、曾宪贵老师、古笑珍老师（小学班数学兼两年班主任）、陈彩玉老师（初中三年数学老师）……</p><img src="https://i.loli.net/2019/12/31/JC4onlxLwHBIOcb.png" srcset="/blog/img/loading.gif" alt="感谢一路上有大家的支持" style="zoom:50%;"><h1 id="愿望"><a href="#愿望" class="headerlink" title="愿望"></a>愿望</h1><p>我在日记本、便签等等上写了很多愿望，其中有些是想在2020年实现的。</p><p>我直接copy了，会有重复的，以下是我对自己微信聊天中的部分愿望👇</p><ul><li>2020我想当个好儿子、好哥哥、好朋友、好学生、好人。</li><li>希望能有人能了解、能理解并接受我的人。</li><li>秉承信念，好好做人。</li><li>常回家看看，多陪陪家人</li><li>我想做自己，我想做“吴锐杰”</li><li>不想做那些不符合我风格的事</li><li>想拿到国家励志奖学金</li><li>希望找到一个人来填补我内心的空白</li><li>2020年我要来考驾照了</li><li>改变自己，让自己多一些坚硬、刚正、远谋、顾己</li><li>好好赚钱、好好学习、好好生活</li><li>希望每个人都平安、健康、幸福、好运、快乐</li><li>珍惜当下、好好做人、万事生意</li><li>找到能陪伴、鼓励、支持我的人</li><li>我想拿奖助学金，很想要</li><li>还掉所有欠别人的钱</li><li>给老弟预留一万的存款，供9月份上大学</li><li>好好勤工、挣多点钱，多吃些肉，长胖些</li><li>学更多的知识、技能，听更多的歌</li><li>想要一副好的身体，能不能搞好我的皮肤病呢</li><li>……</li><li>……</li></ul><h1 id="END"><a href="#END" class="headerlink" title="END"></a>END</h1><p>文字没法完全表述我想表达的，其他的就存在我的心、记忆里吧</p><p>我可以忘记很多东西，也可以记得很多东西</p><p>2019年发生的一些事我不会忘🧡……</p><p>2020年，Jerry加油，给我冲冲冲💪……</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>绚丽彩虹同学录V1.4公测版</title>
    <link href="/blog/2019/12/28/%E7%BB%9A%E4%B8%BD%E5%BD%A9%E8%99%B9%E5%90%8C%E5%AD%A6%E5%BD%95V1-4%E5%85%AC%E6%B5%8B%E7%89%88/"/>
    <url>/blog/2019/12/28/%E7%BB%9A%E4%B8%BD%E5%BD%A9%E8%99%B9%E5%90%8C%E5%AD%A6%E5%BD%95V1-4%E5%85%AC%E6%B5%8B%E7%89%88/</url>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="部分截图"><a href="#部分截图" class="headerlink" title="部分截图"></a>部分截图</h1><p><a href="http://www.00ylw.com/zb_users/upload/2019/03/201903301553941759321415.png" target="_blank" rel="noopener"><img src="http://www.00ylw.com/zb_users/upload/2019/03/201903301553941759321415.png" srcset="/blog/img/loading.gif" alt="最新绚丽彩虹同学录V1.4公测版源码分享-第1张图片-零零娱乐网"></a></p><p><a href="http://www.00ylw.com/zb_users/upload/2019/03/201903301553941759642765.png" target="_blank" rel="noopener"><img src="http://www.00ylw.com/zb_users/upload/2019/03/201903301553941759642765.png" srcset="/blog/img/loading.gif" alt="最新绚丽彩虹同学录V1.4公测版源码分享-第2张图片-零零娱乐网"></a></p><p><a href="http://www.00ylw.com/zb_users/upload/2019/03/201903301553941759908930.png" target="_blank" rel="noopener"><img src="http://www.00ylw.com/zb_users/upload/2019/03/201903301553941759908930.png" srcset="/blog/img/loading.gif" alt="最新绚丽彩虹同学录V1.4公测版源码分享-第3张图片-零零娱乐网"></a></p><p><a href="http://www.00ylw.com/zb_users/upload/2019/03/201903301553941759597921.png" target="_blank" rel="noopener"><img src="http://www.00ylw.com/zb_users/upload/2019/03/201903301553941759597921.png" srcset="/blog/img/loading.gif" alt="最新绚丽彩虹同学录V1.4公测版源码分享-第4张图片-零零娱乐网"></a></p><p><a href="http://www.00ylw.com/zb_users/upload/2019/03/201903301553941759480505.png" target="_blank" rel="noopener"><img src="http://www.00ylw.com/zb_users/upload/2019/03/201903301553941759480505.png" srcset="/blog/img/loading.gif" alt="最新绚丽彩虹同学录V1.4公测版源码分享-第5张图片-零零娱乐网"></a></p><p><a href="http://www.00ylw.com/zb_users/upload/2019/03/201903301553941759341459.png" target="_blank" rel="noopener"><img src="http://www.00ylw.com/zb_users/upload/2019/03/201903301553941759341459.png" srcset="/blog/img/loading.gif" alt="最新绚丽彩虹同学录V1.4公测版源码分享-第6张图片-零零娱乐网"></a></p><h1 id="版本更新"><a href="#版本更新" class="headerlink" title="版本更新"></a>版本更新</h1><ol><li>自动更新(推荐):</li></ol><p>管理员登陆后，进入控制台，点击检查更新，如有新版本点击“一键更新”等待更新完成即可。</p><ol start="2"><li>手动更新流程:</li></ol><p>更新包地址: <a href="http://cdn.badapple.top/PHP/XlchClassbook/UpdatePack" target="_blank" rel="noopener">http://cdn.badapple.top/PHP/XlchClassbook/UpdatePack</a><br>下载对应版本的更新包,手动解压覆盖更新包到同学录安装目录。</p><h1 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h1><p>☆ 1.4 公测版 (1004)</p><p>更新内容：</p><p>重要提示：更新完毕后请到 管理员控制台-&gt;站点配置-&gt;保存，以刷新数据！</p><p>修复:手机上传图片打开相机</p><p>修复:“对我留言”功能</p><p>修复:无法删除相册</p><p>修复:允许空名相册</p><p>修复:权限组配置错误导致的安全漏洞</p><p>修复:验证码大小写问题</p><p>增加:可选绚丽彩虹播放器</p><p>增加:自定义导航栏功能</p><p>增加:教师、班长等权限组</p><p>增加:畅言图床、sm.ms、七牛云存储上传</p><p>增加:评论回复支持表情</p><p>增加:导入似水年华V3数据</p><p>优化:图片流设计</p><p>优化:同学录页面卡片设计</p><p>优化:管理员可设置用户是否允许上传相册</p><p>优化:安装时自动修复数据表结构</p><p>优化:配置文件结构变更</p><p>优化:做了一点微小的工作(细节优化)</p><p>更新时间：2018-07-03 23:39:54</p><p>☆ 1.3 公测版 (1003)</p><p>更新内容：</p><p>修复:后台修改用户组 提示“用户名已被使用”</p><p>修复:“对TA留言”功能</p><p>修复:验证码大小写问题</p><p>修复:代码逻辑错误导致的安全隐患</p><p>修复:代码逻辑错误导致的无法在后台更新到新版本</p><p>更新时间：2018-04-22 21:20:20</p><h1 id="文章附件"><a href="#文章附件" class="headerlink" title="文章附件"></a>文章附件</h1><p><a href="https://www.lanzous.com/i3lw6bi" target="_blank" rel="noopener">蓝奏网盘</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>文章内长图</title>
    <link href="/blog/2019/12/23/%E6%96%87%E7%AB%A0%E5%86%85%E9%95%BF%E5%9B%BE/"/>
    <url>/blog/2019/12/23/%E6%96%87%E7%AB%A0%E5%86%85%E9%95%BF%E5%9B%BE/</url>
    
    <content type="html"><![CDATA[<p>文章内长图，使用html来实现</p><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">center</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"position:relative;width:400px;  height:400px; overflow:auto"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span>     <span class="hljs-attr">src</span> =<span class="hljs-string">"https://i.loli.net/2019/12/31/LiP98f6XqgoHmla.png"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">center</span>&gt;</span></code></pre></div><p>效果👇</p><center><div style="position:relative;width:400px;  height:400px; overflow:auto"><img src="https://i.loli.net/2019/12/31/LiP98f6XqgoHmla.png"></div></center><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2019冬至</title>
    <link href="/blog/2019/12/22/2019%E5%86%AC%E8%87%B3/"/>
    <url>/blog/2019/12/22/2019%E5%86%AC%E8%87%B3/</url>
    
    <content type="html"><![CDATA[<p>😄2019.12.20-22，三天，在小姨家度过了一个冬至小长假。</p><p>🧡周五下午从学校出发，骑着小蓝到地铁站乘地铁，经过3条（2、3、9线）地铁线、18（13+3+2）个站、2次（嘉禾望岗、 高增）换乘，来到花都的小姨家。</p><p>以下为20号下午抵达花都时发的随笔</p><ul><li>#生活</li><li>#记录三个月来，第一次出学校出趟远门.</li><li>ᶘ ͡°ᴥ͡°ᶅ<br>  今天的天气真不错，音乐、风、云……都陪伴着我，特别轻松</li><li>(୨୧•͈ᴗ•͈)<br>  因为想家了，但回深圳有些麻烦，先来趟花都吧</li><li>( ´◔ ‸◔`)<br>  海珠来花都，还是有丶远。到了花都就变得有丶冷了</li></ul><p>💛</p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>phpEnv一款优雅强大的php集成开发环境</title>
    <link href="/blog/2019/12/21/phpEnv%E4%B8%80%E6%AC%BE%E4%BC%98%E9%9B%85%E5%BC%BA%E5%A4%A7%E7%9A%84php%E9%9B%86%E6%88%90%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%20(1)/"/>
    <url>/blog/2019/12/21/phpEnv%E4%B8%80%E6%AC%BE%E4%BC%98%E9%9B%85%E5%BC%BA%E5%A4%A7%E7%9A%84php%E9%9B%86%E6%88%90%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%20(1)/</url>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="phpEnv一款优雅强大的php集成开发环境"><a href="#phpEnv一款优雅强大的php集成开发环境" class="headerlink" title="phpEnv一款优雅强大的php集成开发环境"></a>phpEnv一款优雅强大的php集成开发环境</h1><p>php集成开发环境有很多种，例如phpstudy，wamp，xmapp等等，各有各的优点和缺点，本文并不是对各个 IDE 的使用和调试进行详细的对比和评测，因为每一款 IDE 均提供了大同小异的功能，只是在细节方面有所差异罢了，phpStudy程序包集成最新的Apache+PHP+<a href="https://cloud.tencent.com/product/cdb?from=10680" target="_blank" rel="noopener">MySQL</a>+phpMyAdmin+Zend Loader，一次性安装，无须配置即可使用，是非常方便、好用的PHP调试环境。该程序绿色小巧简易迷你仅有13M，有专门的控制面板。总之学习PHP只需一个包。但是当最近phpstudy爆出重大漏洞后门后，相信很多人都在寻找可替代品，这里推荐给大家一款希望能对大家的参考和选择有所助益：</p><p>phpEnv软件界面颜值超高，简洁优雅，完全绿色化，不需要安装vc环境，在同等软件中清新脱俗。</p><p><img src="https://ask.qcloudimg.com/http-save/yehe-5233639/4sr1duzi7y.png?imageView2/2/w/1620" srcset="/blog/img/loading.gif" alt="img"></p><p>突破端口限制，更有管理员模式解除Windows Service服务端口占用。</p><p><img src="https://ask.qcloudimg.com/http-save/yehe-5233639/34l8x6ql13.jpeg?imageView2/2/w/1620" srcset="/blog/img/loading.gif" alt="img"></p><p>运行服务错误提示，快速定位错误，提高开发效率。</p><p><img src="https://ask.qcloudimg.com/http-save/yehe-5233639/5zd1eopddt.png?imageView2/2/w/1620" srcset="/blog/img/loading.gif" alt="img"></p><p>自带软件商店，PHP和MySQL版本应有尽有，还有<a href="https://cloud.tencent.com/product/crs?from=10680" target="_blank" rel="noopener">Redis</a>和其他工具等。</p><p><img src="https://ask.qcloudimg.com/http-save/yehe-5233639/9zg86szb23.jpeg?imageView2/2/w/1620" srcset="/blog/img/loading.gif" alt="img"></p><p>功能强大的站点管理，为每个网站配置不同的PHP版本，不同PHP版本的网站共存，可视化配置https等。</p><p><img src="https://ask.qcloudimg.com/http-save/yehe-5233639/j0brjwnhgp.png?imageView2/2/w/1620" srcset="/blog/img/loading.gif" alt="img"></p><p><img src="https://ask.qcloudimg.com/http-save/yehe-5233639/x7jvjjdmuq.png?imageView2/2/w/1620" srcset="/blog/img/loading.gif" alt="img"></p><p>简洁优雅而不失强大的软件设置，大大提高了开发效率。</p><p><img src="https://ask.qcloudimg.com/http-save/yehe-5233639/8n2hqt0dtx.png?imageView2/2/w/1620" srcset="/blog/img/loading.gif" alt="img"></p><p>功能强大的cmd命令行，无须你再繁琐的配置环境变量。</p><p><img src="https://ask.qcloudimg.com/http-save/yehe-5233639/htziboyhua.png?imageView2/2/w/1620" srcset="/blog/img/loading.gif" alt="img"></p><p>可视化TCP端口进程列表，功能强大，快速查看端口监听情况。</p><p><img src="https://ask.qcloudimg.com/http-save/yehe-5233639/pd80fuo1gk.jpeg?imageView2/2/w/1620" srcset="/blog/img/loading.gif" alt="img"></p><p>能够和phpstudy媲美，和wamp相互比对，</p><hr><p>本文分享自微信公众号 - 风帆（wdswhf）</p><p>原文出处及转载信息见文内详细说明，如有侵权，请联系 <a href="mailto:yunjia_community@tencent.com">yunjia_community@tencent.com</a> 删除。</p><p>原始发表时间：2019-09-23</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>[转]分享几款不错的浪漫素材</title>
    <link href="/blog/2019/12/13/%E8%BD%AC-%E5%88%86%E4%BA%AB%E5%87%A0%E6%AC%BE%E4%B8%8D%E9%94%99%E7%9A%84%E6%B5%AA%E6%BC%AB%E7%B4%A0%E6%9D%90/"/>
    <url>/blog/2019/12/13/%E8%BD%AC-%E5%88%86%E4%BA%AB%E5%87%A0%E6%AC%BE%E4%B8%8D%E9%94%99%E7%9A%84%E6%B5%AA%E6%BC%AB%E7%B4%A0%E6%9D%90/</url>
    
    <content type="html"><![CDATA[<p>原文链接：<a href="https://www.liaofuzhan.com/posts/3564551888.html" target="_blank" rel="noopener">https://www.liaofuzhan.com/posts/3564551888.html</a></p><hr><p>双旦将至，快找个暖冬又暖心的 TA 一起跨年吧！如果你还是一枚单身汪，那么再过几天的时间，又到了别人狂欢你孤单的圣诞之夜！再再再过几天时间，又双叒叕到了别人狂欢你孤单的跨年之夜！落单的人往往最怕过节，更何况双旦佳节的连环暴击，别人疯狂撒着狗粮，而你只能接受着来自情侣们的亿万点伤害，SO，与其不甘寂寞，何不为爱情放纵一次？撩个对象一起过双旦吧，2019 年最后一个脱单的机会，为你呈现 ！</p><p>感谢 <a href="https://github.com/leafjame/Surprise" target="_blank" rel="noopener">leafjame</a> 和 <a href="https://github.com/enfangzhong/loveSource" target="_blank" rel="noopener">EnfangZhong</a> 提供的素材！</p><p>本站只集成了以下四种，其它效果可下载源码后查看</p><p><a href="https://www.liaofuzhan.com/love/" target="_blank" rel="noopener">表白专场</a></p><a id="more"></a><h1 id="hexo-跳过渲染"><a href="#hexo-跳过渲染" class="headerlink" title="hexo 跳过渲染"></a>hexo 跳过渲染</h1><p>Hexo 默认会对根目录 <code>/source/</code> 下所有页面应用主题模板渲染，但有一些前端作品或 demo 页我们不希望经过渲染，而是能保持完全自定义的样子，那该怎么用 Hexo 添加自定义的 web 页面呢？下面介绍两种方法</p><h2 id="skip-render"><a href="#skip-render" class="headerlink" title="skip_render"></a>skip_render</h2><p>使用 Hexo 提供的跳过渲染配置。在站点 _config.yml 中找到 skip_render，这项是用来配置 /source/ 下需要跳过渲染的文件或目录，例如希望跳过 /source/love/ 里的所有文件，可以配置为</p><div class="hljs"><pre><code class="hljs avrasm"><span class="hljs-symbol">skip_render:</span> love<span class="hljs-comment">/**</span></code></pre></div><p>如果有多项，可以这样配置</p><div class="hljs"><pre><code class="hljs markdown">skip_render:<span class="hljs-bullet">  - </span>README.md<span class="hljs-bullet">  - </span>love/**<span class="hljs-bullet">  - </span>test1/*.html</code></pre></div><p>或者</p><div class="hljs"><pre><code class="hljs apache"><span class="hljs-attribute">skip_render</span>:<span class="hljs-meta"> [README.md, love/**, test1/*.html]</span></code></pre></div><p>可参考</p><p><a href="https://github.com/hexojs/hexo/issues/1146" target="_blank" rel="noopener">如何不处理 source 目录下某个子目录的所有文件</a></p><h2 id="layout"><a href="#layout" class="headerlink" title="layout"></a>layout</h2><p>使用 layout 给单个文件添加不应用模板的标记。适用于个别需特殊处理的文件，可在文件头部添加</p><div class="hljs"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><span class="hljs-attr">layout:</span> <span class="hljs-literal">false</span><span class="hljs-meta">---</span></code></pre></div><p>这个文件就不会经过模板渲染，最终发布到 /public/ 里的文件就是去掉标记后的文件的样子。本站使用的是第一种配置方式，源码目录截图如下</p><p><a href="https://s2.ax1x.com/2019/12/22/QxWNwT.jpg" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/12/22/QxWNwT.jpg" srcset="/blog/img/loading.gif" alt="QxWNwT.jpg"></a></p><p>访问域名 + 文件目录名即可出现效果，Enjoy ！</p><p><a href="https://www.liaofuzhan.com/love/" target="_blank" rel="noopener">表白专场</a></p><h1 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h1><details open="" style="cursor: url(&quot;/images/default.cur&quot;), auto; display: block; margin-left: 20px; color: rgb(85, 85, 85); font-family: &quot;eb garamond&quot;, &quot;noto serif sc&quot;, sans-serif; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgba(255, 255, 255, 0.8); text-decoration-style: initial; text-decoration-color: initial;"><summary style="cursor: pointer; display: block; outline: 0px; margin-top: 15px;">点击查看</summary><ul class="popular-posts" style="cursor: url(&quot;/images/default.cur&quot;), auto;"><li class="popular-posts-item" style="cursor: url(&quot;/images/default.cur&quot;), auto;"><div class="popular-posts-title" style="cursor: url(&quot;/images/default.cur&quot;), auto;"><a href="https://www.liaofuzhan.com/posts/2857466830.html" target="_blank" rel="bookmark noopener" style="cursor: url(&quot;/images/pointer.cur&quot;), auto; background-color: transparent; color: rgb(85, 85, 85); text-decoration: none; outline: 0px; border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;">表白神器—JS生成的玫瑰花</a></div></li><li class="popular-posts-item" style="cursor: url(&quot;/images/default.cur&quot;), auto;"><div class="popular-posts-title" style="cursor: url(&quot;/images/default.cur&quot;), auto;"><a href="https://www.liaofuzhan.com/posts/2186938821.html" target="_blank" rel="bookmark noopener" style="cursor: url(&quot;/images/pointer.cur&quot;), auto; background-color: transparent; color: rgb(85, 85, 85); text-decoration: none; outline: 0px; border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;">Hexo Next主题「哈林摇」特效</a></div></li><li class="popular-posts-item" style="cursor: url(&quot;/images/default.cur&quot;), auto;"><div class="popular-posts-title" style="cursor: url(&quot;/images/default.cur&quot;), auto;"><a href="https://www.liaofuzhan.com/posts/3606203205.html" target="_blank" rel="bookmark noopener" style="cursor: url(&quot;/images/pointer.cur&quot;), auto; background-color: transparent; color: rgb(85, 85, 85); text-decoration: none; outline: 0px; border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;">Hexo NexT主题美化1.0</a></div></li><li class="popular-posts-item" style="cursor: url(&quot;/images/default.cur&quot;), auto;"><div class="popular-posts-title" style="cursor: url(&quot;/images/default.cur&quot;), auto;"><a href="https://www.liaofuzhan.com/posts/2291078664.html" target="_blank" rel="bookmark noopener" style="cursor: url(&quot;/images/pointer.cur&quot;), auto; background-color: transparent; color: rgb(85, 85, 85); text-decoration: none; outline: 0px; border-bottom: 1px solid rgb(153, 153, 153); overflow-wrap: break-word;">随笔—过节那点事</a></div></li></ul></details><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>素材</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[工具]ASCII字符画制作工具</title>
    <link href="/blog/2019/12/12/%E5%B7%A5%E5%85%B7-ASCII-%E5%AD%97%E7%AC%A6%E7%94%BB%E5%88%B6%E4%BD%9C%E5%B7%A5%E5%85%B7/"/>
    <url>/blog/2019/12/12/%E5%B7%A5%E5%85%B7-ASCII-%E5%AD%97%E7%AC%A6%E7%94%BB%E5%88%B6%E4%BD%9C%E5%B7%A5%E5%85%B7/</url>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2020/02/12/1bF6JJ.png" srcset="/blog/img/loading.gif" alt=""></p><p>想为自己的博客设计一个专属的ASCII字符画，便找到以下三款工具（含线上）</p><a id="more"></a><h1 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h1><ol><li><p><a href="http://patorjk.com/software/taag/" target="_blank" rel="noopener">http://patorjk.com/software/taag/</a><br> <img src="https://s2.ax1x.com/2020/02/12/1bkpFg.png" srcset="/blog/img/loading.gif" alt=""></p></li><li><p><a href="https://www.degraeve.com/img2txt.php" target="_blank" rel="noopener">https://www.degraeve.com/img2txt.php</a></p></li><li><p>使用<strong>Ascii Generator 2</strong>制作，下载地址：<a href="https://sourceforge.net/projects/ascgen2/" target="_blank" rel="noopener">https://sourceforge.net/projects/ascgen2/</a></p></li></ol><p><img src="https://s2.ax1x.com/2020/02/12/1bkLh4.png" srcset="/blog/img/loading.gif" alt=""></p><h1 id="展示"><a href="#展示" class="headerlink" title="展示"></a>展示</h1><div class="hljs"><pre><code class="hljs lasso">                    _ooOoo_                    o8888888o                    <span class="hljs-number">88</span><span class="hljs-string">" · "</span><span class="hljs-number">88</span>                    (| ^.^ |)                     O\ = /O                 ____/<span class="hljs-string">`---'\____ </span><span class="hljs-string">                . ' \\| |// `</span>.                / \\||| : |||<span class="hljs-comment">// \ </span>             / _||||| -:- |||||- \                | | \\\ - <span class="hljs-comment">/// | | </span>             | \_| <span class="hljs-string">''</span>\---/<span class="hljs-string">''</span> | |               \ .-\__ <span class="hljs-string">`-`</span> ___/-. /            ___<span class="hljs-string">`. .' /--.--\ `</span>. . __         .<span class="hljs-string">""</span> <span class="hljs-string">'&lt; `.___\_&lt;|&gt;_/___.'</span> &gt;<span class="hljs-string">'"". </span><span class="hljs-string">       | | : `- \`.;`\ _ /`;.`/ - `: | | </span><span class="hljs-string">         \ \ `-. \_ __\ /__ _/ .-` / / </span><span class="hljs-string">        `.____`-.___\_____/___.-`____.-'</span>          ⌒⌒⌒⌒⌒⌒⌒⌒⌒⌒⌒⌒⌒⌒⌒⌒⌒ <span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span>         佛 祖 保 佑            代 码 无 BUG</code></pre></div><div class="hljs"><pre><code class="hljs mel">&lt;!--                                                       s&amp;@@@@@@@@@@@#HX9hr:                                                                                                       ;GM@@@@@@@@@@@@@@@@#MBA85i                                                                                                 .G@@@@@@@@@@@@@@@@@@@@@@@@@@M9:                                                                                             .&amp;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#1                                                                                            h@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@, .;rssr,                                                                                 ,sA@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@<span class="hljs-number">88</span>B@@@@@#5                                                                           .rHHA#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@:                                                                          rB@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@i                                                                           ,<span class="hljs-number">5</span>B@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@X                                                                               is&amp;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@X#@@@@@@@A                                                                               ,s8@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@Hr M@@@@@@@B.                                                                              .,<span class="hljs-number">1</span>&amp;M@@@@@@@B#@@@@@@@@@@@@@@@@@@@8  ;@@@@@@@Hi.                :<span class="hljs-number">1991</span>:                     ,s9&amp;<span class="hljs-number">81</span>;.                             , sA@@@@@@BG8XHB#@@@@@@@@@@@@@HS: <span class="hljs-number">5</span>@@@@@@@@i           .;<span class="hljs-number">13</span>XM@@#H#@H91;.            :s3&amp;##A&amp;#@@MA8Ss:                           <span class="hljs-number">.5</span>HAX#@M@#BHHBM#@@@@@@@@#&amp;Ah.. G@@@@@@@@G       ,s9AMM@@@Xh;. .i9@@@BX9hr,.,ih9&amp;B@@@#s.   :hM@@HBMBXSi.                         ..ShSM@@@@@@&amp;XBHsHMHS: .:   <span class="hljs-number">3</span>@@@@@@@@<span class="hljs-number">8</span>  ,;<span class="hljs-number">19</span>H#BG5irB@@H3.    r#@@@@@#@@B@@@BB@@@@M;    <span class="hljs-number">5</span>H@@@9 ,r3ABM&amp;<span class="hljs-number">8</span>Shsrii;;i;ir1h1.         .iM@@@@@@@@<span class="hljs-number">91</span>, ;S,     sGXH@@@@@@@@X&amp;HM@@@9:    X@@@@@#s   &amp;@@@@@@G:s@A;.hM@@@@@A   G@@@@@@h    s#@@AXXXGGXGX#@@#@@Bs  .r58&amp;HM@@@@@@@@@@@#BA8Sr.  ,<span class="hljs-number">8</span>@@#X@@@@@@Ariii5M@@H3.   <span class="hljs-number">8</span>@@@@@@<span class="hljs-number">9</span>   <span class="hljs-number">1</span>B@@@@@@: H;  &amp;@@@@@#h   &amp;@@@@@Mi  ,G@@@@X      ;<span class="hljs-number">8</span>#@#hrX@@X8M@@@@@@@@@@@@@@@@@@@@@@@M8SM@Hh<span class="hljs-number">.3</span>@@@@M8.   .H@@@@@Hi   S@@@@@5    .SM@@@@S .   H@@@@X:    <span class="hljs-number">5</span>@@@@M;   &amp;@@@@@@<span class="hljs-number">9</span>    s#@@@@#r<span class="hljs-number">.9</span>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#3:<span class="hljs-number">9</span>@@@@@@<span class="hljs-number">9</span>    :M@@@@@@s    <span class="hljs-number">1</span>@@@@s      ,<span class="hljs-number">9</span>#@@H    ,M@@#h      i@@@M;    <span class="hljs-number">3</span>@@@@@Mi    X@@@@@@@M@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@<span class="hljs-number">8</span>     ;M@@@@M,     rM@@i        :G@@i   i@@X:       .B@M;     :#@@@@r     :#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@M.      ;M@@@X       :B@:          i&amp;S   hMh          GM;       X@@@h       S@@@@B#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B8@@@@h        i#@@h        ,<span class="hljs-number">1</span>                 .,           ,:        s@@<span class="hljs-number">3</span>        .H@@MB@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&amp;A@@H          r#@;                                                   HG          r@#r&amp;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@S B@r           s9                                                    ,            <span class="hljs-number">95</span>G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@h;S                                                                                <span class="hljs-number">3</span>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@i                                                                                r@@@@@@@H8@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B.                                                                               H@@@@@@#:;@@@@@@@@@@@@@@@@@@@@@@@@@@B8@@@@@@@S                                                                            .;S@@@@@@@r ,M@@@@@@@@@@@@@@@@@@@@@@@@@X <span class="hljs-number">9</span>@@@@@@Mhi,                                         ..        ;<span class="hljs-number">831</span>:             .iSXM@@@@@@@#s  .M@@@@@@@@@@@@@@@@@@@@@@@@@X  <span class="hljs-number">9</span>@@@@@@@@#A91:             i8AA1        :h,       iBH.       <span class="hljs-number">.5</span>B@#8i.      .iS&amp;M@@@@@@@@@@Ai   i@@@@@@@@@@@@@@@@@@@@@@@@@@M,  hB@@@@@@@@@@@H8h;       ;<span class="hljs-number">9</span>@@#s        :&amp;@X,     .B@@H359GX&amp;XGGM@@@@B9:,rSXM@@@@@@@@@@@B8s     h@@@@@@@@@@@@@@@@@@@@@@@@@@@s   <span class="hljs-number">.1</span>GB@@@@@@@@@@@@BX5r,sA@@@@@MHAHBHHA&amp;#@@@9      iG@@@@@@@@@@@@@@@@@@@#@@@@@@@@@@#H8h;        S@@@@@@@@@@@@@@@@@@@@@@@@@@#s       :<span class="hljs-number">19</span>AM@@@@@@@@@@@#@@@@@@@@@@@@@@@@@@@h.        <span class="hljs-number">1</span>B@@@@@@@@@@@@@@@@@@@@@@@@BXSr,           <span class="hljs-number">5</span>#@@@@@@@@@@@@@@@@@@@@@@@@@@@#h          .ih8A#@@@@@@@@@@@@@@@@@@@@@@M@@<span class="hljs-number">8</span>            ,,,<span class="hljs-number">595</span>i:i1S9G&amp;AHBMBAGSr,               <span class="hljs-number">9</span>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@3               :<span class="hljs-number">13</span>XHM###MMBHAX95SXBMGii,     　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　--&gt;</code></pre></div><p><strong>参考文章</strong></p><p><a href="https://aotu.io/notes/2016/06/22/An-interesting-experience-on-console/index.html" target="_blank" rel="noopener">让console充满情怀</a><br><a href="https://www.cnblogs.com/Wayou/p/chrome_dev_tool_style_console.html#a" target="_blank" rel="noopener">Chrome 控制台新玩法</a><br><a href="https://developers.google.com/web/tools/chrome-devtools/console/console-write#string-substitution-and-formatting" target="_blank" rel="noopener">Tools for Web Developers</a><br><a href="https://www.liaofuzhan.com/posts/3274212224.html" target="_blank" rel="noopener">浏览器控制台个性化输出</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java—替换字符串右侧出现的第一个子串</title>
    <link href="/blog/2019/12/08/Java%E2%80%94%E6%9B%BF%E6%8D%A2%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8F%B3%E4%BE%A7%E5%87%BA%E7%8E%B0%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%AD%90%E4%B8%B2/"/>
    <url>/blog/2019/12/08/Java%E2%80%94%E6%9B%BF%E6%8D%A2%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8F%B3%E4%BE%A7%E5%87%BA%E7%8E%B0%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%AD%90%E4%B8%B2/</url>
    
    <content type="html"><![CDATA[<p>🔺需求 👇</p><p>编程实现一个方法，能把一个字符串src的右侧出现的第一个olds子串替换为news，并把替换后的结果返回。</p><a id="more"></a><p>🔺代码 👇</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">StringReplaceLast</span> </span>{    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title">replaceLast</span><span class="hljs-params">(String src, String olds, String news)</span></span>{        <span class="hljs-comment">/* 实现一个尾部替换方法 */</span>        System.out.println(src);        StringBuffer sbsrc = <span class="hljs-keyword">new</span> StringBuffer(src);        <span class="hljs-keyword">int</span> lenolds = olds.length();        <span class="hljs-keyword">int</span> tail = src.lastIndexOf(olds);        sbsrc = sbsrc.replace(tail,tail+lenolds, news);        src = sbsrc.toString();        <span class="hljs-keyword">return</span> src;    }    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{        System.out.println(replaceLast(<span class="hljs-string">"goodJava,I love it, very good,Truly."</span>, <span class="hljs-string">"good"</span>, <span class="hljs-string">"yes"</span> ));    }}</code></pre></div><p>🔺截图 👇</p><p><img src="https://i.loli.net/2019/12/08/KYLGsJ42glm7FEO.png" srcset="/blog/img/loading.gif" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文章视频（B站）</title>
    <link href="/blog/2019/12/08/%E6%96%87%E7%AB%A0%E8%A7%86%E9%A2%91/"/>
    <url>/blog/2019/12/08/%E6%96%87%E7%AB%A0%E8%A7%86%E9%A2%91/</url>
    
    <content type="html"><![CDATA[<p>目前博文主要引用的是B站视频👇</p><p>小窗口版、修改src即可👇</p><div class="hljs"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"//player.bilibili.com/player.html?aid=76560081&amp;cid=130958803&amp;page=1"</span> <span class="hljs-attr">scrolling</span>=<span class="hljs-string">"no"</span> <span class="hljs-attr">border</span>=<span class="hljs-string">"0"</span> <span class="hljs-attr">frameborder</span>=<span class="hljs-string">"no"</span> <span class="hljs-attr">framespacing</span>=<span class="hljs-string">"0"</span> <span class="hljs-attr">allowfullscreen</span>=<span class="hljs-string">"true"</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span></code></pre></div><p>浏览测试效果👇</p><iframe src="//player.bilibili.com/player.html?aid=76560081&amp;cid=130958803&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><br>大窗口版👇<div class="hljs"><pre><code class="hljs routeros">&lt;div <span class="hljs-attribute">style</span>=<span class="hljs-string">"position: relative; width: 100%; height: 0; padding-bottom: 75%;"</span>&gt;&lt;iframe <span class="hljs-attribute">src</span>=<span class="hljs-string">"//player.bilibili.com/player.html?aid=76560081&amp;amp;page=0"</span> <span class="hljs-attribute">scrolling</span>=<span class="hljs-string">"no"</span> <span class="hljs-attribute">border</span>=<span class="hljs-string">"0"</span> <span class="hljs-attribute">frameborder</span>=<span class="hljs-string">"no"</span> <span class="hljs-attribute">framespacing</span>=<span class="hljs-string">"0"</span> <span class="hljs-attribute">allowfullscreen</span>=<span class="hljs-string">"true"</span> <span class="hljs-attribute">style</span>=<span class="hljs-string">"position: absolute; width: 100%; height: 100%; left: 0; top: 0;"</span>&gt;&lt;/iframe&gt;&lt;/div&gt;</code></pre></div><p>浏览测试效果👇</p><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=76560081&amp;page=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java—转置数组</title>
    <link href="/blog/2019/12/07/Java%E2%80%94%E8%BD%AC%E7%BD%AE%E6%95%B0%E7%BB%84/"/>
    <url>/blog/2019/12/07/Java%E2%80%94%E8%BD%AC%E7%BD%AE%E6%95%B0%E7%BB%84/</url>
    
    <content type="html"><![CDATA[<p>🔺需求 👇</p><p>编写一个程序，其功能是能随机生成一个数组、同时完成对该数组的转置并打印输出转置后的数组。</p><a id="more"></a><p>🔺代码 👇</p><div class="hljs"><pre><code class="hljs Java"><span class="hljs-keyword">import</span> <span class="hljs-keyword">static</span> java.lang.System.out;<span class="hljs-keyword">import</span> java.util.Random;<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Reverse2dArray</span> </span>{       <span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span>[][] a; <span class="hljs-comment">// 存放两位随机整数的int二维数组a      </span>        <span class="hljs-comment">/**    </span><span class="hljs-comment">    * 构造方法，初始化数组a，r和c分别是行数和列数row column    </span><span class="hljs-comment">    */</span>       <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Reverse2dArray</span><span class="hljs-params">(<span class="hljs-keyword">int</span> r, <span class="hljs-keyword">int</span> c)</span></span>{               a = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[r][c];           buildRandArray();       }             <span class="hljs-comment">/**    </span><span class="hljs-comment">    * 构造随机数组   </span><span class="hljs-comment">    */</span>       <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">buildRandArray</span><span class="hljs-params">()</span></span>{           Random random = <span class="hljs-keyword">new</span> Random();             <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; a.length; i++)                  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; a[i].length; j++)                         a[i][j] = random.nextInt(<span class="hljs-number">100</span>);     }             <span class="hljs-comment">/**    </span><span class="hljs-comment">    * 转置本类成员的二维数组a，并返回一个新的二维数组   </span><span class="hljs-comment">    * <span class="hljs-doctag">@return</span>   </span><span class="hljs-comment">    */</span>       <span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span>[][] reverse2dArray(){                <span class="hljs-keyword">int</span> [][] b = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span> [a[<span class="hljs-number">0</span>].length] [a.length] ;        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; a.length; i++) {                  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; a[<span class="hljs-number">0</span>].length; j++) {                   b[j][i] = a[i][j] ;                 }            }             <span class="hljs-keyword">return</span> b ;     }                   <span class="hljs-comment">/* 显示二维数组 */</span>      <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">showArray</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[][] c)</span></span>{            out.printf(<span class="hljs-string">"=========%2d×%-2d=========%n"</span>, c.length, c[<span class="hljs-number">0</span>].length);               <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span>[] cr : c){                    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> cc : cr){                      out.printf(<span class="hljs-string">"%5d "</span>, cc);             }                     out.println();            }                out.println(<span class="hljs-string">"======================="</span>);       }             <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{         <span class="hljs-keyword">int</span> row = <span class="hljs-number">3</span>, col = <span class="hljs-number">4</span>;            Reverse2dArray me = <span class="hljs-keyword">new</span> Reverse2dArray(row, col);                  me.showArray(a); <span class="hljs-comment">// 显示原数组   </span>        <span class="hljs-keyword">int</span>[][] r = me.reverse2dArray();             me.showArray(r); <span class="hljs-comment">// 显示转置的数组      </span>    }}</code></pre></div><p>🔺截图 👇</p><p><img src="https://i.loli.net/2019/12/08/AwSDly38f4UPkMY.png" srcset="/blog/img/loading.gif" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【纪念】我的博客上线一个月</title>
    <link href="/blog/2019/12/07/%E3%80%90%E7%BA%AA%E5%BF%B5%E3%80%91%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E4%B8%8A%E7%BA%BF%E4%B8%80%E4%B8%AA%E6%9C%88/"/>
    <url>/blog/2019/12/07/%E3%80%90%E7%BA%AA%E5%BF%B5%E3%80%91%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E4%B8%8A%E7%BA%BF%E4%B8%80%E4%B8%AA%E6%9C%88/</url>
    
    <content type="html"><![CDATA[<p>大致写完这文章时，已是2019年12月7日的夜晚00时41分。</p><p>从最简单的纯粹的文字，到文字加粗，到用图床（<a href="https://sm.ms/" target="_blank" rel="noopener">SM.MS</a>）来插入图片，到利用HTML来丰富博客，等等……本小白的博客之旅早已开始，学习、生活，图文、视频、音乐，想写想分享的都不会少。</p><p><strong>今天这篇文章，一是回顾这一个多月来写博客的点滴，二是对未来的一些期望、想法，三是纪念一个人！！！</strong></p><a id="more"></a><h1 id="尝试-amp-第一篇博客"><a href="#尝试-amp-第一篇博客" class="headerlink" title="尝试 &amp; 第一篇博客"></a>尝试 &amp; 第一篇博客</h1><p>2019十月的最后一天，那是我写博客的第一天。</p><p>第一篇博客，同时用来纪念我的开始。</p><p><a href="https://blog.csdn.net/weixin_43438052/article/details/102841961" target="_blank" rel="noopener">https://blog.csdn.net/weixin_43438052/article/details/102841961</a></p><p>那篇博客的标签我给的是<font size="5" color="red">#尝试#</font>。</p><p>没错，这是我<font size="5" color="green">第一次尝试</font>写博客，一次伟大的尝试和开始。</p><p><img src="https://i.loli.net/2019/12/06/9il41jdqtPnohbD.png" srcset="/blog/img/loading.gif" alt="我的第一篇博客"></p><p>博客的内容也很简单。</p><p>当然，这也是我人生以来 <font size="5" color="green">第一次</font>全面地接触 MarkDown 语言。</p><p><img src="https://i.loli.net/2019/12/06/mqjDQTx58X1AUJe.png" srcset="/blog/img/loading.gif" alt="简简单单的第一篇博客"></p><h1 id="又迈出一步-amp-小小的收获"><a href="#又迈出一步-amp-小小的收获" class="headerlink" title="又迈出一步 &amp; 小小的收获"></a>又迈出一步 &amp; 小小的收获</h1><p>之后，先后在CSDN和简书上，又发表共5篇文章（含重复）。</p><p>我的CDSN主页：<a href="https://blog.csdn.net/weixin_43438052" target="_blank" rel="noopener">https://blog.csdn.net/weixin_43438052</a></p><p>我的简书主页： <a href="https://www.jianshu.com/u/a75808cbb13e" target="_blank" rel="noopener">https://www.jianshu.com/u/a75808cbb13e</a></p><p><img src="https://i.loli.net/2019/12/06/yYHQfkMzB6Nv1XK.png" srcset="/blog/img/loading.gif" alt="CSDN上2篇"></p><p><img src="https://upload.cc/i1/2019/12/07/YCGdnL.png" srcset="/blog/img/loading.gif" alt="简书上3篇"></p><p>经过写这几篇博客，对于MD（Markdown）的使用越来越熟练。</p><p>这也让我收获一些东西，比如点击量、评论量、点赞数、收藏数等等。</p><p><img src="https://i.loli.net/2019/12/06/2T6ahrVCilcN4HE.png" srcset="/blog/img/loading.gif" alt="简书里的收获"></p><p><img src="https://i.loli.net/2019/12/06/FPnD3NaxtidGJ6W.png" srcset="/blog/img/loading.gif" alt="CSDN里的收获"></p><p>虽然和那些大佬比起来微不足道，不过我还是很开心。</p><p>尤其是我合计了（双平台）全部文章的浏览量是1726。</p><p>截止到写这篇博客，有1726‬人看过我的文章。<font size="6" color="green">1726</font>啊啊啊，大数字了hhhh</p><p>于是，我傻乎乎地打开计算器，用1726除了30，得到这个数‭57.53。</p><p>忍不住说了句 <del>卧槽</del> ，平均每天有57人看我的文章。</p><p><font size="6" color="green">57人</font>啊，我也算是个<font size="5" color="red">小网红</font> (不算，那我自个变红) 了吧？！！</p><p>此刻的我👉一时自恋+持续傻笑ing</p><p><img src="https://i.loli.net/2019/12/06/LVaUl1X9OwWH7uG.png" srcset="/blog/img/loading.gif" alt=""></p><h1 id="大胆地想法-amp-勇敢地再尝试"><a href="#大胆地想法-amp-勇敢地再尝试" class="headerlink" title="大胆地想法 &amp; 勇敢地再尝试"></a>大胆地想法 &amp; 勇敢地再尝试</h1><p>2019.11.1</p><p>我突然有个 <font size="7" color="red">大想法</font> ，和这三个字那么大的想法——我要搭建自己Blog（博客）。</p><p>那又是为什么呢？</p><p>很简单，还是 <font size="5" color="blue">尝试</font> 。</p><p>然而，想法是好，实践起来，不容易啊。</p><p>起初是使用 <font size="5" color="green">Gridea</font> 来撰写、发布博客。</p><p>不过，没多久被我舍弃了这个方案。并不是说Gridea不好，而是缺少了自定义。</p><p>我说的自定义是，可以给自己的博客加入一些其他的东西，比如页面动画之类的。</p><p>于是，在朋友的推荐下，我接触了 <font size="5" color="green">Hexo</font> 。这是一个专门用来搭建博客的框架。</p><p>没错，就是框架。因为是框架，所以能直接、便利地搭建、撰写、发布博客文章。</p><p>更重要的是，Hexo提供现成的主题模板，你可以直接利用，甚至对其二次加工。</p><p>就这样，前前后后，在没课的时候、还有半夜，大概花了四天左右来研究Hexo，从命令行开始。</p><p><img src="https://i.loli.net/2019/11/07/BZIuA2XzYeaDQ8k.png" srcset="/blog/img/loading.gif" alt="搭建Blog写的第一句指令"></p><p><font color="orange">终于在2019.11.6初步搭建完成，隔天7号发布了第一篇文章。</font></p><p>同时也是记录我搭建博客的大致过程。</p><p><img src="https://i.loli.net/2019/12/06/YSDK3Il7vkHidFJ.png" srcset="/blog/img/loading.gif" alt="在自己的网站上发布的第一篇正式博客"></p><h1 id="人生第一个域名-amp-一写小坎坷"><a href="#人生第一个域名-amp-一写小坎坷" class="headerlink" title="人生第一个域名 &amp; 一写小坎坷"></a>人生第一个域名 &amp; 一写小坎坷</h1><p>2019.11.6</p><p>也是我获取人生第一个专属域名【<font size="5" color="asdasff">melodyhub.ltd</font>】的日子。</p><p><font color="purple">43买了五年</font>，真的很值很划算。</p><img src="https://upload.cc/i1/2019/12/07/RTcPE8.png" srcset="/blog/img/loading.gif" alt="买下第一个专属域名的订单截图" style="zoom: 33%;"><p>不过，在接下的两三天也遇到点麻烦。</p><p>第一个是DNS解析，这个还好办，查ip、到阿里云控制台改一下就好。</p><p>第二个是，每次``hexo d` 后，用域名总是404。每次都要到GitHub仓库里修改CNAME，太麻烦了。于是，我干脆就直接在Hexo的框架中写入CNAME文件，这样每次更新到远端（仓库）时，都会有正确的CNAME。机智的我 ( ͡° ͜ʖ ͡°)✧</p><p>第三个，也是最麻烦的一个，浏览器打开我的网站，总是提示<strong>“证书失效 / 危险链接”</strong>等字段。这个懊恼了我两天，反复查了一堆东西，最后发现原来是主题模板中重定向到一个外国授权认证的网站去了。</p><p>真的是，整的我发愁，好在最后能够解决了。</p><h1 id="进一步尝试优化"><a href="#进一步尝试优化" class="headerlink" title="进一步尝试优化"></a>进一步尝试优化</h1><p><strong>到目前为止，我的网站一共经历两次大变化，一次是在11.8，另一次是11.24。</strong></p><p>主要就是优化了主题模板中存在的一些问题，然后加入了一点自己想要的东西，还有一些待以后再实现。</p><p>具体的，主要的，大致在【<a href="[https://melodyhub.ltd/blog/2019/11/08/%E5%8D%9A%E5%AE%A2v1.4/](https://melodyhub.ltd/blog/2019/11/08/博客v1.4/)">博客v1.4上线</a>】这篇博客中提到了。</p><p>其实，这个过程很难，一个是我对Hexo内部的设计的了解不是很深，另一个是对HTML语言不是精通。主要是前者，后者可以通过百度、书籍来学习。</p><p>反反复复，查阅各个文档、修改一堆文件、增删改n次代码。</p><p>总算是，得到了一个较为满意的博客。</p><p>期间，还丢失过几次代码和文件，折腾死我了。😂</p><h1 id="奋笔疾书（敲键盘）写写写"><a href="#奋笔疾书（敲键盘）写写写" class="headerlink" title="奋笔疾书（敲键盘）写写写"></a>奋笔疾书（敲键盘）写写写</h1><p>截至到写这篇博客，一共在自己的网站上发布了<font size="5" color="green">26篇正式博客</font>。</p><p>但是由于目前还没不会使用<a href="http://service.ibruce.info/" target="_blank" rel="noopener">“不蒜子”</a> 的接口来显示浏览量，所以我页没法知道有多少人看过我的文章。</p><p>我就假装每天就一共吧，那就是我哈哈哈。</p><p><strong>26篇博客文章，不仅提升为了我的打字速度，还让我更加地想搞IT。**</strong></p><p><strong>当然，我一向对IT感兴趣。**</strong></p><p><font size="6" color="blue">写</font> ，这个过程让我在不断地遇到困难，然后解决它。</p><p><strong>不懂的，就琢磨它。再不懂，找大佬、问大佬。</strong></p><p><strong>也就一步步地，收获了知识、也认识了几位大佬。</strong></p><h1 id="期望-amp-未来"><a href="#期望-amp-未来" class="headerlink" title="期望 &amp; 未来"></a>期望 &amp; 未来</h1><p><font size="5" color="brown">我的目标是成为以为IT技术大佬，目前的想法是能熟练Java+一种数据库+HTML+其他语言/技术。</font></p><p>这几个月来，因为一件事、一些人，重新洗牌了我的生活，同时也让我有了全新的目标、计划。</p><p>现如今，我有新的顾虑，我有家、有朋友的期望，我必须自强自立。放眼到以前，熟悉我的人也知道我一向比较执着于想做的事，虽然现在我也也是，不过更多了一些热情、勇气、认识。</p><p>这一个多月来，得到很多人的帮助、指导、建议。朋友啊、老师啊、师兄师姐啊……</p><p>人总要向前看向前走，无论是失去某样东西，或者某个人，都得向前。</p><p>我在博客中用到一句话当【<a href="https://melodyhub.ltd/blog/archives/" target="_blank" rel="noopener">归档</a>页】的副标题<font size="5" color="green">“生命不过三天：昨天、今天、明天”</font>。</p><p>反思昨天，珍惜今天，把握明天。所以，但看到别人在向前走时，我就要跑、向前跑。</p><p>就这样，我也才给我的网站的主页设置了 <font size="5" color="red">“你用走 可是我用跑”</font> .</p><p>我希望这句话能够在关键时候提醒我，你不能停还得跑。</p><p>同时我也希望，能够看到这里的你，也要向前向前再向前。</p><h1 id="晚安计划"><a href="#晚安计划" class="headerlink" title="晚安计划"></a>晚安计划</h1><p>分享截止到现在的所有【晚安计划】 👇</p><img src="https://upload.cc/i1/2019/12/07/tFbYql.png" srcset="/blog/img/loading.gif" style="zoom: 25%;"><img src="https://upload.cc/i1/2019/12/07/2kzfwe.png" srcset="/blog/img/loading.gif" style="zoom: 25%;"><img src="https://upload.cc/i1/2019/12/07/PS1gh0.png" srcset="/blog/img/loading.gif" style="zoom: 25%;"><h1 id="END"><a href="#END" class="headerlink" title="END"></a>END</h1><p>😊 最后，<font size="6">希望</font> <font size="5" color="red">健康</font>、<font size="5" color="green">平安</font>、<font size="5" color="blue">简单</font>、<font size="5" color="orange">快乐</font>、<font size="5" color="yellow">好运</font>。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用JDBC连接数据库</title>
    <link href="/blog/2019/12/03/%E7%94%A8JDBC%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <url>/blog/2019/12/03/%E7%94%A8JDBC%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
    
    <content type="html"><![CDATA[<h1 id="简单理解"><a href="#简单理解" class="headerlink" title="简单理解"></a>简单理解</h1><p><strong>JDBC</strong>（<strong>J</strong>ava <strong>D</strong>ata<strong>B</strong>ase <strong>C</strong>onnectivity）是 <strong>Java</strong> 和 <strong>数据库</strong> 之前的一座桥。</p><p>实则，<strong>JDBC</strong> 是用于<font color="#85eb58">Java编程语言和数据库之间的标准Java API</font>。</p><p>三者之间的关系就如下图 👇</p><p><img src="https://i.loli.net/2019/12/05/Q9RLCmYzV4tjhva.png" srcset="/blog/img/loading.gif" alt=""></p><a id="more"></a><h1 id="JDBC介绍"><a href="#JDBC介绍" class="headerlink" title="JDBC介绍"></a>JDBC介绍</h1><p>官方文档：<a href="https://www.oracle.com/technetwork/java/javase/jdbc/index.htmlJava" target="_blank" rel="noopener">https://www.oracle.com/technetwork/java/javase/jdbc/index.htmlJava</a></p><p>原文👇</p><p><img src="https://i.loli.net/2019/12/05/y46ExbaLkN9U2gT.png" srcset="/blog/img/loading.gif" alt=""></p><p>译文（可能有偏差）👇</p><blockquote><p>数据库连接 （JDBC）</p><p>Java 数据库连接 （JDBC） API 是 Java 编程语言与各种数据库 SQL 数据库和其他表格数据源（如电子表格或平面文件）之间的独立于数据库的连接的行业标准。<strong>JDBC API 为基于 SQL 的数据库访问提供了调用级 API。</strong></p><p>JDBC 技术允许您使用 Java 编程语言来利用需要访问企业数据的应用程序的”一次写入，随处运行”功能。借助支持 JDBC 技术的驱动程序，即使在异构环境中，您也可以连接所有企业数据。</p></blockquote><h1 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h1><h2 id="本文环境"><a href="#本文环境" class="headerlink" title="本文环境"></a>本文环境</h2><table><thead><tr><th>OS</th><th>IDE</th><th>数据库</th></tr></thead><tbody><tr><td>Windows 10 专业版</td><td>Eclipse(v4.11.0)—jdk8</td><td>SQL server 2017</td></tr></tbody></table><h2 id="SQL-Server-2017"><a href="#SQL-Server-2017" class="headerlink" title="SQL Server 2017"></a>SQL Server 2017</h2><ol><li>设置【SQL 身份验证登录】</li><li>设置【登录名 sa】 的状态为【授予】和【启用】</li><li>关闭程序</li></ol><p><img src="https://i.loli.net/2019/12/05/eiDkgtvWmGzSHR7.png" srcset="/blog/img/loading.gif" alt=""></p><h2 id="SQL-Server-配置管理器"><a href="#SQL-Server-配置管理器" class="headerlink" title="SQL Server 配置管理器"></a>SQL Server 配置管理器</h2><p>==因为SQL Server 2012装好后，默认协议是没有开启的，所以要打开SQL Server配置管理器中开启。==</p><ol><li>打开【SQL server2017配置管理器】</li></ol><p><img src="https://i.loli.net/2019/12/05/aJuFKoe93VRj4kB.png" srcset="/blog/img/loading.gif" alt=""></p><ol start="2"><li>启用【Named Pipes】</li><li>修改 【TCP/IP 属性】： 将【IP1 、IP10】中的【IP地址】改成【 127.0.0.1】，并将所有的【IPx】的【已启用】设置为【是】，将 【IPAII】中的【TCP端口】设成 【1433】，其余不变。</li></ol><p><img src="https://i.loli.net/2019/12/05/K4MBQ6r27eA9IXV.png" srcset="/blog/img/loading.gif" alt=""></p><ol start="3"><li>重启【SQL Server服务】</li></ol><p><img src="https://i.loli.net/2019/12/05/moZO3sQwt967aUh.png" srcset="/blog/img/loading.gif" alt=""></p><ol start="4"><li><p>【win+r】打开【运行】，键入【cmd】，打开命令行，键入以下命令👇</p> <div class="hljs"><pre><code class="hljs angelscript">telnet <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span> <span class="hljs-number">1433</span></code></pre></div></li><li><p>提示【talent不是内部命令】，则【打开控制面版】-&gt;【程序】-&gt;【启用或关闭Windows功能】-&gt;【勾选talent】-&gt;【确定】。</p></li></ol><p><img src="https://i.loli.net/2019/12/05/R2IjqeMUlZQm7rF.png" srcset="/blog/img/loading.gif" alt=""></p><ol start="6"><li>重新【步骤4】，进入【telnet】。</li></ol><p><img src="https://i.loli.net/2019/12/05/QPsStiCGj5KvkHy.png" srcset="/blog/img/loading.gif" alt=""></p><h2 id="JDBC驱动"><a href="#JDBC驱动" class="headerlink" title="JDBC驱动"></a>JDBC驱动</h2><ol><li>下载驱动包：<a href="http://www.microsoft.com/zh-cn/download/details.aspx?id=11774" target="_blank" rel="noopener">http://www.microsoft.com/zh-cn/download/details.aspx?id=11774</a></li><li>选择、下载【 sqljdbc_6.0.8112.200_chs.tar.gz】</li><li>解压上述压缩包，得到目录文件夹</li><li>复制【”sqljdbc_6.0\chs\jre8”】中的包【sqljdbc42.jar】，粘贴到IDE【Eclipse目录】下的【jdk1.8\jre\lib\ext】中。</li></ol><p><img src="https://i.loli.net/2019/12/05/nADI8TBaGQbjM92.png" srcset="/blog/img/loading.gif" alt=""></p><ol start="5"><li>右键【我的电脑】-&gt;【高级系统设置】-&gt;【系统属性】-&gt;【高级】-&gt;【环境变量】，编辑【系统变量】中的【CLASSPATH】的【变量值】，加入【<strong>;</strong>路径】（该路径为步骤4中包的完整路径，注意路径前一定要加 <em><code>;</code></em>）-&gt;【确定】。</li></ol><p><img src="https://i.loli.net/2019/12/05/62wn9cQXFhtPuGx.png" srcset="/blog/img/loading.gif" alt=""></p><h2 id="Eclipse"><a href="#Eclipse" class="headerlink" title="Eclipse"></a>Eclipse</h2><ol><li>【右键】工程项目-&gt;【Build Path】-&gt;【Configure Build Path】</li></ol><p><img src="https://i.loli.net/2019/12/05/JgRYuPtNi124K7n.png" srcset="/blog/img/loading.gif" alt=""></p><ol start="2"><li>选择【Libraries】页-&gt;【Add External JARs…】-&gt;【添加】前面粘贴jar包的路径-&gt;【Apply and Close】</li></ol><p><img src="https://i.loli.net/2019/12/05/5RJtqwNW2eZp6fY.png" srcset="/blog/img/loading.gif" alt=""></p><h1 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h1><p>新建一个class，复制粘贴一下代码👇</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.sql.*;<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">JDBC_Demo</span> </span>{<span class="hljs-comment">// MySQL 8.0 以下版本 - JDBC 驱动名及数据库 URL</span>    <span class="hljs-comment">//static final String JDBC_DRIVER = "com.mysql.jdbc.Driver";</span><span class="hljs-comment">//static final String DB_URL = "jdbc:mysql://localhost:3306/数据库名";</span><span class="hljs-comment">// MySQL 8.0 以上版本 - JDBC 驱动名及数据库 URL</span><span class="hljs-comment">//static final String JDBC_DRIVER = "com.mysql.cj.jdbc.Driver";  </span><span class="hljs-comment">//static final String DB_URL = "jdbc:mysql://localhost:3306/数据库名?useSSL=false&amp;serverTimezone=UTC";</span>    <span class="hljs-comment">// SQL Server数据库引擎</span><span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String JDBC_DRIVER = <span class="hljs-string">"com.microsoft.sqlserver.jdbc.SQLServerDriver"</span>;    <span class="hljs-comment">// 数据源！！！注意若出现加载或者连接数据库失败一般是这里出现问题</span><span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String DB_URL = <span class="hljs-string">"dbc:sqlserver://localhost:1433;DatabaseName=数据库名"</span>; <span class="hljs-comment">//【1】修改 数据库名</span>    <span class="hljs-comment">// 数据库的用户名与密码，需要根据自己的设置</span><span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String Name=<span class="hljs-string">"登录名"</span>;<span class="hljs-comment">//【2】修改 登录名</span><span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String Pwd=<span class="hljs-string">"密码"</span>;<span class="hljs-comment">//【3】修改 密码</span><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{    <span class="hljs-keyword">try</span>    {    Class.forName(JDBC_DRIVER);    Connection conn=DriverManager.getConnection(DB_URL,Name,Pwd);    System.out.println(<span class="hljs-string">"连接数据库成功"</span>);    }<span class="hljs-keyword">catch</span>(Exception e){    e.printStackTrace();    System.out.println(<span class="hljs-string">"连接失败"</span>);    }}}</code></pre></div><p>运行截图👇</p><p><img src="https://i.loli.net/2019/12/05/kMgWysGUYvXmDHr.png" srcset="/blog/img/loading.gif" alt=""></p><h1 id="心得体会"><a href="#心得体会" class="headerlink" title="心得体会"></a>心得体会</h1><p>前前后后，总计花了差不多三天的时间来研究怎么用JDBC连接数据库。</p><p>期间，遇到好多问题。问过指导老师，老师说可能是SQL Server版本的问题。</p><p>实验要求是2014，而我的是2017。但我觉得这不是问题。</p><p>反反复复地，其他都配置好了，但是总是连接不上数据库。</p><p>后来关注点放在了Eclipse的Path上，注意到我用的是jdk12，于是我想换成jdk8。</p><p>一换、一 run ……咦，可以了哈哈哈哈。</p><p>期间参考了很多人的博客，但是那些都没有<strong><font size="6" color="red">强调 </font><font size="5" color="blue">IDE中的环境要设置为【jdk8】</font>。</strong></p><p><em>写博客不易，如果本文对你有帮助，可以考虑给我 <font size="5" color="green">打赏</font> 哦</em>  *<em>( ͡° ͜ʖ ͡°)✧ *</em> </p><hr><p>2020.2.10 补充：关于JDBC连接MySQL的具体实例，可以前往 <a href="https://www.runoob.com/java/java-mysql-connect.html" target="_blank" rel="noopener">这里</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>MySQL</tag>
      
      <tag>SQL Server</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java——API中文手册</title>
    <link href="/blog/2019/12/01/Java-API%E4%B8%AD%E6%96%87%E6%89%8B%E5%86%8C/"/>
    <url>/blog/2019/12/01/Java-API%E4%B8%AD%E6%96%87%E6%89%8B%E5%86%8C/</url>
    
    <content type="html"><![CDATA[<nav class="navbar navbar-default navbar-fixed-top" role="navigation"><div class="container-fluid"><div class="navbar-header"><button class="navbar-toggle collapsed" data-toggle="collapse" data-target="#example-navbar-collapse"><a href="http://www.matools.com/api/java8" target="_blank" rel="noopener">【Java 8中文版开发文档，Java 8中文版 API手册中文版】( http://www.matools.com/api/java8 )</a> </button></div><a id="more"></a><!-- 文档内容 --><embed style="margin-top: 30px; height: 670px; width: 100%;" src="http://www.matools.com/file/manual/jdk_api_1.8_google/index.html"><script src="/blog/live2dw/lib/L2Dwidget.min.js?094cbace49a39548bed64abff5988b05"></script><script>L2Dwidget.init({"model":{"jsonPath":"/blog/live2dw/assets/assets/haruto.model.json"},"display":{"position":"left","width":150,"height":300},"tagMode":false,"debug":false,"mobile":{"show":true},"log":false,"pluginJsPath":"lib/","pluginModelPath":"assets/","pluginRootPath":"live2dw/"});</script><hr><p>为了避免版权问题，再次声明：移植该文档，仅供学习交流，别无其它目的。</p></div></nav><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2019的最后一个月</title>
    <link href="/blog/2019/12/01/2019%E5%B9%B4%E7%9A%84%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E6%9C%88/"/>
    <url>/blog/2019/12/01/2019%E5%B9%B4%E7%9A%84%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E6%9C%88/</url>
    
    <content type="html"><![CDATA[<p>💛今天，<font color="red" size="6">2019年12月01日</font>，是  <font color="blue">今年最后一个月的第一天</font>。</p><p>🔺回想去年的12月，经历了很多，一切都是从 <font color="green">【晚安计划】的短信 </font>开始。时至今天，我仍保存着去年的“晚安计划”短信。</p><!--< style="position:absolute; width:400px; height:400px; overflow:auto"> --><center><div style="position:relative;width:400px;  height:400px; overflow:auto"><img src="https://i.loli.net/2019/12/01/nO1lWuK3tf7zhIX.png"></div></center>💙<font color="purple" size="5">今晚开始</font>，<font color="red">又是新的一轮【晚安计划】</font>。不知道你有没有呢？<p>🧡从国庆回到学校后，<font color="orange" size="4">课多了、要处理的事情多了</font>，总之这两个月来搞的东西太多了。</p><p>💚不过呢，<font color="green" size="4">也是有收哦的哦！</font>像比如，现在这个<font color="green" size="4">博客</font>(2019.11.07)就是之一。还有自己写的小玩意，以后会放出来。</p><p>💜忙完这最后的12月，<font color="purple" size="4">也该是时候让自己出去走走了</font>。总是待在宿舍、教学楼，会<del>傻的</del>hh。</p><p>💛最近<font color="brown" size="4">很想家，很想回家</font>。不过也要等到<font color="brown" size="4">2020元旦</font>之后啦，也快了快了。</p><p><font color="asdasdf" size="6">最后</font>，祝我自己和大家12月<font color="asdd" size="5">健康、平安、快乐、好运……</font></p><marquee scrolldelay="10" scrollamount="30" loop="2" direction="left" onmouseout="this.start()" onmouseover="this.stop()"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"></marquee><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java—(递归+非递归)阶层</title>
    <link href="/blog/2019/11/30/Java%E2%80%94%EF%BC%88%E9%80%92%E5%BD%92-%E9%9D%9E%E9%80%92%E5%BD%92%EF%BC%89%E9%98%B6%E5%B1%82/"/>
    <url>/blog/2019/11/30/Java%E2%80%94%EF%BC%88%E9%80%92%E5%BD%92-%E9%9D%9E%E9%80%92%E5%BD%92%EF%BC%89%E9%98%B6%E5%B1%82/</url>
    
    <content type="html"><![CDATA[<p>递归阶层算法、非递归阶层算法</p><p>扩展①：求阶层的和</p><p>扩展②：寻找最高阶、打印阶层的计算过程</p><a id="more"></a><h1 id="非递归阶层算法"><a href="#非递归阶层算法" class="headerlink" title="非递归阶层算法"></a>非递归阶层算法</h1><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.Scanner;<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UnRecurrenceFactorial</span> </span>{<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{        Scanner sc = <span class="hljs-keyword">new</span> Scanner(System.in);        System.out.println(<span class="hljs-string">"input:"</span>);        <span class="hljs-keyword">int</span> n = sc.nextInt();        <span class="hljs-keyword">int</span> a = <span class="hljs-number">1</span>;        <span class="hljs-keyword">while</span>(n != <span class="hljs-number">1</span>){            a = a*n;            n--;        }        System.out.println(a);        sc.close();    }}</code></pre></div><h1 id="递归阶层算法"><a href="#递归阶层算法" class="headerlink" title="递归阶层算法"></a>递归阶层算法</h1><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RecurrenceFactorial</span> </span>{<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{<span class="hljs-keyword">long</span> fac = fac(k);<span class="hljs-comment">//修改k的值即可</span>System.out.println(<span class="hljs-string">"n的阶乘为:"</span> + fac);}<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">long</span> <span class="hljs-title">fac</span><span class="hljs-params">(<span class="hljs-keyword">int</span> n)</span></span>{<span class="hljs-keyword">if</span>(n == <span class="hljs-number">1</span>){<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;}<span class="hljs-keyword">else</span>{<span class="hljs-keyword">return</span> fac(n-<span class="hljs-number">1</span>) * n;}}}</code></pre></div><h1 id="扩展①：求阶层的和"><a href="#扩展①：求阶层的和" class="headerlink" title="扩展①：求阶层的和"></a>扩展①：求阶层的和</h1><p>🔺计算 1!+2!+3!+···+k! 的值：</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{<span class="hljs-keyword">int</span> i,j;<span class="hljs-keyword">long</span> sum = <span class="hljs-number">0</span>;<span class="hljs-keyword">for</span>(i = <span class="hljs-number">1</span>; i &lt;= k; i++){<span class="hljs-comment">//修改k的值即可</span><span class="hljs-keyword">int</span> t = <span class="hljs-number">1</span>;<span class="hljs-keyword">for</span>(j = <span class="hljs-number">1</span>; j &lt;= i; j++){t *= j;}sum += t;}System.out.println(sum);}</code></pre></div><h1 id="扩展②：寻找最高阶、打印阶层的计算过程"><a href="#扩展②：寻找最高阶、打印阶层的计算过程" class="headerlink" title="扩展②：寻找最高阶、打印阶层的计算过程"></a>扩展②：寻找最高阶、打印阶层的计算过程</h1><p>🔺题目：</p><p>指定一个整型数MAX，试编写一个程序求满足<strong>1!+2!+3!…+n!&lt;=MAX</strong> <strong>的最大整数n</strong>。并把满足条件的求和式子和找到的最大整数n打印输出。</p><blockquote><p>示例1：MAX=111时，输出</p><p>1!+2!+3!+4!=33</p><p>满足条件的最大整数:4</p></blockquote><blockquote><p>示例2：MAX=9876</p><p>1!+2!+3!+4!+5!+6!+7!=5,913</p><p>满足条件的最大整数:7</p></blockquote><p>🔺代码：</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.Scanner;<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Du</span> </span>{<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{Scanner input = <span class="hljs-keyword">new</span> Scanner(System.in);System.out.println(<span class="hljs-string">"the value of MAX:"</span>);<span class="hljs-keyword">int</span> MAX;MAX=input.nextInt();System.out.println(<span class="hljs-string">"满足条件的最大整数："</span>+SUM(MAX));input.close();}<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">SUM</span><span class="hljs-params">(<span class="hljs-keyword">int</span> MAX)</span> </span>{<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>,j;<span class="hljs-keyword">long</span> sum = <span class="hljs-number">0</span>;<span class="hljs-keyword">for</span>(i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">10</span>; i++){<span class="hljs-keyword">int</span> t = <span class="hljs-number">1</span>;<span class="hljs-keyword">for</span>(j = <span class="hljs-number">1</span>; j &lt;= i; j++){t *= j;}sum += t;<span class="hljs-keyword">if</span>(sum&gt;MAX) <span class="hljs-keyword">break</span>;}Print(i-<span class="hljs-number">1</span>);<span class="hljs-keyword">return</span> i-<span class="hljs-number">1</span>;}    <span class="hljs-comment">/*打印阶层的计算过程*/</span><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Print</span><span class="hljs-params">(<span class="hljs-keyword">int</span> k)</span> </span>{<span class="hljs-keyword">int</span> i,j;<span class="hljs-keyword">long</span> sum = <span class="hljs-number">0</span>;<span class="hljs-keyword">for</span>(i = <span class="hljs-number">1</span>; i &lt;= k; i++){<span class="hljs-comment">//修改k的值即可</span><span class="hljs-keyword">int</span> t = <span class="hljs-number">1</span>;<span class="hljs-keyword">for</span>(j = <span class="hljs-number">1</span>; j &lt;= i; j++){t *= j;}System.out.printf(<span class="hljs-string">"%d! + "</span>,i);sum += t;}System.out.print(<span class="hljs-string">"\b\b= "</span>+ sum);<span class="hljs-comment">//退两个，删去最后一个+</span>System.out.println();}}</code></pre></div><p>🔺截图：</p><p><img src="https://i.loli.net/2019/11/30/cfhbFSIjaK8mpTy.png" srcset="/blog/img/loading.gif" alt=""></p><hr><p>我的文章、代码简单，这里有更详细文章，见大佬👉<a href="https://blog.csdn.net/GoodLi199309/article/details/80079973" target="_blank" rel="noopener">Java实现n阶阶乘的计算</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java—向下/上取整</title>
    <link href="/blog/2019/11/30/Java%E2%80%94-%E5%90%91%E4%B8%8B-%E4%B8%8A%E5%8F%96%E6%95%B4/"/>
    <url>/blog/2019/11/30/Java%E2%80%94-%E5%90%91%E4%B8%8B-%E4%B8%8A%E5%8F%96%E6%95%B4/</url>
    
    <content type="html"><![CDATA[<p>Java中对数的舍入也分有</p><ul><li>向上舍入（向上取整）</li><li>向下舍入（向下取整）</li></ul><p>Java的<strong>Math类</strong>中包含数舍入的方法：</p><ul><li><strong>ceil()</strong></li><li><strong>floor()</strong></li></ul><h1 id="ceil-和floor"><a href="#ceil-和floor" class="headerlink" title="ceil()和floor()"></a>ceil()和floor()</h1><table><thead><tr><th>ceil()</th><th>floor()</th></tr></thead><tbody><tr><td>向上取整</td><td>向下取整</td></tr><tr><td>返回大于等于( &gt;= )给定参数的的最小整数，类型为双精度浮点型。</td><td>返回小于等于（&lt;=）给定参数的最大整数 。</td></tr></tbody></table><a id="more"></a><h1 id="看个栗子👇"><a href="#看个栗子👇" class="headerlink" title="看个栗子👇"></a>看个栗子👇</h1><p><img src="https://i.loli.net/2019/12/01/IsS3UeGZ4wbpLVu.png" srcset="/blog/img/loading.gif" alt=""></p><hr><p>关于Math类的说明，参考 <a href="https://www.runoob.com/java/java-number.html" target="_blank" rel="noopener">Number &amp; Math 类方法</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java—打印字母表</title>
    <link href="/blog/2019/11/30/Java%E2%80%94%E6%89%93%E5%8D%B0%E5%AD%97%E6%AF%8D%E8%A1%A8/"/>
    <url>/blog/2019/11/30/Java%E2%80%94%E6%89%93%E5%8D%B0%E5%AD%97%E6%AF%8D%E8%A1%A8/</url>
    
    <content type="html"><![CDATA[<p><strong><font color="green">A到Z</font>的ASCII码值是<font color="blue">65到90</font></strong></p><p><strong><font color="green">a到z</font>的ASCII码值是<font color="blue">97到122</font></strong></p><a id="more"></a><h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AlphabetDemo</span> </span>{  <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{      <span class="hljs-comment">/*char和int类型能够相互转换，相信大家都明白 */</span>       <span class="hljs-comment">//A到Z的ASCII码是65到90，a到z的ASCII码值是97到122</span>      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">char</span> c = <span class="hljs-number">0</span>; c &lt; <span class="hljs-number">128</span>; c++) {          <span class="hljs-comment">//java里包装类的一个静态方法，确定c是字母还是小写！！！）</span>          <span class="hljs-keyword">if</span> (Character.isLowerCase(c)) {              System.out.printf(<span class="hljs-string">"value: %3d  char: %c\n"</span>, (<span class="hljs-keyword">int</span>)c, c);          <span class="hljs-comment">//同上，判断c是大写</span>          } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (Character.isUpperCase(c)) {              System.out.printf(<span class="hljs-string">"value: %3d  char: %c\n"</span>, (<span class="hljs-keyword">int</span>)c, c);          }      }  }}</code></pre></div><p>注：关于<code>isLowerCase</code>和<code>isUpperCase</code>在文末有进一步的说明。</p><h1 id="扩展-①"><a href="#扩展-①" class="headerlink" title="扩展 ①"></a>扩展 ①</h1><p>🔺题目：<br><img src="https://i.loli.net/2019/11/30/1ZcyKpWRHgXSl93.png" srcset="/blog/img/loading.gif" alt=""></p><p>🔺参考代码：</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.Scanner;<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Alphabet</span> </span>{<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{Scanner input=<span class="hljs-keyword">new</span> Scanner(System.in);<span class="hljs-keyword">int</span> n,level;System.out.println(<span class="hljs-string">"the value of n:"</span>);n=input.nextInt();level=(<span class="hljs-keyword">int</span>)Math.ceil(<span class="hljs-number">26</span>/n);<span class="hljs-comment">//向上取整</span>System.out.println(<span class="hljs-string">"======Upper========"</span>);<span class="hljs-keyword">char</span> CH=<span class="hljs-number">65</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;=level;i++) {<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">0</span>;j&lt;n;j++) {System.out.printf(<span class="hljs-string">"%c "</span>,CH);++CH;<span class="hljs-keyword">if</span>(CH&gt;=<span class="hljs-number">90</span>)<span class="hljs-keyword">break</span>;}System.out.println();}System.out.println();<span class="hljs-comment">/*另一个版本，这就看个人理解了！</span><span class="hljs-comment">System.out.println("======Upper========");</span><span class="hljs-comment">char CH=65;</span><span class="hljs-comment">for(int i=1;i&lt;=26;i++) {</span><span class="hljs-comment">            System.out.print(CH+" ");</span><span class="hljs-comment">            CH++;</span><span class="hljs-comment">            if(i%n==0) {</span><span class="hljs-comment">                System.out.println();</span><span class="hljs-comment">            }</span><span class="hljs-comment">}</span><span class="hljs-comment">System.out.println();</span><span class="hljs-comment">*/</span>System.out.println(<span class="hljs-string">"======Lower========"</span>);<span class="hljs-keyword">char</span> ch=<span class="hljs-number">97</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;=level;i++) {<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">0</span>;j&lt;n;j++) {System.out.printf(<span class="hljs-string">"%c "</span>,ch);++ch;<span class="hljs-keyword">if</span>(ch&gt;=<span class="hljs-number">123</span>)<span class="hljs-keyword">break</span>;}System.out.println();}System.out.println();        input.close();}}</code></pre></div><p>注意：Math.ceil();//向上取整</p><p>参考：我的另一篇博客：<a href="https://melodyhub.ltd/blog/2019/11/30/Java%E2%80%94-%E5%90%91%E4%B8%8B-%E4%B8%8A%E5%8F%96%E6%95%B4/" target="_blank" rel="noopener">Java—向下/上取整</a></p><p>🔺执行截图：</p><p><img src="https://i.loli.net/2019/11/30/azHLnfqYJFprVRQ.png" srcset="/blog/img/loading.gif" alt=""></p><h1 id="扩展-②"><a href="#扩展-②" class="headerlink" title="扩展 ②"></a>扩展 ②</h1><p>上面常规思考题中的第6题是自左往右从上往下的水平顺序输出大写堆和小写堆字母表。假如想要按照自上而下从左往右的垂直顺序输出大写堆，该如何实现程序？</p><p>即假如每列输出N=5个，则程序的输出情况如下：</p><blockquote><p>= = = Upper = = =</p><p>A  F  K  P  U  Z </p><p>B  G  L  Q  V </p><p>C  H  M  R  W</p><p>D  I  N  S  X </p><p>E  J  O  T  Y </p></blockquote><p>试用<strong>一重循环</strong>编写程序，指定一个整型数N(1&lt;=N&lt;=26)，按示例规格输出列优先排序的大写字母表。 </p><p>🔺代码：</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.Scanner;<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Aphabet</span> </span>{<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{System.out.println(<span class="hljs-string">"======Upper========"</span>);Scanner input = <span class="hljs-keyword">new</span> Scanner(System.in);<span class="hljs-keyword">int</span> n,level;System.out.println(<span class="hljs-string">"the value of n:"</span>);n = input.nextInt();level = (<span class="hljs-keyword">int</span>)Math.ceil(<span class="hljs-number">26</span>/n);<span class="hljs-comment">//向上取整</span><span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>;<span class="hljs-keyword">char</span> ch = <span class="hljs-number">65</span>;p(<span class="hljs-number">1</span>, n, ch);}<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">p</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x,<span class="hljs-keyword">int</span> n,<span class="hljs-keyword">char</span> ch)</span> </span>{<span class="hljs-keyword">if</span>(x &gt; n)<span class="hljs-keyword">return</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = x;i &lt;= <span class="hljs-number">26</span>;i += n){ch = (<span class="hljs-keyword">char</span>)(i + <span class="hljs-number">64</span>);System.out.print(ch + <span class="hljs-string">" "</span>);}System.out.println();++x;p(x, n, ch);}}</code></pre></div><p><del><font size="1">下午做了半个多小时都没做出来，晚上玩了会游戏突然想到用递归，下午怎么就没想到呢？然后游戏就挂机被举报了，但一气呵成搞定了这题。说明思想不够灵活hhh</font></del></p><p>🔺截图：</p><p><img src="https://i.loli.net/2019/11/30/vYJhpT4VCb96txE.png" srcset="/blog/img/loading.gif" alt=""></p><h1 id="补充：Java-Character-类"><a href="#补充：Java-Character-类" class="headerlink" title="补充：Java Character 类"></a>补充：<a href="https://www.runoob.com/java/java-character.html" target="_blank" rel="noopener">Java Character 类</a></h1><h2 id="isLowerCase-方法"><a href="#isLowerCase-方法" class="headerlink" title="isLowerCase() 方法"></a>isLowerCase() 方法</h2><p>🔺作用：用于判断指定字符是否为小写字母。</p><p>🔺语法</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">isLowerCase</span><span class="hljs-params">(<span class="hljs-keyword">char</span> ch)</span></span></code></pre></div><p>🔺参数</p><ul><li><strong>ch</strong> – 要测试的字符。</li></ul><p>🔺返回值</p><p>如果字符为小写，则返回 true；否则返回 false。</p><p>🔺实例</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Test</span> </span>{    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String args[])</span> </span>{        System.out.println( Character.isLowerCase(<span class="hljs-string">'a'</span>));        System.out.println( Character.isLowerCase(<span class="hljs-string">'A'</span>));    }}</code></pre></div><p>🔺以上程序执行结果为：</p><div class="hljs"><pre><code class="hljs yaml"><span class="hljs-literal">true</span><span class="hljs-literal">false</span></code></pre></div><h2 id="isUpperCase-方法"><a href="#isUpperCase-方法" class="headerlink" title="isUpperCase() 方法"></a>isUpperCase() 方法</h2><p> 🔺作用：用于判断指定字符是否为大写字母。</p><p> 🔺语法</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">isUpperCase</span><span class="hljs-params">(<span class="hljs-keyword">char</span> ch)</span></span></code></pre></div><p> 🔺参数</p><ul><li><strong>ch</strong> – 要测试的字符。</li></ul><p> 🔺返回值</p><p>如果字符为大写，则返回 true；否则返回 false。</p><p> 🔺实例</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Test</span> </span>{    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String args[])</span> </span>{        System.out.println( Character.isUpperCase(<span class="hljs-string">'b'</span>));        System.out.println( Character.isUpperCase(<span class="hljs-string">'B'</span>));    }}</code></pre></div><p> 🔺以上程序执行结果为：</p><div class="hljs"><pre><code class="hljs yaml"><span class="hljs-literal">false</span><span class="hljs-literal">true</span></code></pre></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java—5种生成随机数的方法</title>
    <link href="/blog/2019/11/30/Java%E2%80%945%E7%A7%8D%E7%94%9F%E6%88%90%E9%9A%8F%E6%9C%BA%E6%95%B0%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <url>/blog/2019/11/30/Java%E2%80%945%E7%A7%8D%E7%94%9F%E6%88%90%E9%9A%8F%E6%9C%BA%E6%95%B0%E7%9A%84%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>5种生成随机数的简单方法</p><p>和一篇大佬的文章👇</p><a id="more"></a><h1 id="方法①"><a href="#方法①" class="headerlink" title="方法①"></a>方法①</h1><p>🔺 通过java.Math包的random方法得到1-10的int随机数</p><p>🔺 公式：</p><blockquote><p>最小值—最大值（整数）的随机数</p><p>(类型) 最小值+Math.random()*最大值</p></blockquote><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.Random;<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RandomDemo</span> </span>{<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{<span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">5</span>;i++){System.out.println((<span class="hljs-keyword">int</span>)(<span class="hljs-number">1</span>+Math.random()*<span class="hljs-number">10</span>));<span class="hljs-keyword">int</span> k;k=(<span class="hljs-keyword">int</span>)(<span class="hljs-number">1</span>+Math.random()*<span class="hljs-number">10</span>);}}}</code></pre></div><h1 id="方法②"><a href="#方法②" class="headerlink" title="方法②"></a>方法②</h1><p>🔺借助java.util.Random类来产生一个随机数发生器，也是最常用的一种，构造函数有两个，Random()和Random(long seed)。第一个就是以当前时间为默认种子，第二个是以指定的种子值进行。产生之后，借助不同的语句产生不同类型的数。</p><p>🔺种子就是产生随机数的第一次使用值,机制是通过一个函数,将这个种子的值转化为随机数空间中的某一个点上,并且产生的随机数均匀的散布在空间中。以后产生的随机数都与前一个随机数有关</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.Random;<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RandomDemo</span> </span>{<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span></span><span class="hljs-function"></span>{    Random r = <span class="hljs-keyword">new</span> Random();<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span> ; i&lt;<span class="hljs-number">5</span> ;  i++){<span class="hljs-keyword">int</span> ran1 = r.nextInt(<span class="hljs-number">100</span>);<span class="hljs-comment">//种子：100</span>System.out.println(ran1);}}}</code></pre></div><p>注：类似的方法可参考 <a href="https://blog.csdn.net/xiaoye142034/article/details/78142136/" target="_blank" rel="noopener">利用Random类来产生5个20~50之间的随机整数</a></p><h1 id="方法③"><a href="#方法③" class="headerlink" title="方法③"></a>方法③</h1><ol><li><p>生成随机数需要使用到Java工具类中的Random类。</p></li><li><p>要求是随机x到y之间的整数，即指定范围，则使用Random类中的nextInt(int n)方法。</p></li><li><p>该方法生成从0（包括）到n（不包括）之间的随机整数，是一个伪随机数，并不是真正的随机数。</p></li><li><p>若x不为0，则需要在随机结果后加上x。参数n的值也需要加上1后减去x。最后结果才符合要求的范围。</p></li></ol><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.Random;<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RandomDemo</span> </span>{<span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">int</span> START = <span class="hljs-number">50</span>;<span class="hljs-comment">//定义范围开始数字</span><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">int</span> END = <span class="hljs-number">99</span>;<span class="hljs-comment">//定义范围结束数字</span><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{        <span class="hljs-comment">//创建Random类对象</span>      Random random = <span class="hljs-keyword">new</span> Random();                    <span class="hljs-comment">//产生随机数</span>      <span class="hljs-keyword">int</span> number = random.nextInt(END - START + <span class="hljs-number">1</span>) + START;      <span class="hljs-comment">//打印随机数</span>      System.out.println(<span class="hljs-string">"产生一个"</span>+START+<span class="hljs-string">"到"</span>+END+<span class="hljs-string">"之间的随机整数："</span>+number);}}</code></pre></div><p>注：更多方法可参考<a href="https://blog.csdn.net/u012377333/article/details/71336987" target="_blank" rel="noopener">【Java工具类】—-产生随机数</a></p><h1 id="方法④"><a href="#方法④" class="headerlink" title="方法④"></a>方法④</h1><p>🔺 返回的数值是 [ 0.0 , 1.0 ) 的double型数值，由于double类数的精度很高，可以在一定程度下看做随机数，借助（int）来进行类型转换就可以得到整数随机数了 </p><div class="hljs"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span></span><span class="hljs-function"></span>{    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">10</span>; i++) {    <span class="hljs-keyword">int</span> max=<span class="hljs-number">99</span>,min=<span class="hljs-number">10</span>;<span class="hljs-comment">//生成两位随机正整数</span><span class="hljs-keyword">int</span> ran2 = (<span class="hljs-keyword">int</span>) (Math.random()*(max-min)+min);     System.out.println(ran2);}}</code></pre></div><h1 id="方法⑤"><a href="#方法⑤" class="headerlink" title="方法⑤"></a>方法⑤</h1><p>🔺 返回从1970年1月1日0时0分0秒（这与OS有关）到现在的一个long型的毫秒数，取模之后即可得到所需范围内的随机数</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span></span><span class="hljs-function">    </span>{            <span class="hljs-keyword">int</span> max=<span class="hljs-number">100</span>,min=<span class="hljs-number">1</span>;        <span class="hljs-keyword">long</span> randomNum = System.currentTimeMillis();          <span class="hljs-keyword">int</span> ran3 = (<span class="hljs-keyword">int</span>) (randomNum%(max-min)+min);          System.out.println(ran3);            }</code></pre></div><hr><h1 id="大佬的文章"><a href="#大佬的文章" class="headerlink" title="大佬的文章"></a>大佬的文章</h1><p>这个大佬【<a href="https://blog.csdn.net/Pranuts_" target="_blank" rel="noopener">peabits</a>】的文章贼详细，可以好好琢磨琢磨 👇</p><iframe src="https://blog.csdn.net/pranuts_/article/details/88628304" width="100%" height="650px" scrolling="yes" frameborder="1"></iframe><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java中的&lt;&lt;、&gt;&gt;和&gt;&gt;&gt;</title>
    <link href="/blog/2019/11/30/Java%E4%B8%AD%E7%9A%84%E3%80%81-%E5%92%8C/"/>
    <url>/blog/2019/11/30/Java%E4%B8%AD%E7%9A%84%E3%80%81-%E5%92%8C/</url>
    
    <content type="html"><![CDATA[<h1 id="左移"><a href="#左移" class="headerlink" title="左移"></a>左移</h1><ul><li><strong>左移运算符</strong> <strong><code>&lt;&lt;</code></strong> </li><li>👉使指定值的所有位都左移规定的次数</li><li>左移m&lt;&lt;n，代表把数字m在无溢出的前提下<strong>乘以2的n次方</strong>　 </li></ul><h1 id="右移"><a href="#右移" class="headerlink" title="右移"></a>右移</h1><ul><li><strong>右移运算符</strong> <strong><code>&gt;&gt;</code></strong></li><li>👉 使指定值的所有位都右移规定的次数</li><li>右移m&gt;&gt;n 代表把数字m除以2的n次方，原来是正数的还是正数，负数还是负数</li><li>注意，如果是单数，也就是二进制末位为1，则结果是<strong>将m除以2的n次方的整数商</strong> </li></ul><h1 id="无符号右移"><a href="#无符号右移" class="headerlink" title="无符号右移"></a>无符号右移</h1><p>  <strong>无符号右移运算符</strong> <strong><code>&gt;&gt;&gt;</code></strong></p><p>👉<strong>同右移，但是结果全变正数</strong></p><a id="more"></a><h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><p><img src="https://i.loli.net/2019/11/30/MGCsdqjI5b4Y3iN.png" srcset="/blog/img/loading.gif" alt="栗子"></p><hr><p>以下内容转载于 <a href="https://www.cnblogs.com/chuijingjing/p/9405598.html" target="_blank" rel="noopener">Java中的&lt;&lt; 和 &gt;&gt; 和 &gt;&gt;&gt; 详细分析</a> </p><h1 id="详细分析"><a href="#详细分析" class="headerlink" title="详细分析"></a>详细分析</h1><p><strong>&lt;&lt;表示左移，不分正负数，低位补0；</strong>　</p><p>注：以下数据类型默认为byte-8位</p><p>左移时不管正负，低位补0</p><p>正数：<font color="blue"><strong>r = 20 &lt;&lt; 2</strong></font></p><p>　　20的二进制补码：<strong>0001 0100</strong></p><p>　　向左移动两位后：<strong>0101 0000</strong></p><p>　　　　  　　结果：<strong>r = 80</strong></p><p>负数：<font color="blue"><strong>r = -20 &lt;&lt; 2</strong></font></p><p>　　-20 的二进制原码 ：<strong>1001 0100</strong></p><p>　　-20 的二进制反码 ：<strong>1110 1011</strong></p><p>　　-20 的二进制补码 ：<strong>1110 1100</strong></p><p>　　左移两位后的补码：<strong>1011 0000</strong></p><p>　　　　　　　　反码：<strong>1010 1111</strong></p><p>　　　　　　　　原码：<strong>1101 0000</strong></p><p>　　　　　　　　结果：<strong>r = -80</strong></p><p><strong>&gt;&gt;表示右移，如果该数为正，则高位补0，若为负数，则高位补1；</strong></p><p>注：以下数据类型默认为byte-8位</p><p>正数：<font color="blue"><strong>r = 20 &gt;&gt; 2</strong></font></p><p>　　20的二进制补码：<strong>0001 0100</strong></p><p>　　向右移动两位后：<strong>0000 0101</strong></p><p>　　　　　　　结果：<strong>r = 5</strong></p><p>负数：<font color="blue"><strong>r = -20 &gt;&gt; 2</strong></font></p><p>　　-20 的二进制原码 ：<strong>1001 0100</strong></p><p>　　-20 的二进制反码 ：<strong>1110 1011</strong></p><p>　　-20 的二进制补码 ：<strong>1110 1100</strong> </p><p>　　右移两位后的补码：<strong>1111 1011</strong> </p><p>　　　　　　　　反码：<strong>1111 1010</strong></p><p>　　　　　　　　原码：<strong>1000 0101</strong></p><p>　　　　　　　　结果：<strong>r = -5</strong></p><p><strong>&gt;&gt;&gt;表示无符号右移，也叫逻辑右移，即若该数为正，则高位补0，而若该数为负数，则右移后高位同样补0</strong></p><p>正数：　<font color="blue"><strong>r = 20 &gt;&gt;&gt; 2</strong></font></p><p>　　　　的结果与 r = 20 &gt;&gt; 2 相同；</p><p>负数：　<font color="blue"><strong>r = -20 &gt;&gt;&gt; 2</strong></font></p><p>注：以下数据类型默认为int 32位</p><p>　　-20:源码：<strong>10000000 00000000 00000000 00010100</strong></p><p>　　　　反码：<strong>11111111 11111111  11111111  11101011</strong></p><p>　　　　补码：<strong>11111111 11111111  11111111  11101100</strong></p><p>　　　　右移：<strong>00111111 11111111  11111111  11111011</strong></p><p>　　　　结果：<strong>r = 1073741819</strong></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java用最有效率的方法计算2乘以8</title>
    <link href="/blog/2019/11/30/Java%E2%80%94%E7%94%A8%E6%9C%80%E6%9C%89%E6%95%88%E7%8E%87%E7%9A%84%E6%96%B9%E6%B3%95%E8%AE%A1%E7%AE%972%E4%B9%98%E4%BB%A58/"/>
    <url>/blog/2019/11/30/Java%E2%80%94%E7%94%A8%E6%9C%80%E6%9C%89%E6%95%88%E7%8E%87%E7%9A%84%E6%96%B9%E6%B3%95%E8%AE%A1%E7%AE%972%E4%B9%98%E4%BB%A58/</url>
    
    <content type="html"><![CDATA[<p>最有效率的方法 👉<font color="red"> 2 &lt;&lt; 3</font></p><blockquote><p>其中，<strong>左移3位相当于乘以2的3次方，右移3位相当于除以2的3次方</strong></p></blockquote><p>再比如，31 * num </p><p>等价于<strong><font color="blue">( num &lt;&lt; 5 ) – num</font></strong></p><blockquote><p>左移5位相当于乘以2的5次方（32），再减去自身（-1），这一过程就相当于乘以31</p></blockquote><p>注：关于<strong>移位运算符</strong>，可参考我的下一篇博客 <a href="https://melodyhub.ltd/blog/2019/11/30/Java%E4%B8%AD%E7%9A%84%E3%80%81-%E5%92%8C/" target="_blank" rel="noopener">Java中的&lt;&lt;、&gt;&gt;和&gt;&gt;&gt;</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java笔记—static关键字</title>
    <link href="/blog/2019/11/28/Java%E7%AC%94%E8%AE%B0%E2%80%94static%E5%85%B3%E9%94%AE%E5%AD%97/"/>
    <url>/blog/2019/11/28/Java%E7%AC%94%E8%AE%B0%E2%80%94static%E5%85%B3%E9%94%AE%E5%AD%97/</url>
    
    <content type="html"><![CDATA[<h1 id="static-关键字"><a href="#static-关键字" class="headerlink" title="static 关键字"></a>static 关键字</h1><p>static类型，又叫类类型。</p><p><strong>修饰目标 (成员数据/方法/成员内部类/代码块)属于类的</strong></p><table><thead><tr><th>静态类</th><th>静态块</th><th>静态方法</th><th>静态变量</th></tr></thead><tbody><tr><td>static 成员内部类</td><td><font color="red">static 代码块</font></td><td>static 成员方法</td><td>static 成员变量</td></tr><tr><td>直接通过类就可以访问。所有对象共享该类</td><td>只能出现在类中不能出现方法体中，<font color="red">类加载后初始化时被执行一次</font>。<font color="sapphire">注意:区分构造代码块，每次构造都被执行</font></td><td>直接通过<font color="orange">类</font>就可以<font color="orange">调用</font>。不用等创建了实例后</td><td>类加载时在Java<font color="blue">方法区分配空间，所有对象共享</font></td></tr></tbody></table><p>区别：<strong>无static关键字成员属于具体的对象实例： <font color="green"> 实例变量、实例方法</font>(只能通过对象调用)、实例成员内部类(只能通过对象引用)</strong></p><h3 id="静态的特点"><a href="#静态的特点" class="headerlink" title="静态的特点"></a>静态的特点</h3><ol><li>随着类的加载而加载<br> 也就是，说静态会随着类的消失而消失，说明静态的生命周期最长。</li><li>优先于对象的存在<br> 明确一点：静态是先存在的，对象是后存在的。</li><li>被所有对象共享。</li><li>可以直接被类名多调用。</li></ol><h3 id="static-成员的访问格式"><a href="#static-成员的访问格式" class="headerlink" title="static 成员的访问格式"></a>static 成员的访问格式</h3><p>一般要通过 *<em>“  类名.  ” *</em> 的形式来访问</p><table><thead><tr><th>静态变量</th><th>静态方法</th><th>静态成员内部类</th></tr></thead><tbody><tr><td>类名.静态变量</td><td>类名.静态方法</td><td>类名.静态成员内部类</td></tr></tbody></table><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>🔺 static成员方法/代码块：<strong>静态方法 <font color="green" size="5"> 只能</font>  使用<font color="red">静态成员变量(或内部类)或调用静态方法。</font>（任课老师称： <font color="blue"> 静者恒静</font>）</strong></p><p>🔺非静态方法可以访问静态、也可以访问非静态。</p><p>🔺 static成员方法/代码块：<strong>方法体中不能出现this(当前对象)或super(基类对象)</strong>。因为静态优先于对象存在，所以静态方法中不可以出现this、super关键字。</p><h3 id="实例变量和类变量的区别"><a href="#实例变量和类变量的区别" class="headerlink" title="实例变量和类变量的区别"></a>实例变量和类变量的区别</h3><ol><li>存放位置<br> 类变量随着类的加载存在于方法区中，实例变量随着对象的对象的建立存在于堆内存里</li><li>生命周期<br> 类变量生命周期最长，随着“类”的加载而加载，随着类的消失而消失<br> 实例变量随着“对象”的消失而消失</li></ol><h3 id="静态的利弊"><a href="#静态的利弊" class="headerlink" title="静态的利弊"></a>静态的利弊</h3><ul><li>利：1、对对象的共享数据进行单独空间的存储，节省空间，没有必要没一个对象中都存储一份。2、可以直接被类名所调用。</li><li>弊：生命周期过长，访问出现局限性（只能访问静态）</li></ul><a id="more"></a><h3 id="Demo：类内使用"><a href="#Demo：类内使用" class="headerlink" title="Demo：类内使用"></a>Demo：类内使用</h3><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">import</span> <span class="hljs-keyword">static</span> java.lang.System.*; <span class="hljs-comment">//静态导入静态方法或对象 </span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">StaticDemo1</span> </span>{     <span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> a = <span class="hljs-number">3</span>, b, i = <span class="hljs-number">0</span>; <span class="hljs-comment">// 静态变量 </span>    <span class="hljs-keyword">char</span> ch = <span class="hljs-string">'Y'</span>; <span class="hljs-comment">// 实例变量 </span>    <span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">meth</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x)</span> </span>{ <span class="hljs-comment">// 静态方法 </span>        out.println(<span class="hljs-string">"x = "</span> + x);         <span class="hljs-comment">//out.println("ch = " + ch);//【1】Error! </span>    }     <span class="hljs-keyword">static</span> { <span class="hljs-comment">// 静态代码块-类加载时只执行1次 </span>        out.println(<span class="hljs-string">"静态块初始化：仅1次"</span>);        b = a * <span class="hljs-number">4</span>;         <span class="hljs-comment">//out.println("ch = " + ch);//【1】Error! </span>    }     <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{        meth(<span class="hljs-number">42</span>); <span class="hljs-comment">//静态方法调用静态方法 </span>        <span class="hljs-keyword">new</span> StaticDemo1(); <span class="hljs-comment">//创建匿名对象1 </span>        <span class="hljs-keyword">new</span> StaticDemo1(); <span class="hljs-comment">//创建匿名对象2 } </span>        {             out.println(<span class="hljs-string">"ch = "</span> + ch);<span class="hljs-comment">//【2】OK! </span>            out.printf(<span class="hljs-string">"构造代码块：第%d次构造第%1$d次执行\n"</span>, (++i)); }     }}</code></pre></div><p>注意：</p><p>🔺特别注意：类的静态代码块仅在类在加载后初始化时被执行1次</p><p>🔺第一次new一个类时才加载该类</p><p>🔺静态方法、静态块不能访问非静态的成员（即，静者恒静）。如上述代码中的注释【1】</p><p>🔺静态块初始化：仅1次</p><h3 id="Demo：类外使用和静态块执行时机"><a href="#Demo：类外使用和静态块执行时机" class="headerlink" title="Demo：类外使用和静态块执行时机"></a>Demo：类外使用和静态块执行时机</h3><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">import</span> <span class="hljs-keyword">static</span> java.lang.System.out;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyD</span></span>{<span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> m;<span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> n;<span class="hljs-keyword">static</span>{ <span class="hljs-comment">// 静态代码块【2】</span>m = n = <span class="hljs-number">0</span>;out.println(<span class="hljs-string">"仅1次"</span>);}<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">callMe</span><span class="hljs-params">()</span></span>{out.printf(<span class="hljs-string">"m=%d,n=%d"</span>, m, n);}}<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">StaticDemo2</span> </span>{<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{MyD d; <span class="hljs-comment">//【0】MyD被加载，但未主动使用</span>d = <span class="hljs-keyword">new</span> MyD(); <span class="hljs-comment">//【1】这里才【主动使用】MyD，于是执行其静态代码块【2】</span>MyD.n++; <span class="hljs-comment">//最佳：类名.静态变量</span>MyD.callMe(); <span class="hljs-comment">//最佳：类名.静态方法</span>}}</code></pre></div><p>特别留意：</p><p>🔺用一个类声明一个类对象变量，至多会加载该类，但还未主动使用<br>🔺老师说：【主动使用】，是一个比较高级的专题，暂不深入</p><h3 id="DEMO：静态方法的声明"><a href="#DEMO：静态方法的声明" class="headerlink" title="DEMO：静态方法的声明"></a>DEMO：静态方法的声明</h3><div class="hljs"><pre><code class="hljs arduino"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Person</span>{</span>    <span class="hljs-keyword">String</span> name;                         <span class="hljs-comment">//定义name属性</span>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">String</span> nation = <span class="hljs-string">"中国"</span>; <span class="hljs-comment">//定义静态属性nation</span>    <span class="hljs-keyword">int</span> age;                            <span class="hljs-comment">//定义age属性</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Person</span><span class="hljs-params">(<span class="hljs-keyword">String</span> name, <span class="hljs-keyword">int</span> age)</span></span>{<span class="hljs-comment">//声明一个有参的构造方法</span>        <span class="hljs-keyword">this</span>.name = name;        <span class="hljs-keyword">this</span>.age = age;    }    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">String</span> <span class="hljs-title">talk</span><span class="hljs-params">()</span></span>{               <span class="hljs-comment">//声明了一个talk()方法</span>        <span class="hljs-keyword">return</span> <span class="hljs-string">"我是："</span> + <span class="hljs-keyword">this</span>.name + <span class="hljs-string">"，今年："</span> + <span class="hljs-keyword">this</span>.age + <span class="hljs-string">"岁，来自："</span> + nation;    }    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setNation</span><span class="hljs-params">(<span class="hljs-keyword">String</span> nat)</span></span>{<span class="hljs-comment">//声明一个静态方法，给静态变量赋值</span>        nation = nat;                           }}<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">StaticMethod</span>{</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">String</span>[] args)</span></span>{        Person p1 = <span class="hljs-keyword">new</span> Person(<span class="hljs-string">"张三"</span>, <span class="hljs-number">25</span>);        Person p2 = <span class="hljs-keyword">new</span> Person(<span class="hljs-string">"李四"</span>, <span class="hljs-number">30</span>);        Person p3 = <span class="hljs-keyword">new</span> Person(<span class="hljs-string">"王五"</span>, <span class="hljs-number">35</span>);        System.out.<span class="hljs-built_in">println</span>(<span class="hljs-string">"修改之前信息："</span> + p1.talk());        System.out.<span class="hljs-built_in">println</span>(<span class="hljs-string">"修改之前信息："</span> + p2.talk());        System.out.<span class="hljs-built_in">println</span>(<span class="hljs-string">"修改之前信息："</span> + p3.talk());        System.out.<span class="hljs-built_in">println</span>(<span class="hljs-string">"   ***********修改之后信息***********"</span>);        <span class="hljs-comment">// 修改后的信息</span>        Person.setNation(<span class="hljs-string">"美国"</span>);        System.out.<span class="hljs-built_in">println</span>(<span class="hljs-string">"修改之后信息："</span> + p1.talk());        System.out.<span class="hljs-built_in">println</span>(<span class="hljs-string">"修改之后信息："</span> + p2.talk());        System.out.<span class="hljs-built_in">println</span>(<span class="hljs-string">"修改之后信息："</span> + p3.talk());    }}</code></pre></div><h3 id="DEMO：调用外部类定义的方法（有static-无static）"><a href="#DEMO：调用外部类定义的方法（有static-无static）" class="headerlink" title="DEMO：调用外部类定义的方法（有static+无static）"></a>DEMO：调用外部类定义的方法（有static+无static）</h3><p>首先定义方法</p><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Dy</span> {</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">Add</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x,<span class="hljs-keyword">int</span> y)</span> </span>{  <span class="hljs-comment">//定义Add(),该方法没有被static修饰</span>        <span class="hljs-keyword">return</span> x+y;    }    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">Sub</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x,<span class="hljs-keyword">int</span> y)</span> </span>{<span class="hljs-comment">//定义Sub(),该方法被static修饰</span>            <span class="hljs-keyword">return</span> x-y;    }}</code></pre></div><p>调用方法</p><div class="hljs"><pre><code class="hljs reasonml">public <span class="hljs-keyword">class</span> Test {    public static void main(String<span class="hljs-literal">[]</span> args){        <span class="hljs-built_in">int</span> a=<span class="hljs-number">5</span>;        <span class="hljs-built_in">int</span> b=<span class="hljs-number">4</span>;        <span class="hljs-built_in">int</span> result=<span class="hljs-number">0</span>;        <span class="hljs-comment">//通过实例化调用外部类的Add方法</span>        Dy dy=<span class="hljs-keyword">new</span> <span class="hljs-constructor">Dy()</span>;        result=dy.<span class="hljs-constructor">Add(<span class="hljs-params">a</span>, <span class="hljs-params">b</span>)</span>;        <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(result);        <span class="hljs-comment">//直接调用外部类的Sub方法</span>        result=Dy.<span class="hljs-constructor">Sub(<span class="hljs-params">a</span>, <span class="hljs-params">b</span>)</span>;        <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(result);    }}</code></pre></div><p>🔺static main方法调用外部方法/成员变量：</p><ul><li>有static：“类名.”形式调用</li><li>无static：“对象.”形式调用</li></ul><h3 id="综上"><a href="#综上" class="headerlink" title="综上"></a>综上</h3><ol><li>什么时候使用静态？<br> 因为静态修饰的内容有成员变量和方法。</li><li>什么时候定义静态变量（类变量）呢？<br> 当对象中出现共享数据时，该数据被静态所修饰，对象中的特有数据要定义成非静态存在于堆内存中。</li><li>什么时候定义静态函数？<br> 当功能内部没有访问到非静态数据（或者称为对象的特有数据）<br> 那么该功能可以定义成静态的。</li></ol><hr><p><font size="1">注：前面的几篇Java笔记中也有提到static，后来上课老师再小结static关键词，结合前面的笔记食用效果更佳。</font></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java笔记—this关键字</title>
    <link href="/blog/2019/11/28/Java%E7%AC%94%E8%AE%B0%E2%80%94this%E5%85%B3%E9%94%AE%E5%AD%97/"/>
    <url>/blog/2019/11/28/Java%E7%AC%94%E8%AE%B0%E2%80%94this%E5%85%B3%E9%94%AE%E5%AD%97/</url>
    
    <content type="html"><![CDATA[<h1 id="this-关键字"><a href="#this-关键字" class="headerlink" title="this 关键字"></a>this 关键字</h1><p>三个形式上的用途，但本质上就两个：</p><ul><li><font color="red">调用重载的其他构造方法</font>：放置在构造方法体首行的this()或this(实参列表)</li><li>作为当前对象，<font color="red">引用成员</font>（数据、方法等）：区分同名变量等</li><li>作为当前对象，方法返回当前对象的引用，形成<font color="red">链式调用</font></li></ul><a id="more"></a><p>案 例 ：</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ThisDemo</span> </span>{     <span class="hljs-keyword">private</span> <span class="hljs-keyword">int</span> a = <span class="hljs-number">1</span>;     <span class="hljs-keyword">private</span> String name = <span class="hljs-string">"good"</span>;     <span class="hljs-keyword">private</span> <span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>;     <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">ThisDemo</span><span class="hljs-params">()</span></span>{         System.out.println(<span class="hljs-string">"无参构造子"</span> + <span class="hljs-keyword">this</span>);     }     <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">ThisDemo</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a, String name)</span></span>{         <span class="hljs-keyword">this</span>(); <span class="hljs-comment">// 【1】调用无参构造子 </span>        <span class="hljs-keyword">this</span>.a = a; <span class="hljs-comment">// 【2】当前对象，引用成员 </span>        <span class="hljs-keyword">this</span>.name = name;     }     <span class="hljs-function"><span class="hljs-keyword">public</span> ThisDemo <span class="hljs-title">setA</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a)</span></span>{         <span class="hljs-keyword">this</span>.a = a;         <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>; <span class="hljs-comment">// 【3】返回当前对象 </span>    }    <span class="hljs-function"><span class="hljs-keyword">public</span> ThisDemo <span class="hljs-title">setName</span><span class="hljs-params">(String name)</span></span>{        <span class="hljs-keyword">this</span>.name = name;        <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>;    }    <span class="hljs-function"><span class="hljs-keyword">public</span> ThisDemo <span class="hljs-title">inc</span><span class="hljs-params">()</span></span>{    i++;    <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>;    }    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{        ThisDemo t1 = <span class="hljs-keyword">new</span> ThisDemo();        t1.setA(<span class="hljs-number">100</span>).setName(<span class="hljs-string">"guo"</span>).inc().inc();        System.out.println(t1.i);        ThisDemo t2 = <span class="hljs-keyword">new</span> ThisDemo(<span class="hljs-number">2</span>, <span class="hljs-string">"Tom"</span>);        t2.inc().setA(<span class="hljs-number">8</span>).inc().inc(); <span class="hljs-comment">//【4】链式调用</span>        System.out.println(t2.i);    }}</code></pre></div><p>特别注意，案例中的【3】和【4】。</p><hr><p><font size="1">注：前面的几篇Java笔记中也有提到this，后来上课老师再小结this关键词，结合前面的笔记食用效果更佳。</font></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>对SQL的触发器的浅理解</title>
    <link href="/blog/2019/11/26/%E6%B5%85%E8%B0%88SQLServer%E8%A7%A6%E5%8F%91%E5%99%A8/"/>
    <url>/blog/2019/11/26/%E6%B5%85%E8%B0%88SQLServer%E8%A7%A6%E5%8F%91%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h3 id="个人理解"><a href="#个人理解" class="headerlink" title="个人理解"></a>个人理解</h3><p>如果需要做一些特定的增删改操作，就可以使用触发器。</p><p><font size="6">触发</font> ，当做了某种预设的操作时才会执行触发器的命令。</p><h3 id="栗子："><a href="#栗子：" class="headerlink" title="栗子："></a>栗子：</h3><p>假设现在有个员工基础信息表，里面有员工的身份证号码，手机等基本信息。那么，当你换了身份证或手机，需要修改号码的时候，肯定是去修改员工的基础资料表。假设你现在有别的地方，比如人事档案啊之类的，同样使用了员工的手机等信息，难道还要再去修改一次档案表么？那么如果还有其他地方使用了呢？而在这种时候有触发器就好解决了。如果设置一个触发器来判断，如果修改了基础表的信息，那么就同步把其他使用了基础表的关联信息也更改成最新的。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>SQL Server</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>G.E.M.邓紫棋《句号》MV首播！</title>
    <link href="/blog/2019/11/25/G.E.M.%E9%82%93%E7%B4%AB%E6%A3%8B%E3%80%8A%E5%8F%A5%E5%8F%B7%E3%80%8BMV%E9%A6%96%E6%92%AD%EF%BC%81/"/>
    <url>/blog/2019/11/25/G.E.M.%E9%82%93%E7%B4%AB%E6%A3%8B%E3%80%8A%E5%8F%A5%E5%8F%B7%E3%80%8BMV%E9%A6%96%E6%92%AD%EF%BC%81/</url>
    
    <content type="html"><![CDATA[<h1 id="G-E-M-邓紫棋《句号》MV首播！"><a href="#G-E-M-邓紫棋《句号》MV首播！" class="headerlink" title=" G.E.M.邓紫棋《句号》MV首播！"></a><font size="5" color="red"> G.E.M.邓紫棋《句号》MV首播！</font></h1><img src="https://i.loli.net/2019/11/25/RTwEij64JmDkUOz.png" srcset="/blog/img/loading.gif" alt="UTOOLS1574691446957.png" style="zoom:67%;"><p>🧡点击破亿『全创作天后』G.E.M.邓紫棋和过去告别，向未来大步迈开，开启音乐版图新起点的一个<font size="4" color="blue">“句号”</font>。 这是华语乐坛前所未见的真实披露之作，她用&lt;句号&gt;这首歌，预告了全新的音乐篇章，翻页之后，就要开始。 </p><h1 id="榜单Top-1"><a href="#榜单Top-1" class="headerlink" title="榜单Top 1"></a><font size="5" color="red">榜单Top 1</font></h1><p> 💗邓紫棋新歌《句号》上线颇有波折，国内几大音乐平台推迟上线，但在<strong>唯一上线的Apple Music平台</strong>，已经<strong>超过霉霉新歌《lover》</strong>，一举拿下  <strong><font size="6" color="orange">榜单 Top1！</font></strong></p><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=76560081&amp;page=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div><p>官方MV视频第一发布于微博： <a href="https://weibo.com/gemtang?refer_flag=1005055014_" target="_blank" rel="noopener">GEM鄧紫棋</a>  </p><p>2019.11.28更换 <sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> 网页视频源：    <a href="https://www.bilibili.com/video/av76560081?from=search&amp;seid=5278800382046148117" target="_blank" rel="noopener">B站官方合作发布</a> </p><a id="more"></a><h1 id="͡°-͜ʖ-͡°-✧"><a href="#͡°-͜ʖ-͡°-✧" class="headerlink" title="( ͡° ͜ʖ ͡°)✧"></a><strong><font size="5" color="gree">( ͡° ͜ʖ ͡°)✧</font></strong></h1><p>我已经 <font size="5" color="red">循环</font> MV几天了，等待网易云上架。</p><p><font size="6" color="blue">听说</font> <strong><font size="4" color="orane">“连Siri都被圈粉？有网友发现现在向Siri提出“播放世界第一的歌曲”，结果直接是《句号》”</font></strong> 有iPhone的，赶紧试试看吧 <strong>( ͡° ͜ʖ ͡°)✧</strong></p><p><img src="https://i.loli.net/2019/11/25/zgBwfClXivtFAG9.png" srcset="/blog/img/loading.gif" alt="@芒果捞小白.png"></p><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;"><font size="1">第一次发这篇文章的第二天发现视频链接失效，研究了一下，发现微博视频用的是临时链接，就是生命周期只有1天的临时链接，于是我改由B站的视频</font></span><a href="#fnref:1" rev="footnote"> ↩</a></li></ol></div></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>音乐</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[电影]《Ladybird》演绎完整18岁的青春</title>
    <link href="/blog/2019/11/23/%E7%94%B5%E5%BD%B1-%E3%80%8ALadybird%E3%80%8B%E6%BC%94%E7%BB%8E%E5%AE%8C%E6%95%B418%E5%B2%81%E7%9A%84%E9%9D%92%E6%98%A5/"/>
    <url>/blog/2019/11/23/%E7%94%B5%E5%BD%B1-%E3%80%8ALadybird%E3%80%8B%E6%BC%94%E7%BB%8E%E5%AE%8C%E6%95%B418%E5%B2%81%E7%9A%84%E9%9D%92%E6%98%A5/</url>
    
    <content type="html"><![CDATA[<center>《LadyBird》，2017年的青春轻喜剧，烂番茄指数高达99%！</center><a id="more"></a><p>​        该电影讲的是一个入不敷出的家庭，强势严厉的Mom，慈祥宽容却患有抑郁症的Dad，自称LadyBird的叛逆少女Christian克里斯汀，从高中步入大学时期所经历的亲情、友情、爱情，酸甜苦辣。</p><p>​        虽然欧美家庭的相处方式离我们很远，但影片展现的青春经历却与我们都有可对照之处。</p><p>​        Christian不喜欢父母取的名字，自己取名为LadyBird，盼望自己化身为鸟，渴望获得自由。她横冲直撞，怼哥哥，怼老师，怼修女，公然挑衅和搞恶作剧。18岁的第一天，就去买了骆驼香烟，一张彩票，一本成人杂志，站在家乡萨克拉门托的阳光下，体会成长放纵的快感。她想逃离家乡，去纽约，去外面的世界闯荡，瞒着妈妈偷偷申请纽约的学校。</p><p>​        她不去考虑别人地感受，想要的太多，对得到的总是不够满足。当然，她也有自卑虚荣的一面。会纠结自己不够出众的长相，“为什么我看起来不像是杂志里的女孩？”，不喜欢贫寒的出身，把男朋友外婆家的dreamhouse说成是自己家；为了接近乐队的凯尔，成为同样酷酷的类型，她和珍娜套近乎而疏远了自己最好的朋友。</p><p>​        两次恋爱纷纷落空。第一次是个贴心男友，交往顺利，却被发现是个同性恋。第二次是个俊俏阴郁乐队选手（是有点帅），但性生活不够严肃，上完床两人就分了一半了吧。直到在去舞会的路上，男友和他的朋友们想中途逃出来，LadyBird却对舞会充满期待。其实就是三观不合啊！她开始同意，却也意识到，坚持自己内心的感受，不适合跟这些人做朋友。生活就是这样啊，我们期待、努力、相信又落空。谁的青春没遇上过渣男，只是帅不帅而已。</p><p>​        LadyBird和老妈的冲突贯穿影片。强势得老妈常常扮演成长中的“黑脸角色”，总是试图把自己的意念强加给孩子：上一秒还被广播感动的母女二人，下一秒迅速争执起来，LadyBird用跳车的方式宣扬自己的逃离和叛逆；衣服不叠会被老妈骂，走路的姿势会被嫌弃，穿什么衣服都得不到赞扬，浴室不能反锁门，进屋从来不敲门……青春期的孩子都渴望自由，太想脱离大人的管教——“告诉我你抚养花了多少钱！等我长大了努力赚钱都还给你！这样我就再也不用和你讲话！”</p><p>​        这份冲突的亲情在最后得到了和解。平安夜不在家过看得出妈妈最难过；会在半夜为女儿修剪裙边；暗自用没有语法韵律的信件记录下对女儿的冲突和爱意；当LadyBird真的去上大学，表面保持冷漠严肃，车都不下，实际内心有满满地不舍。一切地情感在试衣间前得到合理地解释：</p><p><strong>“I want you to be the best version of yourself you can be.”</strong></p><p><strong>“What if this is the best version?”</strong></p><p>​        这也是每个家长对我们地期待吧。然而，对于家长地对我们地改变，我们总是无意识就反驳，就对抗。<strong>你有你的唠叨，我有我的骄傲！</strong></p><p>​        失业、并长期患有抑郁症的老爸是影片温情的存在，是家里的“好人角色”担当。记得在女儿十八岁生日时送上生日蛋糕；瞒着妈妈帮女儿申请纽约的学校，是女儿地‘同党’；问是否要和门外那个按喇叭的男孩走，虽然爸爸内心是不喜欢的，但依然会尊重女儿；影片最后，悄悄把妈妈写的信放进Ladybird书包，告诉她，妈妈其实是多么爱她——这也是促进母女关系和解的重要一环。</p><p>​        这是一个与自己、与家人和解的故事，像极了青春期的我们。影片的最后，她真的到达纽约。<strong>在家乡，这个女孩给自己取名为LadyBird，向所有人宣称自己的叛逆，想像鸟一样自由挣脱；而到了纽约，她要像鸟一样开始漂泊时，又叫回Christian。因未来而出走，因出走而怀乡。</strong></p><p><strong><em>影片的最后，她在电话里说“妈妈，我发现我从来没有意识到，萨克拉门托是那么美的地方。似乎每一处细节，每一个弯道，都是那么的美丽。”</em></strong></p><p>​        我们总想为逃离自己的家庭出身而奋斗，终有一天会觉得，走得再远，都想再回到最初的地方。蜷局于母体时的安全是最安全。</p><hr><p>大二上学期《英语影视鉴赏》课结作业。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>电影</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java笔记—包</title>
    <link href="/blog/2019/11/23/Java%E7%AC%94%E8%AE%B0%E2%80%94%E5%8C%85/"/>
    <url>/blog/2019/11/23/Java%E7%AC%94%E8%AE%B0%E2%80%94%E5%8C%85/</url>
    
    <content type="html"><![CDATA[<h3 id="Java笔记——包"><a href="#Java笔记——包" class="headerlink" title="Java笔记——包"></a>Java笔记——包</h3><p>创建时间：2019.11.23</p><p>说明：持续更新ing</p><hr><ol><li><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3></li></ol><p><font color="red" size="5">包(package)</font></p><p> 为了更好地组织<font color="blue" size="3"><strong>类</strong></font>，Java 提供了包机制，用于区别类名的命名空间。 </p><p>✔ 用来组织和管理类、接口、枚举和注解<br>✔ 有三方面作用：1)便于<font color="orange">组织</font>,比如按功能、按团队等；2)<font color="orange">解决命名冲突</font>；3)进行访问<font color="orange">权限控制</font>(<font color="rorange">同包可用，包外不可见等</font>)</p><blockquote><p>如同类似OS的文件夹(或目录或路径)一样，包也采用了树形目录的存储方式。</p></blockquote><a id="more"></a><hr><ol start="2"><li><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3></li></ol><ul><li>1、把功能相似或相关的类或接口组织在同一个包中，方便类的查找和使用。</li><li>2、如同文件夹一样，包也采用了树形目录的存储方式。同一个包中的类名字是不同的，不同的包中的类的名字是可以相同的，当同时调用两个不同包中相同类名的类时，应该加上包名加以区别。因此，包可以避免名字冲突。</li><li>3、包也限定了访问权限，拥有包访问权限的类才能访问某个包中的类。</li></ul><p>🔺 Java 使用包（package）这种机制是为了防止命名冲突，访问控制，提供搜索和定位类（class）、接口、枚举（enumerations）和注释（annotation）等。 </p><blockquote><p>同一个包中类名字是不同的，不同包中类的名字可以相同，当同时调用两个不同包中相同类名的类时，应该加上包名加以区别。因此，包可以避免名字冲突。 </p></blockquote><hr><ol start="3"><li><h3 id="语法格式"><a href="#语法格式" class="headerlink" title="语法格式"></a>语法格式</h3></li></ol><div class="hljs"><pre><code class="hljs Java"><span class="hljs-keyword">package</span>包名或<span class="hljs-keyword">package</span> 父包名[.子包名][.孙包名][.层次下去]</code></pre></div><p>🔸<strong>包名符合标识符命名规范</strong>，一般由<u><font color="rorange">小写字母</font></u>组成<br>🔹必须出现在源文件的<u><font color="rorange">第一行</font></u>(忽略注释语句)<br>🔸每个源文件<font color="rorange"><u><strong>至多只能出现一个</strong></u>package语句</font><br>🔹如果没有package语句，那就使用<u><font color="orange">无名包</font>(或称默认包:所在的当前目录)<br>🔸包的背后对应着操作系统的路径名称</u></p><u><ul><li><p>示例：</p>  <div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">package</span> ch08.web.sample; <span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Person</span> </span>{     String name;     <span class="hljs-keyword">int</span> age;    <span class="hljs-comment">//省略部分代码 </span>} <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Dog</span> </span>{     String name;     <span class="hljs-keyword">int</span> age;     <span class="hljs-comment">//省略部分代码</span>}</code></pre></div><p>  🔺<code>package ch08.web.sample;</code> 这个层级的文件夹必须先存在：即ch08/web/sample</p><p>  <img src="https://i.loli.net/2019/11/23/e3XLTSaWmiuhEvR.png" srcset="/blog/img/loading.gif" alt="来自课件《8.类的更多探讨》.png"></p></li></ul><hr><ol start="4"><li><h3 id="包的使用"><a href="#包的使用" class="headerlink" title="包的使用"></a>包的使用</h3></li></ol><p>🔺<strong>import 关键字</strong></p><blockquote><p>为了能够使用某一个包的成员，我们需要在 Java 程序中明确导入该包。</p><p>为了使用另外一个包中的成员(主要是类)，可以明确import该成员。</p><p> <font color="blue">避免重复使用完整路径的类名</font>。</p></blockquote><ul><li><p>语法格式：</p>  <div class="hljs"><pre><code class="hljs Java"><span class="hljs-keyword">import</span> package1[.package2…].(classname|*);</code></pre></div></li><li><p>注意：</p><ol><li><p>必须紧跟在package语句之后(若有的话，若无package，则import出现在源文件头部)。</p></li><li><p>可以使用 <strong><code>*</code></strong> 来表示导入当前一层包中的所有类。但是<strong><code>*</code></strong> 不可以连续使用。</p> <div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.*.*; <span class="hljs-comment">// Error!</span></code></pre></div></li><li><p><strong>不表示可以继续导入当前包的子包</strong>。如果在一个包中，一个类想要使用本包中的另一个类，那么该包名可以省略。 </p></li><li><p><strong>类文件中可以包含任意数量的 import 声明。import 声明必须在包声明之后，类声明之前。</strong> </p></li></ol></li></ul><hr><ol start="5"><li><h3 id="Java常用包"><a href="#Java常用包" class="headerlink" title="Java常用包"></a>Java常用包</h3></li></ol><p>🔵JavaAPI的类库也是按照包的方式组织的</p><table><thead><tr><th>包名</th><th>描述</th><th>备注</th></tr></thead><tbody><tr><td>Java.lang</td><td>Java语言进行程序设计的基础类(核心类库)，它是<font color="red">默认导入</font>的包</td><td>Runnable接口和<font color="blue">Object、Math、String、StringBuffer、System</font>、Thread、Throwable类</td></tr><tr><td>Java.util</td><td>实用工具类包</td><td>定义系统特性、随机数、日期时间、日历、集合类等</td></tr><tr><td>Java.io</td><td>IO类包</td><td>包含能提供多种输入输出的文件读写类</td></tr><tr><td>Java.net</td><td>网络编程API</td><td></td></tr><tr><td>Java.sql</td><td>数据库操作包</td><td></td></tr><tr><td>Java.text</td><td>文本处理相关类</td><td>包含了一些用来处理文本、数字和消息的类和接口</td></tr><tr><td>Java.awt</td><td>提供创建界面和绘制图形图像的所有类</td><td></td></tr><tr><td>Javax.asing</td><td>awt上封装的GUI包</td><td></td></tr></tbody></table></u><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>推荐3款文本编辑器</title>
    <link href="/blog/2019/11/22/%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    <url>/blog/2019/11/22/%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>今天作者推荐两款文本编辑器。</p><p>我先后使用的Notepad 3、Sublime、Atom、VS Code、Vim。</p><p>这里作者就只推荐<strong>Notepad 3、Sublime和Atom</strong>。</p><p>关于VS Code和Vim，文末有两篇教程供大家入手。</p> <a id="more"></a>  //截断文章<h3 id="Notepad-3"><a href="#Notepad-3" class="headerlink" title="Notepad 3"></a>Notepad 3</h3><blockquote><p> 虽然 Windows 操作系统在过去几年中有了显著变化，但是，默认的 Windows 记事本却鲜有更新。如果您需要一个简单且适于编程的文本编辑器，Notepad3 将是一个不错的选择！</p></blockquote><blockquote><p> Notepad3是一款轻便快捷的基于 Scintilla 的文本编辑器，具有语法高亮、代码折叠、括号匹配、自动缩进、编码转换、换行格式转换、多次撤销或重做、书签、基于正则表达式的查找和替换等实用功能。它占用的内存很小，但功能强大，足以处理大多数编程工作。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20191031213142427.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzQzODA1Mg==,size_16,color_FFFFFF,t_70" srcset="/blog/img/loading.gif" alt="在这里插入图片描述"><br>Notepad 3 的界面 可能 是我见过所有主流文本编辑器里最最最简单清爽的吧？</p><p>蓝奏云：<a href="https://www.lanzous.com/b821830" target="_blank" rel="noopener">下载链接</a>（作者提供了已经汉化过的便携版本）</p><p> （注意：Notepad 3和Notepad++没有关系 ） </p><h3 id="Sublime"><a href="#Sublime" class="headerlink" title="Sublime"></a>Sublime</h3><p><a href="http://www.sublimetext.cn/" target="_blank" rel="noopener">官方</a>的介绍简单又粗暴</p><blockquote><p><em>一款用于代码、标记和散文的精致文本编辑器</em></p></blockquote><p>Sublime支持 Windows 、Mac 平台。<br>插件是程序员的灵魂，Sublime不失这点。<br>类似于 Eclipse，IDEA，它有着丰富的插件系统，完全可以满足各种开发编辑需求。<br><img src="https://img-blog.csdnimg.cn/20191031180340340.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzQzODA1Mg==,size_16,color_FFFFFF,t_70" srcset="/blog/img/loading.gif" alt="在这里插入图片描述"><br>1）安装</p><p><img src="https://img-blog.csdnimg.cn/20191031180945945.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzQzODA1Mg==,size_16,color_FFFFFF,t_70" srcset="/blog/img/loading.gif" alt="在这里插入图片描述">官网关于Sublime的介绍语下就是win版的下载入口<br>或者点击<a href="https://download.sublimetext.com/Sublime%20Text%20Build%203207%20x64%20Setup.exe" target="_blank" rel="noopener">这里</a>快速下载最新版==Sublime Text 3 (Build 3207)==</p><p><img src="https://img-blog.csdnimg.cn/20191031181222467.png" srcset="/blog/img/loading.gif" alt="在这里插入图片描述"><br>下载得到的是<em>exe</em>，双击开始<em>安装</em>。<br><img src="https://img-blog.csdnimg.cn/20191031182801147.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzQzODA1Mg==,size_16,color_FFFFFF,t_70" srcset="/blog/img/loading.gif" alt="在这里插入图片描述"></p><p>安装导向界面，点击【Next】继续安装。<br><img src="https://img-blog.csdnimg.cn/20191031182659507.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzQzODA1Mg==,size_16,color_FFFFFF,t_70" srcset="/blog/img/loading.gif" alt="在这里插入图片描述"><br>选择Sublime Text 3安装位置，您可以点击【Next】，软件会自动安装。或者您可以单击【Browse】，在弹出的安装位置窗口中，您可以自己选择Sublime Text安装位置，选择完成后点击【Next】。<br><img src="https://img-blog.csdnimg.cn/20191031181142946.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzQzODA1Mg==,size_16,color_FFFFFF,t_70" srcset="/blog/img/loading.gif" alt="在这里插入图片描述"><br>这里可选择    <em>添加到资源管理器上下文菜单</em>  。</p><p><img src="https://img-blog.csdnimg.cn/20191031182552911.png" srcset="/blog/img/loading.gif" alt="在这里插入图片描述"><br>安装完后可以在桌面或者开始菜单中找到Sublime。</p><p>2）使用<br><strong><em>Sublime的界面特别简洁，让人看着很舒服。</em></strong><br><img src="https://img-blog.csdnimg.cn/20191031183010233.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzQzODA1Mg==,size_16,color_FFFFFF,t_70" srcset="/blog/img/loading.gif" alt="在这里插入图片描述"><br>这里，作者已经汉化过了。初始语言是English。</p><p>3）汉化</p><blockquote><p>sublime 的插件的强大之处，sublime 通过 package control来统一管理安装的插件。现版本sublime 3自带package control功能。</p></blockquote><p>将English变成Chinese，也可以通过Sublime的插件实现。</p><p>作者已经汉化过。为了教程，故在win7虚拟机上教大家如何实现汉化。</p><ol><li><p>官网下载，并安装好, 刚安装好的是没有 Package Control 选项<br><img src="https://img-blog.csdnimg.cn/20191031202515113.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzQzODA1Mg==,size_16,color_FFFFFF,t_70" srcset="/blog/img/loading.gif" alt="在这里插入图片描述"></p></li><li><p>找到  Tools-&gt;Install Package Control  选项，即可调出 Package Contro</p></li><li><p>不能直接找到 Install Package Control，去找“Tools-&gt;Command Palette…”选项</p></li><li><p>输入 ipc ,点击 Install Package Control，即可调出 Package Control<br><img src="https://img-blog.csdnimg.cn/20191031202906101.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzQzODA1Mg==,size_16,color_FFFFFF,t_70" srcset="/blog/img/loading.gif" alt="在这里插入图片描述"></p></li><li><p>等待完成<br><img src="https://img-blog.csdnimg.cn/20191031203048139.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzQzODA1Mg==,size_16,color_FFFFFF,t_70" srcset="/blog/img/loading.gif" alt="在这里插入图片描述"></p></li><li><p>找到  Preferences-&gt;Package Control<br><img src="https://img-blog.csdnimg.cn/20191031203441795.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzQzODA1Mg==,size_16,color_FFFFFF,t_70" srcset="/blog/img/loading.gif" alt="在这里插入图片描述"></p></li><li><p>选项弹出命令行输入框，输入ip，点击“install Package<br><img src="https://img-blog.csdnimg.cn/20191031203509845.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzQzODA1Mg==,size_16,color_FFFFFF,t_70" srcset="/blog/img/loading.gif" alt="在这里插入图片描述"></p></li><li><p>弹出命令行输入框，输入clz，点击“ChineseLocalizations”<br><img src="https://img-blog.csdnimg.cn/2019103120320989.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzQzODA1Mg==,size_16,color_FFFFFF,t_70" srcset="/blog/img/loading.gif" alt="在这里插入图片描述"></p></li><li><p>搞定，设置成中文了<br><img src="https://img-blog.csdnimg.cn/20191031203530411.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzQzODA1Mg==,size_16,color_FFFFFF,t_70" srcset="/blog/img/loading.gif" alt="在这里插入图片描述"></p></li><li><p>开开心心地食用汉化地Sublime吧    o(<em>￣▽￣</em>)o</p></li></ol><h3 id="Atom"><a href="#Atom" class="headerlink" title="Atom"></a>Atom</h3><blockquote><p>Atom 是 Github 专门为程序员推出的一个跨平台文本编辑器。具有简洁和直观的图形用户界面，并有很多有趣的特点：支持CSS，HTML，JavaScript等网页编程语言。它支持宏，自动完成分屏功能，集成了文件管理器。</p></blockquote><p>官网在<a href="https://atom.io/" target="_blank" rel="noopener">这里</a>👈<br><img src="https://img-blog.csdnimg.cn/20191031204039143.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzQzODA1Mg==,size_16,color_FFFFFF,t_70" srcset="/blog/img/loading.gif" alt="在这里插入图片描述"><br>友情链接：<br><a href="https://www.w3cschool.cn/atom/" target="_blank" rel="noopener">w3school之Atom教程</a><br><a href="https://atom-china.org/" target="_blank" rel="noopener">Atom 中文社区</a></p><p>1）安装<br><img src="https://img-blog.csdnimg.cn/20191031204609113.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzQzODA1Mg==,size_16,color_FFFFFF,t_70" srcset="/blog/img/loading.gif" alt="在这里插入图片描述"><br>官网地Downloa或者点击<a href="https://atom-installer.github.com/v1.41.0/AtomSetup-x64.exe?s=1571754161&amp;ext=.exe" target="_blank" rel="noopener">这里</a>快速下载最新版==Atom (1.41.0)==</p><p><img src="https://img-blog.csdnimg.cn/20191031205131795.png" srcset="/blog/img/loading.gif" alt="在这里插入图片描述"><br>下载得到exe，双击开始安装。<br>安装过程很简单，直接省略。</p><p>2）使用<br><strong><em>Atom 的界面也比较简洁。<br>Atom提供了侧栏、标签栏，可提高效率。<br>Atom还能链接到GitHub，这真是GitHub用户的<a href="https://www.jianshu.com/p/4c68bb302969" target="_blank" rel="noopener">福利</a>。(当然，Atom本来就是Github推出的hhhh)</em></strong><br><img src="https://img-blog.csdnimg.cn/20191031205823193.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzQzODA1Mg==,size_16,color_FFFFFF,t_70" srcset="/blog/img/loading.gif" alt="在这里插入图片描述"><br>3）汉化<br>Atom的汉化有两种方法：</p><p><strong>方法一</strong></p><ol><li>打开软件后，点击 File&gt; Settings&gt; install<br><img src="https://img-blog.csdnimg.cn/20191031210904530.png" srcset="/blog/img/loading.gif" alt="在这里插入图片描述"></li></ol><ol start="2"><li>搜索 chinese，安装两个插件<img src="https://img-blog.csdnimg.cn/20191031210703975.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzQzODA1Mg==,size_16,color_FFFFFF,t_70" srcset="/blog/img/loading.gif" alt="在这里插入图片描述"></li><li>重启软件<br><img src="https://img-blog.csdnimg.cn/20191031211026850.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzQzODA1Mg==,size_16,color_FFFFFF,t_70" srcset="/blog/img/loading.gif" alt="在这里插入图片描述"><br>因为插件托管在国外，可能因为网速原因，会非常慢，因此推荐下载中文插件包，请看方法二👇</li></ol><p><strong>方法二</strong></p><ol><li>打开<a href="https://atom.io/packages/" target="_blank" rel="noopener">https://atom.io/packages/</a>去官网下载中文包，搜索【Chinese】，找到【atom-simplified-chinese-menu】点击进入主页（如上图），然后再点【Verions】，之后，找到最新版本，点【zip】包下载即可。。<br>作者在这已经准备好中文包了，点击<a href="http://down-ww3.7down.net/pcdown/soft/xiazai/atomchs_chinese.rar" target="_blank" rel="noopener">这里</a>下载<br><img src="https://img-blog.csdnimg.cn/20191031211522938.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzQzODA1Mg==,size_16,color_FFFFFF,t_70" srcset="/blog/img/loading.gif" alt="在这里插入图片描述"></li><li>将下载好了的压缩包解压到 C:/user/&lt;用户名&gt;/.atom/packages/目录下面<br><img src="https://img-blog.csdnimg.cn/20191031211810975.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzQzODA1Mg==,size_16,color_FFFFFF,t_70" srcset="/blog/img/loading.gif" alt="在这里插入图片描述"></li><li>打开Atom，发现已经Chinese了。<br><img src="https://img-blog.csdnimg.cn/20191031211915728.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzQzODA1Mg==,size_16,color_FFFFFF,t_70" srcset="/blog/img/loading.gif" alt="在这里插入图片描述"></li></ol><h2 id="综上"><a href="#综上" class="headerlink" title="综上"></a>综上</h2><h3 id="主流的文本编辑器有很多。每个人的需求不一样，找到合适自己的才是好的。"><a href="#主流的文本编辑器有很多。每个人的需求不一样，找到合适自己的才是好的。" class="headerlink" title="主流的文本编辑器有很多。每个人的需求不一样，找到合适自己的才是好的。"></a><font color="red">主流的文本编辑器有很多。每个人的需求不一样，找到合适自己的才是好的。</font></h3><p>Notepad 3、Sublime、Atom、VS Code、Vim、<del>Notepad++（前段时间闹事，作者不方便再提）</del></p><ul><li>VS Code：<a href="https://www.jianshu.com/p/0187d02434eb" target="_blank" rel="noopener">传送门</a></li><li>Vim：<a href="https://blog.csdn.net/Alisebeast/article/details/79868694" target="_blank" rel="noopener">传送门</a> </li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java笔记—继承</title>
    <link href="/blog/2019/11/21/Java%E7%AC%94%E8%AE%B0%E2%80%94%E7%BB%A7%E6%89%BF/"/>
    <url>/blog/2019/11/21/Java%E7%AC%94%E8%AE%B0%E2%80%94%E7%BB%A7%E6%89%BF/</url>
    
    <content type="html"><![CDATA[<p><font size="5"> Java笔记——继承</font></p><p>创建时间：2019.11.21</p><p>说明：持续更新ing</p><hr><ol><li><h3 id="继承源于自然"><a href="#继承源于自然" class="headerlink" title="继承源于自然"></a>继承源于自然</h3><p><img src="https://i.loli.net/2019/11/23/UcXixmHJRBgnzrA.png" srcset="/blog/img/loading.gif" alt="UTOOLS1574477223867.png"></p></li></ol><blockquote><p>就比如：<br><br>兔子和羊属于食草动物类，狮子和豹属于食肉动物类。<br><br>食草动物和食肉动物又是属于动物类。<br><br>虽然食草动物和食肉动物都是属于动物，但是两者的属性和行为上有差别，所以 <strong>子类会具有父类的一般特性也会具有自身的特性</strong>。</p></blockquote><a id="more"></a>     //截断文章<hr><ol start="2"><li><h3 id="概念、目的、本质、特性"><a href="#概念、目的、本质、特性" class="headerlink" title="概念、目的、本质、特性"></a>概念、目的、本质、特性</h3></li></ol><ul><li>概念<blockquote><p><strong>它允许创建分等级层次的类</strong>。</p></blockquote></li></ul><p>继承就是<font color="red">子类继承父类的特征和行为，使得子类对象（实例）具有父类的实例域和方法，或子类从父类继承方法，使得子类具有父类相同的行为</font>。</p><p>其主要作用在于，<font color="red">在已有基础上继续进行功能的扩充。</font>（即，<font color="oreign">以存在的类为基础定义新的类，新类即拥有基类的数据成员和成员方法</font>）</p><ul><li>目的</li></ul><p>继承的目的是<font color="blue" size="5">代码重用</font></p><ul><li>本质</li></ul><p>描述了自然界中广泛存在的一种关系——<font color="brown" size="5">类属关系（is-a）</font>，对应还有一种has-a关系即组合（聚合）关系。</p><ul><li><p>特性</p><table><thead><tr><th align="center">Java 继承的特性</th></tr></thead><tbody><tr><td align="center">子类拥有父类非private的属性，方法</td></tr><tr><td align="center">子类可以拥有自己的属性和方法，即子类可以对父类进行扩展</td></tr><tr><td align="center">子类可以用自己的方式实现父类的方法</td></tr><tr><td align="center">Java的继承是单继承，【但是可以多重继承，单继承就是一个子类只能继承一个父类，多重继承就是，例如A类继承B类，B类继承C类，所以按照关系就是C类是B类的父类，B类是A类的父类，这是java继承区别于C++继承的一个特性】</td></tr><tr><td align="center">提高了类之间的耦合性（继承的缺点，耦合度高就会造成代码之间的联系）</td></tr></tbody></table></li></ul><hr><ol start="3"><li><h3 id="继承的关键字"><a href="#继承的关键字" class="headerlink" title="继承的关键字"></a>继承的关键字</h3></li></ol><blockquote><p> <font size="1">继承可以使用 <font color="red" size="3">extends</font>(单继承) 和 <font color="red" size="3">implements</font>（变相的多继承）， 这两个关键字来实现继承，而且所有的类都是继承于 <strong>java.lang.Object</strong>，当一个类没有继承的两个关键字，则<strong>默认继承object</strong>（这个类在 java.lang 包中，所以不需要 import）祖先类。 </font></p></blockquote><p>（1）<strong>extends</strong>关键字</p><ul><li><p><font color="blue"><strong>Java只支持单继承</strong></font>，即：一个子类只能有一个父类.但可以有多个间接祖先类。</p></li><li><p>语法格式：</p>  <div class="hljs"><pre><code class="hljs java">权限修饰符 <span class="hljs-class"><span class="hljs-keyword">class</span> 父类名 </span>{    <span class="hljs-comment">//父类体</span>}权限修饰符 <span class="hljs-class"><span class="hljs-keyword">class</span> 子类名 <span class="hljs-keyword">extends</span> 父类名 </span>{    <span class="hljs-comment">//子类体</span>}</code></pre></div></li><li><p>实例：</p>  <div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Animal</span> </span>{     <span class="hljs-keyword">private</span> String name;       <span class="hljs-keyword">private</span> <span class="hljs-keyword">int</span> id;     <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Animal</span><span class="hljs-params">(String myName, String myid)</span> </span>{         <span class="hljs-comment">//初始化属性值</span>    }     <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">eat</span><span class="hljs-params">()</span> </span>{  <span class="hljs-comment">//吃东西方法的具体实现  } </span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">sleep</span><span class="hljs-params">()</span> </span>{ <span class="hljs-comment">//睡觉方法的具体实现  } </span>}  <span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Penguin</span>  <span class="hljs-keyword">extends</span>  <span class="hljs-title">Animal</span></span>{ }</code></pre></div></li></ul><p>—————————————————————— 我 是 分 割 线 ———————————————————————</p><p>（2）<strong>implements</strong>关键字</p><ul><li><p>变相地使java具有多继承的特性，使用范围为类继承接口的情况，可以同时继承多个接口（接口跟接口之间采用逗号分隔）。 </p></li><li><div class="hljs"><pre><code class="java"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">A</span> </span>{    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>;    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span></span>;}<span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">B</span> </span>{    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>;}<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">C</span> <span class="keyword">implements</span> <span class="title">A</span>,<span class="title">B</span> </span>{}&lt;!--￼<span class="number">2</span>--&gt;执行结果：&lt;!--￼<span class="number">3</span>--&gt;</code></pre></div></li></ul><p>—————————————————————— 我 是 分 割 线 ———————————————————————</p><p>（4）<strong>this</strong>关键字</p><ul><li><p>指向<strong>”自己的引用“</strong>。</p></li><li><p>实例：</p>  <div class="hljs"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Animal</span> </span>{  <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">eat</span><span class="hljs-params">()</span> </span>{    System.out.println(<span class="hljs-string">"animal : eat"</span>);  }} <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Dog</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Animal</span> </span>{  <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">eat</span><span class="hljs-params">()</span> </span>{    System.out.println(<span class="hljs-string">"dog : eat"</span>);  }  <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">eatTest</span><span class="hljs-params">()</span> </span>{    <span class="hljs-keyword">this</span>.eat();   <span class="hljs-comment">// this 调用自己的方法</span>    <span class="hljs-keyword">super</span>.eat();  <span class="hljs-comment">// super 调用父类方法</span>  }} <span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Test</span> </span>{  <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{    Animal a = <span class="hljs-keyword">new</span> Animal();    a.eat();    Dog d = <span class="hljs-keyword">new</span> Dog();    d.eatTest();  }}</code></pre></div><p>  输出结果：</p>  <div class="hljs"><pre><code class="hljs ada">animal : <span class="hljs-type">eat</span>dog : <span class="hljs-type">eat</span>animal : <span class="hljs-type">eat</span></code></pre></div><p>  ——————————————————————————— 我 是 分 割 线 ————————————————————————————</p></li></ul><p>（5）<strong>final</strong>关键字</p><ul><li>声明类可以把类定义为不能继承的，即<strong>最终类</strong>；或者用于修饰方法，<strong>该方法不能被子类重写</strong>。 </li></ul><hr><ol start="4"><li><h3 id="继承类型"><a href="#继承类型" class="headerlink" title="继承类型"></a>继承类型</h3></li></ol><p><strong>Java 不支持多继承，但支持多重继承 （ 一般不会超过三层 ）。</strong></p><p><img src="https://www.runoob.com/wp-content/uploads/2013/12/types_of_inheritance-1.png" srcset="/blog/img/loading.gif" alt="继承类型"></p><hr><ol start="5"><li><h3 id="继承的限制"><a href="#继承的限制" class="headerlink" title="继承的限制"></a>继承的限制</h3><p>  🔺 Java只允许单继承、不允许多继承（一个子类继承一个父类）。</p><p>  🔺 子类对象在进行实例化前首先调用父类构造方法，再调用子类构造方法实例化子类对象。 </p><p>  🔺 在继承时，子类会继承父类的所有结构。</p><blockquote><p> 在进行继承的时候，子类会继承父类的所有结构（包括私有属性、构造方法、普通方法）<br><strong>显示继承</strong>：所有非私有操作属于显示继承（可以直接调用）。<br><strong>隐式继承</strong>：所有私有操作属于隐式继承（不可以直接调用，需要通过其它形式调用（get或者set））。 </p><p> <font color="red"><strong>子类能够使用的是所有非private操作，而所有的private操作无法被直接使用</strong></font>，所以称为隐式继承。 </p></blockquote></li></ol><hr><ol start="6"><li>继承中<strong>“域的隐藏”</strong></li></ol><ul><li><p>在子类中重新定义<u><font color="red">( <strong>同 名</strong> )</font></u>继承自父类的域.</p><p>  🔺子类继承父类非私域。<br>  🔺子类定义与从父类继承下来的同名域，在子类中用该名直接访问就只能访问到子类定义的域，即隐藏了同名的继承下来的父类域。<br>  🔺如果要访问同名父类域：通过父类方法，或者使用“<font color="red" size="5">*<em>super . *</em></font>”</p></li><li><p>实例：</p>  <div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">import</span> <span class="hljs-keyword">static</span> java.lang.System.*;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Super</span></span>{    <span class="hljs-keyword">private</span> <span class="hljs-keyword">int</span> v1 = <span class="hljs-number">1</span>;    <span class="hljs-keyword">int</span> v2 = <span class="hljs-number">2</span>;    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getV1</span><span class="hljs-params">()</span> </span>{   <span class="hljs-keyword">return</span> v1;    }}<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Sub</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Super</span></span>{    <span class="hljs-keyword">int</span> v1 = <span class="hljs-number">11</span>;    <span class="hljs-keyword">int</span> v2 = <span class="hljs-number">22</span>;    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">show</span><span class="hljs-params">()</span> </span>{        out.println(v1);        <span class="hljs-comment">//out.println(super.v1);</span>        out.println(getV1());        out.println(v2);        out.println(<span class="hljs-keyword">super</span>.v2);    }}<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">FHTest</span></span>{    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{    <span class="hljs-keyword">new</span> Sub().show();    }}</code></pre></div></li></ul><hr><ol start="7"><li>继承情况的构造</li></ol><ul><li>首先🔺类初始化时,继承链上(包括当前类)的<font color="red">全部</font>静态代码块最先执行一次。<font color="blue">之后不再执行，除非程序又重启</font>。(<font color="red">按链序和声明序且仅1次</font>)</li><li>其次🔺创建子类实例时,会先进行父类的构造(<font color="red">要么显式进行，要么隐式用super()进行</font>)</li><li>最后🔺类的构造顺序：构造代码块(<font color="red">按声明序</font>) ➡ 构造方法</li><li>总体🔺<u>父类静态块 ➡ 子类静态块</u> ➡ 父类构造块 ➡ 父类构造子 ➡ 子类构造块 ➡ 子类构造子（下划线”__”部分， <font color="orange"> 仅执行一次</font>）</li></ul><hr><ol start="8"><li><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3></li></ol><p><strong>1、为什么使用继承</strong></p><p>从已有的类派生出新的类，称为继承。</p><p>在不同的类中也可能会有共同的特征和动作，可以把这些共同的特征和动作放在一个类中，让其它类共享。</p><p>因此可以定义一个通用类，然后将其扩展为其它多个特定类，这些特定类继承通用类中的特征和动作。</p><p>继承是 Java 中实现软件重用的重要手段，避免重复，易于维护，易于理解。</p><p><strong>2、父类和子类</strong></p><p>如果类 B 从类 A 派生，或者说类 B 扩展自类 A，或者说类 B 继承类 A，</p><p>则称类 A 为”父类”，也称为超类、基类；</p><p>称类 B 为”子类”，也称为次类、扩展类、派生类。</p><p>子类从它的父类中继承可访问的数据域和方法，也可以添加新的数据域和新的方法。</p><p>定义继承的语法：</p><div class="hljs"><pre><code class="hljs java">修饰符 <span class="hljs-class"><span class="hljs-keyword">class</span> 子类名 <span class="hljs-keyword">extends</span> 父类名</span></code></pre></div><p>例如：Shape 类是父类，其子类可以有 Circle 类、Rectangle 类、Triangle 类，等等。</p><p>继承的注意点：</p><ul><li>子类不是父类的子集，子类一般比父类包含更多的数据域和方法。</li><li>父类中的 private 数据域在子类中是不可见的，因此在子类中不能直接使用它们。</li><li>继承是为”是一个”的关系建模的，父类和其子类间必须存在”是一个”的关系，否则不能用继承。<br>  但也并不是所有”是一个”的关系都应该用继承。例如，正方形是一个矩形，但不能让 Square 类来继承 Rectangle 类，因为正方形不能从矩形扩展得到任何东西。正确的继承关系是 Square 类继承 Shape 类</li><li>Java 只允许单一继承（即一个子类只能有一个直接父类），C++ 可以多重继承（即一个子类有多个直接父类）。</li></ul><p><strong>3、super 关键字</strong></p><p>super 表示使用它的类的父类。super 可用于：</p><ul><li>调用父类的构造方法；</li><li>调用父类的方法（子类覆盖了父类的方法时）；</li><li>访问父类的数据域（可以这样用但没有必要这样用）。</li></ul><p>调用父类的构造方法语法：</p><div class="hljs"><pre><code class="hljs Java"><span class="hljs-keyword">super</span>();  或   <span class="hljs-keyword">super</span>(参数列表);</code></pre></div><p>注意：super 语句必须是子类构造方法的第一条语句。不能在子类中使用父类构造方法名来调用父类构造方法。 父类的构造方法不被子类继承。调用父类的构造方法的唯一途径是使用 super 关键字，如果子类中没显式调用，则编译器自动将 super(); 作为子类构造方法的第一条语句。这会形成一个构造方法链。</p><p>静态方法中不能使用 super 关键字。</p><p>调用父类的方法语法：</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">super</span>.方法名(参数列表);</code></pre></div><p>如果是继承的方法，是没有必要使用 super 来调用，直接即可调用。但如果子类覆盖或重写了父类的方法，则只有使用 super 才能在子类中调用父类中的被重写的方法。</p><p><strong>4、this 关键字</strong></p><p>this 关键字表示当前对象。可用于：</p><ul><li>调用当前类的构造方法，并且必须是方法的第一条语句。如：this(); 调用默认构造方法。this(参数); 调用带参构造方法。</li><li>限定当前对象的数据域变量。一般用于方法内的局部变量与对象的数据域变量同名的情况。如 this.num = num。this.num 表示当前对象的数据域变量 num，而 num 表示方法中的局部变量。</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java笔记—数组</title>
    <link href="/blog/2019/11/20/Java%E7%AC%94%E8%AE%B0%E2%80%94%E6%95%B0%E7%BB%84/"/>
    <url>/blog/2019/11/20/Java%E7%AC%94%E8%AE%B0%E2%80%94%E6%95%B0%E7%BB%84/</url>
    
    <content type="html"><![CDATA[<h3 id="Java笔记——数组"><a href="#Java笔记——数组" class="headerlink" title="Java笔记——数组"></a>Java笔记——数组</h3><p>创建时间：2019.11.20</p><p>说明：持续更新ing</p><p>——————————————————————————— 我 是 分 割 线 ————————————————————————————</p><p><font size="5" color="blue">数组</font></p><hr><ol><li><font size="5" color="blue">数组</font>是一组<strong>相同类型的变量（元素）的集合</strong>。可以用来存放一组相同类型的数据。数组的学习涉及数组的定义、赋值和使用。再扩展一点就是二维数组的应用。<strong>数组既是一种重要的数据类型，也是一种重要的数据结构。</strong></li></ol><hr><ol start="2"><li><p><font size="5" color="red">数组（array）</font>————一组相同类型的变量(元素)集合</p><ul><li><p><strong>相同</strong>的<strong>任意类型</strong> <em>(包括基本类型、类类型等)</em></p></li><li><p>这组变量被<strong>连续地</strong>存放在Java<strong>堆区</strong>的内存空间</p></li><li><p>数组是一种<strong>引用类型</strong>，数组名是一个地址的别名</p></li><li><p>数组需要创建（new），否则不会被分配<strong>堆</strong>空间</p></li><li><p>数组名对应的地址单元中存放上述连续堆区空间的首地址 </p><p>🔺 对程序员而言, 数组总体有三样东西：<font size="3" color="oreign">数组名+数组长度+数组元素</font></p><a id="more"></a></li></ul></li></ol><hr><ol start="3"><li><font size="5" color="green">“声明、创建、初始化、访问”数组</font></li></ol><p><font size="4" color="bron">声明数组：</font></p><div class="hljs"><pre><code>🔺只给数组变量(由数组名描述)分配空间，而不会给数组按要存放的元素的多少来分配空间。</code></pre></div><ul><li>有两种形式——&gt;推荐第一种：    <font size="3" color="ydasd">数据类型[]    数组名</font></li></ul><div class="hljs"><pre><code class="hljs java"><span class="hljs-comment">//数据类型[]数组名</span><span class="hljs-keyword">int</span>[]a;<span class="hljs-comment">//数据类型数组名[]</span><span class="hljs-keyword">int</span>a[];</code></pre></div><p> ——————————————————————————— 我 是 分 割 线 ———————————————————————————— </p><p><font size="4" color="bron">创建数组：</font>用<strong>new运算符</strong>，同对象的创建。</p><ul><li>有两种形式——&gt;</li></ul><div class="hljs"><pre><code class="hljs java"><span class="hljs-comment">//先声明，后创建</span><span class="hljs-keyword">int</span>[] a; <span class="hljs-comment">//声明存放int型数据的数组a</span>a = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[<span class="hljs-number">10</span>]; <span class="hljs-comment">//在Java堆区中创建10个int型元素空间(共40个字节)</span><span class="hljs-comment">//声明和创建合一</span><span class="hljs-keyword">int</span>[]test = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[<span class="hljs-number">12</span>];</code></pre></div><p>注意：</p><ol><li><p>🔺声明数组，仅仅创建数组变量<br>🔺创建数组，才在堆区中分配空间</p></li><li><p><code>[ ]</code>中必须是<strong>非负整数</strong>，否则执行时异常。可以是字面常量、也可以是变量，只要保证其值是<strong>非负整数</strong>。</p></li><li><p>创建数组之后，各元素的默认初始值是：<strong>数值型为0(0.0)；字符型’\0’；引用类型null；布尔型false</strong></p></li></ol><p> ——————————————————————————— 我 是 分 割 线 ———————————————————————————— </p><p><font size="4" color="bron">初始化数组：</font>在创建好的数组元素空间中存放初始值.否则按默认值初始化。</p><p>🔺数组<font color="orange">创建时（即new时使用）</font>初始化器语法：<strong>{元素值列表}</strong>。</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-comment">//声明存放int型数据的数组aMonth并初始化</span><span class="hljs-keyword">int</span>[] aMonth = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[]{<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">10</span>,<span class="hljs-number">11</span>,<span class="hljs-number">12</span>};</code></pre></div><p>注意：</p><ul><li><p>使用了初始化器之后<strong>不能显式指定长度</strong></p><p>  即 <code>new int[12]{…}</code> ，不对</p></li></ul><div class="hljs"><pre><code class="hljs Java"><span class="hljs-keyword">int</span>[] a; <span class="hljs-comment">//先声明数组a</span>a = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[<span class="hljs-number">2</span>]{<span class="hljs-number">1</span>,<span class="hljs-number">2</span>}; <span class="hljs-comment">// Error,不能显式指明长度[2]</span>a = {<span class="hljs-number">1</span>,<span class="hljs-number">2</span>}; <span class="hljs-comment">// Error</span>a = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[]{<span class="hljs-number">1</span>,<span class="hljs-number">2</span>}; <span class="hljs-comment">// OK!</span><span class="hljs-keyword">int</span>[] b = {<span class="hljs-number">1</span>, <span class="hljs-number">2</span>}; <span class="hljs-comment">// OK!此方式用得最多</span></code></pre></div><p>——————————————————————————— 我 是 分 割 线 ———————————————————————————— </p><p><font size="4" color="bron">访问数组：</font></p><p>🔺数组元素：数组中的每一个变量，也被称为<strong>下标变量</strong>，索引变量</p><p>🔺下标从0开始：用<code>[ ]</code>运算符访问元素，即 <strong><code>数组名 [ 数组下标 ]</code></strong></p><p>🔺既然是变量，所以数组元素可以作为左值也可以作为右值，比如<code>a[i]++</code>、<code>b[0]=5;</code>、<code>a=b[0]+2;</code>等等。</p><hr><ol start="4"><li><font size="5" color="orange">数组长度属性</font></li></ol><p>🔺数组唯一的一个 <font color="red">只读</font> 属性：<strong>length</strong> 存有数组<strong>元素个数值</strong>。</p><p>🔺*<em><code>数组名.length</code> *</em></p><hr><ol start="5"><li><font size="5" color="oragan">遍历数组</font></li></ol><p>🔺增强版for语句：<strong>foreach语句</strong>（JDK5开始提供）</p><p>🔺适用于<strong>遍历数组、集合元素</strong>等形式</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">for</span>(元素的数据类型 遍历变量x : 遍历对象obj){ <span class="hljs-comment">//x是自定义遍历变量名</span>    引用了x的Java语句; <span class="hljs-comment">//循环体 </span>}</code></pre></div><p>注意：</p><ol><li>foreach语句是for的简化,任何foreach语句都可以改用for语句，<strong>反之不行</strong>。</li><li>foreach语句<strong>不关注下标</strong>。</li><li>用foreach的遍历变量<strong>不能修改元素值</strong>。</li></ol><div class="hljs"><pre><code class="hljs Java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Demo</span> </span>{     <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{          <span class="hljs-keyword">int</span>[] a = {<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">8</span>, <span class="hljs-number">10</span>};         <span class="hljs-comment">/* 循环输出a */</span>         <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> n : a){ <span class="hljs-comment">// 利用变量n遍历数组a </span>            System.out.printf(<span class="hljs-string">"%4d "</span>, n); <span class="hljs-comment">// n表示数组a的每一个元素值 </span>    }     } }</code></pre></div><hr><ol start="6"><li><font size="5" color="blue">二维数组、多维数组</font></li></ol><p><img src="https://i.loli.net/2019/11/17/hwLPKbXz8HZvNUf.png" srcset="/blog/img/loading.gif" alt="image.png"></p><p><img src="https://i.loli.net/2019/11/17/Z4k5HJdKWUuj38z.png" srcset="/blog/img/loading.gif" alt="image.png"></p><p><img src="https://i.loli.net/2019/11/17/Xv2VPuHh5zEJTi4.png" srcset="/blog/img/loading.gif" alt="image.png"></p><p><img src="https://i.loli.net/2019/11/17/sYbASXVNvBitrhw.png" srcset="/blog/img/loading.gif" alt="image.png"></p><hr><ol start="7"><li><font size="5" color="oreia">Arrays 类</font></li></ol><p>主要功能：</p><p>🔺<strong>java.util.Arrays类： 数组操作实用类,它提供了一系列静态方法</strong></p><ul><li><strong>equals()</strong>方法:比较两个数组长度是否相同和对应索引上的元素值是否相同.</li><li>fill()方法:向数组中填充数据.</li><li><strong>copyOf()</strong>方法:复制一个数组的部分元素并生成一个新的数组返回</li><li><strong>sort()</strong>方法:若是基本类型则把数组元素按自然顺序<strong>升序</strong>排列.若是引用类型,<strong>其该实现了Comparable接口才能调用sort方法</strong>,否则报异常.</li><li>binarySearch()方法:对已排序数组使用二分查找算法查找指定元素.</li><li><strong>asList()</strong>方法:返回数组的List对象形式.</li><li><strong>toString()</strong>方法:返回包含所有元素信息的字符串</li><li>parallelSort()方法:开启多线程的排序.</li><li>deepEquals()方法:深度比较两个数组是否相同.适于任何深度的多维(嵌套)数组.</li></ul><hr><ol start="8"><li>问：数组可以作为方法的参数或返回值吗？</li></ol><blockquote><p> 当然是可以的 。答案来源 m<a href="https://blog.csdn.net/Luojun13Class/article/details/83020293" target="_blank" rel="noopener">博客</a></p></blockquote><ol><li><strong>数组作为方法参数</strong></li></ol><p>🔺数组作为方法参数传递，传递的参数是<strong>数组内存的地址</strong>。</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{    <span class="hljs-keyword">int</span>[] arr = {<span class="hljs-number">11</span>, <span class="hljs-number">22</span>, <span class="hljs-number">33</span>, <span class="hljs-number">44</span>, <span class="hljs-number">55</span>};    System.out.println(<span class="hljs-string">"1位置: "</span> + arr);    printArray(arr);  <span class="hljs-comment">// 数组作为方法参数传递，传递的参数是数组内存的地址</span>}<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">printArray</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] arr)</span> </span>{    System.out.println(<span class="hljs-string">"2位置: "</span> + arr);    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; arr.length; i++) {        System.out.println(arr[i]);    }}<span class="hljs-number">1234567891011</span></code></pre></div><p><img src="https://img-blog.csdn.net/20181011225148487?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0x1b2p1bjEzQ2xhc3M=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" srcset="/blog/img/loading.gif" alt="在这里插入图片描述"></p><ol start="2"><li><strong>数组作为方法返回值</strong></li></ol><p>🔺数组作为方法的返回值，返回的是<strong>数组的内存地址</strong>。</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{    <span class="hljs-comment">//调用方法，接收数组的返回值</span>    <span class="hljs-comment">//接收到的是数组的内存地址</span>    <span class="hljs-keyword">int</span>[] arr = getArray();    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; arr.length; i++) {System.out.println(arr[i]);            }}<span class="hljs-comment">/*</span><span class="hljs-comment">  创建方法，返回值是数组类型</span><span class="hljs-comment">  return返回数组的地址</span><span class="hljs-comment">*/</span><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span>[] getArray() {    <span class="hljs-keyword">int</span>[] arr = { <span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>, <span class="hljs-number">9</span> };    <span class="hljs-comment">//返回数组的地址，返回到调用者</span>    <span class="hljs-keyword">return</span> arr;}<span class="hljs-number">1234567891011121314151617</span></code></pre></div><p><img src="https://img-blog.csdn.net/20181011225223723?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0x1b2p1bjEzQ2xhc3M=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" srcset="/blog/img/loading.gif" alt="在这里插入图片描述"></p><p>该博主的延伸阅读： <a href="https://blog.csdn.net/Luojun13Class/article/details/83020011" target="_blank" rel="noopener">Java–数组的定义和访问</a>、<a href="https://blog.csdn.net/Luojun13Class/article/details/83020086" target="_blank" rel="noopener">Java–数组原理内存图</a>、<a href="https://blog.csdn.net/Luojun13Class/article/details/83020199" target="_blank" rel="noopener">Java–数组的常见操作</a> </p><hr><ol start="9"><li>判断： Java中数组可以动态改变长度？</li></ol><blockquote><p>错误。 Java中的数组的定义就是相同类型，固定长度的一组数据，一旦被初始化，长度不可更改。 </p></blockquote><hr><p>10. </p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>教会你怎么安装和使用 Visio 哦 ~ ~</title>
    <link href="/blog/2019/11/19/Visio%E6%95%99%E7%A8%8B/"/>
    <url>/blog/2019/11/19/Visio%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote><p>很多学生会在编程、设计或其他时候可能使用到【制图工具】。最好用的莫不过【微软的Visio】了。<del>但是很多学生不会使用Visio，甚至不会安装Visio。</del>   &gt;    </p></blockquote><p>Visio 这么好的工具，一定要会用。    </p><p>今天，作者写一份教程，教会大家了解如何<strong>安装和使用 ==Visio==</strong>。    </p><p>在正式教程之前，我们先介绍 Visio。  </p><blockquote><p>Visio 是office软件系列中的负责绘制流程图和示意图的软件，是一款便于IT和商务人员就复杂信息、系统和流程进行可视化处理、分析和交流的软件。使用具有专业外观的 Office Visio 图表，可以促进对系统和流程的了解，深入了解复杂信息并利用这些知识做出更好的业务决策。  &gt; Microsoft Office Visio帮助您创建具有专业外观的图表，以便理解、记录和分析信息、数据、系统和过程。    </p></blockquote><p><img src="https://i.loli.net/2019/11/23/QzMuCJyZ8ibGc6h.png" srcset="/blog/img/loading.gif" alt="UTOOLS1574501389810.png"></p><a id="more"></a>  //截断文章<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>1. 【下载资源】  网上也有很多资源，但是包是不完整的。版本也很多，要激活也不容易。  作者在这里已经打包好“Visio 2019”和“激活工具”了，点击<a href="https://pan.baidu.com/s/1VQUlOEQw8lEAM_odBLaSyA" target="_blank" rel="noopener">这里</a>(提取码: rwtr)开始下载。  由于现在的笔记本都是预装win10的，所以不用担心Visio 2019合不合适。毕竟Visio 2019在win7上是安装不了的。<br>2. 【解压】  下载得到压缩包，解压，打开文件夹。  </p><p><img src="https://i.loli.net/2019/11/23/wgxJfyOmkVYnC15.png" srcset="/blog/img/loading.gif" alt="UTOOLS1574501412392.png"><br><img src="https://i.loli.net/2019/11/23/1c4N9J7TSPkxMGs.png" srcset="/blog/img/loading.gif" alt="image.png"></p><p>3. 【打开Setup】  打开“Visio 2019”，右键“Setup”选中“以管理员身份运行”。（似乎不用管理员也行？？？）  </p><p><img src="https://i.loli.net/2019/11/23/oWOfUzdiTlA1a7y.png" srcset="/blog/img/loading.gif" alt="UTOOLS1574501422677.png"></p><p>  4. 【正在安装】  等待就好，很快的。</p><p><img src="https://i.loli.net/2019/11/23/goK85rHYGkOeyWL.png" srcset="/blog/img/loading.gif" alt="UTOOLS1574501447151.png">  </p><p>5. 【安装完成】  安装结束，点击“关闭”。  </p><p><img src="https://i.loli.net/2019/11/23/dPhLSBmC2MTHNEA.png" srcset="/blog/img/loading.gif" alt="UTOOLS1574501453578.png"></p><p>6. 【激活】  <strong>Visio 2019是==必须激活==才可以使用的。</strong>  <em>否则，会一直弹窗提示激活的。</em>  激活工具在另一个文件夹里。 </p><p> <img src="https://i.loli.net/2019/11/23/FE6GecDvBdyq1YQ.png" srcset="/blog/img/loading.gif" alt="UTOOLS1574501477474.png"></p><blockquote><p>补充一些关于KMS：  KMS（全称:Key Management Service），这个是微软的一种新型产品激活机制，目的是为了Microsoft更好的遏制非法软件授权行为(盗版)。 </p></blockquote><p><strong>当然作者不提倡破解、或盗版。  对于有能力的人，还是支持正版。但是学生嘛，能用就好了。</strong>    </p><p>使用激活工具前，作者建议：    </p><p>==最好关闭杀毒软件，如果有的话。==    </p><p>作者没安装360那些，很流畅地激活成功。    </p><p>==激活工具无毒的。不关闭的话，可能被误报。==    </p><p>1).【打开】  界面如下：    </p><p><img src="https://i.loli.net/2019/11/23/IzwFjHaUQ7AtN63.png" srcset="/blog/img/loading.gif" alt="image.png"></p><p>  <del>这个激活工具还可以xxxxxx。（你懂的）</del> 我啥都没说哦hh    </p><p>2).【激活】  简单一按，等待激活成功就好。 </p><p> <img src="https://i.loli.net/2019/11/23/uRYEzqUIs32DmOb.png" srcset="/blog/img/loading.gif" alt="UTOOLS1574501487906.png"></p><h5 id="补充："><a href="#补充：" class="headerlink" title="补充："></a>补充：</h5><p>可能有的电脑打开软件时会提示这个。解决很简单，安装框架就好。   </p><p><img src="https://i.loli.net/2019/11/23/w14CX8z9alB7fTv.png" srcset="/blog/img/loading.gif" alt="image.png"></p><p>（1）打开“控制面板”。<br>（2）找到并点击“程序和功能”项，在打开的页面中，点击“启用或关闭Windows功能”。<br>（3）在打开的“Windows功能”对话框中，找到并勾选“Microsoft.Net Framework”服务，单击“确定”即可。    </p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>激活后，就可以安安心心、大大方方地使用 Visio 了。o(<em>￣▽￣</em>)o    </p><p>【打开】  </p><p><img src="https://i.loli.net/2019/11/23/GKdWZOSMe2nhUay.png" srcset="/blog/img/loading.gif" alt="UTOOLS1574501547116.png"></p><p>【新建】<br>新建页面，有一些初始模板可以使用。<br>一般选择“基本框图”就好，然后“新建”。</p><p><img src="https://i.loli.net/2019/11/23/Y1y69UqocWkJvLT.png" srcset="/blog/img/loading.gif" alt="UTOOLS1574501515942.png"></p><p>【制图】    </p><p>左侧可以选择很多官方自带的形状，当然还可以自己建立自己的模型。<br> 右侧可以对图形自定义，包括颜色、线条、端点等等。  </p><p><img src="https://i.loli.net/2019/11/23/MxrPbFt8IpTQhK4.png" srcset="/blog/img/loading.gif" alt="UTOOLS1574501554468.png"></p><h3 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h3><p>使用 Visio 来制图真的很爽。<br>但是，如果只是临时制图使用 Visio ，还得安装确实不太方便。<br>因此 作者还<strong>收藏了几个线上制图的网站，在这提供给大家临时使用。</strong></p><p>1. <a href="https://www.draw.io/" target="_blank" rel="noopener">https://www.draw.io/</a></p><p><img src="https://i.loli.net/2019/11/23/tXvca7DgsR4bMpo.png" srcset="/blog/img/loading.gif" alt="UTOOLS1574501571713.png">   </p><p> 2. <a href="https://zh.numberempire.com/graphingcalculator.php" target="_blank" rel="noopener">https://zh.numberempire.com/graphingcalculator.php</a>  </p><p><img src="https://i.loli.net/2019/11/23/Q2EDKNdeMhcimgq.png" srcset="/blog/img/loading.gif" alt="UTOOLS1574501583347.png"></p><p>3. <a href="https://www.processon.com" target="_blank" rel="noopener">https://www.processon.com</a> </p><p><img src="https://i.loli.net/2019/11/23/tZAV7qwN2hfDomO.png" srcset="/blog/img/loading.gif" alt="image.png">      </p><p>4. 当然用电脑自带的【画图】也是可以的，你看。 </p> <img src="https://i.loli.net/2019/11/23/N5Uvxj9peCQbsR7.png" srcset="/blog/img/loading.gif" alt="UTOOLS1574501608879.png" title="UTOOLS1574501608879.png"><p>  emmm只是好难看啊hhhh。    </p><h4 id="这就是结尾：如果教程上有什么不足的或者有问题的，可以私信我。谢谢你的阅读！"><a href="#这就是结尾：如果教程上有什么不足的或者有问题的，可以私信我。谢谢你的阅读！" class="headerlink" title="这就是结尾：如果教程上有什么不足的或者有问题的，可以私信我。谢谢你的阅读！"></a>这就是结尾：如果教程上有什么不足的或者有问题的，可以私信我。谢谢你的阅读！</h4><hr><p><font size="1">本博客第一次发表于【简书】： <a href="https://www.jianshu.com/p/32648bcc6f1c" target="_blank" rel="noopener">https://www.jianshu.com/p/32648bcc6f1c</a>  。现转载到作者的网站上。谢谢阅读！</font></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>百合</title>
    <link href="/blog/2019/11/16/%E7%99%BE%E6%97%A5/"/>
    <url>/blog/2019/11/16/%E7%99%BE%E6%97%A5/</url>
    
    <content type="html"><![CDATA[<p>2019.11.16    星期六    晴天</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&amp;id=35470766&amp;auto=0&amp;height=66"></iframe><br><img src="https://i.loli.net/2019/11/24/oyFDXs9narNzQJM.png" srcset="/blog/img/loading.gif" alt="百合花.png" style="zoom: 25%;"><a id="more"></a><p>💙汪曾祺老人的散文《活着多好呀》中“活着多好呀”为汪老一句名言。这位老人不管遇到什么环境，永远不消沉沮丧，守护心中的热情与生机，兴致盎然地生活。<br>💛时光机，这个世界不存在的理想物品。可是我多希望有这东西，真是可惜无法回到两三年前，“时间就是让人猝不及防的东西”……<br>💜有段时间，喜欢黑暗安静的环境。肚子一个人发呆，内室里一个窗户也不开，杜绝所有来往。但已经走出来那段抑郁期，今后不知道，但是现在我挺好的。恍惚发现，最好掩盖哭的方式，除了偷偷一个人，就是洗澡的时候。<br>💚或记日记或写随笔或向月亮倾诉或对空气说说，~生活不易，但也没那么糟糕。<br>柏拉图说：没有什么比健康更快乐的了，虽然在他们生病之前并不曾觉得那是最大的快乐。<br>💗“谢谢你的不告而别”。下辈子，我们再会 !</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>解除课程中心看视频时的“ 窗口获取焦点事件 ”</title>
    <link href="/blog/2019/11/16/%E8%A7%A3%E9%99%A4%E8%AF%BE%E7%A8%8B%E4%B8%AD%E5%BF%83%E7%9C%8B%E8%A7%86%E9%A2%91%E6%97%B6%E7%9A%84%E2%80%9C%20%E7%AA%97%E5%8F%A3%E8%8E%B7%E5%8F%96%E7%84%A6%E7%82%B9%E4%BA%8B%E4%BB%B6%20%E2%80%9D/"/>
    <url>/blog/2019/11/16/%E8%A7%A3%E9%99%A4%E8%AF%BE%E7%A8%8B%E4%B8%AD%E5%BF%83%E7%9C%8B%E8%A7%86%E9%A2%91%E6%97%B6%E7%9A%84%E2%80%9C%20%E7%AA%97%E5%8F%A3%E8%8E%B7%E5%8F%96%E7%84%A6%E7%82%B9%E4%BA%8B%E4%BB%B6%20%E2%80%9D/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前段时间，在观看课程中心的马克思视频，因为要<strong>至少看到80%以上</strong>。</p><h2 id="发现"><a href="#发现" class="headerlink" title="发现"></a>发现</h2><p>那我挂着刷不就得了？偏偏。。。。。</p><p>发现这个课程中心存在某个机制——<strong>一定要使视频一直处于“置顶”的状态，否者会自动暂停视频</strong>。</p><a id="more"></a>  //截断文章<p>就像下图这样：</p><p>操作鼠标前——&gt;</p><p><img src="https://i.loli.net/2019/11/16/jAVgqoWRcBYCbNx.png" srcset="/blog/img/loading.gif" alt="image.png"></p><p>操作鼠标后——&gt;</p><p><img src="https://i.loli.net/2019/11/16/zH3BSiqobAepMtw.png" srcset="/blog/img/loading.gif" alt="image.png"></p><p>你会注意到，视频的播放状态跟鼠标的行为有关，准确来说是==和鼠标点击的位置（焦点）有关==。</p><p>第一时间想到“这不就是windows的<strong>“窗口获取焦点”</strong>吗？</p><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>先补充补充什么是<strong>窗口获取焦点</strong>？</p><blockquote><ul><li><p>在你浏览其他窗口页面、或是浏览器最小化、又或是点击了程序窗口时，等等都算是浏览器窗口失去焦点，这时候 <strong><code>window.onblur</code></strong> 事件就会触发。 </p></li><li><p>当然，当你的页面获得焦点的时候一样也会触发<strong><code>window.onfocus</code></strong>。</p></li><li><p>应该有人会注意到过，当你点击不同窗口时，窗口栏会有不同的颜色反馈，就比如win 10的资源管理器，前置窗口和后置窗口的窗口颜色是不是不一样？<br>  <img src="https://i.loli.net/2019/11/16/LSU5XReK4Pzylaj.png" srcset="/blog/img/loading.gif" alt="image.png"></p></li></ul></blockquote><h2 id="寻找"><a href="#寻找" class="headerlink" title="寻找"></a>寻找</h2><p>直接按下<code>F12</code>，打开控制台，查看Elements……</p><p>emmmmmm结果，没找到对应的代码（或许我没仔细去挖hh）</p><h2 id="再试"><a href="#再试" class="headerlink" title="再试"></a>再试</h2><p>那我直接Console。不就是当前窗口获取了焦点吗？？？？直接暴力敲下代码，并Enter，嘿嘿……</p><div class="hljs"><pre><code class="hljs javascript">javascript:<span class="hljs-built_in">window</span>.onblur=<span class="hljs-literal">null</span>;<span class="hljs-keyword">void</span> <span class="hljs-number">0</span><span class="hljs-comment">//有无`void 0`，都可以</span></code></pre></div><h2 id="当我Enter时，诶，成功了hhh"><a href="#当我Enter时，诶，成功了hhh" class="headerlink" title="当我Enter时，诶，成功了hhh"></a>当我Enter时，诶，成功了hhh</h2><p>效果就是这样。</p><p><img src="https://i.loli.net/2019/11/16/EyMkej7OPU2dTaQ.png" srcset="/blog/img/loading.gif" alt="image.png"></p><h2 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h2><p>测试了一段时间后，成功率基本达97%左右。后来就分享到班群，让更多人试试效果。两天刷完所有马克思的视频哈哈有木有？</p><h2 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h2><ul><li><p><strong>一次最多同时两个视频在看</strong>，因为后台有个计时器再加上我不会写自动播放、自动静音的脚本hhhhh（有时间再去琢磨哈）</p></li><li><p><strong><em>一旦刷新页面，就得重新Enter脚本</em></strong></p></li><li><p>极小几率会失败，原因我也不清楚，失败重新Enter即可。</p></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>脚本</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java笔记—对象、类</title>
    <link href="/blog/2019/11/15/Java%E7%AC%94%E8%AE%B0%E2%80%94%E5%AF%B9%E8%B1%A1%E3%80%81%E7%B1%BB/"/>
    <url>/blog/2019/11/15/Java%E7%AC%94%E8%AE%B0%E2%80%94%E5%AF%B9%E8%B1%A1%E3%80%81%E7%B1%BB/</url>
    
    <content type="html"><![CDATA[<h3 id="Java笔记——对象、类"><a href="#Java笔记——对象、类" class="headerlink" title="Java笔记——对象、类"></a>Java笔记——对象、类</h3><p>创建时间：2019.11.11</p><p>说明：持续更新ing</p><hr><ol><li><strong><code>对象</code></strong>和<strong><code>类</code></strong>的概念。</li></ol><ul><li><blockquote><p><code>对象</code>：对象是类的一个实例（实实在在存在的个体），有<strong>属性（状态）</strong>和<strong>行为</strong>。例如，一条狗是一个对象，它的状态有：颜色、名字、品种；行为有：摇尾巴、叫、吃等。</p><p>属性(property)： 静态特征<br>行为(behavior)： 动态特征</p></blockquote></li><li><blockquote><p><code>类</code>：类是对现实生活中事物的描述。类是一个模板，它描述一类对象的行为和状态。<strong>同种类型对象共性的抽象</strong></p></blockquote></li></ul><a id="more"></a><ul><li><p>用老师的话来说，就是下面这样——&gt;<br>  <img src="https://i.loli.net/2019/11/16/fB95MSm8EWJD6IV.png" srcset="/blog/img/loading.gif" alt="image.png"></p></li><li><p>下图中<strong>男孩（boy）</strong>、<strong>女孩（girl）</strong>为<strong>类（class）</strong>，而具体的每个人为该类的<strong>对象（object）</strong>：<br>  <img src="https://i.loli.net/2019/11/12/P8M5LWHdIcs42yB.png" srcset="/blog/img/loading.gif" alt="菜鸟教程.png"></p></li></ul><hr><ol start="2"><li>【定义类】</li></ol><p><img src="C:%5CUsers%5C%E4%B8%B6Melody%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20191116135106458.png" srcset="/blog/img/loading.gif" alt="image-20191116135106458"></p><hr><ol start="3"><li></li></ol><ul><li>Java中的类<br>  类可以看成是创建Java对象的模板。<br>  通过下面一个简单的类来理解下Java中类的定义：</li></ul><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Student</span> </span>{    <span class="hljs-keyword">int</span> id;     String name;     <span class="hljs-keyword">double</span> score1, score2, score3;     <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Student</span><span class="hljs-params">(<span class="hljs-keyword">int</span> id, String name)</span> </span>{        <span class="hljs-keyword">this</span>.id = id;         <span class="hljs-keyword">this</span>.name = name;     }    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">double</span> <span class="hljs-title">getAverageScore</span><span class="hljs-params">()</span> </span>{         <span class="hljs-keyword">return</span> (score1 ＋ score2 + score3) / <span class="hljs-number">3</span>;     } }</code></pre></div><p>一个类可以包含以下类型变量：</p><blockquote><p><code>局部变量</code>：在方法、构造方法或者语句块中定义的变量被称为局部变量。变量声明和初始化都是在方法中，方法结束后，变量就会自动销毁。<br><code>成员变量</code>：成员变量是定义在类中，方法体之外的变量。这种变量在创建对象的时候实例化。成员变量可以被类中方法、构造方法和特定类的语句块访问。<br><code>类变量</code>：类变量也声明在类中，方法体之外，但必须声明为static类型。<br>一个类可以拥有多个方法。</p></blockquote><ul><li>Java中的对象<br>现在让我们深入了解什么是对象。看看周围真实的世界，会发现身边有很多对象，车，狗，人等等。所有这些对象都有自己的状态和行为。<br>拿一条狗来举例，它的状态有：名字、品种、颜色，行为有：叫、摇尾巴和跑。<br>对比现实对象和软件对象，它们之间十分相似。</li></ul><p><strong><em>软件对象也有状态和行为。软件对象的状态就是属性，行为通过方法体现。<br>在软件开发中，方法操作对象内部状态的改变，对象的相互调用也是通过方法来完成。</em></strong></p><ul><li><p>创建对象——&gt;</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-comment">/*有两种基本形式*/</span><span class="hljs-comment">/*1.对象声明和创建*/</span>类名 对象名 = <span class="hljs-keyword">new</span> 类名();Student xiaoming = <span class="hljs-keyword">new</span> Student ();<span class="hljs-comment">/*2.先声明,后创建*/</span>类名 对象名; <span class="hljs-comment">// 类(对象)变量</span>对象名 = <span class="hljs-keyword">new</span> 类名(); <span class="hljs-comment">//实例化</span>Student xiaobai ;xiaobai = <span class="hljs-keyword">new</span> Student();</code></pre></div></li><li><p><img src="https://i.loli.net/2019/11/16/ZPBq1pyImXLnwvV.png" srcset="/blog/img/loading.gif" alt="java对象内存映射像示意.png"></p></li><li><p><img src="https://i.loli.net/2019/11/16/OaWtx2fr4o53ZwH.png" srcset="/blog/img/loading.gif" alt="image.png"></p></li></ul><hr><ol start="4"><li>类和对象的关系：<strong>类是具有相同==属性和方法==的集合，是对对象的抽象描述。</strong></li></ol><ul><li><p>现实生活中的对象：张三、李四。</p></li><li><p>【想要描述】提取对象中的共性内容。<strong>对具体的抽象。</strong></p></li><li><p>【描述时】这些对象的共性有：姓名、学号、年龄、性别、学习Java等等。（即<strong>定义类：描述事物的属性和行为，就是在定义属性和行为。<em>属性和行为共同成为类中的成员（成员变量和成员方法）。</em></strong>）</p></li><li><p>映射到Java中，<strong>描述就是class定义的类，具体对象就是new建立的实体</strong>。</p></li><li><p>这些描述在Java当中是用类的形式来体现的。而对象是通过Java的new操作符所产生的一个实体，这个的实体存在于==堆内存==当中。</p>  <img src="https://i.loli.net/2019/11/13/znyBu9gp1jtdEFs.png" srcset="/blog/img/loading.gif" alt="image.png" style="zoom:80%;">  <div class="hljs"><pre><code class="hljs java"><span class="hljs-comment">//定义类，就是描述事物，就是在定义属性和行为。属性和行为共同成为类中的成员（成员变量和成员方法）。</span><span class="hljs-comment">//需求：描述车汽车（颜色，轮胎数）。</span><span class="hljs-class"><span class="hljs-keyword">class</span><span class="hljs-title">Car</span> </span>{    <span class="hljs-comment">//描述颜色</span>    String color = <span class="hljs-string">"red"</span>;    <span class="hljs-comment">//描述轮胎数</span>    <span class="hljs-keyword">int</span> num = <span class="hljs-number">4</span>;    <span class="hljs-comment">//运行行为。</span>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">run</span><span class="hljs-params">()</span> </span>{        System.out.println(color+<span class="hljs-string">".."</span>+num);    }}<span class="hljs-class"><span class="hljs-keyword">class</span><span class="hljs-title">CarDemo</span> </span>{    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span></span>{        <span class="hljs-comment">//生产汽车：在Java中通过new操作符来完成。</span>        <span class="hljs-comment">//其实就是在堆内存中产生一个实体。</span>        Car c = <span class="hljs-keyword">new</span> Car();<span class="hljs-comment">//c就是一个【类类型】变量。记住：类类型变量只想对象。</span>        <span class="hljs-comment">//需求：将已有车的颜色的颜色改成蓝色。指定该对象做使用。</span>        <span class="hljs-comment">//在Java指挥方式是：【对象.对象成员】</span>        c.color = <span class="hljs-string">"blue"</span>;        <span class="hljs-comment">//需求：想要车运行起来。</span>        c.run();    }}</code></pre></div></li></ul><p><code>Car c = new Car();</code>在内存中的示意图——&gt;</p><img src="https://i.loli.net/2019/11/13/1X4VFtqIwDN5Epx.png" srcset="/blog/img/loading.gif" alt="image.png" style="zoom:80%;"><p><code>c.run();</code>——&gt;输出这个车的颜色“蓝色”和轮胎数“4”。</p><p>(1)倘若在<code>c.run();</code>后加入<code>Car c1=new Car();c1.run();</code>——&gt;</p><img src="https://i.loli.net/2019/11/13/9TSkMDwUR2z4ILe.png" srcset="/blog/img/loading.gif" alt="image.png" style="zoom:80%;"><p>(2)若main的代码块改为：</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span><span class="hljs-title">CarDemo</span> </span>{    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span></span>{Car c = <span class="hljs-keyword">new</span> Car();c.num = <span class="hljs-number">5</span>;Car c1 = c;c1.color = <span class="hljs-string">"green"</span>;c.run();    }}</code></pre></div><p>在内存中的示意图——&gt;</p><img src="C:\Users\丶Melody\AppData\Roaming\Typora\typora-user-images\image-20191113105054592.png" srcset="/blog/img/loading.gif" alt="image-20191113105054592" style="zoom:80%;"><blockquote><p>对对象调用的基本概念：用new建立对象，在堆内存中产生对象。那么<strong>对象的特点在于封装数据，数据包含属性和行为</strong>。想要操作对象中的内容就指挥对象做事，指挥哪个对象要明确，操作什么也要明确，用<strong><code>对象.xyz</code></strong>的形式就能完成。</p></blockquote><p>【注意】：<br>如下图，</p><img src="https://i.loli.net/2019/11/13/PkjShzpB5GDg3On.png" srcset="/blog/img/loading.gif" alt="image.png" style="zoom:80%;"><p>以前定义在函数里面，现在定义在函数外面                 </p><hr><ol start="5"><li><p>【方法】<br> 方法的定义：</p><ul><li><p><strong>方法是类或对象的行为特征的抽象。</strong></p></li><li><p>Java中的方法不能独立存在，所有的方法必须定义在类中。</p></li><li><p>使用 “类名.方法” 或 “对象.方法” 的形式调用。</p></li><li><p>语法格式：</p><div class="hljs"><pre><code class="hljs java">权限修饰符　返回值类型　方法名（参数类型　参数名<span class="hljs-number">1</span>,参数类型　参数名<span class="hljs-number">2</span>,...） {<span class="hljs-comment">// 方法体</span>方法语句序列<span class="hljs-comment">//当返回类型非void时,最后一条被执行语句必须是return语句,返回对应类型的值</span>}</code></pre></div><p>访问权限/权限修饰符（4P权限）：</p><table><thead><tr><th align="center">访问权限</th><th align="center">类内</th><th align="center">包层内</th><th align="center">子类</th><th align="center">包层外</th></tr></thead><tbody><tr><td align="center">public</td><td align="center">√</td><td align="center">√</td><td align="center">√</td><td align="center">√</td></tr><tr><td align="center">protected</td><td align="center">√</td><td align="center">√</td><td align="center">√</td><td align="center">×</td></tr><tr><td align="center">package （缺省）</td><td align="center">√</td><td align="center">√</td><td align="center">×</td><td align="center">×</td></tr><tr><td align="center">private</td><td align="center">√</td><td align="center">×</td><td align="center">×</td><td align="center">×</td></tr></tbody></table><p><code>return</code>语句：</p></li><li><p>结束方法调用，并返回值。</p></li><li><table><thead><tr><th>return 表达式;</th><th>return;</th></tr></thead><tbody><tr><td>🔺方法被调用时,执行到方法内的return语句,则不论方法里是否还有语句未执行,立即结束方法的调用,并将return 后的表达式的值返回方法调用者<br>🔺利用return 语句返回值，仅能返回一个值<br>🔺return语句仅结束方法的执行</td><td>🔺void型方法</td></tr></tbody></table><p>方法分类：</p></li><li><p>无参数无返回值</p></li><li><p>有参数无返回值</p></li><li><p>无参数有返回值</p></li><li><p>有参数有返回值</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Method</span> </span>{        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">aMethod</span><span class="hljs-params">()</span> </span>{        System.out.println(<span class="hljs-string">"无参数无返回值的方法"</span>);    }        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">bMethod</span><span class="hljs-params">(<span class="hljs-keyword">int</span> b)</span> </span>{        System.out.println(<span class="hljs-string">"有参数无返回值的方法"</span>);    }        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">cMethod</span><span class="hljs-params">()</span> </span>{        System.out.println(<span class="hljs-string">"无参数有返回值的方法"</span>);        <span class="hljs-keyword">return</span> <span class="hljs-number">10</span>;    }       <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">dMethod</span><span class="hljs-params">(<span class="hljs-keyword">int</span> d)</span> </span>{       System.out.println(<span class="hljs-string">"有参数有返回值的方法"</span>);        <span class="hljs-keyword">return</span> d;   }   <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{        <span class="hljs-keyword">int</span> ret;　　　　　<span class="hljs-comment">// 创建Method类的对象</span>       Method md = <span class="hljs-keyword">new</span> Method();　　　　　<span class="hljs-comment">// 通过对象.方法调用</span>        md.aMethod();       md.bMethod(<span class="hljs-number">10</span>);        ret = md.cMethod();       ret = md.dMethod(<span class="hljs-number">10</span>);        System.out.println(ret);   }}</code></pre></div><p>方法的参数：</p></li><li><p>方法可以没有参数，或者有多个参数，参数类型可以是任意类型</p></li><li><p>方法参数也是局部变量</p><p>  参数为<a href="https://www.cnblogs.com/wuxinyiwu/p/8588420.html" target="_blank" rel="noopener">引用数据类型</a><sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup>时：</p></li><li><p>当对象实例作为参数传递给方法时，传递的是对象的引用，为地址传递，接受参数的方法可以改变参数的值。</p><p>参数为简单数据类型时：</p></li><li><p>传递的是参数的副本，为值传递，接受参数的方法中不会改变参数的值。</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MethodParam</span> </span>{        <span class="hljs-comment">/** </span><span class="hljs-comment">     * 方法的参数为基本数据类型时，传递的是值的副本（值拷贝）</span><span class="hljs-comment">     * 方法中不会改变元参数的值</span><span class="hljs-comment">     */</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">swap</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a, <span class="hljs-keyword">int</span> b)</span> </span>{<span class="hljs-comment">//a, b为形参</span>        <span class="hljs-keyword">int</span> tmp;        tmp = a;        a = b;        b = tmp;    }        <span class="hljs-keyword">int</span> x = <span class="hljs-number">100</span>, y = <span class="hljs-number">200</span>;        <span class="hljs-comment">/**</span><span class="hljs-comment">     * 方法的参数为引用数据类型时，传递的对象的引用（传地址）</span><span class="hljs-comment">     * 方法中可以改变参数的值</span><span class="hljs-comment">     */</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">swap2</span><span class="hljs-params">(MethodParam mp)</span> </span>{        <span class="hljs-keyword">int</span> tmp = mp.x;        mp.x = mp.y;        mp.y = tmp;    }    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{        MethodParam mp = <span class="hljs-keyword">new</span> MethodParam();                <span class="hljs-keyword">int</span> m = <span class="hljs-number">10</span>, n = <span class="hljs-number">20</span>;        System.out.println(<span class="hljs-string">"交换前：a = "</span>+m+<span class="hljs-string">",b = "</span>+n);        mp.swap(m, n);<span class="hljs-comment">// m,n为实参</span>        System.out.println(<span class="hljs-string">"交换后：a = "</span>+m+<span class="hljs-string">",b = "</span>+n);                System.out.println(<span class="hljs-string">"交换前：x = "</span>+mp.x+<span class="hljs-string">",y = "</span>+mp.y);        mp.swap2(mp);        System.out.println(<span class="hljs-string">"交换后：x = "</span>+mp.x+<span class="hljs-string">",y = "</span>+mp.y);    }}</code></pre></div><p>普通方法调用——&gt;</p><p><img src="https://i.loli.net/2019/11/16/28HpyTLnKOVsFQY.png" srcset="/blog/img/loading.gif" alt="image.png"></p><p>成员方法和成员变量的关系——&gt;</p><p><img src="https://i.loli.net/2019/11/16/gceJWarS2Puqz9w.png" srcset="/blog/img/loading.gif" alt="image.png"></p></li></ul></li></ol><hr><ol start="6"><li><p>【成员方法】和【构造方法】</p><p> 【成员方法】</p></li></ol><div class="hljs"><pre><code>——————————————————————————— 我 是 分 割 线 ————————————————————————————【构造方法】构造方法需满足以下三个条件 ：</code></pre></div><ul><li><p>1、方法名与类名<strong>同名</strong></p></li><li><p>2、在方法中不能使用  <strong><code>return</code></strong>  语句，即无返回值 </p></li><li><p>3、在方法名的前面*<em>没有返回值的类型声明 *</em><br>  （有看到“ 构造方法无返回值也不可以加void，但其实返回的是首地址 ”这话还得去证实，先放在这里）</p></li><li><p><img src="https://i.loli.net/2019/11/16/qIK3BjS4wrtvgMi.png" srcset="/blog/img/loading.gif" alt="image.png"></p></li><li><blockquote><p>==老师推荐==：<strong><em>显式无参构造子,作为一种良好实践,定义了其他构造子，那就准备一个无参构造子</em></strong></p></blockquote></li></ul><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">package</span> me;<span class="hljs-keyword">public</span>  <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Me</span> </span>{    <span class="hljs-keyword">private</span>  String name; <span class="hljs-comment">//成员变量</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Me</span><span class="hljs-params">(String name)</span></span>{ <span class="hljs-comment">//构造方法</span>        <span class="hljs-keyword">this</span>.name = name;    }    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getName</span><span class="hljs-params">()</span> </span>{ <span class="hljs-comment">//成员方法</span>        <span class="hljs-keyword">return</span> name;    }    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setName</span><span class="hljs-params">(String name)</span> </span>{<span class="hljs-comment">//成员方法</span>        <span class="hljs-keyword">this</span>.name = name;    }}</code></pre></div><p> 我如果我在添加一age 如下 添加方法依然是成员方法 , </p><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">package</span> me;<span class="hljs-keyword">public</span>  <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Me</span> </span>{    <span class="hljs-keyword">private</span>  String name; <span class="hljs-comment">//成员变量</span>    <span class="hljs-keyword">private</span> String age; <span class="hljs-comment">//成员变量</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Me</span><span class="hljs-params">(String name)</span></span>{ <span class="hljs-comment">//构造方法</span>        <span class="hljs-keyword">this</span>.name = name;    }    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getName</span><span class="hljs-params">()</span> </span>{ <span class="hljs-comment">//成员方法</span>        <span class="hljs-keyword">return</span> name;    }    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setName</span><span class="hljs-params">(String name)</span> </span>{<span class="hljs-comment">//成员方法</span>        <span class="hljs-keyword">this</span>.name = name;    }    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getAge</span><span class="hljs-params">()</span> </span>{<span class="hljs-comment">//成员方法</span>        <span class="hljs-keyword">return</span> age;    }    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setAge</span><span class="hljs-params">(String age)</span> </span>{<span class="hljs-comment">//成员方法</span>        <span class="hljs-keyword">this</span>.age = age;    }}</code></pre></div><p>个人理解：无论多少方法，==除了构造方法外，其余都是成员方法==，当然这样理解可能有点偏见..</p><p>它们的区别：</p><ul><li><p>构造方法一般是给对象的数据进行初始化,没有返回值</p></li><li><p>成员方法一般实现对类中成员变量的操作，提供某些功能,有返回类型，可以为void类型</p></li></ul><p>成员方法与构造方法调用的区别</p><div class="hljs"><pre><code class="hljs Java"><span class="hljs-keyword">package</span> me;<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Book</span> </span>{        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{                Me me = <span class="hljs-keyword">new</span> Me(<span class="hljs-string">"张三"</span>);<span class="hljs-comment">//构造方法调用    </span>        System.out.println(me);                 me.setName(<span class="hljs-string">"李四"</span>);<span class="hljs-comment">//成员方法调用       </span>        System.out.println(me.getName());         }}</code></pre></div><p>从上面的demo中可以看出，<strong>==构造方法通过new运算符调用==</strong>，<strong>==成员方法通过对象调用==</strong>。</p><p><strong>注意：类中除了构造方法以外的方法都是成员方法。原因是在类中，除了变量外的基本都是成员方法。</strong></p><p>——————————————————————————— 我 是 分 割 线 ————————————————————————————</p><p>【this 关键字】</p><p><a href="https://i.loli.net/2019/11/16/49d7AMODXhKbsuy.png" target="_blank" rel="noopener">https://i.loli.net/2019/11/16/49d7AMODXhKbsuy.png</a> </p><p>——————————————————————————— 我 是 分 割 线 ————————————————————————————</p><p>【重载构造方法之间的调用】</p><p><img src="https://i.loli.net/2019/11/16/6qrpXmf5a3bhojz.png" srcset="/blog/img/loading.gif" alt="image.png"></p><p><img src="https://i.loli.net/2019/11/16/pXLMjyKFzgal1oB.png" srcset="/blog/img/loading.gif" alt="image.png"></p><p>【含对象成员的构造方法调用】<img src="https://i.loli.net/2019/11/16/Awpe2iSNX4OnvaQ.png" srcset="/blog/img/loading.gif" alt="image.png"></p><p><img src="https://i.loli.net/2019/11/16/49d7AMODXhKbsuy.png" srcset="/blog/img/loading.gif" alt="image.png"> </p><p>【无继承情况下的对象初始化顺序】<img src="https://i.loli.net/2019/11/16/AO3z8orS9aXvWCd.png" srcset="/blog/img/loading.gif" alt="image.png"></p><hr><ol start="7"><li>【创建对象】</li></ol><p>对象是根据类创建的。在Java中，使用<strong>关键字new</strong></p><ul><li><strong>声明</strong>：声明一个对象，包括对象名称和对象类型。</li><li><strong>实例化</strong>：使用关键字new来创建一个对象。</li><li><strong>初始化</strong>：使用new创建对象时，会调用构造方法初始化对象。</li></ul><p>下面是一个创建对象的例子：</p><div class="hljs"><pre><code class="hljs Java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Puppy</span></span>{       <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Puppy</span><span class="hljs-params">(String name)</span></span>{              <span class="hljs-comment">//这个构造器仅有一个参数：name      </span>        System.out.println(<span class="hljs-string">"小狗的名字是 : "</span> + name );        }       <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span></span>{              <span class="hljs-comment">// 下面的语句将创建一个Puppy对象      </span>        Puppy myPuppy = <span class="hljs-keyword">new</span> Puppy( <span class="hljs-string">"tommy"</span> );       } }</code></pre></div><p>编译并运行上面的程序，会打印出下面的结果：</p><div class="hljs"><pre><code class="hljs Java">小狗的名字是 : tommy</code></pre></div><p>——————————————————————————— 我 是 分 割 线 ————————————————————————————</p><p>【访问实例变量和方法】</p><p>通过已创建的对象来访问成员变量和成员方法，如下所示：</p><div class="hljs"><pre><code class="hljs Java"><span class="hljs-comment">/* 实例化对象 */</span> Object referenceVariable = <span class="hljs-keyword">new</span> Constructor(); <span class="hljs-comment">/* 访问类中的变量 */</span> referenceVariable.variableName; <span class="hljs-comment">/* 访问类中的方法 */</span> referenceVariable.methodName();</code></pre></div><p>——————————————————————————— 我 是 分 割 线 ————————————————————————————</p><p>【访问实例变量】和【调用成员方法】：</p><div class="hljs"><pre><code class="hljs Java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Puppy</span></span>{       <span class="hljs-keyword">int</span> puppyAge;       <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Puppy</span><span class="hljs-params">(String name)</span></span>{              <span class="hljs-comment">// 这个构造器仅有一个参数：name      </span>        System.out.println(<span class="hljs-string">"小狗的名字是 : "</span> + name );        }        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setAge</span><span class="hljs-params">( <span class="hljs-keyword">int</span> age )</span></span>{               puppyAge = age;       }        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getAge</span><span class="hljs-params">( )</span></span>{               System.out.println(<span class="hljs-string">"小狗的年龄为 : "</span> + puppyAge );        <span class="hljs-keyword">return</span> puppyAge;       }       <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span></span>{             <span class="hljs-comment">/* 创建对象 */</span>              Puppy myPuppy = <span class="hljs-keyword">new</span> Puppy( <span class="hljs-string">"tommy"</span> );              <span class="hljs-comment">/* 通过方法来设定age */</span>            myPuppy.setAge( <span class="hljs-number">2</span> );              <span class="hljs-comment">/* 调用另一个方法获取age */</span>            myPuppy.getAge( );             <span class="hljs-comment">/*你也可以像下面这样访问成员变量 */</span>           System.out.println(<span class="hljs-string">"变量值 : "</span> + myPuppy.puppyAge );       } }</code></pre></div><p>编译并运行上面的程序，产生如下结果：</p><div class="hljs"><pre><code class="hljs java">小狗的名字是 : tommy小狗的年龄为 : <span class="hljs-number">2</span>变量值 : <span class="hljs-number">2</span></code></pre></div><hr><ol start="8"><li><p>【方法重载，重构，覆盖，重写的区别】</p><p><strong>方法重载</strong>还是比较好理解的，就是<strong>在类的内部</strong>，定义多个方法，这些方法的方法名字相同，参数类型、参数顺序、参数个数不同，注意，返回值类型并不能区分重载 。</p></li></ol><div class="hljs"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">show</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a,<span class="hljs-keyword">double</span> b)</span></span>{}<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">show</span><span class="hljs-params">(<span class="hljs-keyword">double</span> c)</span></span>{} <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">show</span><span class="hljs-params">(<span class="hljs-keyword">double</span> d)</span></span>{    <span class="hljs-keyword">return</span>  <span class="hljs-number">1</span>;}   <span class="hljs-comment">//报错，方法已经定义了</span></code></pre></div><p> <strong>方法重写（<code>override</code>)</strong><br>方法重写和方法覆盖都是一个道理，发生在子类继承父类或者实现接口的类，要求的是：</p><blockquote><p>1.方法名字相同，<br>2.参数个数不同，<br>3.返回值类型不同 ，</p></blockquote><p>代码： </p><img src="https://i.loli.net/2019/11/14/hMWBc8wnbZr7PtG.png" srcset="/blog/img/loading.gif" alt="image.png"><img src="https://i.loli.net/2019/11/14/5bCilLKw1uFWEGy.png" srcset="/blog/img/loading.gif" alt="image.png"><p> <strong>方法重构</strong></p><blockquote><p>定义：在不改变外界外界访问的情况下对代码进行修改，但是不改变原方法的效果，提高其性能，使程序更加易读，可维护。<br>重构是在不改变软件可观察行为的前提下改善其内部结构<br>重构通常不是一次性的，它贯穿软件的整个生命周期，只要觉得不合理都是重构的时机。 </p></blockquote><hr><ol start="9"><li></li></ol><p><strong>题目：</strong>下面说法中，错误的有（  ）</p><p>​            A. Java面向对象语言容许单独的过程与函数存在；</p><p>​            B. Java面向对象语言容许单独的方法存在；</p><p>​            C. Java语言中的方法属于类中的成员（member）；</p><p>​            D. Java语言中的方法必定隶属于某一类（对象），调用方法与过程或函数相同。</p><p> 答案：ABC</p><p> 解释：</p><blockquote><p>方法与函数：这两个概念不严格区分，就是一个东西，通过对象调用的，就是方法，直接调用，就是函数；</p><p>在java中，everything is object 所以，方法，函数，必须隶属于某一个类或对象， java中没有过程。（类中的代码块不知道算不算，就算代码块是过程，也是必须在类中才有的）</p><p>对于C选项，方法分为静态方法和非静态方法，静态方法属于类成员，非静态方法属于实例成员。</p></blockquote><hr><ol start="10"><li></li></ol><ul><li><p>类其实一种类型，它封装了数据和操作。</p></li><li><p>对象是类的实例</p></li><li><p>一个对象比属于某个类</p></li><li><p>一个类可以声明多个对象</p></li></ul><hr><ol start="11"><li>问：构造方法可以调用本类的其他方法吗？</li></ol><blockquote><p>1,构造方法可以调用本类的其他方法。既然可以调用本类的属性,那么也就可以调用属于本类的其他方法。</p></blockquote><blockquote><p>2,需要注意的是,如果要在构造方法里调用一个非静态方法时,应该将该方法声明为private。<br>因为如果这个类被其他类继承成为父类时,这个方法不是private的又被子类所重载，这样在实际创建子类的过程中递归调用到了父类的构造器时，父类构造器对这个方法的调用就会由于多态而实际上调用了子类的方法，当这个子类方法需要用到子类中实例变量<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>的时候，就会由于变量没有初始化而出现异常（子类中的实例变量没有初始化这种情况还是会遇见的），这是Java不想看到的情况。 </p></blockquote><hr><ol start="12"><li>一个类的构造方法有多个，在其他类中是否可以被调用？</li></ol><blockquote><p> 只要不是私有的构造函数，在其他类中就可以调用。 传对应的参数就行了 。</p><div class="hljs"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span>` `<span class="hljs-title">A</span></span>{  ``<span class="hljs-keyword">public</span>` `A(String s){}  ``<span class="hljs-keyword">public</span>` `A(``<span class="hljs-keyword">int</span>` `n){}  ``<span class="hljs-keyword">public</span>` `A(String s, ``<span class="hljs-keyword">int</span>` `n){}}<span class="hljs-class"><span class="hljs-keyword">class</span>` `<span class="hljs-title">B</span></span>{  ``A a1 = ``<span class="hljs-keyword">new</span>` `A(``<span class="hljs-string">"abc"</span>``);  ``A a2 = ``<span class="hljs-keyword">new</span>` `A(``<span class="hljs-number">1</span>``);  ``A a3 = ``<span class="hljs-keyword">new</span>` `A(``<span class="hljs-string">"aaa"</span>``,``<span class="hljs-number">2</span>``);}</code></pre></div></blockquote><hr><ol start="13"><li>类是一种<strong>引用类型</strong>。</li></ol><p>Java的引用类型只有三种，分别是</p><ul><li><p><strong>类(class)</strong></p></li><li><p><strong>接口(interface)</strong></p></li><li><p><strong>数组</strong></p><p>  <a href="https://blog.csdn.net/aEzreal/article/details/80822062" target="_blank" rel="noopener">参考资料</a></p></li></ul><hr><ol start="14"><li>问：方法一定是在类内部被定义的？</li></ol><blockquote><p> 所有方法必须写在类体里，也包括构造方法<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>的。</p><p> static方法同样属于类，叫类方法或静态方法，它与类一同被加载时，处于内存的公共代码区中，无需创建实例来调用，只需用类名引用即可。<br> static方法既可以通过类名来调用，也可以通过类的实例调用。</p><p> Java一切都是以类的形式存在，方法是类的一部分，需要通过类才能进行方法的调用。<br> 从内存存储角度来说，java中找对应方法时，都是先找对应类实例，类实例是根据类来初始化内存的。如果方法在类外部，则无法找到该方法。<br> 所以方法必须在类体里。 </p><p> 注意： 可以在其他类里使用这个类的方法（在不同的包下就要引ltem这个类），继承就是一个类从另一个类继承通过关键字extends 来实现 </p></blockquote><hr><ol start="15"><li>问：构造方法中可不可以有return语句呢?</li></ol><blockquote><p> （这个解释有问题？）可以。而是我们写成这个样子就OK了：<code>return;</code><br> 其实，在任何的<strong>void类型的方法</strong>的最后你都可以写上：<code>return;</code></p></blockquote><hr><ol start="16"><li>问：非构造方法的一般成员方法必须有return语句？</li></ol><blockquote><p>错。 （待补充……）</p></blockquote><hr><ol start="17"><li>问：类中的数据成员可以按需选择任意类型，包括类本身？</li></ol><blockquote><p>可以。可以参考下图，图源于<a href="https://blog.csdn.net/weixin_38088772/article/details/91041309" target="_blank" rel="noopener">陈三千的博客</a></p></blockquote><img src="https://img-blog.csdnimg.cn/20190606111353386.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODA4ODc3Mg==,size_16,color_FFFFFF,t_70" srcset="/blog/img/loading.gif" alt="举例.png"><hr><ol start="18"><li>问：Java中构造函数的权限可以是private吗？</li></ol><blockquote><p> 可以，这个类就不能再外部被new了，如果需要这个类的实例化对象，就只能在类内部提供静态方法生产这个类的对象了。 </p></blockquote><hr><ol start="19"><li>问：构造方法能不能被重载，构造方法能不能被重写？</li></ol><blockquote><p>在回答这两个问题之前，首先先回顾：<strong>什么是构造方法？构造方法的特点是什么？</strong></p><blockquote><p>概述：构造方法存在于类中，给对象数据（属性）初始化；</p><p>特点：方法名与类名一样；无返回值无void;</p><p>默认构造方法：我们不创建一个构造方法时，系统默认提供一个无参构造；当我们创建一个构造方法时，系统不再提供无参构造，所以在实际项目中，全部手动给出无参构造</p></blockquote><p>其次<strong><em>\</em>什么是重载？什么是重写？**</strong> </p><blockquote><p>重载：存在于在一个类中，方法名相同，方法参数的类型或个数不同</p><p>重写：存在于子父类中，方法名、方法参数、返回值全部相同</p></blockquote><p>所以：<strong>构造方法可以重载，不能重写</strong></p><p>在一个类中，可以有多个构造方法（方法参数不同） ，即重载，来实现对象属性不同的初始化；</p><p>但是子类中不能定义一个方法无void无返回值的方法，编译错误，即子类无法继承构造方法，但是子类的构造器中可以调用父类的构造方法（默认自动调用无参构造）</p></blockquote><p>注意：回答来源于 <a href="https://blog.csdn.net/cherry_11qianqian/article/details/82785893" target="_blank" rel="noopener">CSDN博客</a></p><hr><ol start="20"><li>Java中可以定义一个<strong>空类</strong>（即没有数据成员和成员方法） 。</li></ol><hr><ol start="21"><li>问： 下面这个类有几个构造方法？ </li></ol><div class="hljs"><pre><code class="hljs angelscript"><span class="hljs-keyword">class</span><span class="hljs-symbol">A</span>{}</code></pre></div><blockquote><p>1个。（待补充……）</p></blockquote><hr><ol start="22"><li><p>问：Java 类可以作为（ C ）</p><p>A．类型定义机制                                 B．数据封装机制</p><p>C．类型定义机制和数据封装机制      D．上述都不对</p></li></ol><hr><ol start="23"><li>用于定义类头的修饰符可以是public、abstract、final或者是默认(friendly) </li></ol><hr><ol start="24"><li>题目：下列说法错误的有（ CD ）<br>　　A． 在类方法中可用this来调用本类的类方法<div class="hljs"><pre><code>B． 在类方法中调用本类的类方法时可直接调用</code></pre></div>　　C． 在类方法中只能调用本类中的类方法<br>　　D． 在类方法中绝对不能调用实例方法 </li></ol><blockquote><p> C：类方法可以调用外部其他类的方法。<br>D：只要实力化对象，也是可以调用实例方法的。</p></blockquote><hr><ol start="25"><li>判断： 只有基本类型的参数传递使用值传递。 </li></ol><blockquote><p>错误。</p><p>引用类型参数的传递，依然是值传递。但因为是地址值，所以会指向同一个对象实例。</p></blockquote><hr><ol start="26"><li>Java中方法的参数传递是<strong>值传递（pass by value）</strong>，并且为<strong>单向传递</strong>。</li></ol><hr><ol start="27"><li>《Java 变量参数传入方法，修改后是否影响外面的值》。参考   <a href="https://blog.csdn.net/fenglllle/article/details/81389286" target="_blank" rel="noopener">博客</a></li></ol><hr><ol start="28"><li>《某个变量当作函数的参数传递后，函数内部修改了。到底这个变量是否受影响》。参考 <a href="https://blog.csdn.net/wem603947175/article/details/81206177" target="_blank" rel="noopener">博客</a></li></ol><hr><ol start="29"><li><p>问：类设计get方法和set方法的作用是什么？</p><blockquote><p>答1：一般类的成员变量被设置为private（私有的），这样设置安全性比较高，但是设置为私有的后其他的类和对象则无法调用该对象了，所以会有get和set方法，这两个方法一般设置为public，在其他的类中通过对象调用set或get方法即可操作私有的变量，增强程序的安全性，set为给对象赋值的方法，而get则是取得变量值的方法！</p></blockquote><blockquote><p>答2：get set常用在自定义类，类创建了一个实例对象后，用set设置对象的某一个属性，get得到对象某一属性。如果不使用get set，你就得用点，点出来还得是个方法。其实就是给get set换个名而已。而且get set作为内部方法，可以访问私有数据</p></blockquote><blockquote><p>答3：别说的那么专业化了，理解都要半天。<br>就这么理解吧，面向对象中，想对类的成员变量设置访问一些权限，于是，就将该字段设置为private的，这样别的类就不能访问了，然后在该内定义两个方法，一个专门用于获取，一个用于修改，这样，在你不想让别人乱动该字段的时候，就在该方法内写一些限制条件。<br>而为了规范起见（团队开发需要嘛），就根据人家老外的习惯，将方法名设置为set+字段名，get+字段名（名字乱改没问题），既然规范了，那就是别人都叫这名了，于是，有些框架给对象赋值就有方法了，方法名称由get或set开始的又有private变量名的，就找出来调用。hibernate1框架就这样弄得，至于后面的版本是不是这样就不大清楚了。<br>JavaBean就是一个JAVA类，既然是JAVA类就不需要什么组件了，这玩意直接深入到虚拟机了的</p></blockquote><p><img src="https://i.loli.net/2019/11/16/4pmW9kbx6tvFeGU.png" srcset="/blog/img/loading.gif" alt="image.png"></p><p><img src="https://i.loli.net/2019/11/16/maOenK4ryJWhFGI.png" srcset="/blog/img/loading.gif" alt="image.png"></p><p><img src="https://i.loli.net/2019/11/16/QKyFju219pVgP6l.png" srcset="/blog/img/loading.gif" alt="image.png"></p><p><img src="https://i.loli.net/2019/11/16/3Sa6uLv4QGhB2n8.png" srcset="/blog/img/loading.gif" alt="image.png"></p><p><img src="https://i.loli.net/2019/11/16/yReDOpbWKHPd8Lg.png" srcset="/blog/img/loading.gif" alt="image.png"></p></li></ol><hr><ol start="30"><li><p>Java的包装类：</p><p>【包装类的概念】</p><p><img src="https://i.loli.net/2019/11/16/xceTj6DX23hzkwi.png" srcset="/blog/img/loading.gif" alt="image.png"></p><p>【Integer类的用法】</p><p><img src="https://i.loli.net/2019/11/16/VN1psGdfXIbwjMH.png" srcset="/blog/img/loading.gif" alt="image.png"></p><p><img src="https://i.loli.net/2019/11/16/hwZ1jA6agmVn374.png" srcset="/blog/img/loading.gif" alt="image.png"></p><p>【自动装箱机制和自动拆箱机制】</p><p><img src="https://i.loli.net/2019/11/16/qI9VgpAnHw3jvao.png" srcset="/blog/img/loading.gif" alt="image.png"></p><p><img src="https://i.loli.net/2019/11/16/YKXwTL9SGduN2cI.png" srcset="/blog/img/loading.gif" alt="image.png"></p></li></ol><hr><ol start="31"><li>匿名对象：</li></ol><p>使用方法：</p><ol><li>当对对象的方法只调用一次，可以使用匿名对象来完成，这样写比较简化。如果对一个对象进行多个成员调用，必须给这个对象起个名字。</li><li>可以将匿名对象作为实际参数进行传递。</li><li></li></ol><hr><ol start="32"><li></li></ol><hr><ol start="33"><li></li></ol><hr><hr><hr><hr><hr><hr><hr><hr><hr><h3 id="注脚："><a href="#注脚：" class="headerlink" title="注脚："></a>注脚：</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;"><a href="https://www.jianshu.com/p/08562e95ed49" target="_blank" rel="noopener">实例变量（全局变量）</a>、<a href="https://www.cnblogs.com/huangzs/p/9961703.html" target="_blank" rel="noopener">成员变量、实例变量、属性</a></span><a href="#fnref:1" rev="footnote"> ↩</a></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">2.</span><span style="display: inline-block; vertical-align: top;"><a href="https://www.jianshu.com/p/773a8e5e199c" target="_blank" rel="noopener">java的构造方法</a>、<a href="https://blog.csdn.net/qq_40393000/article/details/82866470" target="_blank" rel="noopener">java的构造方法</a>、<a href="https://blog.csdn.net/weixin_30455365/article/details/95613213" target="_blank" rel="noopener">Java入门：构造方法</a></span><a href="#fnref:2" rev="footnote"> ↩</a></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">3.</span><span style="display: inline-block; vertical-align: top;">来创建一个新的对象。创建对象需要以下三步：</span><a href="#fnref:3" rev="footnote"> ↩</a></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">3.</span><span style="display: inline-block; vertical-align: top;"><a href="https://blog.csdn.net/weixin_42227243/article/details/82805945" target="_blank" rel="noopener">java之new的用处</a></span><a href="#fnref:3" rev="footnote"> ↩</a></li><li id="fn:4"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">4.</span><span style="display: inline-block; vertical-align: top;"><a href="https://www.cnblogs.com/wuxinyiwu/p/8588420.html" target="_blank" rel="noopener">JAVA中基本数据类型和引用数据类型区别</a></span><a href="#fnref:4" rev="footnote"> ↩</a></li></ol></div></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java笔记—面向对象</title>
    <link href="/blog/2019/11/13/Java%E7%AC%94%E8%AE%B0%E2%80%94%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    <url>/blog/2019/11/13/Java%E7%AC%94%E8%AE%B0%E2%80%94%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</url>
    
    <content type="html"><![CDATA[<h3 id="Java笔记——面向对象"><a href="#Java笔记——面向对象" class="headerlink" title="Java笔记——面向对象"></a>Java笔记——面向对象</h3><p>创建时间：2019.11.11</p><p>说明：持续更新ing</p><hr><ol><li><p><strong>Java作为一种面向对象语言</strong>。支持以下基本概念：<br> <strong><code>多态</code></strong> | <strong><code>继承</code></strong> | <strong><code>封装</code></strong> | <strong><code>抽象</code></strong><br>  <strong><code>类</code></strong>  | <strong><code>对象</code></strong> | <strong><code>实例</code></strong> | <strong><code>方法</code></strong> | <strong><code>重载</code></strong></p></li><li><p>“面向对象”和“面向过程”的区别：</p></li></ol><ul><li><code>面向过程</code>：如 C/C++</li></ul><blockquote><p>例子：冰箱装大象。1、打开冰箱门；2、放进大象；3、关上冰箱门。<br>强调过程，“打开”、“存储”、“关闭”三个动作。<br><strong>注重过程，注重的是过程涉及的行为（即功能）。</strong></p></blockquote><ul><li><code>面向对象</code>：如 Java</li></ul><blockquote><p><strong>将功能封装进对象，强调具备了功能的对象。</strong></p></blockquote><p><img src="https://i.loli.net/2019/11/11/7WFrJqdjnfpTa4c.png" srcset="/blog/img/loading.gif" alt="image.png"></p><ul><li><blockquote><p><strong><em><code>面向对象</code>是基于<code>面向过程</code>的。</em></strong></p></blockquote></li></ul><a id="more"></a> <ol start="3"><li>使用不同思想，对“冰箱装大象”的理解——&gt;</li></ol><p>问：“人开冰箱”事件，其中人、冰箱都是实物（对象），开是动作。若使用面向对象思维，“开”的这个动作是属于“人”还是属于“冰箱”？</p><blockquote><p>答：属于“冰箱”，“人”只是调用了“冰箱”的“开”的方法（或功能），用力作用了门一下并将门打开了。</p></blockquote><div class="hljs"><pre><code class="hljs abnf">人开门：名词提炼法。/*人{    开门（门）{        门.开（）<span class="hljs-comment">;</span>    }}门{    开（）{        操作门轴<span class="hljs-comment">;</span>        ……等等<span class="hljs-comment">;</span>    }}*/</code></pre></div><ol start="4"><li>面向对象的三个特征：<strong>封装</strong>、<strong>继承</strong>、<strong>多态</strong>。<br> 以后开发：<code>其实就是找对象使用，没有对象就创建一个对象</code>。<br> <strong><em>找对象，建立对象，使用对象，维护对象的关系。</em></strong></li><li></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java笔记—语法</title>
    <link href="/blog/2019/11/13/Java%E7%AC%94%E8%AE%B0%E2%80%94%E8%AF%AD%E6%B3%95/"/>
    <url>/blog/2019/11/13/Java%E7%AC%94%E8%AE%B0%E2%80%94%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h3 id="Java笔记——语法"><a href="#Java笔记——语法" class="headerlink" title="Java笔记——语法"></a>Java笔记——语法</h3><p>创建时间：2019.11.11<br>说明：持续更新ing</p><hr><ol><li>单引号’’中存放一个字符，不能存放字符串。双引号””中存放字符串。</li><li><strong>Java是强类型语言。对于每一种数据都定义了明确的具体数据类型，在内存中总分配了不同的内存空间。</strong></li><li>布尔型常量只有2个值：true、false</li><li>标识符由字母：26个，大小写；数字：0-  8；符号：$ _  组成。</li><li>标识符不能数字开头、不能使用关键字</li><li>main不是关键字，但是是被JVM识别的名字，是程序的入口</li><li>Java中的名称规范：</li></ol><ul><li><p>包名：多单词组成，全为小写</p><blockquote><p>xxxyyyy</p></blockquote></li><li><p>类名接口： 多单词组成，所有单词的首字母大写</p><blockquote><p>XxxYyyZzz</p></blockquote></li><li><p>变量名和函数名：多单词组成时，第一个单词的首字母小写，其余首字母大写</p><blockquote><p>xxxYyyZzz</p></blockquote></li><li><p>常量名：所有字母都大写。每个单词用_隔开</p><blockquote><p>XXX_YYY_ZZZ</p></blockquote></li></ul><a id="more"></a>  //截断文章<ol start="8"><li>注释，写在代码前面</li><li>对于整数：Java有三种表现形式。<br>· 十进制：0-9，满10进1<br>· 八进制：0-7，满8进1，<strong>用0开头表示</strong><br>· 十六进制：0-9，A-F或a-f（A\a是10，B\b是11…F\f是15），满16进1，<strong>用0x开头表示</strong></li><li>null常量：只有一个值null。在对象、引用数据类型时会用上。</li><li>二进制。一个字节8位0、1组合。</li><li>八进制：3位二进制位代表1位八进制位；十六进制：4位二进制位代表1位十六进制位。<br><strong>进制转换：进制越大，表示越短，更方便地表示数据。</strong></li><li>二进制计算：<br><code>5 + 4 = 9</code><br><img src="https://i.loli.net/2019/11/11/hP5DS9bqTnHLZkw.png" srcset="/blog/img/loading.gif" alt="十进制转二进制.png"><br><img src="https://i.loli.net/2019/11/11/arJOKCdRLm6wfXZ.png" srcset="/blog/img/loading.gif" alt="进制之间转换.png"></li><li>负数地二进制表现形式：<strong>对应的整数二进制取反加1</strong>。<br><code>负数的最高位都是1</code><br><img src="https://i.loli.net/2019/11/11/53E4DtdvXCkjQLz.png" srcset="/blog/img/loading.gif" alt="负数的二进制.png"></li><li></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>博客v1.4上线</title>
    <link href="/blog/2019/11/08/%E5%8D%9A%E5%AE%A2v1.4/"/>
    <url>/blog/2019/11/08/%E5%8D%9A%E5%AE%A2v1.4/</url>
    
    <content type="html"><![CDATA[<p>搞了半天时间，优化一些模板上的问题后，新博客1.4版本上线了</p><a id="more"></a>  //截断文章<h3 id="新增"><a href="#新增" class="headerlink" title="新增"></a>新增</h3><ul><li><ol><li>主页动画，点击体验效果（<a href="https://melodyhub.ltd/" target="_blank" rel="noopener">这里</a>）</li></ol></li><li><ol start="2"><li>文字跳动（menu、head中的文字均可跳动）,比如顶部的“你用走，可是我用跑”……</li></ol></li><li><ol start="3"><li>新增<a href="https://valine.js.org/" target="_blank" rel="noopener">Valine评论</a>（可以使用表情；发送前浏览）。想用别的，但是暂时先着Valine。可以试着来骚扰我（滑稽~~</li></ol></li><li><ol start="4"><li>有评论，邮件提示(还未测试)。接入Leancloud（<a href="https://leancloud.cn/docs/" target="_blank" rel="noopener">文档</a>）。</li></ol></li><li><ol start="5"><li>底部开启鼠标滑动渲染</li></ol></li><li><ol start="6"><li>开启“一言”api。menu中作者名（Melody Jerry）下面随机显示一句话。同时，使用文字扭曲动画。</li></ol></li></ul><hr><h3 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h3><ul><li>1.重写三个按钮（menu、搜索、回到顶部）的代码，现在可以正常使用了。</li><li><ol start="2"><li>更新menu的Github的url</li></ol></li><li><ol start="3"><li>修复移动端提示证书错误的问题（移动端重定向太多次了，难怪hhh）</li></ol></li><li><ol start="4"><li>主页和首页分仓（也不算是修复，不知道写哪而已）</li></ol></li></ul><hr><h3 id="已知问题（加粗的为重要问题）"><a href="#已知问题（加粗的为重要问题）" class="headerlink" title="已知问题（加粗的为重要问题）"></a>已知问题（加粗的为重要问题）</h3><ul><li><ol><li><strong>menu中的“分类”、“标签”、“关于”，仍然无法正常使用（原因未知）</strong></li></ol></li><li><ol start="2"><li>menu的Email仍旧无法mailto</li></ol></li><li><ol start="3"><li><strong>文章增加标签或类名，无法被tags或categories绑定</strong></li></ol></li><li><ol start="4"><li>浏览人数、浏览次数，无法使用（接口有问题？）</li></ol></li><li><ol start="5"><li><strong>文字截断，异常。（原因位置）</strong></li></ol></li><li><ol start="6"><li>等待发现</li></ol></li></ul><hr><h3 id="未来加入"><a href="#未来加入" class="headerlink" title="未来加入"></a>未来加入</h3><ul><li><ol><li>音乐控件（自动？手动？浮窗？嵌入？音源线上还是本地？）</li></ol></li><li><ol start="2"><li>实时颜色</li></ol></li><li><ol start="3"><li>加载网页时、侧栏、搜索、进度条等动画</li></ol></li><li><ol start="4"><li>留言板？</li></ol></li><li><ol start="5"><li>友情链接？快速导航？</li></ol></li><li><ol start="6"><li>嵌入播放（这个很想要，链接一些学习视频）</li></ol></li><li><ol start="7"><li>天气控件</li></ol></li><li><ol start="8"><li>等待脑洞大开</li></ol></li></ul><hr><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>从早上9点搞到下午4点，午饭还没吃hh，就一直坐在电脑前。<br><del>找模板中的问题代码、修改代码，还是很麻烦的。</del><br>最后分享一首今天网易日推的英文歌（版权原因，没法生成外联播放器）<br><a href="https://music.163.com/#/song?id=555931250" target="_blank" rel="noopener">I’ll Be There-Jess Glynne</a><br>对于我的博客有问题或建议，欢迎在评论或邮件中告诉我。<br>谢谢每一位读者。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>多图片滚动测试</title>
    <link href="/blog/2019/11/08/%E5%A4%9A%E5%9B%BE%E7%89%87%E6%BB%9A%E5%8A%A8%E6%B5%8B%E8%AF%95/"/>
    <url>/blog/2019/11/08/%E5%A4%9A%E5%9B%BE%E7%89%87%E6%BB%9A%E5%8A%A8%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<a id="more"></a><!--【两端之间来回滚动behavior="alternate"】【onMouseOut="this.start()" ：用来设置鼠标移出该区域时继续滚动onMouseOver="this.stop()"：用来设置鼠标移入该区域时停止滚动】【scrollamount="10"】--><!--图片等比例放缩【style等号"transform:scale(0.1)"】 --><marquee scrolldelay="10" scrollamount="30" loop="2" direction="left" onmouseout="this.start()" onmouseover="this.stop()"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/23/QzMuCJyZ8ibGc6h.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"><img height="30%" width="30%" src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"></marquee><hr>    <title>无缝滚动</title><meta name="generator" content="Hexo 4.2.1"><link rel="alternate" href="/blog/atom.xml" title="MelodyHub" type="application/atom+xml"><style type="text/css">*{margin: 0;padding: 0;}    #div1{position: relative;border:1px solid #0ff;width:800px; height: 180px;margin:50px auto 0;overflow: hidden;} /* 修改容器规模 */    #div1 ul{position: absolute;left: 0;}    #div1 ul li{list-style: none;width:200px;float: left;padding: 10px;height: 160px;}    #div1 ul li img{width:100%;}</style><script type="text/javascript">    window.onload=function(){        var oDiv=document.getElementById('div1');        var oUl=oDiv.getElementsByTagName('ul')[0];        var aLi=oUl.getElementsByTagName('li');        var aA=document.getElementsByTagName('a');//获取向右向左的箭头        var timer=null;        var iSpeed=10;        oUl.innerHTML+=oUl.innerHTML;//定义图片可以循环播放        oUl.style.width=aLi.length*aLi[0].offsetWidth+'px';//定义外层ul的宽度，根据图片的个数和每个图片的宽度计算，保证总宽度是可调整的        function fnMove(){            if(oUl.offsetLeft<-oUl.offsetWidth/2){                oUl.style.left=0;            }else if(oUl.offsetLeft>0){                oUl.style.left=-oUl.offsetWidth/2+'px';            }//定义到边界的时候，实现无缝衔接            oUl.style.left=oUl.offsetLeft+iSpeed+'px';//定义图片的右边距随着速度不断不断增加，或减小，实现运动的效果        }        timer=setInterval(fnMove,30);        aA[0].onclick=function(){            iSpeed=-10;//按下左箭头，定义向左运动        }        aA[1].onclick=function(){            iSpeed=10;//按下右箭头，定义向右运动        }        oDiv.onmouseover=function(){            clearInterval(timer);//鼠标移动到图片上，清除定时器，停止运动        }        oDiv.onmouseout=function(){            timer=setInterval(fnMove,30);//鼠标移出，重新开启定时器，重新运动        }    };</script><a href="javascript:;">←</a><a href="javascript:;">→</a><p>！！！方向选择按钮异常！！！</p><div id="div1"><ul><li><img src="https://i.loli.net/2019/12/01/X7MwlFICKtEf6D3.png" srcset="/blog/img/loading.gif"></li><li><img src="https://i.loli.net/2019/11/23/QzMuCJyZ8ibGc6h.png" srcset="/blog/img/loading.gif"></li><li><img src="https://i.loli.net/2019/11/28/IptHrPkBOhQLVbd.jpg" srcset="/blog/img/loading.gif"></li><div style="clear: none;"></div></ul></div><script src="/blog/live2dw/lib/L2Dwidget.min.js?094cbace49a39548bed64abff5988b05"></script><script>L2Dwidget.init({"model":{"jsonPath":"/blog/live2dw/assets/assets/haruto.model.json"},"display":{"position":"left","width":150,"height":300},"tagMode":false,"debug":false,"mobile":{"show":true},"log":false,"pluginJsPath":"lib/","pluginModelPath":"assets/","pluginRootPath":"live2dw/"});</script><hr><!--参考资料：https://www.w3school.com.cn/tags/tag_img.asp】【http://www.fly63.com/article/detial/5296】【https://www.jianshu.com/p/6dcec8a9ea60】【https://www.cnblogs.com/694579350liuq/p/7052824.html--> <script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>网页视频测试</title>
    <link href="/blog/2019/11/08/%E7%BD%91%E9%A1%B5%E8%A7%86%E9%A2%91%E6%B5%8B%E8%AF%95/"/>
    <url>/blog/2019/11/08/%E7%BD%91%E9%A1%B5%E8%A7%86%E9%A2%91%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<p>浏览测试效果👇</p><a id="more"></a><p>video大窗口</p><!--全属性--><p><video src="//f.video.weibocdn.com/000cbp8Elx07yOInQ0wU01041209MBbv0E040.mp4?label=mp4_720p&amp;template=1280x720.25.0&amp;trans_finger=1f0da16358befad33323e3a1b7f95fc9&amp;Expires=1574694219&amp;ssig=teAXjHmR3d&amp;KID=unistore,video" type="video/mp4" poster="http://wx3.sinaimg.cn/orj480/8e2d6e12gy1g989bsg7uaj20u00gw4c7.jpg" controls="controls" loop="-1"><!--需要自动播放，加上controls="controls"即可--><br></video></p><p>video小窗口</p><!--优雅降级--><video width="320" height="240" controls="">    <!--兼容IE9+、Chrome和Safari-->    <source src="//f.video.weibocdn.com/000cbp8Elx07yOInQ0wU01041209MBbv0E040.mp4?label=mp4_720p&amp;template=1280x720.25.0&amp;trans_finger=1f0da16358befad33323e3a1b7f95fc9&amp;Expires=1574694219&amp;ssig=teAXjHmR3d&amp;KID=unistore,video" type="video/mp4">    <!--兼容Firefox、Opera和Chrome-->    <source src="movie.ogg" type="video/ogg">    <!--兼容Firefox、Opera和Chrome-->    <source src="movie.webm" type="video/webm">    <object data="movie.mp4" width="320" height="240">        <embed src="movie.swf" width="320" height="240">    </object> </video><p>embed窗口<br><embed src="//f.video.weibocdn.com/000cbp8Elx07yOInQ0wU01041209MBbv0E040.mp4?label=mp4_720p&amp;template=1280x720.25.0&amp;trans_finger=1f0da16358befad33323e3a1b7f95fc9&amp;Expires=1574694219&amp;ssig=teAXjHmR3d&amp;KID=unistore,video" type="video/mp4"> <br>iframe窗口</p><iframe frameborder="0" src="//f.video.weibocdn.com/000cbp8Elx07yOInQ0wU01041209MBbv0E040.mp4?label=mp4_720p&amp;template=1280x720.25.0&amp;trans_finger=1f0da16358befad33323e3a1b7f95fc9&amp;Expires=1574694219&amp;ssig=teAXjHmR3d&amp;KID=unistore,video" allowfullscreen=""></iframe><iframe src="//player.bilibili.com/player.html?aid=76560081&amp;cid=130958803&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><br>测试完毕<script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用Hexo+GitHub建站</title>
    <link href="/blog/2019/11/07/Hexo+GitHub/"/>
    <url>/blog/2019/11/07/Hexo+GitHub/</url>
    
    <content type="html"><![CDATA[<p>前言： 使用CSDN平台撰写博客似乎是一件美事，只不过个人觉得太过于依赖他人平台，不如就自己搭建一个属于自己的博客。</p><a id="more"></a> <hr><h1 id="安装篇"><a href="#安装篇" class="headerlink" title="安装篇"></a>安装篇</h1><hr><h2 id="一、安装-【hexo】-前的准备"><a href="#一、安装-【hexo】-前的准备" class="headerlink" title="一、安装 【hexo】 前的准备"></a>一、安装 【hexo】 前的准备</h2><h3 id="安装hexo前的必要工作"><a href="#安装hexo前的必要工作" class="headerlink" title="安装hexo前的必要工作"></a>安装hexo前的必要工作</h3><h4 id="1-安装以下两个程序："><a href="#1-安装以下两个程序：" class="headerlink" title="1).安装以下两个程序："></a>1).安装以下两个程序：</h4><table><thead><tr><th>程序</th><th>下载地址</th><th>说明</th></tr></thead><tbody><tr><td>Git</td><td><a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git - Downloads</a></td><td>网速的同学，可以自行百度移步到国内镜像</td></tr><tr><td>Node.js</td><td><a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js - Downloads</a></td><td>有LTS和Current两个版本，安装 LTS 版即可</td></tr></tbody></table><p>注意：关于Git和Node.js的安装可能会有问题，尤其是Git的安装。这里贴上几张安装界面的截图（来源见水印，作者GroovRain）。<br><img src="https://i.loli.net/2019/11/07/bUgMBmks7VwjPIe.png" srcset="/blog/img/loading.gif" alt="image.png"><br><img src="https://i.loli.net/2019/11/07/9OkM4l2Szbe5RQs.png" srcset="/blog/img/loading.gif" alt="f3e0287f.png"><br><img src="https://i.loli.net/2019/11/07/PKTDE54qpkQ1S8J.png" srcset="/blog/img/loading.gif" alt="774cdfb9.png"><br><img src="https://i.loli.net/2019/11/07/8RYLQNsVoCZpxqB.png" srcset="/blog/img/loading.gif" alt="2e023781.png"><br>安装完成后，在开始菜单里找到“Git”-&gt;“Git Bash”，蹦出一个类似命令行窗口的东西，就说明Git安装成功！<br><img src="https://i.loli.net/2019/11/07/pFcNrU8QYBVROGw.png" srcset="/blog/img/loading.gif" alt="image.png"></p><h4 id="2-配置（可以在未来部署，并非一定现在）"><a href="#2-配置（可以在未来部署，并非一定现在）" class="headerlink" title="2).配置（可以在未来部署，并非一定现在）"></a>2).配置（<em>可以在未来部署，并非一定现在</em>）</h4><blockquote><p>因为Git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和Email地址。注意<code>git config</code>命令的<code>--global</code>参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。</p></blockquote><div class="hljs"><pre><code>$ git config --global user.name  "your name"`$ git config --global user.email "your Email"</code></pre></div><h2 id="二、正式安装【hexo】"><a href="#二、正式安装【hexo】" class="headerlink" title="二、正式安装【hexo】"></a>二、正式安装【hexo】</h2><blockquote><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。——官方</p></blockquote><p>准备工作完成后，来安装hexo框架吧！<br> <strong>== 主要根据hexo官方的<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">文档</a>来安装hexo ==</strong></p><p>==使用 npm 安装 Hexo==</p><p><code>$ npm install -g hexo-cli</code><br><img src="https://i.loli.net/2019/11/07/BZIuA2XzYeaDQ8k.png" srcset="/blog/img/loading.gif" alt="image.png"></p><p>这样,【hexo】就安装完成了。</p><!-- more --><!-- more --><!-- more --><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>GitHub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>博客文章太长？截断！</title>
    <link href="/blog/2019/11/06/%E6%96%87%E7%AB%A0%E6%88%AA%E6%96%AD/"/>
    <url>/blog/2019/11/06/%E6%96%87%E7%AB%A0%E6%88%AA%E6%96%AD/</url>
    
    <content type="html"><![CDATA[<p>写的md文章太长，担心放到首页上浏览效果不好，怎么办？</p><p>那就直接截断文章。</p><p><strong>截断按钮文字不是通过配置文件_config.yml实现的，而是在文章内容里实现</strong>。</p><p>只要在需要被截断的文章位置加上：</p><div class="hljs"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- more --&gt;</span></code></pre></div><p>就可以了！</p><p>效果就像下面的这个按钮</p><p>可以点点看哦👇</p><a id="more"></a><p>插入测试代码</p><p>（无任何作用、意义，仅提供该页面测试用）</p><div class="hljs"><pre><code class="hljs js">javascript:<span class="hljs-built_in">window</span>.onblur=<span class="hljs-literal">null</span>;<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>;<span class="hljs-comment">//all</span><span class="hljs-keyword">var</span> open_all_chapter = <span class="hljs-built_in">document</span>.getElementsByClassName(<span class="hljs-string">"fold_chapter"</span>);<span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">1</span>; i &lt; open_all_chapter.length; i++) {open_all_chapter[i].click()}<span class="hljs-comment">//each</span><span class="hljs-keyword">var</span> chapters = <span class="hljs-built_in">document</span>.getElementsByClassName(<span class="hljs-string">"rate_box"</span>);<span class="hljs-keyword">var</span> count = <span class="hljs-number">0</span>;chapters[++count].click();setInterval(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {<span class="hljs-comment">// var playButton = document.getElementById("div_play_wrapper");</span><span class="hljs-comment">// if (playButton) {</span><span class="hljs-comment">// playButton.click();</span><span class="hljs-comment">// }</span><span class="hljs-keyword">var</span> TC = <span class="hljs-built_in">document</span>.getElementsByClassName(<span class="hljs-string">"layui-layer-close1"</span>);<span class="hljs-keyword">if</span> (TC.length &gt; <span class="hljs-number">0</span>) {<span class="hljs-built_in">console</span>.log(<span class="hljs-string">"检测到弹窗"</span>);TC[<span class="hljs-number">0</span>].click();}<span class="hljs-built_in">console</span>.log(<span class="hljs-string">"正在"</span> + count + <span class="hljs-string">"个"</span>);<span class="hljs-keyword">var</span> isFinish = chapters[count].getElementsByClassName(<span class="hljs-string">"round_complete"</span>);<span class="hljs-keyword">if</span> (isFinish.length &gt; <span class="hljs-number">0</span>) {chapters[++count].click()<span class="hljs-built_in">console</span>.log(<span class="hljs-string">"进入下"</span>);<span class="hljs-keyword">if</span>(chapters[count].className===<span class="hljs-string">"rate_box"</span>){chapters[++count].click()}}}, <span class="hljs-number">5000</span>);</code></pre></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
