<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MelodyHub</title>
  
  <subtitle>你用走 可是我用跑</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://melodyjerry.github.io/blog/"/>
  <updated>2020-07-10T06:35:15.771Z</updated>
  <id>https://melodyjerry.github.io/blog/</id>
  
  <author>
    <name>Melody Jerry</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux命令小记</title>
    <link href="https://melodyjerry.github.io/blog/2020/07/10/Linux%E5%91%BD%E4%BB%A4%E5%B0%8F%E8%AE%B0/"/>
    <id>https://melodyjerry.github.io/blog/2020/07/10/Linux命令小记/</id>
    <published>2020-07-10T07:03:00.000Z</published>
    <updated>2020-07-10T06:35:15.771Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><ol><li><p><code>rpm -q xx</code> 查询xx是否安装</p></li><li><p><code>yum install xx</code> 安装xx软件包</p></li><li><p><code>yum remove xx</code> 卸载xx软件包</p></li><li><p><code>vim /路径</code> 读写文件</p><ul><li>i：编辑模式</li><li>Exc：退出到命令模式</li><li>:wq：保存并退出Vim</li></ul></li><li><p><code>startx</code> （一次性地）从命令行切换到桌面环境</p></li><li><p><code>systemctl get-default</code> 获取当前启动模式</p></li><li><p><code>systemctl set-default graphical.target</code> 修改启动模式为图形化</p></li><li><p><code>systemctl set-default multi-user.target</code> 修改启动模式为命令行</p></li><li><p><code>安装桌面环境</code> 安装桌面环境（这里安装 GNOME）</p></li><li><p><code>systemctl start xx</code>  启动xx服务</p></li><li><p><code>systemctl enable xx</code> 开机自启动xx服务</p></li><li><p><code>firewall-cmd --permanent --zone=public --add-port=3389/tcp</code> 防火墙开放3389端口</p></li><li><p><code>firewall-cmd --reload</code> 重启防火墙</p></li><li><p><code>systemctl stop firewalld</code> 关闭防火墙</p></li><li><p><code>systemctl disable firewalld</code></p><p>禁止防火墙开机启动</p></li><li><p><code>cp /路径</code> 复制文件</p></li><li><p><code>systemctl daemon-reload</code></p><p>让服务文件修改生效</p></li><li><p><code>netstat -lnpt|grep xx</code> 查看xx的服务端口</p></li><li><p><code>sudo yum update -y</code> 更新服务器地软件包</p></li><li><p><code>sudo yum install java-1.8.0-openjdk -y</code> 安装 OpenJRE</p></li><li><p><code>java -version</code>  检测jre是否安装成功</p></li><li><p><code>sudo useradd -m halo</code>  创建一个<strong>低权限</strong>地用户halo</p></li><li><p><code>sudo su halo</code> 登录用户halo</p></li><li><p><code>wget url</code> 下载xx安装包</p></li><li><p><code>useradd [-d home] [-s shell] [-c comment] [-m [-k template]] [-f inactive] [-e expire ] [-p passwd] [-r] name</code>  useradd或adduser命令用来建立用户帐号和创建用户的起始目录，使用权限是超级用户</p><p>主要参数</p><ul><li>-c：加上备注文字，备注文字保存在passwd的备注栏中。</li><li>-d：指定用户登入时的主目录，替换系统默认值/home/&lt;用户名&gt;</li><li>-D：变更预设值。</li><li>-e：指定账号的失效日期，日期格式为MM/DD/YY，例如06/30/12。缺省表示永久有效。</li><li>-f：指定在密码过期后多少天即关闭该账号。如果为0账号立即被停用；如果为-1则账号一直可用。默认值为-1.</li><li>-g：指定用户所属的群组。值可以使组名也可以是GID。用户组必须已经存在的，期默认值为100，即users。</li><li>-G：指定用户所属的附加群组。</li><li>-m：自动建立用户的登入目录。</li><li>-M：不要自动建立用户的登入目录。</li><li>-n：取消建立以用户名称为名的群组。</li><li>-r：建立系统账号。</li><li>-s：指定用户登入后所使用的shell。默认值为/bin/bash。</li><li>-u：指定用户ID号。该值在系统中必须是唯一的。0~499默认是保留给系统用户账号使用的，所以该值必须大于499。</li></ul><blockquote><p><a href="https://www.cnblogs.com/irisrain/p/4324593.html" target="_blank" rel="noopener">https://www.cnblogs.com/irisrain/p/4324593.html</a></p></blockquote></li><li><p><code>w # whoami</code> 查看当前登陆用户</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> 12:10:27 up 21:13,  1 user,  load average: 0.00, 0.01, 0.08</span><br><span class="line">USER          TTY      FROM                 LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">root            pts/0    ***.**.***.**    11:33    0.00s  0.08s  0.00s   w</span><br><span class="line">tmp_3254  ps1       ***.**.***.**     11:33    0.00s  0.08s  0.00s   ls</span><br></pre></td></tr></tbody></table></figure></li></ol><ol start="27"><li><p><code>su xxx # 或者直接 exit</code> 退出当前用户登录，进入一个有管理员权限的用户</p></li><li><p><code>pkill -kill -t [TTY]</code> 强制退出已经登陆用户</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0pkill -kill -t ps1</span><br></pre></td></tr></tbody></table></figure></li><li><p><code>ls -a # ls --all</code> 查看当前目录下的所有文件</p></li><li><p><code>service xx restart</code>  重启xx应用</p></li><li><p><code>curl -o /路径 --create-dirs  url</code>  下载配置文件、模板等文件</p></li><li><p><code>sudo nginx -t</code> 检查Nginx配置是否有误</p></li><li><p><code>sudo nginx -s reload</code> 重载Nginx配置</p></li><li><p><code>sudo service xx status</code>  查看xx的运行状态</p></li><li><p><code>sudo service halo stop</code>  停止xx</p></li><li><p><code>sudo service halo restart</code> 重启xx</p></li><li><p><code>sudo service halo start</code>  启动xx</p></li><li><p><code>sudo systemctl daemon-reload</code> 修改<strong>service</strong>文件之后需要刷新<strong>Systemd</strong></p></li><li><p><code>sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</code> 添加软件源信息</p></li><li><p><code>sudo yum makecache fast</code> 更新yum缓存</p></li><li><p>镜像加速</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 新建 daemon.json 文件</span></span><br><span class="line">sudo vim /etc/docker/daemon.json</span><br></pre></td></tr></tbody></table></figure><p>将下面的配置复制进去即可：</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">  <span class="attr">"registry-mirrors"</span>: [<span class="string">"http://hub-mirror.c.163.com"</span>]</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>注意：修改完配置文件之后需要执行 <code>service docker restart</code> 才可生效。</p></blockquote></li><li><p><code>sudo docker pull ruibaby/xx</code> 拉取xx的最新镜像</p></li><li><p><code>docker run --rm -it -d --name halo -p 8090:8090  -v ~/.halo:/root/.halo ruibaby/halo</code> 创建容器并运行halo</p><ul><li>–rm：停止之后自动删除容器。</li><li>–name：容器名。</li><li>-p：占用端口，前者为宿主机端口，后者为 Halo 的运行端口，可在 <code>application.yaml</code> 配置。</li><li>-v：目录映射，一般不要修改。</li></ul></li><li><p><code>netstat -tln # netstat -tln | grep 8080</code> 查找被占用的端口（可接特定端口号）</p></li><li><p><code>netstat -ntlp</code> 查看其他端口</p></li><li><p><code>lsof -i:8060</code> 查看端口属于哪个程序、端口被哪个进程占用</p></li><li><p><code>kill -9 进程id</code> 杀掉占用端口的进程 根据pid杀掉</p></li><li><p><code>shutdown -h now</code>  立即关机</p></li><li><p><code>shutdown -r now # reboot</code>  立即重启</p></li><li><p><code>docker run --name some-wordpress --link some-mysql:mysql -d wordpress</code> 参数说明：</p><ul><li><code>--name</code> 容器的的名字</li><li><code>--link</code> 和其他容器做连接</li><li><code>-d/--detach</code> 后台运行</li></ul></li><li><p><code>docker run -d --privileged=true --name myMysql -v /data/mysql:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 -p 33306:3306 mysql:5.6</code> 参数解释：</p><ul><li>-p: 端口映射，33306表示宿主，3306表示容器中的端口。 这里表示将宿主机的33306映射给镜像的3306.</li><li>-e: 环境变量， 环境变量和具体的Docker容器制作时设置有关，这里表示设置镜像中MySQL的root 密码时123456</li><li>-v: 指定数据卷，也就是将我们MySQL容器的<code>/var/lib/mysql</code>映射到宿主机的<code>/data/mysql</code></li><li><code>--privileged=true:</code> CentOS系统下的安全Selinux禁止了一些安全权限，导致MySQL容器在运行时会因为权限不足而报错，所以需要增加该选项</li></ul></li><li><p><code>docker ps -a</code>  查看MySQL是否正常运行</p></li><li><p><code>docker stop 容器名</code>  停止运行</p></li><li><p><code>docker rm 容器名</code>  删除容器（之后去掉<code>-d</code>选项重新运行排查错误）</p></li><li><p>快速批量删除docker镜像或容器</p><blockquote><p>Docker本身并没有提供批量删除的功能，当有大量的镜像或者容器需要删除的时候，手动的一个一个删就比较麻烦了。</p></blockquote><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 直接删除所有镜像或容器</span><br><span class="line">    # 直接删除所有镜像</span><br><span class="line">    docker rmi `docker images -q`</span><br><span class="line"></span><br><span class="line">    # 直接删除所有容器</span><br><span class="line">    docker rm `docker ps -aq`</span><br><span class="line">    </span><br><span class="line"># 按条件筛选之后删除</span><br><span class="line">    # 按条件筛选之后删除镜像</span><br><span class="line">    docker rmi `docker images | grep xxxxx | awk '{print $3}'`</span><br><span class="line"></span><br><span class="line">    # 按条件筛选之后删除容器</span><br><span class="line">    docker rm `docker ps -a | grep xxxxx | awk '{print $1}'`</span><br></pre></td></tr></tbody></table></figure></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;rpm -q xx&lt;/code&gt; 查询xx是否安装&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;yum install xx&lt;/code&gt; 安装xx软件包&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;y
      
    
    </summary>
    
    
    
      <category term="服务器" scheme="https://melodyjerry.github.io/blog/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="Linux" scheme="https://melodyjerry.github.io/blog/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Docker学习笔记</title>
    <link href="https://melodyjerry.github.io/blog/2020/07/08/Docker%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://melodyjerry.github.io/blog/2020/07/08/Docker学习笔记/</id>
    <published>2020-07-08T04:55:00.000Z</published>
    <updated>2020-07-10T06:35:31.017Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="Docker安装部署"><a href="#Docker安装部署" class="headerlink" title="Docker安装部署"></a>Docker安装部署</h1><h2 id="CentOS"><a href="#CentOS" class="headerlink" title="CentOS"></a>CentOS</h2><ul><li><p>yum 包更新到最新（花的时间比较多）</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update</span><br></pre></td></tr></tbody></table></figure></li><li><p>安装需要的软件包，yum-util 提供的yum-config-manager功能，另外两个是devicemapper驱动依赖的</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></tbody></table></figure></li><li><p>设置yum源</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum-confi-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></tbody></table></figure></li><li><p>安装docker，出现输入的页面都按 y</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y docker-ce</span><br></pre></td></tr></tbody></table></figure></li><li><p>查看docker版本，验证是否安装成功</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker -v</span><br></pre></td></tr></tbody></table></figure></li></ul><h3 id="其他安装方式-推荐"><a href="#其他安装方式-推荐" class="headerlink" title="其他安装方式(推荐)"></a>其他安装方式(推荐)</h3><p>教程链接：<a href="https://www.jianshu.com/p/1e5c86accacb" target="_blank" rel="noopener">Here!</a></p><h1 id="Docker命令"><a href="#Docker命令" class="headerlink" title="Docker命令"></a>Docker命令</h1><h2 id="Docker服务相关命令"><a href="#Docker服务相关命令" class="headerlink" title="Docker服务相关命令"></a>Docker服务相关命令</h2><ul><li><p>启动docker服务</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker</span><br><span class="line">systemctl start docker</span><br></pre></td></tr></tbody></table></figure></li><li><p>停止docker服务</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop docker</span><br></pre></td></tr></tbody></table></figure></li><li><p>重启docker服务</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></tbody></table></figure></li><li><p>查看docker服务状态</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status docker</span><br></pre></td></tr></tbody></table></figure></li><li><p>设置开机启动docker服务</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemstl enable docker</span><br></pre></td></tr></tbody></table></figure></li></ul><h2 id="Docker镜像相关命令"><a href="#Docker镜像相关命令" class="headerlink" title="Docker镜像相关命令"></a>Docker镜像相关命令</h2><ul><li><p>查看镜像：查看本地所有的镜像</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br><span class="line">docker images -q # 查看所有镜像id</span><br></pre></td></tr></tbody></table></figure></li><li><p>搜索镜像：从网络中查找需要的镜像</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search 镜像名称</span><br></pre></td></tr></tbody></table></figure></li><li><p>拉取镜像：从docker仓库下载镜像到本地，镜像名称格式为 名称:版本号，如果版本号不指定则是<strong>最新版本</strong>。如果不知道镜像版本，可以去<a href="http://hub.docker.com/" target="_blank" rel="noopener">docker hub</a> 搜索对应镜像查看</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull 镜像名称</span><br></pre></td></tr></tbody></table></figure></li><li><p>删除镜像</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker rmi 镜像id</span><br><span class="line">docker rmi `docker images -q` # 删除所有本地镜像</span><br></pre></td></tr></tbody></table></figure></li></ul><h2 id="Docker容器相关的命令"><a href="#Docker容器相关的命令" class="headerlink" title="Docker容器相关的命令"></a>Docker容器相关的命令</h2><ul><li><p>查看容器</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker ps # 查看正在运行的容器</span><br><span class="line">docker ps -a # 查看所有容器</span><br></pre></td></tr></tbody></table></figure></li><li><p>创建并启动容器</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run 参数</span><br></pre></td></tr></tbody></table></figure><ul><li>参数说明：<ul><li>-i：保持容器运行。通常与-t同时使用。加入it这两个参数后，容器创建后自动进入容器中，退出容器后，容器自动关闭。</li><li>-t：为容器重新分配一个伪输入终端，通常与-i同时使用。</li><li>-d:以守护（后台）模式运行容器。创建一个容器在后台运行，需要使用<code>docker exec</code>进入容器。退出时，容器不会关闭。</li><li>-it：创建的容器一般称为<strong>交互式容器</strong>。</li><li>-id：创建的容器一般称为<strong>守护式容器</strong>。</li><li>–name：为创建的容器命名。</li></ul></li></ul></li><li><p>进入容器</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec 参数 # 退出容器，容器不会关闭</span><br></pre></td></tr></tbody></table></figure></li><li><p>启动容器</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker start 容器名称</span><br></pre></td></tr></tbody></table></figure></li><li><p>停止容器</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop 容器名称</span><br></pre></td></tr></tbody></table></figure></li><li><p>删除容器：如果容器是运行状态则删除失败，需要停止容器才能删除</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm 容器名称</span><br></pre></td></tr></tbody></table></figure></li><li><p>查看容器信息</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect 容器名称</span><br></pre></td></tr></tbody></table></figure></li></ul><h1 id="Docker容器的数据卷"><a href="#Docker容器的数据卷" class="headerlink" title="Docker容器的数据卷"></a>Docker容器的数据卷</h1><h2 id="数据卷概念和作用"><a href="#数据卷概念和作用" class="headerlink" title="数据卷概念和作用"></a>数据卷概念和作用</h2><h3 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h3><ul><li>Docker容器删除后，在容器中产生的数据也会随之销毁吗？<ul><li>会。</li></ul></li><li>Docker容器和外部机器可以直接交换文件吗？<ul><li>不可以。</li></ul></li><li>容器之间想要进行数据交互？<ul><li>不可以。</li></ul></li></ul><blockquote><p><em>那咋办嘛？这就要用到数据卷了</em></p></blockquote><h3 id="数据卷"><a href="#数据卷" class="headerlink" title="数据卷"></a>数据卷</h3><ul><li>数据卷是宿主机中的一个<strong>目录或文件</strong></li><li>当容器目录和数据卷目录绑定后，对方的修改会立即同步</li><li>一个数据卷可以被<strong>多个容器同时挂载</strong></li><li>一个容器也可以被挂载<strong>多个数据卷</strong></li></ul><h3 id="数据卷的作用"><a href="#数据卷的作用" class="headerlink" title="数据卷的作用"></a>数据卷的作用</h3><ul><li>容器数据持久化</li><li>外部机器和容器间接通信</li><li>容器之间数据交换</li></ul><h2 id="配置数据卷"><a href="#配置数据卷" class="headerlink" title="配置数据卷"></a>配置数据卷</h2><ul><li><p>创建启动容器时，使用<code>-v</code>参数设置数据卷</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run ...-v 宿主机目录(文件):容器内目录(文件)...</span><br></pre></td></tr></tbody></table></figure></li><li><p>注意事项：</p><ol><li>目录必须是<strong>绝对路径</strong></li><li>如果目录不存在，会<strong>自动创建</strong></li><li>可以挂载<strong>多个</strong>数据卷</li></ol></li></ul><h2 id="数据卷容器"><a href="#数据卷容器" class="headerlink" title="数据卷容器"></a>数据卷容器</h2><h3 id="配置数据卷容器"><a href="#配置数据卷容器" class="headerlink" title="配置数据卷容器"></a>配置数据卷容器</h3><ul><li><p>创建启动c3数据卷容器，使用<code>-v</code>参数设置数据卷</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name-=c3 -v /volume centos:7 /bin/bash</span><br></pre></td></tr></tbody></table></figure></li><li><p>创建启动c1 c2数据卷容器，使用<code>-volumes-from</code>参数设置数据卷</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name-=c1 -volumes-from c3 centos:7 /bin/bash</span><br><span class="line">docker run -it --name-=c2 -volumes-from c3 centos:7 /bin/bash</span><br></pre></td></tr></tbody></table></figure></li></ul><p>#Docker应用部署</p><h2 id="MySQL部署"><a href="#MySQL部署" class="headerlink" title="MySQL部署"></a>MySQL部署</h2><ul><li><p>搜索MySQL镜像</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search mysql</span><br></pre></td></tr></tbody></table></figure></li><li><p>拉取MySQL镜像</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull mysql:5.6</span><br></pre></td></tr></tbody></table></figure></li><li><p>创建容器，设置端口映射、目录映射</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 在/root目录下创建mysql目录用于存储mysql数据信息</span><br><span class="line">mkdir ~/mysql</span><br><span class="line">cd ~/mysql</span><br></pre></td></tr></tbody></table></figure><hr>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run -id \</span><br><span class="line">--name=c_mysql \</span><br><span class="line">-p 3307:3306 \</span><br><span class="line">-v $PWD/conf:/etc/mysql/confi.d \</span><br><span class="line">-v $PWD/logs:/logs \</span><br><span class="line">-v $PWD/data:/var/lib/mysql \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=123456 \</span><br><span class="line">mysql:5.6</span><br></pre></td></tr></tbody></table></figure><ul><li>参数说明：<ul><li>-p 3307:3306：将容器的3306端口映射到宿主机的3307端口。</li><li>-v $PWD/conf:/etc/mysql/confi.d：将主机当前目录下的conf/my.cnf挂载到容器的/etc/mysql/my.cnf。配置目录</li><li>-v $PWD/logs:/logs：将主机当前目录下的logs目录挂载到容器的/logs。日志目录</li><li>-v $PWD/data:/var/lib/mysql：将主机当前目录下的data目录挂载到容器的/var/lib/mysql。数据目录</li><li>-e MYSQL_ROOT_PASSWORD=123456：初始化root用户的密码。</li></ul></li></ul></li></ul><h2 id="Tomcat部署"><a href="#Tomcat部署" class="headerlink" title="Tomcat部署"></a>Tomcat部署</h2><ul><li><p>搜索Tomcat镜像</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search tomcat</span><br></pre></td></tr></tbody></table></figure></li><li><p>拉取Tomcat镜像</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull tomcat</span><br></pre></td></tr></tbody></table></figure></li><li><p>创建容器，设置端口映射、目录映射</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 在/root目录下创建tomcat目录用于存储tomcat数据信息</span><br><span class="line">mkdir ~/tomcat</span><br><span class="line">cd ~/tomcat</span><br></pre></td></tr></tbody></table></figure><hr>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run -id \</span><br><span class="line">--name=c_tomcat \</span><br><span class="line">-p 8080:8080 \</span><br><span class="line">-v $PWD:/usr/local/tomcat/webapps \</span><br><span class="line">tomcat</span><br></pre></td></tr></tbody></table></figure><ul><li>参数说明：<ul><li>-p 8000:8080：将容器的8080端口映射到宿主机的8000端口。</li><li>-v $PWD:/usr/local/tomcat/webapps：将主机当前目录挂载到容器的/usr/local/tomcat/webapps。</li></ul></li></ul></li></ul><h2 id="Nginx部署"><a href="#Nginx部署" class="headerlink" title="Nginx部署"></a>Nginx部署</h2><ul><li><p>搜索Nginx镜像</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search nginx</span><br></pre></td></tr></tbody></table></figure></li><li><p>拉取Nginx镜像</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull nginx</span><br></pre></td></tr></tbody></table></figure></li><li><p>创建容器，设置端口映射、目录映射</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 在/root目录下创建nginx目录用于存储nginx数据信息</span><br><span class="line">mkdir ~/nginx</span><br><span class="line">cd ~/nginx</span><br><span class="line">mkdir conf</span><br><span class="line">cd conf</span><br><span class="line"># 在~/nginx/conf/下创建nginx.conf文件，粘贴下面内容</span><br><span class="line">vim nginx.conf</span><br></pre></td></tr></tbody></table></figure><hr>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">user  nginx;</span><br><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line">error_log  /var/log/nginx/error.log warn;</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line">events {</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">http {</span><br><span class="line">    include       /etc/nginx/mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '</span><br><span class="line">                      '$status $body_bytes_sent "$http_referer" '</span><br><span class="line">                      '"$http_user_agent" "$http_x_forwarded_for"';</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    #gzip  on;</span><br><span class="line"></span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><hr>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run -id \</span><br><span class="line">--name=c_nginx \</span><br><span class="line">-p 81:80 \</span><br><span class="line">-v $PWD/conf/nginx.conf:/etc/nginx/nginx.conf \</span><br><span class="line">-v $PWD/logs:/var/log/nginx \</span><br><span class="line">-v $PWD/html:/usr/share/nginx/html \</span><br><span class="line">nginx</span><br></pre></td></tr></tbody></table></figure><ul><li>参数说明：<ul><li>-p 81:80：将容器的80端口映射到宿主机的81端口。</li><li>v $PWD/conf/nginx.conf:/etc/nginx/nginx.conf：将主机当前目录下的/conf/nginx.conf挂载到容器的/etc/nginx/nginx.conf。配置目录</li><li>-v $PWD/logs:/var/log/nginx：将主机当前目录下的logs目录挂载到容器的/var/log/nginx。日志目录</li><li>-v $PWD/html:/usr/share/nginx/html：将主机当前目录下的/html挂载到容器的/usr/share/nginx/html。</li></ul></li></ul></li></ul><h2 id="Redis部署"><a href="#Redis部署" class="headerlink" title="Redis部署"></a>Redis部署</h2><ul><li><p>搜索Redis镜像</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search redis</span><br></pre></td></tr></tbody></table></figure></li><li><p>拉取Redis镜像</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull redis:5.0</span><br></pre></td></tr></tbody></table></figure></li><li><p>创建容器，设置端口映射、目录映射</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -id --name=c_redis -p 6379:6379 redis:5.0</span><br></pre></td></tr></tbody></table></figure><ul><li>参数说明：<ul><li>-p 6379:6379：将容器的6379端口映射到宿主机的6379端口。</li></ul></li></ul></li><li><p>使用外部机器连接redis</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./redis-cli.exe -h &lt;your ipAddress&gt; -p 6379</span><br></pre></td></tr></tbody></table></figure></li></ul><h1 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h1><h2 id="Docker镜像原理"><a href="#Docker镜像原理" class="headerlink" title="Docker镜像原理"></a>Docker镜像原理</h2><h3 id="思考-1"><a href="#思考-1" class="headerlink" title="思考"></a>思考</h3><ul><li><p>Docker镜像本质是什么？</p><ul><li>是一个分层的文件系统</li></ul></li><li><p>Docker中一个centos镜像为什么只有200MB，而一个centos操作系统的</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iso</span><br></pre></td></tr></tbody></table></figure><p>  文件要几个GB？</p><ul><li>Centos的<code>iso</code>镜像文件包含<code>bootfs</code>和<code>rootfs</code>，而docker的centos镜像<strong>复用</strong>操作系统的<code>bootfs</code>，只包含<code>rootfs</code>和其他镜像层</li></ul></li><li><p>Docker中一个tomcat镜像为什么有500MB，而一个tomcat安装包只有70多MB？</p><ul><li>由于docker中镜像是分层的，tomcat虽然只有70多MB，但它需要依赖于<strong>父镜像</strong>和<strong>子镜像</strong>，所有整个对外暴露的tomcat镜像大小有500多MB</li></ul></li></ul><h3 id="Linux文件系统"><a href="#Linux文件系统" class="headerlink" title="Linux文件系统"></a>Linux文件系统</h3><ul><li>bootfs：包含<code>bootloader</code>（引导加载系统）和<code>kernel</code>（内核）</li><li>rootfs：root文件系统，包含的就是典型的Linux系统中的<code>/dev</code>，<code>/proc</code>，<code>/bin</code>，<code>/etc</code>等标准目录和文件</li><li>不用的Linux发行版，<code>bootfs</code>基本一样，而<code>rootfs</code>不同，如Ubuntu，centos等</li></ul><p><img src="http://106.75.80.200/2020/03/15/seven/layer1.png" alt="img"></p><h3 id="Docker镜像"><a href="#Docker镜像" class="headerlink" title="Docker镜像"></a>Docker镜像</h3><ul><li>Docker镜像是由特殊的文件系统叠加而成</li><li>最底端是<code>bootfs</code>,并使用宿主机的<code>bootfs</code></li><li>第二层是root文件系统<code>rootfs</code>,称为<code>base image</code></li><li>然后再往上可以叠加其他的镜像文件</li><li><strong><em>统一文件系统(Union File System)\</em></strong>技术能够将不同的层整合成一个文件系统,为这些层提供了一个统一的视角，这样就隐藏了多层的存在，在用户的角度看来,只存在一个文件系统。</li><li>一个镜像可以放在另一个镜像的上面。位于下面的镜像称为<strong><em>父镜像\</em></strong>，最底部的镜像成为<strong><em>基础镜像\</em></strong>。</li><li>当从一个镜像启动容器时，Docker会从最顶层加载一个<strong>读写文件系统</strong>作为容器</li></ul><p><img src="http://106.75.80.200/2020/03/15/seven/layer2.png" alt="img"></p><h2 id="镜像制作"><a href="#镜像制作" class="headerlink" title="镜像制作"></a>镜像制作</h2><ul><li><p>容器转为镜像</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker commit 容器id 镜像名称:版本号  # 将容器转换为镜像文件</span><br><span class="line">docker save -o 压缩文件名称 镜像名称:版本号  # 将镜像文件打包成压缩文件，之后就能对压缩文件传送了</span><br><span class="line">docker load -i 压缩文件名称  # 将压缩文件解压称为镜像文件</span><br></pre></td></tr></tbody></table></figure></li><li><p>Dockerfile</p><ul><li><em>看下面内容</em></li></ul></li></ul><h2 id="Dockerfile概念及作用"><a href="#Dockerfile概念及作用" class="headerlink" title="Dockerfile概念及作用"></a>Dockerfile概念及作用</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><ul><li>Dockerfile是一个文本文件</li><li>包含了一条条的指令</li><li>每一条指令构建一层，基于基础镜像，最终构建出一个新的镜像</li><li>对于开发人员：可以为开发团队提供一个完全一致的开发环境</li><li>对于测试人员：可以直接拿开发时所构建的镜像或者通过Dockerfile文件构建一个新的镜像开始工作了</li><li>对于运维人员：在部署时，可以实现应用的无缝移植</li></ul><p><img src="http://106.75.80.200/2020/03/15/seven/dockerfile1.png" alt="img"></p><h2 id="Dockerfile关键字"><a href="#Dockerfile关键字" class="headerlink" title="Dockerfile关键字"></a>Dockerfile关键字</h2><p><em>列举一些常用的</em></p><table><thead><tr><th>关键字</th><th>作用</th><th>备注</th></tr></thead><tbody><tr><td>FROM</td><td>指定父镜像</td><td>指定dockerfile基于那个image构建</td></tr><tr><td>MAINTAINER</td><td>作者信息</td><td>用来标明这个dockerfile谁写的</td></tr><tr><td>LABEL</td><td>标签</td><td>用来标明dockerfile的标签 可以使用Label代替Maintainer 最终都是在docker image基本信息中可以查看</td></tr><tr><td>RUN</td><td>执行命令</td><td>执行一段命令 默认是/bin/sh 格式: RUN command 或者 RUN [“command” , “param1”,”param2”]</td></tr><tr><td>CMD</td><td>容器启动命令</td><td>提供启动容器时候的默认命令 和ENTRYPOINT配合使用.格式 CMD command param1 param2 或者 CMD [“command” , “param1”,”param2”]</td></tr><tr><td>ENTRYPOINT</td><td>入口</td><td>一般在制作一些执行就关闭的容器中会使用</td></tr><tr><td>COPY</td><td>复制文件</td><td>build的时候复制文件到image中</td></tr><tr><td>ADD</td><td>添加文件</td><td>build的时候添加文件到image中 不仅仅局限于当前build上下文 可以来源于远程服务</td></tr><tr><td>ENV</td><td>环境变量</td><td>指定build时候的环境变量 可以在启动的容器的时候 通过-e覆盖 格式ENV name=value</td></tr><tr><td>ARG</td><td>构建参数</td><td>构建参数 只在构建的时候使用的参数 如果有ENV 那么ENV的相同名字的值始终覆盖arg的参数</td></tr><tr><td>VOLUME</td><td>定义外部可以挂载的数据卷</td><td>指定build的image那些目录可以启动的时候挂载到文件系统中 启动容器的时候使用 -v 绑定 格式 VOLUME [“目录”]</td></tr><tr><td>EXPOSE</td><td>暴露端口</td><td>定义容器运行的时候监听的端口 启动容器的使用-p来绑定暴露端口 格式: EXPOSE 8080 或者 EXPOSE 8080/udp</td></tr><tr><td>WORKDIR</td><td>工作目录</td><td>指定容器内部的工作目录 如果没有创建则自动创建 如果指定/ 使用的是绝对地址 如果不是/开头那么是在上一条workdir的路径的相对路径</td></tr><tr><td>USER</td><td>指定执行用户</td><td>指定build或者启动的时候 用户 在RUN CMD ENTRYPONT执行的时候的用户</td></tr><tr><td>HEALTHCHECK</td><td>健康检查</td><td>指定监测当前容器的健康监测的命令 基本上没用 因为很多时候 应用本身有健康监测机制</td></tr><tr><td>ONBUILD</td><td>触发器</td><td>当存在ONBUILD关键字的镜像作为基础镜像的时候 当执行FROM完成之后 会执行 ONBUILD的命令 但是不影响当前镜像 用处也不怎么大</td></tr><tr><td>STOPSIGNAL</td><td>发送信号量到宿主机</td><td>该STOPSIGNAL指令设置将发送到容器的系统调用信号以退出。</td></tr><tr><td>SHELL</td><td>指定执行脚本的shell</td><td>指定RUN CMD ENTRYPOINT 执行命令的时候 使用的shell</td></tr></tbody></table><h2 id="制作自定义centos镜像"><a href="#制作自定义centos镜像" class="headerlink" title="制作自定义centos镜像"></a>制作自定义centos镜像</h2><h3 id="自定义需求"><a href="#自定义需求" class="headerlink" title="自定义需求"></a>自定义需求</h3><ul><li>默认登录路径为<code>/usr</code></li><li>可以使用vim</li></ul><h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><ul><li><p>创建编辑dockerfile文件</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir /root/dockerfile</span><br><span class="line">cd dockerfile</span><br><span class="line">vim centos_dockerfile</span><br></pre></td></tr></tbody></table></figure><ul><li>定义父镜像：<code>FROM centos:7</code></li><li>定义作者信息：<code>MAINTAINER adongyo &lt;adongyo@it.cn&gt;</code></li><li>执行安装vim命令：<code>RUN yum install -y vim</code></li><li>定义默认的工作目录：<code>WORKDIR /usr</code></li><li>定义容器启动执行的命令：<code>CMD /bin/bash</code></li></ul></li><li><p>执行命令</p>  <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -f ./centos_dockerfile -t myCentos:1 .</span><br></pre></td></tr></tbody></table></figure><ul><li><p>参数说明：</p><ul><li><p>-f： 指定dockerfile文件</p></li><li><p>-t： 设置生成的新的镜像的名称</p></li><li><p>.： 别漏了后面还有一个’.’</p></li></ul></li></ul></li></ul><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="https://www.bilibili.com/video/av89009239" target="_blank" rel="noopener">b站转载黑马程序员</a></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;h1 id=&quot;Docker安装部署&quot;&gt;&lt;a href=&quot;#Docker安装部署&quot; class=&quot;headerlink&quot; title=&quot;Docker安装部署&quot;&gt;&lt;/a&gt;Docker安装部署&lt;/h1&gt;&lt;h2 id=&quot;CentOS&quot;&gt;&lt;a hre
      
    
    </summary>
    
    
    
      <category term="服务器" scheme="https://melodyjerry.github.io/blog/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="Linux" scheme="https://melodyjerry.github.io/blog/tags/Linux/"/>
    
      <category term="Docker" scheme="https://melodyjerry.github.io/blog/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Hexo部署到云服务器</title>
    <link href="https://melodyjerry.github.io/blog/2020/07/08/Hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>https://melodyjerry.github.io/blog/2020/07/08/Hexo部署到云服务器/</id>
    <published>2020-07-08T04:49:00.000Z</published>
    <updated>2020-07-10T06:33:10.325Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p>阿里云VPS搭建自己的的Hexo博客：<a href="https://segmentfault.com/a/1190000005723321" target="_blank" rel="noopener">https://segmentfault.com/a/1190000005723321</a><br>Hexo个人博客部署到CentOS个人服务器：<a href="https://segmentfault.com/a/1190000010680022" target="_blank" rel="noopener">https://segmentfault.com/a/1190000010680022</a><br>部署Hexo到个人服务器：<a href="https://www.huangtengxq.com/2017/08/19/BuildHexoOnVps/" target="_blank" rel="noopener">https://www.huangtengxq.com/2017/08/19/BuildHexoOnVps/</a><br>HEXO部署到unbuntu服务器详细指南：<a href="http://www.laoyuyu.me/2017/10/10/hexo_deploy_vps/" target="_blank" rel="noopener">http://www.laoyuyu.me/2017/10/10/hexo_deploy_vps/</a><br>服务器部署Hexo博客：<a href="https://dogorgod.github.io/2017/03/24/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2Hexo%E5%8D%9A%E5%AE%A2/" target="_blank" rel="noopener">https://dogorgod.github.io/2017/03/24/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2Hexo%E5%8D%9A%E5%AE%A2/</a><br>Hexo博客部署到服务器：<a href="https://i.jakeyu.top/2016/12/06/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B9%B6%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/" target="_blank" rel="noopener">https://i.jakeyu.top/2016/12/06/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B9%B6%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/</a><br>通过Git将Hexo博客部署到服务器：<a href="https://www.jianshu.com/p/e03e363713f9" target="_blank" rel="noopener">https://www.jianshu.com/p/e03e363713f9</a><br>部署Hexo博客到linux云主机并实现自动发布：<a href="https://ghui.me/post/2016/07/host-hexo-vps/" target="_blank" rel="noopener">https://ghui.me/post/2016/07/host-hexo-vps/</a><br>将Hexo博客部署到云主机：<a href="https://blog.fundebug.com/2017/05/18/deploy-hexo-on-cloud/" target="_blank" rel="noopener">https://blog.fundebug.com/2017/05/18/deploy-hexo-on-cloud/</a><br>配合Travis CI，将Hexo博客自动部署到你的服务器上：<a href="https://blog.keep.moe/2015/11/06/hexo-and-travis-ci/" target="_blank" rel="noopener">https://blog.keep.moe/2015/11/06/hexo-and-travis-ci/</a><br>使用Git Hook自动部署Hexo到个人VPS：<a href="http://www.swiftyper.com/2016/04/17/deploy-hexo-with-git-hook/" target="_blank" rel="noopener">http://www.swiftyper.com/2016/04/17/deploy-hexo-with-git-hook/</a><br>VPS Centos7安装Git服务器，部署Hexo静态博客：<a href="https://www.micronbot.com/blog/8.html" target="_blank" rel="noopener">https://www.micronbot.com/blog/8.html</a><br>在Ubuntu 14.04服务器上部署Hexo博客：<a href="https://cloud.tencent.com/developer/article/1004587" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/1004587</a><br>阿里云ubuntu部署hexo,并与本地同步，实现自动部署：<a href="http://blog.csdn.net/nghuyong/article/details/54430093" target="_blank" rel="noopener">http://blog.csdn.net/nghuyong/article/details/54430093</a><br>阿里云搭建Git服务，实现Hexo自动部署：<a href="https://imys.net/20160303/hexo-nginx-auto-deploy.html" target="_blank" rel="noopener">https://imys.net/20160303/hexo-nginx-auto-deploy.html</a><br>hexo博客部署到linux服务器上：<a href="https://lvshen9.github.io/2018/01/08/Hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E5%88%B0Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A/" target="_blank" rel="noopener">https://lvshen9.github.io/2018/01/08/Hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E5%88%B0Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A/</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;p&gt;阿里云VPS搭建自己的的Hexo博客：&lt;a href=&quot;https://segmentfault.com/a/1190000005723321&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://segmen
      
    
    </summary>
    
    
    
      <category term="服务器" scheme="https://melodyjerry.github.io/blog/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="Linux" scheme="https://melodyjerry.github.io/blog/tags/Linux/"/>
    
      <category term="Hexo" scheme="https://melodyjerry.github.io/blog/tags/Hexo/"/>
    
      <category term="博客" scheme="https://melodyjerry.github.io/blog/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>服务器安装宝塔面板</title>
    <link href="https://melodyjerry.github.io/blog/2020/07/07/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BFLinux%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/"/>
    <id>https://melodyjerry.github.io/blog/2020/07/07/宝塔面板Linux命令大全/</id>
    <published>2020-07-07T15:32:00.000Z</published>
    <updated>2020-07-10T06:32:18.745Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="安装宝塔"><a href="#安装宝塔" class="headerlink" title="安装宝塔"></a>安装宝塔</h2><p>Centos安装脚本</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></tbody></table></figure><p>Ubuntu/Deepin安装脚本</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh</span><br></pre></td></tr></tbody></table></figure><p>Debian安装脚本</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></tbody></table></figure><p>Fedora安装脚本</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></tbody></table></figure><h2 id="管理宝塔"><a href="#管理宝塔" class="headerlink" title="管理宝塔"></a>管理宝塔</h2><p>宝塔工具箱(包含下列绝大部分功能 直接ssh中执行bt命令 仅限6.x以上版本面板)</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bt</span><br></pre></td></tr></tbody></table></figure><p>停止</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/bt stop</span><br></pre></td></tr></tbody></table></figure><p>启动</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/bt start</span><br></pre></td></tr></tbody></table></figure><p>重启</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/bt restart</span><br></pre></td></tr></tbody></table></figure><p>卸载</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/bt stop &amp;&amp; chkconfig --del bt &amp;&amp; rm -f /etc/init.d/bt &amp;&amp; rm -rf /www/server/panel</span><br></pre></td></tr></tbody></table></figure><p>查看当前面板端口</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /www/server/panel/data/port.pl</span><br></pre></td></tr></tbody></table></figure><p>修改面板端口，如要改成8881（centos 6 系统）</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">echo '8881' &gt; /www/server/panel/data/port.pl &amp;&amp; /etc/init.d/bt restart</span><br><span class="line">iptables -I INPUT -p tcp -m state --state NEW -m tcp --dport 8881 -j ACCEPT</span><br><span class="line">service iptables save</span><br><span class="line">service iptables restart</span><br></pre></td></tr></tbody></table></figure><p>修改面板端口，如要改成8881（centos 7 系统）</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo '8881' &gt; /www/server/panel/data/port.pl &amp;&amp; /etc/init.d/bt restart</span><br><span class="line">firewall-cmd --permanent --zone=public --add-port=8881/tcp</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></tbody></table></figure><p>强制修改MySQL管理(root)密码，如要改成123456</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /www/server/panel &amp;&amp; python tools.py root 123456</span><br></pre></td></tr></tbody></table></figure><p>修改面板密码，如要改成123456</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /www/server/panel &amp;&amp; python tools.py panel 123456</span><br></pre></td></tr></tbody></table></figure><p>查看宝塔日志</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /tmp/panelBoot.pl</span><br></pre></td></tr></tbody></table></figure><p>查看软件安装日志</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /tmp/panelExec.log</span><br></pre></td></tr></tbody></table></figure><p>站点配置文件位置</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/www/server/panel/vhost</span><br></pre></td></tr></tbody></table></figure><p>删除域名绑定面板</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -f /www/server/panel/data/domain.conf</span><br></pre></td></tr></tbody></table></figure><p>清理登陆限制</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -f /www/server/panel/data/*.login</span><br></pre></td></tr></tbody></table></figure><p>查看面板授权IP</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /www/server/panel/data/limitip.conf</span><br></pre></td></tr></tbody></table></figure><p>关闭访问限制</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -f /www/server/panel/data/limitip.conf</span><br></pre></td></tr></tbody></table></figure><p>查看许可域名</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /www/server/panel/data/domain.conf</span><br></pre></td></tr></tbody></table></figure><p>关闭面板SSL</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -f /www/server/panel/data/ssl.pl &amp;&amp; /etc/init.d/bt restart</span><br></pre></td></tr></tbody></table></figure><p>查看面板错误日志</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /tmp/panelBoot</span><br></pre></td></tr></tbody></table></figure><p>查看数据库错误日志</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /www/server/data/*.err</span><br></pre></td></tr></tbody></table></figure><p>站点配置文件目录(nginx)</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/www/server/panel/vhost/nginx</span><br></pre></td></tr></tbody></table></figure><p>站点配置文件目录(apache)</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/www/server/panel/vhost/apache</span><br></pre></td></tr></tbody></table></figure><p>站点默认目录</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/www/wwwroot</span><br></pre></td></tr></tbody></table></figure><p>数据库备份目录</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/www/backup/database</span><br></pre></td></tr></tbody></table></figure><p>站点备份目录</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/www/backup/site</span><br></pre></td></tr></tbody></table></figure><p>站点日志</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/www/wwwlogs</span><br></pre></td></tr></tbody></table></figure><h2 id="Nginx服务管理"><a href="#Nginx服务管理" class="headerlink" title="Nginx服务管理"></a>Nginx服务管理</h2><p>nginx安装目录</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/www/server/nginx</span><br></pre></td></tr></tbody></table></figure><p>启动</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/nginx start</span><br></pre></td></tr></tbody></table></figure><p>停止</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/nginx stop</span><br></pre></td></tr></tbody></table></figure><p>重启</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/nginx restart</span><br></pre></td></tr></tbody></table></figure><p>启载</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/nginx reload</span><br></pre></td></tr></tbody></table></figure><p>nginx配置文件</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/www/server/nginx/conf/nginx.conf</span><br></pre></td></tr></tbody></table></figure><h2 id="Apache服务管理"><a href="#Apache服务管理" class="headerlink" title="Apache服务管理"></a>Apache服务管理</h2><p>apache安装目录</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/www/server/httpd</span><br></pre></td></tr></tbody></table></figure><p>启动</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/httpd start</span><br></pre></td></tr></tbody></table></figure><p>停止</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/httpd stop</span><br></pre></td></tr></tbody></table></figure><p>重启</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/httpd restart</span><br></pre></td></tr></tbody></table></figure><p>启载</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/httpd reload</span><br></pre></td></tr></tbody></table></figure><p>apache配置文件</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/www/server/apache/conf/httpd.conf</span><br></pre></td></tr></tbody></table></figure><h2 id="MySQL服务管理"><a href="#MySQL服务管理" class="headerlink" title="MySQL服务管理"></a>MySQL服务管理</h2><p>mysql安装目录</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/www/server/mysql</span><br></pre></td></tr></tbody></table></figure><p>phpmyadmin安装目录</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/www/server/phpmyadmin</span><br></pre></td></tr></tbody></table></figure><p>数据存储目录</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/www/server/data</span><br></pre></td></tr></tbody></table></figure><p>启动</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/mysqld start</span><br></pre></td></tr></tbody></table></figure><p>停止</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/mysqld stop</span><br></pre></td></tr></tbody></table></figure><p>重启</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/mysqld restart</span><br></pre></td></tr></tbody></table></figure><p>启载</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/mysqld reload</span><br></pre></td></tr></tbody></table></figure><p>mysql配置文件</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/my.cnf</span><br></pre></td></tr></tbody></table></figure><h2 id="FTP服务管理"><a href="#FTP服务管理" class="headerlink" title="FTP服务管理"></a>FTP服务管理</h2><p>ftp安装目录</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/www/server/pure-ftpd</span><br></pre></td></tr></tbody></table></figure><p>启动</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/pure-ftpd start</span><br></pre></td></tr></tbody></table></figure><p>停止</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/pure-ftpd stop</span><br></pre></td></tr></tbody></table></figure><p>重启</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/pure-ftpd restart</span><br></pre></td></tr></tbody></table></figure><p>ftp配置文件</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/www/server/pure-ftpd/etc/pure-ftpd.conf</span><br></pre></td></tr></tbody></table></figure><h2 id="PHP服务管理"><a href="#PHP服务管理" class="headerlink" title="PHP服务管理"></a>PHP服务管理</h2><p>php安装目录</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/www/server/php</span><br></pre></td></tr></tbody></table></figure><p>启动(请根据安装PHP版本号做更改，例如：/etc/init.d/php-fpm-54 start)</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/php-fpm-{52|53|54|55|56|70|71|72|73|74} start</span><br></pre></td></tr></tbody></table></figure><p>停止(请根据安装PHP版本号做更改，例如：/etc/init.d/php-fpm-54 stop)</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/php-fpm-{52|53|54|55|56|70|71|72|73|74} stop</span><br></pre></td></tr></tbody></table></figure><p>重启(请根据安装PHP版本号做更改，例如：/etc/init.d/php-fpm-54 restart)</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/php-fpm-{52|53|54|55|56|70|71|72|73|74} restart</span><br></pre></td></tr></tbody></table></figure><p>启载(请根据安装PHP版本号做更改，例如：/etc/init.d/php-fpm-54 reload)</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/php-fpm-{52|53|54|55|56|70|71|72|73|74} reload</span><br></pre></td></tr></tbody></table></figure><p>配置文件(请根据安装PHP版本号做更改，例如：/www/server/php/52/etc/php.ini)</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/www/server/php/{52|53|54|55|56|70|71|72|73|74}/etc/php.ini</span><br></pre></td></tr></tbody></table></figure><h2 id="Redis服务管理"><a href="#Redis服务管理" class="headerlink" title="Redis服务管理"></a>Redis服务管理</h2><p>redis安装目录</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/www/server/redis</span><br></pre></td></tr></tbody></table></figure><p>启动</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/redis start</span><br></pre></td></tr></tbody></table></figure><p>停止</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/redis stop</span><br></pre></td></tr></tbody></table></figure><p>redis配置文件</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/www/server/redis/redis.conf</span><br></pre></td></tr></tbody></table></figure><h2 id="Memcached服务管理"><a href="#Memcached服务管理" class="headerlink" title="Memcached服务管理"></a>Memcached服务管理</h2><p>memcached安装目录</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/memcached</span><br></pre></td></tr></tbody></table></figure><p>启动</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/memcached start</span><br></pre></td></tr></tbody></table></figure><p>停止</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/memcached stop</span><br></pre></td></tr></tbody></table></figure><p>重启</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/memcached restart</span><br></pre></td></tr></tbody></table></figure><p>启载</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/memcached reload</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;h2 id=&quot;安装宝塔&quot;&gt;&lt;a href=&quot;#安装宝塔&quot; class=&quot;headerlink&quot; title=&quot;安装宝塔&quot;&gt;&lt;/a&gt;安装宝塔&lt;/h2&gt;&lt;p&gt;Centos安装脚本&lt;/p&gt;
&lt;figure class=&quot;highlight pla
      
    
    </summary>
    
    
    
      <category term="服务器" scheme="https://melodyjerry.github.io/blog/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="Linux" scheme="https://melodyjerry.github.io/blog/tags/Linux/"/>
    
      <category term="宝塔" scheme="https://melodyjerry.github.io/blog/tags/%E5%AE%9D%E5%A1%94/"/>
    
  </entry>
  
  <entry>
    <title>服务器安装宝塔面板</title>
    <link href="https://melodyjerry.github.io/blog/2020/07/07/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E8%A3%85%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/"/>
    <id>https://melodyjerry.github.io/blog/2020/07/07/服务器安装宝塔面板/</id>
    <published>2020-07-07T13:24:00.000Z</published>
    <updated>2020-07-10T06:30:59.819Z</updated>
    
    <content type="html"><![CDATA[<p>这里两篇文章关于“CentOS安装宝塔面板”</p><ol><li><a href="https://developer.aliyun.com/ask/233242?spm=a2c6h.13524658" target="_blank" rel="noopener">https://developer.aliyun.com/ask/233242?spm=a2c6h.13524658</a></li><li><a href="http://tencent.yundashi168.com/327.html?spm=a2c6h.13066369.0.0.328d79c6znCKp6" target="_blank" rel="noopener">http://tencent.yundashi168.com/327.html?spm=a2c6h.13066369.0.0.328d79c6znCKp6</a></li></ol><a id="more"></a><h1 id="①"><a href="#①" class="headerlink" title="①"></a>①</h1><p>购买完云服务器ECS后，对于新手而言如何搭建Web环境是比较棘手的，分享一款简单易用的主机面板：宝塔面板，分享阿里云服务器安装宝塔面板图文教程：</p><p>本文以：Linux云服务器，CentOS 7.4 64位系统为例。</p><h2 id="一：开放安全组端口"><a href="#一：开放安全组端口" class="headerlink" title="一：开放安全组端口"></a>一：开放安全组端口</h2><p>什么是安全组？是阿里云ECS云服务器特有的虚拟防火墙，是一种安全机制，默认情况下宝塔面板依赖的端口并没有开放，所以我们第一步是自定义安全组开放端口，如下图所示：<br><img src="http://bbs.aliyun.com/attachment/Fid_207/207_1314033676496389_53df984b8026689.png" alt="img"></p><p>我们以开放8888号端口为例：<br>1、登录到云服务器ECS控制台；<br>2、点击“更多”–“网络和安全组”–“安全组配置”，点击“配置规则”<br>3、如下图所示，端口范围填：8888/8888，授权对象填：0.0.0.0/0<br><img src="http://bbs.aliyun.com/attachment/Fid_207/207_1314033676496389_a2508699857cd44.png" alt="img"></p><p>端口范围按照格式，填写我们需要开放的端口；授权对象填0.0.0.0/0的意思是对所有人开放这个端口，授权范围大家可以按照自己的需求自定义。<br>宝塔面板需要开放的端口有：8888、888、80、443、20、21，这6个端口都需要开放，大家按照上面的方法开放即可。</p><p>安全组不会操作，可以参考阿里云官方文档： <a href="https://help.aliyun.com/document_detail/58746.html?source=5176.11533457&amp;userCode=r3yteowb&amp;type=copy" target="_blank" rel="noopener">阿里云安全组的典型应用示例</a></p><h2 id="二：安装宝塔面板"><a href="#二：安装宝塔面板" class="headerlink" title="二：安装宝塔面板"></a>二：安装宝塔面板</h2><p>SSH的方式登录到你的云服务器ECS上，命令：ssh root@你的服务器IP<br>执行命令：<br><code>yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh</code>然后输入字母“y”，等待程序自行安装，大约2分钟</p><h2 id="三：保存宝塔面板后台登录名和密码"><a href="#三：保存宝塔面板后台登录名和密码" class="headerlink" title="三：保存宝塔面板后台登录名和密码"></a>三：保存宝塔面板后台登录名和密码</h2><p>执行上述命令后，程序自动安装，安装完毕后，会出现宝塔后台登录的账户名和密码，大家保存下来<br><code>Complete!==================================================================Congratulations! Install succeeded!==================================================================Bt-Panel: http://47.104.71.103:8888username: adminpassword: 66d52887Warning:If you cannot access the panel,release the following port (8888|888|80|443|20|21) in the security group==================================================================</code><br>宝塔面板后台登录地址为：http://你的服务器IP/8888<br>默认登录名为：admin<br>密码：安装完成后，会随机生成一段密码，请保存好</p><h2 id="四：登录到宝塔面板后台，安装web环境"><a href="#四：登录到宝塔面板后台，安装web环境" class="headerlink" title="四：登录到宝塔面板后台，安装web环境"></a>四：登录到宝塔面板后台，安装web环境</h2><p>使用刚才保存的账户名和密码，登录到宝塔面吧后台，一键安装Web环境，登录宝塔面板后台，地址：http://你的服务器IP/8888，输入刚才保存好的账户和密码</p><p>登录后会自动弹出安装Web环境页面，如下图所示：<br><img src="http://bbs.aliyun.com/attachment/Fid_207/207_1314033676496389_9e27130fd205b61.jpg" alt="img"></p><p>可选LNMP和LAMP两种Web环境，大家按需选择（推荐选择第一个LNMP），然后点击“一键安装”，等待即可。大约需要8分钟。</p><h2 id="五：创建站点"><a href="#五：创建站点" class="headerlink" title="五：创建站点"></a>五：创建站点</h2><p>Web环境一键安装完毕后，点击左侧“网站”—“添加站点”，如下图所示：<br><img src="http://bbs.aliyun.com/attachment/Fid_207/207_1314033676496389_2cb13619b62eeec.jpg" alt="img"></p><p>输入域名后，默认不会自动创建FTP和MySQL数据库，我们可以选择自动创建，方便省事，点击“提交”，创建成功后，会显示你的FTP和MySQL数据信息，例如：</p><blockquote><p>FTP账号资料<br>用户：aliyunbaike_com<br>密码：625GcrKSc3<br>只要将网站上传至以上FTP即可访问!<br>数据库账号资料<br>数据库名：aliyunbaike_com<br>用户：aliyunbaike_com<br>密码：e8QZfQDPDT</p></blockquote><p>大家将新建站点的FTP账户密码、数据库账户密码都保存好。</p><h2 id="六：域名解析"><a href="#六：域名解析" class="headerlink" title="六：域名解析"></a>六：域名解析</h2><p>将域名解析到你的服务器IP，解析出成功后，会显示“恭喜，站点创建成功！”</p><h2 id="七：网站安装"><a href="#七：网站安装" class="headerlink" title="七：网站安装"></a>七：网站安装</h2><p>将你的网站程序上传到域名所对应的根目录，如果是新站，输入第五步的数据库账户和密码。</p><h1 id="②"><a href="#②" class="headerlink" title="②"></a>②</h1><p>下面稍微介绍一下如何使用阿里云服务器安装<a href="https://www.bt.cn/?invite_code=MV9la3hmaXo=" target="_blank" rel="noopener">宝塔面板</a>。</p><h2 id="一、准备"><a href="#一、准备" class="headerlink" title="一、准备"></a>一、准备</h2><p>阿里云的<a href="https://www.aliyun.com/minisite/goods?userCode=ywqc0ubl&amp;share_source=copy_link" target="_blank" rel="noopener">云服务器</a>，即 阿里云ECS，默认的用户名 root，密码的话可以修改。</p><p>远程连接云服务器使用 ssh 软件工具，使用的是公网ip。</p><p>注意事项：出于性能考虑，服务器的操作系统一定要选Linux版本（centos或者ubuntu），不要选Window。</p><blockquote><p><strong>主要步骤</strong>：拥有一台云服务器》ssh工具连接云服务器》安装宝塔面板》配置云服务器安全组(放行端口)》宝塔面板在线访问成功</p></blockquote><h2 id="二、安装面板"><a href="#二、安装面板" class="headerlink" title="二、安装面板"></a>二、安装面板</h2><h3 id="1、使用ssh工具连接云服务器"><a href="#1、使用ssh工具连接云服务器" class="headerlink" title="1、使用ssh工具连接云服务器"></a>1、使用ssh工具连接云服务器</h3><p>windows下可以使用XShell，macOs的可以使用终端。</p><blockquote><p>因为SSH工具有很多种，找到自己用的舒服的工具就可以，不用纠结使用哪一种。</p></blockquote><p>我自己是用的<a href="https://www.jianshu.com/p/14c3b78ca570" target="_blank" rel="noopener">FinalShell</a>这一款SSH工具来进行Linux远程连接的,如何认为不安全的话，也可以继续用Xshell，只是需要激活码,如下图</p><p><img src="https://i.loli.net/2020/05/02/rAwQ6NvadVFEemS.png" alt="image.png"></p><h3 id="2、输入宝塔面板安装命令"><a href="#2、输入宝塔面板安装命令" class="headerlink" title="2、输入宝塔面板安装命令"></a>2、输入宝塔面板安装命令</h3><blockquote><p><strong>温馨提示</strong>：宝塔面板最近升级到了7.0版本，Centos7以上的系统建议安装宝塔面板最新版：<a href="https://www.bt.cn/bbs/thread-19376-1-1.html（宝塔面板7.x版本，点击查看安装命令）" target="_blank" rel="noopener">https://www.bt.cn/bbs/thread-19376-1-1.html（宝塔面板7.x版本，点击查看安装命令）</a><br><a href="https://www.bt.cn/bbs/thread-30562-1-1.html（宝塔面板6.x版本，点击查看安装命令）" target="_blank" rel="noopener">https://www.bt.cn/bbs/thread-30562-1-1.html（宝塔面板6.x版本，点击查看安装命令）</a></p></blockquote><p>安装方法这里也有介绍（以宝塔面板5.x版本举例）：<a href="http://www.bt.cn/bbs/thread-1186-1-1.html" target="_blank" rel="noopener">http://www.bt.cn/bbs/thread-1186-1-1.html</a></p><blockquote><p>以下安装命令是宝塔面板5.x版本的，请注意。如果安装出错了，就去安装宝塔面板7.x版本</p></blockquote><p><strong>Centos安装脚本：</strong></p><blockquote><p>yum install -y wget &amp;&amp; wget -O install.sh <a href="http://download.bt.cn/install/install.sh" target="_blank" rel="noopener">http://download.bt.cn/install/install.sh</a> &amp;&amp; sh install.sh</p></blockquote><p><strong>Ubuntu/Deepin安装脚本：</strong></p><blockquote><p>wget -O install.sh <a href="http://download.bt.cn/install/install-ubuntu.sh" target="_blank" rel="noopener">http://download.bt.cn/install/install-ubuntu.sh</a> &amp;&amp; sudo bash install.sh</p></blockquote><p>Debian安装脚本：</p><blockquote><p>wget -O install.sh <a href="http://download.bt.cn/install/install-ubuntu.sh" target="_blank" rel="noopener">http://download.bt.cn/install/install-ubuntu.sh</a> &amp;&amp; bash install.sh</p></blockquote><p>Fedora安装脚本:</p><blockquote><p>wget -O install.sh <a href="http://download.bt.cn/install/install.sh" target="_blank" rel="noopener">http://download.bt.cn/install/install.sh</a> &amp;&amp; bash install.sh</p></blockquote><p>前两者偏多。根据操作系统输入不同的安装命令，然后回车</p><p>此间不需要任何操作。</p><h3 id="3、宝塔面板安装成功"><a href="#3、宝塔面板安装成功" class="headerlink" title="3、宝塔面板安装成功"></a>3、宝塔面板安装成功</h3><p>稍等一分钟（有时候网速差可能久一点)，然后不要关闭窗口</p><p>最终可以看到如下界面</p><p><img src="https://i.loli.net/2020/05/02/VJea2FuRGSXx5iY.png" alt="image.png"></p><p>这里会显示宝塔后台地址和账号密码，可以手动复制到记事本暂时存起来。</p><h2 id="三、配置安全组"><a href="#三、配置安全组" class="headerlink" title="三、配置安全组"></a>三、配置安全组</h2><blockquote><p>如果你已经会设置安全组的话，就可以省略这一步，直接浏览器访问宝塔面板<br>访问地址：<strong>http://云服务器公网IP地址:8888/</strong></p></blockquote><p>上面的黄色的字也说了，如果不能访问面板，请在安全组中放行端口。</p><p>因为刚装的系统，自然也没有放行8888端口，面板后台无法打开</p><p><img src="https://i.loli.net/2020/05/02/6gsm9Ft1vXEyTHK.png" alt="image.png"></p><p>下面我们添加安全组</p><h3 id="1、进入云服务器管理后台"><a href="#1、进入云服务器管理后台" class="headerlink" title="1、进入云服务器管理后台"></a>1、进入云服务器管理后台</h3><p>进入<a href="https://www.aliyun.com/activity/daily/cloud?source=5176.11533457&amp;userCode=ywqc0ubl&amp;type=copy" target="_blank" rel="noopener">服务器</a>(实例)主页，点击右边的查看更多，点击安全组配置。</p><p><img src="https://i.loli.net/2020/05/02/yRi8TN31z6sGmQg.png" alt="image.png"></p><h3 id="2、然后可以看到一条安全组"><a href="#2、然后可以看到一条安全组" class="headerlink" title="2、然后可以看到一条安全组"></a>2、然后可以看到一条安全组</h3><p>点击配置规则（如果没有就新建一条安全组）</p><h3 id="3、点击快速创建规则"><a href="#3、点击快速创建规则" class="headerlink" title="3、点击快速创建规则"></a>3、点击快速创建规则</h3><p><img src="https://i.loli.net/2020/05/02/k81wxvdC4fcRTAB.png" alt="image.png"></p><h3 id="4、可以看到如下页面"><a href="#4、可以看到如下页面" class="headerlink" title="4、可以看到如下页面"></a>4、可以看到如下页面</h3><p><img src="https://i.loli.net/2020/05/02/v1EzkoN7jmZlG5K.png" alt="image.png"></p><p>常用端口可以勾选，相当于多选。也可以自定义端口，比如我们要将8888和888添加进去。</p><p>授权对象像之前已经填的 0.0.0.0/0 一样。</p><p>基本就是这样。</p><h3 id="5、最终安全记录如下"><a href="#5、最终安全记录如下" class="headerlink" title="5、最终安全记录如下"></a>5、最终安全记录如下</h3><p><img src="https://i.loli.net/2020/05/02/MBPJ9XnlIvd2OjQ.png" alt="image.png"></p><h3 id="6、浏览器访问宝塔面板成功"><a href="#6、浏览器访问宝塔面板成功" class="headerlink" title="6、浏览器访问宝塔面板成功"></a>6、浏览器访问宝塔面板成功</h3><p>然后我们再刷新之前的网页就能正常啦</p><blockquote><p>在云服务器上安装宝塔面板成功之后，访问地址：<strong>http://云服务器公网IP地址:8888/</strong><br>输入安装的时候产生的默认<strong>临时账号和密码登录</strong>。登录之后，请一定记得去改账号和密码哦！</p></blockquote><p><img src="https://i.loli.net/2020/05/02/xq5ncj4BTetbL3s.png" alt="image.png"></p><h3 id="7、修改临时账号和密码"><a href="#7、修改临时账号和密码" class="headerlink" title="7、修改临时账号和密码"></a>7、修改临时账号和密码</h3><blockquote><p>为了安全考虑，在云服务器上安装完成宝塔面板之后，你应该马上修改你的宝塔面板登录账户和密码（注意：这个账户和密码不是宝塔面板官网的，而是每个云服务器访问宝塔面板需要用到的账户和密码）</p></blockquote><p><img src="https://i.loli.net/2020/05/02/pjZnqBRT74yJcHu.png" alt="image.png"></p><p>修改账号和密码之后，后面访问登录就是你新设置的账号和密码了</p><p><img src="https://i.loli.net/2020/05/02/5eLR3YS6AMaG4fD.png" alt="image.png"></p><h3 id="8、绑定宝塔面板账号"><a href="#8、绑定宝塔面板账号" class="headerlink" title="8、绑定宝塔面板账号"></a>8、绑定宝塔面板账号</h3><blockquote><p>首先解释下为什么要绑定宝塔面板账号：每一台云服务器上安装了宝塔面板之后都需要去绑定你在宝塔面板官网上注册的 宝塔账号 这样每台云服务器的宝塔面板都可以享受你这个账号付过费的服务了。</p></blockquote><p>安装宝塔面板之后必做的事情：<a href="http://tencent.yundashi168.com/319.html" target="_blank" rel="noopener">如何注册和绑定宝塔面板账号？</a></p><p><a href="https://i.loli.net/2020/05/02/uqXTf6wH5a14mvl.png" target="_blank" rel="noopener"><img src="https://i.loli.net/2020/05/02/uqXTf6wH5a14mvl.png" alt="img"></a></p><h3 id="9、安装LNMP网站环境"><a href="#9、安装LNMP网站环境" class="headerlink" title="9、安装LNMP网站环境"></a>9、安装LNMP网站环境</h3><p>LNMP网站环境是Linux+Nginx+Mysql+PHP的组合搭配网站程序环境，用来快速搭建各种开源的网站程序（WordPress,帝国CMS，织梦，Zblog等）</p><p><strong>为什么选择LNMP?</strong> 主要归功于Nignx服务器的功能强大和性能出色，还能节省服务器内存开销。</p><p><img src="https://i.loli.net/2020/06/28/PmZn3esuv5NMG98.png" alt="img"></p><p>然后会出现这个界面，需要等待十分钟左右，这会你可以去忙其它事情，过会来看。</p><p><img src="https://i.loli.net/2020/06/28/AGP2w9CZ3phuFTl.png" alt="image.png"></p><h3 id="10、安装开源建站程序"><a href="#10、安装开源建站程序" class="headerlink" title="10、安装开源建站程序"></a>10、安装开源建站程序</h3><p>完成了以上步骤之后，你就可以随心所以的基于宝塔面板来安装各种建站程序了</p><ul><li><a href="http://tencent.yundashi168.com/421.html" target="_blank" rel="noopener">基于宝塔面板安装WordPress个人网站（图文教程）</a></li><li><a href="http://tencent.yundashi168.com/407.html" target="_blank" rel="noopener">基于宝塔面板搭建Typecho博客网站（图文教程）</a></li><li><a href="http://tencent.yundashi168.com/520.html" target="_blank" rel="noopener">基于宝塔面板安装Hexo个人博客（图文教程）</a></li></ul><hr><ul><li><a href="http://tencent.yundashi168.com/503.html" target="_blank" rel="noopener">基于宝塔面板对WordPress网站进行备份与恢复（网站迁移教程）</a></li><li><a href="http://tencent.yundashi168.com/258.html" target="_blank" rel="noopener">宝塔面板干什么用的? 有什么优点？搭建网站为什么要用它？</a></li><li><a href="http://tencent.yundashi168.com/325.html" target="_blank" rel="noopener">使用宝塔面板搭建网站之后的经验总结</a></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里两篇文章关于“CentOS安装宝塔面板”&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.aliyun.com/ask/233242?spm=a2c6h.13524658&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://developer.aliyun.com/ask/233242?spm=a2c6h.13524658&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://tencent.yundashi168.com/327.html?spm=a2c6h.13066369.0.0.328d79c6znCKp6&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://tencent.yundashi168.com/327.html?spm=a2c6h.13066369.0.0.328d79c6znCKp6&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
    
      <category term="服务器" scheme="https://melodyjerry.github.io/blog/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="Linux" scheme="https://melodyjerry.github.io/blog/tags/Linux/"/>
    
      <category term="宝塔" scheme="https://melodyjerry.github.io/blog/tags/%E5%AE%9D%E5%A1%94/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7操作SSH/SSHD服务(查看/启动/重启/自启)</title>
    <link href="https://melodyjerry.github.io/blog/2020/07/07/CentOS7%E6%93%8D%E4%BD%9CSSH%E3%80%81SSHD%E6%9C%8D%E5%8A%A1(%E6%9F%A5%E7%9C%8B%E3%80%81%E5%90%AF%E5%8A%A8%E3%80%81%E9%87%8D%E5%90%AF%E3%80%81%E8%87%AA%E5%90%AF)/"/>
    <id>https://melodyjerry.github.io/blog/2020/07/07/CentOS7操作SSH、SSHD服务(查看、启动、重启、自启)/</id>
    <published>2020-07-07T08:05:00.000Z</published>
    <updated>2020-07-10T06:29:45.658Z</updated>
    
    <content type="html"><![CDATA[<p>查看状态：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status sshd.service</span><br></pre></td></tr></tbody></table></figure><p>启动服务：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start sshd.service</span><br></pre></td></tr></tbody></table></figure><p>重启服务：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart sshd.service</span><br></pre></td></tr></tbody></table></figure><p>开机自启：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable sshd.service</span><br></pre></td></tr></tbody></table></figure><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;查看状态：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;systemctl status sshd.service&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;启动服务：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;systemctl start sshd.service&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;重启服务：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;systemctl restart sshd.service&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;开机自启：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;systemctl enable sshd.service&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="服务器" scheme="https://melodyjerry.github.io/blog/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="Linux" scheme="https://melodyjerry.github.io/blog/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>CentOS服务器升级Linux版本</title>
    <link href="https://melodyjerry.github.io/blog/2020/07/07/CentOS%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8D%87%E7%BA%A7Linux%E7%89%88%E6%9C%AC/"/>
    <id>https://melodyjerry.github.io/blog/2020/07/07/CentOS服务器升级Linux版本/</id>
    <published>2020-07-07T06:45:00.000Z</published>
    <updated>2020-07-10T06:28:41.908Z</updated>
    
    <content type="html"><![CDATA[<h1 id="检查系统版本"><a href="#检查系统版本" class="headerlink" title="检查系统版本"></a>检查系统版本</h1><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/redhat-release</span><br></pre></td></tr></tbody></table></figure><p>显示</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CentOS Linux release 7.1.1503 (Core)</span><br></pre></td></tr></tbody></table></figure><h1 id="备份重要数据"><a href="#备份重要数据" class="headerlink" title="备份重要数据"></a>备份重要数据</h1><p>备份例如<code>/etc</code>、<code>/var</code>、<code>/opt</code><br>如果是安装在虚拟机上，那么可以使用快照进行备份。像VMware虚拟机可以快照备份，当然更奢侈一点是备份整个虚拟机。也可以针对重要程序数据进行备份，例如MySQL, Appache, Nginx, DNS等等。</p><h1 id="运行yum命令升级"><a href="#运行yum命令升级" class="headerlink" title="运行yum命令升级"></a>运行yum命令升级</h1><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum clean all</span><br><span class="line">$ sudo yum update</span><br></pre></td></tr></tbody></table></figure><h1 id="重启系统"><a href="#重启系统" class="headerlink" title="重启系统"></a>重启系统</h1><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo reboot</span><br></pre></td></tr></tbody></table></figure><h1 id="查看现在系统版本"><a href="#查看现在系统版本" class="headerlink" title="查看现在系统版本"></a>查看现在系统版本</h1><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/redhat-release</span><br></pre></td></tr></tbody></table></figure><p>显示</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CentOS Linux release 7.8.2003 (Core)</span><br></pre></td></tr></tbody></table></figure><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;检查系统版本&quot;&gt;&lt;a href=&quot;#检查系统版本&quot; class=&quot;headerlink&quot; title=&quot;检查系统版本&quot;&gt;&lt;/a&gt;检查系统版本&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ cat /etc/redhat-release&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;显示&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CentOS Linux release 7.1.1503 (Core)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;备份重要数据&quot;&gt;&lt;a href=&quot;#备份重要数据&quot; class=&quot;headerlink&quot; title=&quot;备份重要数据&quot;&gt;&lt;/a&gt;备份重要数据&lt;/h1&gt;&lt;p&gt;备份例如&lt;code&gt;/etc&lt;/code&gt;、&lt;code&gt;/var&lt;/code&gt;、&lt;code&gt;/opt&lt;/code&gt;&lt;br&gt;如果是安装在虚拟机上，那么可以使用快照进行备份。像VMware虚拟机可以快照备份，当然更奢侈一点是备份整个虚拟机。也可以针对重要程序数据进行备份，例如MySQL, Appache, Nginx, DNS等等。&lt;/p&gt;
&lt;h1 id=&quot;运行yum命令升级&quot;&gt;&lt;a href=&quot;#运行yum命令升级&quot; class=&quot;headerlink&quot; title=&quot;运行yum命令升级&quot;&gt;&lt;/a&gt;运行yum命令升级&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo yum clean all&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo yum update&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;重启系统&quot;&gt;&lt;a href=&quot;#重启系统&quot; class=&quot;headerlink&quot; title=&quot;重启系统&quot;&gt;&lt;/a&gt;重启系统&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo reboot&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;查看现在系统版本&quot;&gt;&lt;a href=&quot;#查看现在系统版本&quot; class=&quot;headerlink&quot; title=&quot;查看现在系统版本&quot;&gt;&lt;/a&gt;查看现在系统版本&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ cat /etc/redhat-release&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;显示&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CentOS Linux release 7.8.2003 (Core)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="服务器" scheme="https://melodyjerry.github.io/blog/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="Linux" scheme="https://melodyjerry.github.io/blog/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>阿里云云服务器漏洞修复</title>
    <link href="https://melodyjerry.github.io/blog/2020/07/07/%E9%98%BF%E9%87%8C%E4%BA%91%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8D/"/>
    <id>https://melodyjerry.github.io/blog/2020/07/07/阿里云云服务器漏洞修复/</id>
    <published>2020-07-07T06:22:00.000Z</published>
    <updated>2020-07-10T06:27:55.648Z</updated>
    
    <content type="html"><![CDATA[<p>前阵子在阿里云618活动花“巨款”买下了一个T5型的云服务器，镜像版本为CentOS 7.4。由于是第一次购买阿里云的服务器，云安全中心提示需要修复的漏洞有98个，一看到就怕了，可以阿里云的修复要钱，最少都是30/台/月，耗不起。<br>于是，百度了一下，找到了3篇有用的文章</p><ol><li><a href="https://www.cnblogs.com/wang-yaz/p/10563394.html" target="_blank" rel="noopener">https://www.cnblogs.com/wang-yaz/p/10563394.html</a></li><li><a href="https://www.cnblogs.com/ice-line/p/9590445.html" target="_blank" rel="noopener">https://www.cnblogs.com/ice-line/p/9590445.html</a></li><li><a href="https://www.v2ex.com/t/598779" target="_blank" rel="noopener">https://www.v2ex.com/t/598779</a></li></ol><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前阵子在阿里云618活动花“巨款”买下了一个T5型的云服务器，镜像版本为CentOS 7.4。由于是第一次购买阿里云的服务器，云安全中心提示需要修复的漏洞有98个，一看到就怕了，可以阿里云的修复要钱，最少都是30/台/月，耗不起。&lt;br&gt;于是，百度了一下，找到了3篇有用的文章&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/wang-yaz/p/10563394.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.cnblogs.com/wang-yaz/p/10563394.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/ice-line/p/9590445.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.cnblogs.com/ice-line/p/9590445.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.v2ex.com/t/598779&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.v2ex.com/t/598779&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
    
      <category term="服务器" scheme="https://melodyjerry.github.io/blog/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="Linux" scheme="https://melodyjerry.github.io/blog/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux服务器安装Docker</title>
    <link href="https://melodyjerry.github.io/blog/2020/07/07/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E8%A3%85Docker/"/>
    <id>https://melodyjerry.github.io/blog/2020/07/07/Linux服务器安装Docker/</id>
    <published>2020-07-07T05:56:00.000Z</published>
    <updated>2020-07-10T06:26:52.506Z</updated>
    
    <content type="html"><![CDATA[<p>前阵子在阿里云618活动花“巨款”买下了一个T5型的云服务器，镜像版本为CentOS 7.4。现打算安装Docker。</p><h1 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h1><p><a href="https://docs.docker.com/install/linux/docker-ce/centos/" target="_blank" rel="noopener">https://docs.docker.com/install/linux/docker-ce/centos/</a></p><a id="more"></a><h1 id="卸载旧版"><a href="#卸载旧版" class="headerlink" title="卸载旧版"></a>卸载旧版</h1><p>按官方的文档，新版Docker无法覆盖旧版的，所以无比先卸载原来的旧版本</p><p>在Linux虚拟机上，我是装有旧版的，但由于服务器是全新的，无任何配置的，可以跳过这步骤</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 移除旧版本的 Docker</span><br><span class="line">yum remove docker \</span><br><span class="line">  docker-client \</span><br><span class="line">  docker-client-latest \</span><br><span class="line">  docker-common \</span><br><span class="line">  docker-latest \</span><br><span class="line">  docker-latest-logrotate \</span><br><span class="line">  docker-logrotate \</span><br><span class="line">  docker-selinux \</span><br><span class="line">  docker-engine-selinux \</span><br><span class="line">  docker-engine</span><br></pre></td></tr></tbody></table></figure><h1 id="安装-Docker"><a href="#安装-Docker" class="headerlink" title="安装 Docker"></a>安装 Docker</h1><ol><li>安装软件包</li></ol><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 安装 Docker 依赖</span><br><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></tbody></table></figure><ol start="2"><li>配置阿里云Docker Yum源(个人觉的好)</li></ol><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 添加源</span><br><span class="line">yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line"># 更新 yum 缓存</span><br><span class="line">yum makecache fast</span><br></pre></td></tr></tbody></table></figure><ol start="3"><li>安装最新版本的Docker</li></ol><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 安装 Docker-CE</span><br><span class="line">yum install -y docker-ce</span><br><span class="line"></span><br><span class="line"># 开启 Docker</span><br><span class="line">systemctl start docker</span><br><span class="line"></span><br><span class="line"># 安装 Docker Compose</span><br><span class="line">curl -L "https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose</span><br><span class="line">chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></tbody></table></figure><h1 id="相关防火墙配置"><a href="#相关防火墙配置" class="headerlink" title="相关防火墙配置"></a>相关防火墙配置</h1><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># Docker 和 Swarm 相关防火墙配置</span><br><span class="line">systemctl status firewalld</span><br><span class="line">systemctl start firewalld</span><br><span class="line">firewall-cmd --add-port=9010/tcp --permanent</span><br><span class="line">firewall-cmd --add-port=9020/tcp --permanentfirewall-cmd --add-port=443/tcp --permanent</span><br><span class="line">firewall-cmd --add-port=80/tcp --permanent</span><br><span class="line">firewall-cmd --add-port=80/udp --permanentfirewall-cmd --add-port=22/tcp --permanent</span><br><span class="line">firewall-cmd --add-port=22/udp --permanent</span><br><span class="line">firewall-cmd --reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></tbody></table></figure><p>这里说明一下如果开始 firewalld 服务被锁定<code>Unit is masked</code></p><p>需要先解除锁定，然后才能开放端口</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl unmask firewall</span><br></pre></td></tr></tbody></table></figure><h1 id="开机启动"><a href="#开机启动" class="headerlink" title="开机启动"></a>开机启动</h1><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 开机自启动</span><br><span class="line">systemctl enable firewalld</span><br><span class="line">systemctl enable docker</span><br></pre></td></tr></tbody></table></figure><h1 id="可能出现的问题"><a href="#可能出现的问题" class="headerlink" title="可能出现的问题"></a>可能出现的问题</h1><p>在配置阿里云Docker Yum源时候，可能出现<code>Loaded plugins: fastestmirror</code>的错误提示，百度上的解决如下：</p><p>1、</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># vi  /etc/yum/pluginconf.d/fastestmirror.conf</span><br><span class="line">enabled=0    //由 1 改成0 ，禁用该插件</span><br><span class="line">verbose=0</span><br><span class="line">always_print_best_host = true</span><br><span class="line">socket_timeout=3</span><br><span class="line"></span><br><span class="line">#  Relative paths are relative to the cachedir (and so works for users as well</span><br><span class="line"># as root).</span><br><span class="line">hostfilepath=timedhosts.txt</span><br><span class="line">maxhostfileage=10</span><br><span class="line">maxthreads=15</span><br><span class="line"></span><br><span class="line">#exclude=.gov, facebook</span><br><span class="line"></span><br><span class="line">#include_only=.nl,.de,.uk,.ie</span><br></pre></td></tr></tbody></table></figure><p>2、</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#vi /etc/yum.conf</span><br><span class="line"></span><br><span class="line">[main]</span><br><span class="line">cachedir=/var/cache/yum/$basearch/$releasever</span><br><span class="line">keepcache=0</span><br><span class="line">debuglevel=2</span><br><span class="line">logfile=/var/log/yum.log</span><br><span class="line">exactarch=1</span><br><span class="line">obsoletes=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">plugins=1 #将plugins的值修改为0</span><br><span class="line">installonly_limit=5</span><br></pre></td></tr></tbody></table></figure><p>3、</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum clean dbcache</span><br></pre></td></tr></tbody></table></figure><p>4、重新执行配置源和安装命令即可</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前阵子在阿里云618活动花“巨款”买下了一个T5型的云服务器，镜像版本为CentOS 7.4。现打算安装Docker。&lt;/p&gt;
&lt;h1 id=&quot;官方文档&quot;&gt;&lt;a href=&quot;#官方文档&quot; class=&quot;headerlink&quot; title=&quot;官方文档&quot;&gt;&lt;/a&gt;官方文档&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://docs.docker.com/install/linux/docker-ce/centos/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://docs.docker.com/install/linux/docker-ce/centos/&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="服务器" scheme="https://melodyjerry.github.io/blog/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="Linux" scheme="https://melodyjerry.github.io/blog/tags/Linux/"/>
    
      <category term="Docker" scheme="https://melodyjerry.github.io/blog/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>服务器安装Nginx</title>
    <link href="https://melodyjerry.github.io/blog/2020/07/07/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E8%A3%85Nginx/"/>
    <id>https://melodyjerry.github.io/blog/2020/07/07/服务器安装Nginx/</id>
    <published>2020-07-07T05:26:00.000Z</published>
    <updated>2020-07-10T06:25:29.533Z</updated>
    
    <content type="html"><![CDATA[<p>图方便，用了个自动脚本：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://mirrors.linuxeye.com/oneinstack-full.tar.gz &amp;&amp; tar xzf oneinstack-full.tar.gz &amp;&amp; ./oneinstack/install.sh --nginx_option 1</span><br></pre></td></tr></tbody></table></figure><p>安装 Nginx 成功，重启服务器，连接 SSH</p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;图方便，用了个自动脚本：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget http://mirrors.linuxeye.com/oneinstack-full.tar.gz &amp;amp;&amp;amp; tar xzf oneinstack-full.tar.gz &amp;amp;&amp;amp; ./oneinstack/install.sh --nginx_option 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;安装 Nginx 成功，重启服务器，连接 SSH&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="服务器" scheme="https://melodyjerry.github.io/blog/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="Linux" scheme="https://melodyjerry.github.io/blog/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+GitEE 搭建、备份、恢复、多终端</title>
    <link href="https://melodyjerry.github.io/blog/2020/07/07/Hexo%20+%20GitEE%20%E6%90%AD%E5%BB%BA%E3%80%81%E5%A4%87%E4%BB%BD%E3%80%81%E6%81%A2%E5%A4%8D%E3%80%81%E5%A4%9A%E7%BB%88%E7%AB%AF/"/>
    <id>https://melodyjerry.github.io/blog/2020/07/07/Hexo + GitEE 搭建、备份、恢复、多终端/</id>
    <published>2020-07-07T05:21:00.000Z</published>
    <updated>2020-07-10T06:22:26.068Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p></blockquote><p>Hexo 是使用的比较多的博客框架了，之所以没有使用 GitHub 而选择了码云，</p><ol><li>我有自己的 VPS 不需要使用 GitHub Pages ，所以本文也没有关于如何使用 GitHub Pages 的教程；</li><li>GitHub 上私有仓库是收费的，码云上面能创建免费的私有仓库。也有人选择使用 Docker 来创建博客环境，做镜像备份.</li></ol><p>这里没有使用此方案，各有所好吧！</p><a id="more"></a><h1 id="1-环境"><a href="#1-环境" class="headerlink" title="1.环境"></a>1.环境</h1><p>主服务器系统版本与内核版本：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@dbn- ~]# cat /etc/redhat-release</span><br><span class="line">CentOS Linux release 7.5.1804 (Core) </span><br><span class="line">[root@dbn- ~]# uname -r</span><br><span class="line">3.10.0-862.3.2.el7.x86_64</span><br></pre></td></tr></tbody></table></figure><p>测试服务器系统版本与内核版本：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@host ~]# cat /etc/redhat-release</span><br><span class="line">CentOS Linux release 7.3.1611 (Core) </span><br><span class="line">[root@host ~]# uname -r</span><br><span class="line">4.10.4-1.el7.elrepo.x86_64</span><br></pre></td></tr></tbody></table></figure><h1 id="2-安装"><a href="#2-安装" class="headerlink" title="2.安装"></a>2.安装</h1><h2 id="2-1-wget"><a href="#2-1-wget" class="headerlink" title="2.1 wget"></a>2.1 wget</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget</span><br></pre></td></tr></tbody></table></figure><h2 id="2-2-NodeJS"><a href="#2-2-NodeJS" class="headerlink" title="2.2 NodeJS"></a>2.2 NodeJS</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 下载nodejs最新的bin包</span><br><span class="line">wget https://nodejs.org/dist/v12.18.2/node-v12.18.2-linux-x64.tar.xz</span><br><span class="line"># 解压</span><br><span class="line">xz -d node-v12.18.2-linux-x64.tar.xz</span><br><span class="line">tar -xf node-v12.18.2-linux-x64.tar</span><br><span class="line"># 移动目录</span><br><span class="line">mv node-v12.18.2-linux-x64 /usr/local/nodejs</span><br><span class="line"># 部署文件</span><br><span class="line">ln -s /usr/local/nodejs/bin/node /usr/bin/node</span><br><span class="line">ln -s /usr/local/nodejs/bin/npm /usr/bin/npm</span><br></pre></td></tr></tbody></table></figure><p>可以去<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">官方网站</a>下载，我这里使用的类型为：Linux Binaries (x64)</p><p><strong>测试</strong></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@dbn-japan packages]# node -v</span><br><span class="line">v12.18.2</span><br><span class="line">[root@dbn-japan packages]# npm -v</span><br><span class="line">6.14.5</span><br></pre></td></tr></tbody></table></figure><p>如果输出了版本号，说明安装成功。</p><h2 id="2-3-Git"><a href="#2-3-Git" class="headerlink" title="2.3 Git"></a>2.3 Git</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y git</span><br></pre></td></tr></tbody></table></figure><p>初始化设置：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email "vip@email.com"</span><br><span class="line">git config --global user.name "MelodyJerry"</span><br></pre></td></tr></tbody></table></figure><h2 id="2-4-Hexo"><a href="#2-4-Hexo" class="headerlink" title="2.4 Hexo"></a>2.4 Hexo</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></tbody></table></figure><p>安装后尝试执行命令： hexo </p><p>如果出现下面的输出，按我下面的方法解决，没有则跳过。</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@dbn-japan packages]# hexo</span><br><span class="line">-bash: hexo: command not found</span><br></pre></td></tr></tbody></table></figure><p>编辑环境变量文件： vim /etc/profile ，在文件末尾增加下面设置：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=$PATH:/usr/local/nodejs/lib/node_modules/hexo-cli/bin</span><br></pre></td></tr></tbody></table></figure><p>刷新环境变量： source /etc/profile ，这时再运行命令 hexo 就会有正确的输出了。</p><h1 id="3-配置"><a href="#3-配置" class="headerlink" title="3.配置"></a>3.配置</h1><h2 id="3-1-创建项目与分支"><a href="#3-1-创建项目与分支" class="headerlink" title="3.1 创建项目与分支"></a>3.1 创建项目与分支</h2><p><a href="https://img2018.cnblogs.com/blog/1065454/201811/1065454-20181112223524269-603079356.png" target="_blank" rel="noopener"><img src="https://img2018.cnblogs.com/blog/1065454/201811/1065454-20181112223524269-603079356.png" alt="img"></a></p><p>创建新的分支：sources</p><p><a href="https://img2018.cnblogs.com/blog/1065454/201811/1065454-20181112223651823-1038516991.png" target="_blank" rel="noopener"><img src="https://img2018.cnblogs.com/blog/1065454/201811/1065454-20181112223651823-1038516991.png" alt="img"></a></p><ul><li><strong>master</strong>：存放 Hexo 编译生成的静态资源。</li><li><strong>sources</strong>：存放源文件，用来备份博客。</li></ul><h2 id="3-2-设置-SSH-Key"><a href="#3-2-设置-SSH-Key" class="headerlink" title="3.2 设置 SSH Key"></a>3.2 设置 SSH Key</h2><p>运行下面的命令创建 SSH Key，邮箱部分改成你创建账户时候的邮箱：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@dbn-japan blog.dbnuo.org]# ssh-keygen -t rsa -C "dbnuo@foxmail.com"</span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file in which to save the key (/root/.ssh/id_rsa): # 目录</span><br><span class="line">Enter passphrase (empty for no passphrase): # 输入密码，可回车跳过</span><br><span class="line">Enter same passphrase again: # 再次输入密码</span><br></pre></td></tr></tbody></table></figure><p>查看公开密钥：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></tbody></table></figure><p> 将公开密钥添加至码云。</p><p><a href="https://img2018.cnblogs.com/blog/1065454/201811/1065454-20181112223849791-551396003.png" target="_blank" rel="noopener"><img src="https://img2018.cnblogs.com/blog/1065454/201811/1065454-20181112223849791-551396003.png" alt="img"></a></p><h2 id="3-3-拉取项目"><a href="#3-3-拉取项目" class="headerlink" title="3.3 拉取项目"></a>3.3 拉取项目</h2><p>跳转至网站根目录，克隆项目至本地：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://gitee.com/dbnuo/bnd-hexo.git</span><br></pre></td></tr></tbody></table></figure><p>跳转至拉取的项目目录：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># 创建 hexo 目录</span><br><span class="line">mkdir hexo</span><br><span class="line"># 进入 hexo 目录</span><br><span class="line">cd hexo/</span><br><span class="line"># 初始化 hexo 目录</span><br><span class="line">hexo init</span><br><span class="line">npm install</span><br><span class="line"># 安装插件</span><br><span class="line">npm install hexo-generator-index --save</span><br><span class="line">npm install hexo-generator-archive --save</span><br><span class="line">npm install hexo-generator-category --save</span><br><span class="line">npm install hexo-generator-tag --save</span><br><span class="line">npm install hexo-server --save</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-deployer-heroku --save</span><br><span class="line">npm install hexo-deployer-rsync --save</span><br><span class="line">npm install hexo-deployer-openshift --save</span><br><span class="line">npm install hexo-renderer-marked --save</span><br><span class="line">npm install hexo-renderer-stylus --save</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></tbody></table></figure><h1 id="4-建站"><a href="#4-建站" class="headerlink" title="4.建站"></a>4.建站</h1><p>先看文件夹里都有什么：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@dbn-japan hexo]# ls -a</span><br><span class="line">.  ..  _config.yml  .gitignore  node_modules  package.json  package-lock.json  scaffolds  source  themes</span><br></pre></td></tr></tbody></table></figure><ul><li>_config.yml：站点的配置文件，需要备份；</li><li>themes：主题文件夹，需要备份；</li><li>source：博客文章的 .md 文件，需要备份；</li><li>scaffolds：文章的模板，需要备份；</li><li>package.json：安装包的名称，需要备份；</li><li>.gitignore：限定在 push 时哪些文件可以忽略，需要备份；</li><li>.git：主题和站点都有，标志这是一个 git 项目，不需要备份；</li><li>node_modules：是安装包的目录，在执行 npm install 的时候会重新生成，不需要备份；</li><li>public：是 hexo g 生成的静态网页，不需要备份；</li><li>.deploy_git：同上，hexo g 也会生成，不需要备份；</li><li>db.json：文件，不需要备份。</li></ul><h2 id="4-1-配置-config-yml"><a href="#4-1-配置-config-yml" class="headerlink" title="4.1 配置 _config.yml"></a>4.1 配置 _config.yml</h2><p>基础配置可以参考<a href="https://hexo.io/zh-cn/docs/configuration" target="_blank" rel="noopener">官方文档</a>的配置说明。这里需要在末尾添加 Git 的配置：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">...deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://gitee.com/dbnuo/bnd-hexo.git</span><br><span class="line">  branch: master</span><br><span class="line">  message: 'web updata: {{now("YYYY-MM-DD HH/mm/ss")}}'</span><br></pre></td></tr></tbody></table></figure><h2 id="4-2-生成页面并提交"><a href="#4-2-生成页面并提交" class="headerlink" title="4.2 生成页面并提交"></a>4.2 生成页面并提交</h2><p>运行命令： <code>hexo cl &amp;&amp; hexo g -d</code> 输入用户名和密码后，页面代码就会提交至码云项目中。</p><p><a href="https://img2018.cnblogs.com/blog/1065454/201811/1065454-20181113103505392-1803344108.png" target="_blank" rel="noopener"><img src="https://img2018.cnblogs.com/blog/1065454/201811/1065454-20181113103505392-1803344108.png" alt="img"></a></p><p>将网站目录指定至 hexo 的 public 文件夹中，访问网站：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd hexo</span><br><span class="line">hexo s # hexo server 默认是4000端口</span><br></pre></td></tr></tbody></table></figure><p><a href="https://img2018.cnblogs.com/blog/1065454/201811/1065454-20181113103622833-1181993845.png" target="_blank" rel="noopener"><img src="https://img2018.cnblogs.com/blog/1065454/201811/1065454-20181113103622833-1181993845.png" alt="img"></a></p><h1 id="5-备份"><a href="#5-备份" class="headerlink" title="5.备份"></a>5.备份</h1><p>跳转至项目目录 bnd-hexo：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b sources # 创建切换分支</span><br><span class="line">git push origin sources # 提交代码至分支</span><br></pre></td></tr></tbody></table></figure><p>提交至码云项目分支：</p><p><a href="https://img2018.cnblogs.com/blog/1065454/201811/1065454-20181113105109879-1083473093.png" target="_blank" rel="noopener"><img src="https://img2018.cnblogs.com/blog/1065454/201811/1065454-20181113105109879-1083473093.png" alt="img"></a></p><p>至此搭建完毕，代码也备份到项目中了。为了测试备份恢复，我新建了个文章 test 并提交进行测试。</p><p><a href="https://img2018.cnblogs.com/blog/1065454/201811/1065454-20181113105556438-1191039737.png" target="_blank" rel="noopener"><img src="https://img2018.cnblogs.com/blog/1065454/201811/1065454-20181113105556438-1191039737.png" alt="img"></a></p><h1 id="6-恢复"><a href="#6-恢复" class="headerlink" title="6.恢复"></a>6.恢复</h1><p>切换至测试服务器，基础的安装和设置可以参考上面的流程。</p><p>跳转至网站的根目录：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"># 拉取项目至本地</span><br><span class="line">git clone https://gitee.com/dbnuo/bnd-hexo.git</span><br><span class="line"># 跳转至目录</span><br><span class="line">cd bnd-hexo</span><br><span class="line"># 创建分支并拉取</span><br><span class="line">git checkout -b sources origin/sources</span><br><span class="line"># 跳转至源文件目录</span><br><span class="line">cd hexo</span><br><span class="line"># 初始安装</span><br><span class="line">npm install</span><br><span class="line"></span><br><span class="line">npm install hexo-generator-index --save</span><br><span class="line">npm install hexo-generator-archive --save</span><br><span class="line">npm install hexo-generator-category --save</span><br><span class="line">npm install hexo-generator-tag --save</span><br><span class="line">npm install hexo-server --save</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-deployer-heroku --save</span><br><span class="line">npm install hexo-deployer-rsync --save</span><br><span class="line">npm install hexo-deployer-openshift --save</span><br><span class="line">npm install hexo-renderer-marked --save</span><br><span class="line">npm install hexo-renderer-stylus --save</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></tbody></table></figure><p>执行完毕，hexo 就恢复了，可以正常操作了。</p><h1 id="7-多终端"><a href="#7-多终端" class="headerlink" title="7.多终端"></a>7.多终端</h1><p>至此两台服务器都对一个项目库进行操作，可以说是多终端了，我在测试服务器新建了个文章： hexo new post “test2” </p><p>创建成功后提交上传。</p><p>切换回主服务器：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 跳转至项目目录</span><br><span class="line">cd bnd-hexo</span><br><span class="line"># 拉取项目</span><br><span class="line">git pull origin sources</span><br><span class="line"># 跳转至源文件目录</span><br><span class="line">cd hexo/</span><br><span class="line"># 重新编译</span><br><span class="line">hexo cl &amp;&amp; hexo g -d</span><br></pre></td></tr></tbody></table></figure><p>再访问网站：</p><p><a href="https://img2018.cnblogs.com/blog/1065454/201811/1065454-20181113114656020-1660436245.png" target="_blank" rel="noopener"><img src="https://img2018.cnblogs.com/blog/1065454/201811/1065454-20181113114656020-1660436245.png" alt="img"></a></p><p>看到这里出现了文章 test2 ，至此多终端编辑操作成功。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Hexo 是使用的比较多的博客框架了，之所以没有使用 GitHub 而选择了码云，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;我有自己的 VPS 不需要使用 GitHub Pages ，所以本文也没有关于如何使用 GitHub Pages 的教程；&lt;/li&gt;
&lt;li&gt;GitHub 上私有仓库是收费的，码云上面能创建免费的私有仓库。也有人选择使用 Docker 来创建博客环境，做镜像备份.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这里没有使用此方案，各有所好吧！&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Hexo" scheme="https://melodyjerry.github.io/blog/tags/Hexo/"/>
    
      <category term="博客" scheme="https://melodyjerry.github.io/blog/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>服务器端简单Demo</title>
    <link href="https://melodyjerry.github.io/blog/2020/07/07/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E7%AE%80%E5%8D%95Demo/"/>
    <id>https://melodyjerry.github.io/blog/2020/07/07/服务器端简单Demo/</id>
    <published>2020-07-07T05:05:00.000Z</published>
    <updated>2020-07-10T06:20:13.082Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CSrvDemoDlg::OnBnClickedOk()</span><br><span class="line">{</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> 在此添加控件通知处理程序代码</span></span><br><span class="line">    <span class="comment">//创建一个套接字的步骤</span></span><br><span class="line">    <span class="comment">//定义套接字变量</span></span><br><span class="line">    SOCKET ls;</span><br><span class="line">    <span class="comment">//创建套接字</span></span><br><span class="line">    ls=socket(AF_INET,SOCK_STREAM,IPPROTO_TCP);</span><br><span class="line">    <span class="comment">//判断套接字是否成功，失败则退出</span></span><br><span class="line">    <span class="keyword">if</span>(ls==INVALID_SOCKET){</span><br><span class="line">        printf(<span class="string">"Error at socket():%d\n"</span>,WSAGetLastError());</span><br><span class="line">        WSACleanup();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//绑定套接字和套接字地址</span></span><br><span class="line">    sockaddr_in sa;</span><br><span class="line">    sa.sin_family=AF_INET;</span><br><span class="line">    sa.sin_addr.S_un.S_addr=inet_addr(<span class="string">"127.0.0.1"</span>);</span><br><span class="line">    sa.sin_port=htons(<span class="number">12345</span>);</span><br><span class="line">    <span class="comment">//判断是否绑定成功</span></span><br><span class="line">    <span class="keyword">if</span>(bind(ls,(SOCKADDR*)&amp;sa,sizeof(sa))==SOCKET_ERROR){</span><br><span class="line">        printf(<span class="string">"bind()failed.\n"</span>);</span><br><span class="line">        closesocket(ls);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//把套接字置入侦听状态</span></span><br><span class="line">    listen(ls,<span class="number">3</span>);</span><br><span class="line">    <span class="comment">//接受连接请求</span></span><br><span class="line">    SOCKET snew;</span><br><span class="line">    snew=accept(ls,NULL,NULL);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> szmsg[<span class="number">50</span>];</span><br><span class="line">    strcpy(szmsg,<span class="string">"welcome to hgu.edu!\r\n"</span>);</span><br><span class="line">    <span class="comment">//发送数据</span></span><br><span class="line">    send(snew,szmsg,strlen(szmsg),<span class="number">0</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line
      
    
    </summary>
    
    
    
      <category term="Java" scheme="https://melodyjerry.github.io/blog/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>【LeetCode】9. 回文数</title>
    <link href="https://melodyjerry.github.io/blog/2020/06/10/%E3%80%90LeetCode%E3%80%919.%20%E5%9B%9E%E6%96%87%E6%95%B0/"/>
    <id>https://melodyjerry.github.io/blog/2020/06/10/【LeetCode】9. 回文数/</id>
    <published>2020-06-10T03:58:00.000Z</published>
    <updated>2020-07-10T06:15:29.574Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>判断一个整数是否是回文数。</p><p>回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。</p><p>示例 1:</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: 121</span><br><span class="line">输出: true</span><br></pre></td></tr></tbody></table></figure><p>示例 2:</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: -121</span><br><span class="line">输出: false</span><br><span class="line">解释: 从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。</span><br></pre></td></tr></tbody></table></figure><p>示例 3:</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: 10</span><br><span class="line">输出: false</span><br><span class="line">解释: 从右向左读, 为 01 。因此它不是一个回文数。</span><br></pre></td></tr></tbody></table></figure><p>进阶:</p><ul><li>你能不将整数转为字符串来解决这个问题吗？</li></ul><a id="more"></a><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>用数学方法直接计算出倒数</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isPalindrome</span><span class="params">(<span class="keyword">int</span> x)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span>(x &lt; <span class="number">0</span>)  <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">int</span> rec = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> num = x;</span><br><span class="line">        <span class="keyword">while</span>(num != <span class="number">0</span>) {</span><br><span class="line">            rec = rec * <span class="number">10</span> + num % <span class="number">10</span>;</span><br><span class="line">            num /= <span class="number">10</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> rec == x;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h1><ul><li>将整数转为字符串来解决<br><a href="https://leetcode-cn.com/problems/palindrome-number/solution/dong-hua-hui-wen-shu-de-san-chong-jie-fa-fa-jie-ch/" target="_blank" rel="noopener">动画：回文数的三种解法 | 法解种三的数文回：画动</a><br><a href="https://leetcode-cn.com/problems/palindrome-number/solution/hui-wen-shu-by-leetcode-solution/" target="_blank" rel="noopener">回文数</a></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h1&gt;&lt;p&gt;判断一个整数是否是回文数。&lt;/p&gt;
&lt;p&gt;回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。&lt;/p&gt;
&lt;p&gt;示例 1:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;输入: 121&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出: true&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;示例 2:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;输入: -121&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出: false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;解释: 从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;示例 3:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;输入: 10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出: false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;解释: 从右向左读, 为 01 。因此它不是一个回文数。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;进阶:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;你能不将整数转为字符串来解决这个问题吗？&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="算法" scheme="https://melodyjerry.github.io/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>超星学习通脚本（油猴）</title>
    <link href="https://melodyjerry.github.io/blog/2020/06/09/%E8%B6%85%E6%98%9F%E5%AD%A6%E4%B9%A0%E9%80%9A%E8%84%9A%E6%9C%AC%EF%BC%88%E6%B2%B9%E7%8C%B4%EF%BC%89/"/>
    <id>https://melodyjerry.github.io/blog/2020/06/09/超星学习通脚本（油猴）/</id>
    <published>2020-06-09T09:52:00.000Z</published>
    <updated>2020-07-10T06:14:29.879Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="脚本①"><a href="#脚本①" class="headerlink" title="脚本①"></a>脚本①</h1><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ==UserScript==</span></span><br><span class="line"><span class="comment">// @name         熊猫超星网课助手</span></span><br><span class="line"><span class="comment">// @namespace    xiongmao</span></span><br><span class="line"><span class="comment">// @version      9.0.1</span></span><br><span class="line"><span class="comment">// @description  自动挂机看尔雅MOOC，支持视频、音频、文档、图书自动完成，章节测验自动答题提交，支持自动切换任务点、挂机阅读时长、自动登录等，解除各类功能限制，开放自定义参数</span></span><br><span class="line"><span class="comment">// @author       xiongmao</span></span><br><span class="line"><span class="comment">// @match        *://*.chaoxing.com/*</span></span><br><span class="line"><span class="comment">// @match        *://*.edu.cn/*</span></span><br><span class="line"><span class="comment">// @connect      api.xmlm8.com</span></span><br><span class="line"><span class="comment">// @run-at       document-end</span></span><br><span class="line"><span class="comment">// @grant        unsafeWindow</span></span><br><span class="line"><span class="comment">// @grant        GM_xmlhttpRequest</span></span><br><span class="line"><span class="comment">// @grant        GM_setClipboard</span></span><br><span class="line"><span class="comment">// @license      MIT</span></span><br><span class="line"><span class="comment">// ==/UserScript==</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置修改后，需要刷新或重新打开网课页面才会生效</span></span><br><span class="line"><span class="keyword">var</span> setting = {</span><br><span class="line">    <span class="comment">// 8E3 == 8000，科学记数法，表示毫秒数</span></span><br><span class="line">    time: <span class="number">8E3</span> <span class="comment">// 默认响应速度为8秒，不建议小于5秒</span></span><br><span class="line">    ,<span class="attr">token</span>: <span class="string">''</span> <span class="comment">// 捐助用户可以使用定制功能，更精准的匹配答案，此处填写捐助后获取的识别码</span></span><br><span class="line">    ,<span class="attr">review</span>: <span class="number">0</span> <span class="comment">// 复习模式，完整挂机视频(音频)时长，支持挂机任务点已完成的视频和音频，默认关闭</span></span><br><span class="line">    ,<span class="attr">queue</span>: <span class="number">1</span> <span class="comment">// 队列模式，开启后任务点逐一完成，关闭则单页面所有任务点同时进行，默认开启</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1代表开启，0代表关闭</span></span><br><span class="line">    ,<span class="attr">video</span>: <span class="number">1</span> <span class="comment">// 视频支持后台、切换窗口不暂停，支持多视频，默认开启</span></span><br><span class="line">    ,<span class="attr">work</span>: <span class="number">0</span> <span class="comment">// 自动答题功能(章节测验)，作业需要手动开启查询，高准确率，默认开启</span></span><br><span class="line">    ,<span class="attr">audio</span>: <span class="number">1</span> <span class="comment">// 音频自动播放，与视频功能共享vol和rate参数，默认开启</span></span><br><span class="line">    ,<span class="attr">book</span>: <span class="number">1</span> <span class="comment">// 图书阅读任务点，非课程阅读任务点，默认开启</span></span><br><span class="line">    ,<span class="attr">docs</span>: <span class="number">1</span> <span class="comment">// 文档阅读任务点，PPT类任务点自动完成阅读任务，默认开启</span></span><br><span class="line">    <span class="comment">// 本区域参数，上方为任务点功能，下方为独立功能</span></span><br><span class="line">    ,<span class="attr">jump</span>: <span class="number">1</span> <span class="comment">// 自动切换任务点、章节、课程(需要配置course参数)，默认开启</span></span><br><span class="line">    ,<span class="attr">read</span>: <span class="string">'0'</span> <span class="comment">// 挂机课程阅读时间，单位是分钟，'65'代表挂机65分钟，请手动打开阅读页面，默认'0'分钟</span></span><br><span class="line">    ,<span class="attr">face</span>: <span class="number">0</span> <span class="comment">// 解除面部识别(不支持二维码类面部采集)，此功能仅为临时解除，默认关闭</span></span><br><span class="line">    ,<span class="attr">total</span>: <span class="number">0</span> <span class="comment">// 显示课程进度的统计数据，在学习进度页面的上方展示，默认关闭</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 仅开启video(audio)时，修改此处才会生效</span></span><br><span class="line">    ,<span class="attr">line</span>: <span class="string">'公网1'</span> <span class="comment">// 视频播放的默认资源线路，此功能适用于系统默认线路无资源，默认'公网1'</span></span><br><span class="line">    ,<span class="attr">http</span>: <span class="string">'标清'</span> <span class="comment">// 视频播放的默认清晰度，无效参数则使用系统默认清晰度，默认'标清'</span></span><br><span class="line">    <span class="comment">// 本区域参数，上方为video功能独享，下方为audio功能共享</span></span><br><span class="line">    ,<span class="attr">vol</span>: <span class="string">'0'</span> <span class="comment">// 默认音量的百分数，设定范围：[0,100]，'0'为静音，默认'0'</span></span><br><span class="line">    ,<span class="attr">rate</span>: <span class="string">'3'</span> <span class="comment">// 视频播放默认倍率，参数范围0∪[0.0625,16]，'0'为秒过，默认'1'倍</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 仅开启work时，修改此处才会生效</span></span><br><span class="line">    ,<span class="attr">auto</span>: <span class="number">0</span> <span class="comment">// 答题完成后自动提交，默认关闭 改为1开启</span></span><br><span class="line">    ,<span class="attr">none</span>: <span class="number">0</span> <span class="comment">// 无匹配答案时执行默认操作，关闭后若题目无匹配答案则会暂时保存已作答的题目，默认开启</span></span><br><span class="line">    ,<span class="attr">scale</span>: <span class="number">0</span> <span class="comment">// 富文本编辑器高度自动拉伸，用于文本类题目，答题框根据内容自动调整大小，默认关闭</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 仅开启jump时，修改此处才会生效</span></span><br><span class="line">    ,<span class="attr">course</span>: <span class="number">0</span> <span class="comment">// 当前课程完成后自动切换课程，仅支持按照根目录课程顺序切换，默认开启</span></span><br><span class="line">    ,<span class="attr">lock</span>: <span class="number">1</span> <span class="comment">// 跳过未开放(图标是锁)的章节，即闯关模式或定时发放的任务点，默认开启</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 自动登录功能配置区</span></span><br><span class="line">    ,<span class="attr">school</span>: <span class="string">'账号为手机号可以不修改此参数'</span> <span class="comment">// 学校/单位/机构码，要求完整有效可查询，例如'清华大学'</span></span><br><span class="line">    ,<span class="attr">username</span>: <span class="string">''</span> <span class="comment">// 学号/工号/借书证号(邮箱/手机号/账号)，例如'2018010101'，默认''</span></span><br><span class="line">    ,<span class="attr">password</span>: <span class="string">''</span> <span class="comment">// 密码，例如'123456'，默认''</span></span><br><span class="line">},</span><br><span class="line">_self = unsafeWindow,</span><br><span class="line">url = location.pathname,</span><br><span class="line">top = _self;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (url != <span class="string">'/studyApp/studying'</span> &amp;&amp; top != _self.top) <span class="built_in">document</span>.domain = location.host.replace(<span class="regexp">/.+?\./</span>, <span class="string">''</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> {</span><br><span class="line">    <span class="keyword">while</span> (top != _self.top) {</span><br><span class="line">        top = top.parent.document ? top.parent : _self.top;</span><br><span class="line">        <span class="keyword">if</span> (top.location.pathname == <span class="string">'/mycourse/studentstudy'</span>) <span class="keyword">break</span>;</span><br><span class="line">    }</span><br><span class="line">} <span class="keyword">catch</span> (err) {</span><br><span class="line">    <span class="comment">// console.log(err);</span></span><br><span class="line">    top = _self;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> $ = _self.jQuery || top.jQuery,</span><br><span class="line">parent = _self == top ? self : _self.parent,</span><br><span class="line">Ext = _self.Ext || parent.Ext || {},</span><br><span class="line">UE = _self.UE,</span><br><span class="line">vjs = _self.videojs;</span><br><span class="line"></span><br><span class="line"><span class="built_in">String</span>.prototype.toCDB = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.replace(<span class="regexp">/\s/g</span>, <span class="string">''</span>).replace(<span class="regexp">/[\uff01-\uff5e]/g</span>, <span class="function"><span class="keyword">function</span>(<span class="params">str</span>) </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">String</span>.fromCharCode(str.charCodeAt(<span class="number">0</span>) - <span class="number">65248</span>);</span><br><span class="line">    }).replace(<span class="regexp">/[“”]/g</span>, <span class="string">'"'</span>).replace(<span class="regexp">/[‘’]/g</span>, <span class="string">"'"</span>).replace(<span class="regexp">/。/g</span>, <span class="string">'.'</span>);</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line">setting.normal = <span class="string">''</span>; <span class="comment">// ':visible'</span></span><br><span class="line"><span class="comment">// setting.time += Math.ceil(setting.time * Math.random()) - setting.time / 2;</span></span><br><span class="line">setting.job = [<span class="string">':not(*)'</span>];</span><br><span class="line"></span><br><span class="line">setting.video &amp;&amp; setting.job.push(<span class="string">'iframe[src*="/video/index.html"]'</span>);</span><br><span class="line">setting.work &amp;&amp; setting.job.push(<span class="string">'iframe[src*="/work/index.html"]'</span>);</span><br><span class="line">setting.audio &amp;&amp; setting.job.push(<span class="string">'iframe[src*="/audio/index.html"]'</span>);</span><br><span class="line">setting.book &amp;&amp; setting.job.push(<span class="string">'iframe[src*="/innerbook/index.html"]'</span>);</span><br><span class="line">setting.docs &amp;&amp; setting.job.push(<span class="string">'iframe[src*="/ppt/index.html"]'</span>, <span class="string">'iframe[src*="/pdf/index.html"]'</span>);</span><br><span class="line"></span><br><span class="line">setting.tip = !setting.queue || top != _self &amp;&amp; jobSort($ || Ext.query);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (url == <span class="string">'/mycourse/studentstudy'</span>) {</span><br><span class="line">    _self.checkMobileBrowerLearn = $.noop;</span><br><span class="line">    <span class="keyword">var</span> classId = location.search.match(<span class="regexp">/cla[zs]{2}id=(\d+)/i</span>)[<span class="number">1</span>] || <span class="number">0</span>,</span><br><span class="line">    courseId = _self.courseId || location.search.match(<span class="regexp">/courseId=(\d+)/i</span>)[<span class="number">1</span>] || <span class="number">0</span>;</span><br><span class="line">    setting.lock || $(<span class="string">'#coursetree'</span>).on(<span class="string">'click'</span>, <span class="string">'[onclick*=void], [href*=void]'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">        _self.getTeacherAjax(courseId, classId, $(<span class="keyword">this</span>).parent().attr(<span class="string">'id'</span>).slice(<span class="number">3</span>));</span><br><span class="line">    });</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (url == <span class="string">'/ananas/modules/video/index.html'</span> &amp;&amp; setting.video) {</span><br><span class="line">    <span class="keyword">if</span> (setting.review) _self.greenligth = Ext.emptyFn;</span><br><span class="line">    checkPlayer(_self.supportH5Video());</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (url == <span class="string">'/work/doHomeWorkNew'</span> || url == <span class="string">'/api/work'</span> || url == <span class="string">'/work/addStudentWorkNewWeb'</span>) {</span><br><span class="line">    <span class="keyword">if</span> (!UE) {</span><br><span class="line">        <span class="keyword">var</span> len = ($ || Ext.query || <span class="built_in">Array</span>)(<span class="string">'font:contains(未登录)'</span>, <span class="built_in">document</span>).length;</span><br><span class="line">        setTimeout(len == <span class="number">1</span> ? top.location.reload : parent.greenligth, setting.time);</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (setting.work) {</span><br><span class="line">        setTimeout(relieveLimit, <span class="number">0</span>);</span><br><span class="line">        beforeFind();</span><br><span class="line">    }</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (url == <span class="string">'/ananas/modules/audio/index.html'</span> &amp;&amp; setting.audio) {</span><br><span class="line">    <span class="keyword">if</span> (setting.review) _self.greenligth = Ext.emptyFn;</span><br><span class="line">    _self.videojs = hookAudio;</span><br><span class="line">    hookAudio.xhr = vjs.xhr;</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (url == <span class="string">'/ananas/modules/innerbook/index.html'</span> &amp;&amp; setting.book &amp;&amp; setting.tip) {</span><br><span class="line">    setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">        _self.setting ? _self.top.onchangepage(_self.getFrameAttr(<span class="string">'end'</span>)) : _self.greenligth();</span><br><span class="line">    }, setting.time);</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (url.match(<span class="regexp">/^\/ananas\/modules\/(ppt|pdf)\/index\.html$/</span>) &amp;&amp; setting.docs &amp;&amp; setting.tip) {</span><br><span class="line">    setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">        _self.setting ? _self.finishJob() : _self.greenligth();</span><br><span class="line">    }, setting.time);</span><br><span class="line">    frameElement.setAttribute(<span class="string">'download'</span>, <span class="number">1</span>);</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (url == <span class="string">'/knowledge/cards'</span>) {</span><br><span class="line">    $ &amp;&amp; checkToNext();</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (url.match(<span class="regexp">/^\/(course|zt)\/\d+\.html$/</span>)) {</span><br><span class="line">    setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">        +setting.read &amp;&amp; _self.sendLogs &amp;&amp; $(<span class="string">'.course_section:eq(0) .chapterText'</span>).click();</span><br><span class="line">    }, setting.time);</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (url == <span class="string">'/ztnodedetailcontroller/visitnodedetail'</span>) {</span><br><span class="line">    setting.read *= <span class="number">60</span> / $(<span class="string">'.course_section'</span>).length;</span><br><span class="line">    setting.read &amp;&amp; _self.sendLogs &amp;&amp; autoRead();</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (url == <span class="string">'/mycourse/studentcourse'</span>) {</span><br><span class="line">    <span class="keyword">var</span> gv = location.search.match(<span class="regexp">/d=\d+&amp;/g</span>);</span><br><span class="line">    setting.total &amp;&amp; $(<span class="string">'&lt;a&gt;'</span>, {</span><br><span class="line">        href: <span class="string">'/moocAnalysis/chapterStatisticByUser?classI'</span> + gv[<span class="number">1</span>] + <span class="string">'courseI'</span> + gv[<span class="number">0</span>] + <span class="string">'userId='</span> + _self.getCookie(<span class="string">'_uid'</span>) + <span class="string">'&amp;ut=s'</span>,</span><br><span class="line">        target: <span class="string">'_blank'</span>,</span><br><span class="line">        title: <span class="string">'点击查看章节统计'</span>,</span><br><span class="line">        style: <span class="string">'margin: 0 25px;'</span>,</span><br><span class="line">        html: <span class="string">'本课程共'</span> + $(<span class="string">'.icon'</span>).length + <span class="string">'节，剩余'</span> + $(<span class="string">'em:not(.openlock)'</span>).length + <span class="string">'节未完成'</span></span><br><span class="line">    }).appendTo(<span class="string">'.zt_logo'</span>).parent().width(<span class="string">'auto'</span>);</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (url.match(<span class="regexp">/^\/visit\/(courses|interaction)$/</span>)) {</span><br><span class="line">    setting.face &amp;&amp; $(<span class="string">'.zmodel'</span>).on(<span class="string">'click'</span>, <span class="string">'[onclick^=openFaceTip]'</span>, DisplayURL);</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (location.host.match(<span class="regexp">/^passport2/</span>)) {</span><br><span class="line">    setting.username &amp;&amp; getSchoolId();</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (location.hostname == <span class="string">'i.mooc.chaoxing.com'</span>) {</span><br><span class="line">    _self.layui.use(<span class="string">'layer'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">        <span class="keyword">this</span>.layer.open({<span class="attr">content</span>: <span class="string">'拖动进度条、倍速播放、秒过会导致不良记录！题库在慢慢补充，搜不到的题目系统会在次日进行自动补充'</span>, <span class="attr">title</span>: <span class="string">'超星网课助手提示'</span>, <span class="attr">btn</span>: <span class="string">'我已知悉'</span>, <span class="attr">offset</span>: <span class="string">'t'</span>, <span class="attr">closeBtn</span>: <span class="number">0</span>});</span><br><span class="line">    });</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (url == <span class="string">'/widget/pcvote/goStudentVotePage'</span>) {</span><br><span class="line">    $(<span class="string">':checked'</span>).click();</span><br><span class="line">    $(<span class="string">'.StudentTimu'</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">index</span>) </span>{</span><br><span class="line">        <span class="keyword">var</span> ans = _self.questionlist[index].answer;</span><br><span class="line">        $(<span class="string">':radio, :checkbox'</span>, <span class="keyword">this</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">num</span>) </span>{</span><br><span class="line">            ans[num].isanswer &amp;&amp; <span class="keyword">this</span>.click();</span><br><span class="line">        });</span><br><span class="line">        $(<span class="string">':text'</span>, <span class="keyword">this</span>).val(<span class="function"><span class="keyword">function</span>(<span class="params">num</span>) </span>{</span><br><span class="line">            <span class="keyword">return</span> $(ans[num].content).text().trim();</span><br><span class="line">        });</span><br><span class="line">    });</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (url == <span class="string">'/work/selectWorkQuestionYiPiYue'</span>) {</span><br><span class="line">    submitAnswer(getIframe().parent(), $.extend(<span class="literal">true</span>, [], parent._data));</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getIframe</span>(<span class="params">tip, win, job</span>) </span>{</span><br><span class="line">    <span class="keyword">if</span> (!$) <span class="keyword">return</span> Ext.get(frameElement || []).parent().child(<span class="string">'.ans-job-icon'</span>) || Ext.get([]);</span><br><span class="line">    <span class="keyword">do</span> {</span><br><span class="line">        win = win ? win.parent : _self;</span><br><span class="line">        job = $(win.frameElement).prevAll(<span class="string">'.ans-job-icon'</span>);</span><br><span class="line">    } <span class="keyword">while</span> (!job.length &amp;&amp; win.parent.frameElement);</span><br><span class="line">    <span class="keyword">return</span> tip ? win : job;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">jobSort</span>(<span class="params">$</span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> fn = $.fn ? [getIframe(<span class="number">1</span>), <span class="string">'length'</span>] : [self, <span class="string">'dom'</span>],</span><br><span class="line">    sel = setting.job.join(<span class="string">', :not(.ans-job-finished) &gt; .ans-job-icon'</span> + setting.normal + <span class="string">' ~ '</span>);</span><br><span class="line">    <span class="keyword">if</span> ($(sel, fn[<span class="number">0</span>].parent.document)[<span class="number">0</span>] == fn[<span class="number">0</span>].frameElement) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (!getIframe()[fn[<span class="number">1</span>]] || getIframe().parent().is(<span class="string">'.ans-job-finished'</span>)) <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">        $(sel, fn[<span class="number">0</span>].parent.document)[<span class="number">0</span>] == fn[<span class="number">0</span>].frameElement &amp;&amp; fn[<span class="number">0</span>].location.reload();</span><br><span class="line">    }, setting.time);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkPlayer</span>(<span class="params">tip</span>) </span>{</span><br><span class="line">    _self.videojs = hookVideo;</span><br><span class="line">    hookVideo.xhr = vjs.xhr;</span><br><span class="line">    Ext.isSogou = Ext.isIos = Ext.isAndroid = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">var</span> data = Ext.decode(_self.config(<span class="string">'data'</span>)) || {};</span><br><span class="line">    <span class="keyword">delete</span> data.danmaku;</span><br><span class="line">    data.doublespeed = <span class="number">1</span>;</span><br><span class="line">    frameElement.setAttribute(<span class="string">'data'</span>, Ext.encode(data));</span><br><span class="line">    <span class="keyword">if</span> (tip) <span class="keyword">return</span>;</span><br><span class="line">    _self.supportH5Video = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{<span class="keyword">return</span> <span class="literal">true</span>;};</span><br><span class="line">    alert(<span class="string">'此浏览器不支持html5播放器，请更换浏览器'</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hookVideo</span>(<span class="params"></span>) </span>{</span><br><span class="line">    _self.alert = <span class="built_in">console</span>.log;</span><br><span class="line">    <span class="keyword">var</span> config = <span class="built_in">arguments</span>[<span class="number">1</span>],</span><br><span class="line">    line = Ext.Array.filter(Ext.Array.map(config.playlines, <span class="function"><span class="keyword">function</span>(<span class="params">value, index</span>) </span>{</span><br><span class="line">        <span class="keyword">return</span> value.label == setting.line &amp;&amp; index;</span><br><span class="line">    }), <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>{</span><br><span class="line">        <span class="keyword">return</span> Ext.isNumber(value);</span><br><span class="line">    })[<span class="number">0</span>] || <span class="number">0</span>,</span><br><span class="line">    http = Ext.Array.filter(config.sources, <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>{</span><br><span class="line">        <span class="keyword">return</span> value.label == setting.http;</span><br><span class="line">    })[<span class="number">0</span>];</span><br><span class="line">    config.playlines.unshift(config.playlines[line]);</span><br><span class="line">    config.playlines.splice(line + <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">    config.plugins.videoJsResolutionSwitcher.default = http ? http.res : <span class="number">360</span>;</span><br><span class="line">    config.plugins.studyControl.enableSwitchWindow = <span class="number">1</span>;</span><br><span class="line">    config.plugins.timelineObjects.url = <span class="string">'/richvideo/initdatawithviewer?'</span>;</span><br><span class="line">    config.plugins.seekBarControl.enableFastForward = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (!setting.queue) <span class="keyword">delete</span> config.plugins.studyControl;</span><br><span class="line">    <span class="comment">// config.preload = setting.tip ? 'auto' : 'none';</span></span><br><span class="line">    <span class="keyword">var</span> player = vjs.apply(<span class="keyword">this</span>, <span class="built_in">arguments</span>),</span><br><span class="line">    a = <span class="string">'&lt;a href="https://d0.ananas.chaoxing.com/download/'</span> + _self.config(<span class="string">'objectid'</span>) + <span class="string">'" target="_blank"&gt;'</span>,</span><br><span class="line">    img = <span class="string">'&lt;img src="https://d0.ananas.chaoxing.com/download/e363b256c0e9bc5bd8266bf99dd6d6bb" style="margin: 6px 0 0 6px;"&gt;'</span>;</span><br><span class="line">    player.volume(<span class="built_in">Math</span>.round(setting.vol) / <span class="number">100</span> || <span class="number">0</span>);</span><br><span class="line">    Ext.get(player.controlBar.addChild(<span class="string">'Button'</span>).el_).setHTML(a + img + <span class="string">'&lt;/a&gt;'</span>).dom.title = <span class="string">'下载视频'</span>;</span><br><span class="line">    player.on(<span class="string">'loadstart'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">        setting.tip &amp;&amp; <span class="keyword">this</span>.play().catch(Ext.emptyFn);</span><br><span class="line">        <span class="keyword">this</span>.playbackRate(setting.rate &gt; <span class="number">16</span> || setting.rate &lt; <span class="number">0.0625</span> ? <span class="number">1</span> : setting.rate);</span><br><span class="line">    });</span><br><span class="line">    player.one([<span class="string">'loadedmetadata'</span>, <span class="string">'firstplay'</span>], <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">        setting.two = setting.rate === <span class="string">'0'</span> &amp;&amp; setting.two &lt; <span class="number">1</span>;</span><br><span class="line">        setting.two &amp;&amp; config.plugins.seekBarControl.sendLog(<span class="keyword">this</span>.children_[<span class="number">0</span>], <span class="string">'ended'</span>, <span class="built_in">Math</span>.floor(<span class="keyword">this</span>.cache_.duration));</span><br><span class="line">    });</span><br><span class="line">    player.on(<span class="string">'ended'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">        Ext.fly(frameElement).parent().addCls(<span class="string">'ans-job-finished'</span>);</span><br><span class="line">    });</span><br><span class="line">    <span class="keyword">return</span> player;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hookAudio</span>(<span class="params"></span>) </span>{</span><br><span class="line">    _self.alert = <span class="built_in">console</span>.log;</span><br><span class="line">    <span class="keyword">var</span> config = <span class="built_in">arguments</span>[<span class="number">1</span>];</span><br><span class="line">    config.plugins.studyControl.enableSwitchWindow = <span class="number">1</span>;</span><br><span class="line">    config.plugins.seekBarControl.enableFastForward = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (!setting.queue) <span class="keyword">delete</span> config.plugins.studyControl;</span><br><span class="line">    <span class="keyword">var</span> player = vjs.apply(<span class="keyword">this</span>, <span class="built_in">arguments</span>),</span><br><span class="line">    a = <span class="string">'&lt;a href="https://d0.ananas.chaoxing.com/download/'</span> + _self.config(<span class="string">'objectid'</span>) + <span class="string">'" target="_blank"&gt;'</span>,</span><br><span class="line">    img = <span class="string">'&lt;img src="https://d0.ananas.chaoxing.com/download/e363b256c0e9bc5bd8266bf99dd6d6bb" style="margin: 6px 0 0 6px;"&gt;'</span>;</span><br><span class="line">    player.volume(<span class="built_in">Math</span>.round(setting.vol) / <span class="number">100</span> || <span class="number">0</span>);</span><br><span class="line">    player.playbackRate(setting.rate &gt; <span class="number">16</span> || setting.rate &lt; <span class="number">0.0625</span> ? <span class="number">1</span> : setting.rate);</span><br><span class="line">    Ext.get(player.controlBar.addChild(<span class="string">'Button'</span>).el_).setHTML(a + img + <span class="string">'&lt;/a&gt;'</span>).dom.title = <span class="string">'下载音频'</span>;</span><br><span class="line">    player.on(<span class="string">'loadeddata'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">        setting.tip &amp;&amp; <span class="keyword">this</span>.play().catch(Ext.emptyFn);</span><br><span class="line">    });</span><br><span class="line">    player.one(<span class="string">'firstplay'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">        setting.rate === <span class="string">'0'</span> &amp;&amp; config.plugins.seekBarControl.sendLog(<span class="keyword">this</span>.children_[<span class="number">0</span>], <span class="string">'ended'</span>, <span class="built_in">Math</span>.floor(<span class="keyword">this</span>.cache_.duration));</span><br><span class="line">    });</span><br><span class="line">    player.on(<span class="string">'ended'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">        Ext.fly(frameElement).parent().addCls(<span class="string">'ans-job-finished'</span>);</span><br><span class="line">    });</span><br><span class="line">    <span class="keyword">return</span> player;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">relieveLimit</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">if</span> (setting.scale) _self.UEDITOR_CONFIG.scaleEnabled = <span class="literal">false</span>;</span><br><span class="line">    $.each(UE.instants, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">        <span class="keyword">var</span> key = <span class="keyword">this</span>.key;</span><br><span class="line">        <span class="keyword">this</span>.ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">            <span class="keyword">this</span>.destroy();</span><br><span class="line">            UE.getEditor(key);</span><br><span class="line">        });</span><br><span class="line">    });</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">beforeFind</span>(<span class="params"></span>) </span>{</span><br><span class="line">    setting.regl = parent.greenligth || $.noop;</span><br><span class="line">    <span class="keyword">if</span> ($.type(parent._data) == <span class="string">'array'</span>) <span class="keyword">return</span> setting.regl();</span><br><span class="line">    setting.div = $(</span><br><span class="line">        <span class="string">'&lt;div style="border: 2px dashed rgb(0, 85, 68); width: 330px; position: fixed; top: 0; right: 0; z-index: 99999; background-color: rgba(70, 196, 38, 0.6); overflow-x: auto;"&gt;'</span> +</span><br><span class="line">            <span class="string">'&lt;span style="font-size: medium;"&gt;&lt;/span&gt;'</span> +</span><br><span class="line">            <span class="string">'&lt;div style="font-size: medium;"&gt;正在搜索答案...&lt;/div&gt;'</span> +</span><br><span class="line">            <span class="string">'&lt;button style="margin-right: 10px;"&gt;暂停答题&lt;/button&gt;'</span> +</span><br><span class="line">            <span class="string">'&lt;button style="margin-right: 10px;"&gt;'</span> + (setting.auto ? <span class="string">'取消本次自动提交'</span> : <span class="string">'开启本次自动提交'</span>) + <span class="string">'&lt;/button&gt;'</span> +</span><br><span class="line">            <span class="string">'&lt;button style="margin-right: 10px;"&gt;重新查询&lt;/button&gt;'</span> +</span><br><span class="line">            <span class="string">'&lt;button&gt;折叠面板&lt;/button&gt;'</span> +</span><br><span class="line">            <span class="string">'&lt;div style="max-height: 300px; overflow-y: auto;"&gt;'</span> +</span><br><span class="line">                <span class="string">'&lt;table border="1" style="font-size: 12px;"&gt;'</span> +</span><br><span class="line">                    <span class="string">'&lt;thead&gt;'</span> +</span><br><span class="line">                        <span class="string">'&lt;tr&gt;'</span> +</span><br><span class="line">                            <span class="string">'&lt;th style="width: 25px; min-width: 25px;"&gt;题号&lt;/th&gt;'</span> +</span><br><span class="line">                            <span class="string">'&lt;th style="width: 60%; min-width: 130px;"&gt;题目（点击可复制）&lt;/th&gt;'</span> +</span><br><span class="line">                            <span class="string">'&lt;th style="min-width: 130px;"&gt;答案（点击可复制）&lt;/th&gt;'</span> +</span><br><span class="line">                        <span class="string">'&lt;/tr&gt;'</span> +</span><br><span class="line">                    <span class="string">'&lt;/thead&gt;'</span> +</span><br><span class="line">                    <span class="string">'&lt;tfoot style="display: none;"&gt;'</span> +</span><br><span class="line">                        <span class="string">'&lt;tr&gt;'</span> +</span><br><span class="line">                            <span class="string">'&lt;th colspan="3"&gt;答案提示框 已折叠&lt;/th&gt;'</span> +</span><br><span class="line">                        <span class="string">'&lt;/tr&gt;'</span> +</span><br><span class="line">                    <span class="string">'&lt;/tfoot&gt;'</span> +</span><br><span class="line">                    <span class="string">'&lt;tbody&gt;'</span> +</span><br><span class="line">                        <span class="string">'&lt;tr&gt;'</span> +</span><br><span class="line">                            <span class="string">'&lt;td colspan="3" style="display: none;"&gt;&lt;/td&gt;'</span> +</span><br><span class="line">                        <span class="string">'&lt;/tr&gt;'</span> +</span><br><span class="line">                    <span class="string">'&lt;/tbody&gt;'</span> +</span><br><span class="line">                <span class="string">'&lt;/table&gt;'</span> +</span><br><span class="line">            <span class="string">'&lt;/div&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;/div&gt;'</span></span><br><span class="line">    ).appendTo(<span class="string">'body'</span>).on(<span class="string">'click'</span>, <span class="string">'button, td'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">        <span class="keyword">var</span> len = $(<span class="keyword">this</span>).prevAll(<span class="string">'button'</span>).length;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.nodeName == <span class="string">'TD'</span>) {</span><br><span class="line">            $(<span class="keyword">this</span>).prev().length &amp;&amp; GM_setClipboard($(<span class="keyword">this</span>).text());</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (!$(<span class="keyword">this</span>).siblings().length) {</span><br><span class="line">            $(<span class="keyword">this</span>).parent().text(<span class="string">'正在搜索答案...'</span>);</span><br><span class="line">            setting.num++;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (len === <span class="number">0</span>) {</span><br><span class="line">            <span class="keyword">if</span> (setting.loop) {</span><br><span class="line">                clearInterval(setting.loop);</span><br><span class="line">                <span class="keyword">delete</span> setting.loop;</span><br><span class="line">                len = [<span class="string">'已暂停搜索'</span>, <span class="string">'继续答题'</span>];</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                setting.loop = setInterval(findAnswer, setting.time);</span><br><span class="line">                len = [<span class="string">'正在搜索答案...'</span>, <span class="string">'暂停答题'</span>];</span><br><span class="line">            }</span><br><span class="line">            setting.div.children(<span class="string">'div:eq(0)'</span>).html(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">                <span class="keyword">return</span> $(<span class="keyword">this</span>).data(<span class="string">'html'</span>) || len[<span class="number">0</span>];</span><br><span class="line">            }).removeData(<span class="string">'html'</span>);</span><br><span class="line">            $(<span class="keyword">this</span>).html(len[<span class="number">1</span>]);</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (len == <span class="number">1</span>) {</span><br><span class="line">            setting.auto = !setting.auto;</span><br><span class="line">            $(<span class="keyword">this</span>).html(setting.auto ? <span class="string">'取消本次自动提交'</span> : <span class="string">'开启本次自动提交'</span>);</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (len == <span class="number">2</span>) {</span><br><span class="line">            parent.location.reload();</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (len == <span class="number">3</span>) {</span><br><span class="line">            setting.div.find(<span class="string">'tbody, tfoot'</span>).toggle();</span><br><span class="line">        }</span><br><span class="line">    }).find(<span class="string">'table, td, th'</span>).css(<span class="string">'border'</span>, <span class="string">'1px solid'</span>).end();</span><br><span class="line">    setting.lose = setting.num = <span class="number">0</span>;</span><br><span class="line">    setting.data = parent._data = [];</span><br><span class="line">    setting.over = <span class="string">'&lt;button style="margin-right: 10px;"&gt;跳过此题&lt;/button&gt;'</span>;</span><br><span class="line">    setting.curs = $(<span class="string">'script:contains(courseName)'</span>, top.document).text().match(<span class="regexp">/courseName:\'(.+?)\'|$/</span>)[<span class="number">1</span>] || $(<span class="string">'h1'</span>).text().trim() || <span class="string">'无'</span>;</span><br><span class="line">    setting.loop = setInterval(findAnswer, setting.time);</span><br><span class="line">    <span class="keyword">var</span> tip = ({<span class="attr">undefined</span>: <span class="string">'任务点排队中'</span>, <span class="attr">null</span>: <span class="string">'等待切换中'</span>})[setting.tip];</span><br><span class="line">    tip &amp;&amp; setting.div.children(<span class="string">'div:eq(0)'</span>).data(<span class="string">'html'</span>, tip).siblings(<span class="string">'button:eq(0)'</span>).click();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">findAnswer</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">if</span> (setting.num &gt;= $(<span class="string">'.TiMu'</span>).length) {</span><br><span class="line">        <span class="keyword">var</span> arr = setting.lose ? [<span class="string">'共有 &lt;font color="red"&gt;'</span> + setting.lose + <span class="string">'&lt;/font&gt; 道题目待完善（已深色标注）'</span>, saveThis] : [<span class="string">'答题已完成'</span>, submitThis];</span><br><span class="line">        setting.div.children(<span class="string">'div:eq(0)'</span>).data(<span class="string">'html'</span>, arr[<span class="number">0</span>]).siblings(<span class="string">'button:eq(0)'</span>).hide().click();</span><br><span class="line">        <span class="keyword">return</span> setTimeout(arr[<span class="number">1</span>], setting.time);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">var</span> $TiMu = $(<span class="string">'.TiMu'</span>).eq(setting.num),</span><br><span class="line">    question = filterImg($TiMu.find(<span class="string">'.Zy_TItle:eq(0) .clearfix'</span>)).replace(<span class="regexp">/^【.*?】\s*/</span>, <span class="string">''</span>).replace(<span class="regexp">/\s*（\d+\.\d+分）$/</span>, <span class="string">''</span>).replace(<span class="regexp">/[(]\s*[)]。$/</span>,<span class="string">''</span>).replace(<span class="regexp">/（\s*）。$/</span>,<span class="string">''</span>).replace(<span class="regexp">/[(]\s*[)]$/</span>,<span class="string">''</span>).replace(<span class="regexp">/（\s*）$/</span>,<span class="string">''</span>),</span><br><span class="line">    type = $TiMu.find(<span class="string">'input[name^=answertype]:eq(0)'</span>).val() || <span class="string">'-1'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//setting.div.children('div:eq(0)').text(encodeURIComponent(question)+'正在搜索答案...');</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GM_xmlhttpRequest({</span><br><span class="line">        method: <span class="string">'GET'</span>,</span><br><span class="line">        url: <span class="string">'http://api.xmlm8.com/tp/tk.php?t='</span>+ <span class="built_in">encodeURIComponent</span>(question),</span><br><span class="line">        headers: {</span><br><span class="line">            <span class="string">'Content-type'</span>: <span class="string">'application/x-www-form-urlencoded'</span></span><br><span class="line">        },</span><br><span class="line">        timeout: setting.time,</span><br><span class="line">        onload: <span class="function"><span class="keyword">function</span>(<span class="params">xhr</span>) </span>{</span><br><span class="line">            <span class="keyword">if</span> (!setting.loop) {</span><br><span class="line">            } <span class="keyword">else</span> <span class="keyword">if</span> (xhr.status == <span class="number">200</span>) {</span><br><span class="line">                <span class="keyword">var</span> obj = $.parseJSON(xhr.responseText) || {};</span><br><span class="line">                <span class="keyword">if</span> (obj.code == <span class="number">1</span>) {</span><br><span class="line">                    setting.div.children(<span class="string">'div:eq(0)'</span>).text(<span class="string">'正在搜索答案...'</span>);</span><br><span class="line">                    <span class="keyword">var</span> td = <span class="string">'&lt;td style="border: 1px solid;'</span>,</span><br><span class="line">                    answer = <span class="built_in">String</span>(obj.answer).replace(<span class="regexp">/&amp;/g</span>, <span class="string">'&amp;amp;'</span>).replace(<span class="regexp">/&lt;(?!img)/g</span>, <span class="string">'&amp;lt;'</span>);</span><br><span class="line">                    obj.answer = <span class="regexp">/^http/</span>.test(answer) ? <span class="string">'&lt;img src="'</span> + obj.answer + <span class="string">'"&gt;'</span> : obj.answer;</span><br><span class="line">                    $(</span><br><span class="line">                        <span class="string">'&lt;tr&gt;'</span> +</span><br><span class="line">                            td + <span class="string">' text-align: center;"&gt;'</span> + $TiMu.find(<span class="string">'.Zy_TItle:eq(0) i'</span>).text().trim() + <span class="string">'&lt;/td&gt;'</span> +</span><br><span class="line">                            td + <span class="string">'" title="点击可复制"&gt;'</span> + (question.match(<span class="string">'&lt;img'</span>) ? question : question.replace(<span class="regexp">/&amp;/g</span>, <span class="string">'&amp;amp;'</span>).replace(<span class="regexp">/&lt;/g</span>, <span class="string">'&amp;lt'</span>)) + <span class="string">'&lt;/td&gt;'</span> +</span><br><span class="line">                            td + <span class="string">'" title="点击可复制"&gt;'</span> + (<span class="regexp">/^http/</span>.test(answer) ? obj.answer : <span class="string">''</span>) + answer + <span class="string">'&lt;/td&gt;'</span> +</span><br><span class="line">                        <span class="string">'&lt;/tr&gt;'</span></span><br><span class="line">                    ).appendTo(setting.div.find(<span class="string">'tbody'</span>)).css(<span class="string">'background-color'</span>, fillAnswer($TiMu.find(<span class="string">'ul:eq(0)'</span>).find(<span class="string">'li'</span>), obj, type) ? <span class="string">''</span> : <span class="string">'rgba(0, 150, 136, 0.6)'</span>);</span><br><span class="line">                    setting.data[setting.num++] = {</span><br><span class="line">                        code: obj.code &gt; <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>,</span><br><span class="line">                        question: question,</span><br><span class="line">                        option: obj.answer,</span><br><span class="line">                        type: <span class="built_in">Number</span>(type)</span><br><span class="line">                    };</span><br><span class="line">                } <span class="keyword">else</span> {</span><br><span class="line">                    setting.div.children(<span class="string">'div:eq(0)'</span>).html(setting.over + obj.answer || setting.over + <span class="string">'服务器繁忙，正在重试...'</span>);</span><br><span class="line">                }</span><br><span class="line">                setting.div.children(<span class="string">'span'</span>).html(obj.msg || <span class="string">''</span>);</span><br><span class="line">            } <span class="keyword">else</span> <span class="keyword">if</span> (xhr.status == <span class="number">403</span>) {</span><br><span class="line">                <span class="keyword">var</span> html = xhr.responseText.indexOf(<span class="string">'{'</span>) ? <span class="string">'请求过于频繁，建议稍后再试'</span> : $.parseJSON(xhr.responseText).data;</span><br><span class="line">                setting.div.children(<span class="string">'div:eq(0)'</span>).data(<span class="string">'html'</span>, html).siblings(<span class="string">'button:eq(0)'</span>).click();</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                setting.div.children(<span class="string">'div:eq(0)'</span>).html(setting.over + <span class="string">'服务器异常，正在重试...'</span>);</span><br><span class="line">            }</span><br><span class="line">        },</span><br><span class="line">        ontimeout: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">            setting.loop &amp;&amp; setting.div.children(<span class="string">'div:eq(0)'</span>).html(setting.over + <span class="string">'服务器超时，正在重试...'</span>);</span><br><span class="line">        }</span><br><span class="line">    });</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fillAnswer</span>(<span class="params">$li, obj, type</span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> $input = $li.find(<span class="string">':radio, :checkbox'</span>),</span><br><span class="line">    str = <span class="built_in">String</span>(obj.answer).toCDB() || <span class="keyword">new</span> <span class="built_in">Date</span>().toString(),</span><br><span class="line">    data = str.split(<span class="regexp">/#|\x01|\|/</span>),</span><br><span class="line">    opt = obj.opt || str,</span><br><span class="line">    state = setting.lose;</span><br><span class="line">    <span class="comment">// $li.find(':radio:checked').prop('checked', false);</span></span><br><span class="line">    obj.code &gt; <span class="number">0</span> &amp;&amp; $input.each(<span class="function"><span class="keyword">function</span>(<span class="params">index</span>) </span>{</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.value == <span class="string">'true'</span>) {</span><br><span class="line">            data.join().match(<span class="regexp">/(^|,)(正确|是|对|√|T|ri)(,|$)/</span>) &amp;&amp; <span class="keyword">this</span>.click();</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.value == <span class="string">'false'</span>) {</span><br><span class="line">            data.join().match(<span class="regexp">/(^|,)(错误|否|错|×|F|wr)(,|$)/</span>) &amp;&amp; <span class="keyword">this</span>.click();</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="keyword">var</span> tip = filterImg($li.eq(index).find(<span class="string">'.after'</span>)).toCDB() || <span class="keyword">new</span> <span class="built_in">Date</span>().toString();</span><br><span class="line">            <span class="built_in">Boolean</span>($.inArray(tip, data) + <span class="number">1</span> || (type == <span class="string">'1'</span> &amp;&amp; str.indexOf(tip) + <span class="number">1</span>)) == <span class="keyword">this</span>.checked || <span class="keyword">this</span>.click();</span><br><span class="line">        }</span><br><span class="line">    }).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">        <span class="keyword">if</span> (!<span class="regexp">/^A?B?C?D?E?F?G?$/</span>.test(opt)) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="built_in">Boolean</span>(opt.match(<span class="keyword">this</span>.value)) == <span class="keyword">this</span>.checked || <span class="keyword">this</span>.click();</span><br><span class="line">    });</span><br><span class="line">    <span class="keyword">if</span> (type.match(<span class="regexp">/^[013]$/</span>)) {</span><br><span class="line">        $input.is(<span class="string">':checked'</span>) || (setting.none ? ($input[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * $input.length)] || $()).click() : setting.lose++);</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (type.match(<span class="regexp">/^(2|[4-9]|1[08])$/</span>)) {</span><br><span class="line">        data = <span class="built_in">String</span>(obj.answer).split(<span class="regexp">/#|\x01|\|/</span>);</span><br><span class="line">        str = $li.end().find(<span class="string">'textarea'</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">index</span>) </span>{</span><br><span class="line">            index = (obj.code &gt; <span class="number">0</span> &amp;&amp; data[index]) || <span class="string">''</span>;</span><br><span class="line">            UE.getEditor(<span class="keyword">this</span>.name).setContent(index.trim());</span><br><span class="line">        }).length;</span><br><span class="line">        (obj.code &gt; <span class="number">0</span> &amp;&amp; data.length == str) || setting.none || setting.lose++;</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        setting.none || setting.lose++;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> state == setting.lose;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">saveThis</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">if</span> (!setting.auto) <span class="keyword">return</span> setTimeout(saveThis, setting.time);</span><br><span class="line">    setting.div.children(<span class="string">'button:lt(3)'</span>).hide().eq(<span class="number">1</span>).click();</span><br><span class="line">    _self.alert = <span class="built_in">console</span>.log;</span><br><span class="line">    $(<span class="string">'#tempsave'</span>).click();</span><br><span class="line">    setting.regl();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">submitThis</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">if</span> (!setting.auto) {</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (!$(<span class="string">'.Btn_blue_1:visible'</span>).length) {</span><br><span class="line">        setting.div.children(<span class="string">'button:lt(3)'</span>).hide().eq(<span class="number">1</span>).click();</span><br><span class="line">        <span class="keyword">return</span> setting.regl();</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> ($(<span class="string">'#confirmSubWin:visible'</span>).length) {</span><br><span class="line">        <span class="keyword">var</span> btn = $(<span class="string">'#tipContent + * &gt; a'</span>).offset() || {<span class="attr">top</span>: <span class="number">0</span>, <span class="attr">left</span>: <span class="number">0</span>},</span><br><span class="line">        mouse = <span class="built_in">document</span>.createEvent(<span class="string">'MouseEvents'</span>);</span><br><span class="line">        btn = [btn.left + <span class="built_in">Math</span>.ceil(<span class="built_in">Math</span>.random() * <span class="number">46</span>), btn.top + <span class="built_in">Math</span>.ceil(<span class="built_in">Math</span>.random() * <span class="number">26</span>)];</span><br><span class="line">        mouse.initMouseEvent(<span class="string">'click'</span>, <span class="literal">true</span>, <span class="literal">true</span>, <span class="built_in">document</span>.defaultView, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, btn[<span class="number">0</span>], btn[<span class="number">1</span>], <span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">false</span>, <span class="number">0</span>, <span class="literal">null</span>);</span><br><span class="line">        _self.event = $.extend(<span class="literal">true</span>, {}, mouse);</span><br><span class="line">        <span class="keyword">delete</span> _self.event.isTrusted;</span><br><span class="line">        _self.form1submit();</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        $(<span class="string">'.Btn_blue_1'</span>)[<span class="number">0</span>].click();</span><br><span class="line">    }</span><br><span class="line">    setTimeout(submitThis, <span class="built_in">Math</span>.ceil(setting.time * <span class="built_in">Math</span>.random()) * <span class="number">2</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkToNext</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> $tip = $(setting.job.join(<span class="string">', '</span>), <span class="built_in">document</span>).prevAll(<span class="string">'.ans-job-icon'</span> + setting.normal);</span><br><span class="line">    setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">        $tip.parent(<span class="string">':not(.ans-job-finished)'</span>).length || setting.jump &amp;&amp; toNext();</span><br><span class="line">    }, setting.time);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">toNext</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> $cur = $(<span class="string">'#cur'</span> + $(<span class="string">'#chapterIdid'</span>).val()),</span><br><span class="line">    $tip = $(<span class="string">'span.currents ~ span'</span>),</span><br><span class="line">    sel = setting.review ? <span class="string">'html'</span> : <span class="string">'.blue'</span>;</span><br><span class="line">    <span class="keyword">if</span> (!$cur.has(sel).length &amp;&amp; $tip.length) <span class="keyword">return</span> $tip.eq(<span class="number">0</span>).click();</span><br><span class="line">    $tip = $(<span class="string">'.roundpointStudent, .roundpoint'</span>).parent();</span><br><span class="line">    $tip = $tip.slice($tip.index($cur) + <span class="number">1</span>).not(<span class="string">':has('</span> + sel + <span class="string">')'</span>);</span><br><span class="line">    $tip.not(setting.lock ? <span class="string">':has(.lock)'</span> : <span class="string">'html'</span>).find(<span class="string">'span'</span>).eq(<span class="number">0</span>).click();</span><br><span class="line">    $tip.length || setting.course &amp;&amp; switchCourse();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">switchCourse</span>(<span class="params"></span>) </span>{</span><br><span class="line">    GM_xmlhttpRequest({</span><br><span class="line">        method: <span class="string">'GET'</span>,</span><br><span class="line">        url: <span class="string">'/visit/courses/study?isAjax=true&amp;fileId=0&amp;debug='</span>,</span><br><span class="line">        headers: {</span><br><span class="line">            <span class="string">'Referer'</span>: location.origin + <span class="string">'/visit/courses'</span>,</span><br><span class="line">            <span class="string">'X-Requested-With'</span>: <span class="string">'XMLHttpRequest'</span></span><br><span class="line">        },</span><br><span class="line">        onload: <span class="function"><span class="keyword">function</span>(<span class="params">xhr</span>) </span>{</span><br><span class="line">            <span class="keyword">var</span> list = $(<span class="string">'h3 a[target]'</span>, xhr.responseText).map(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">                <span class="keyword">return</span> $(<span class="keyword">this</span>).attr(<span class="string">'href'</span>);</span><br><span class="line">            }),</span><br><span class="line">            index = list.map(<span class="function"><span class="keyword">function</span>(<span class="params">index</span>) </span>{</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">this</span>.match(top.courseId) &amp;&amp; index;</span><br><span class="line">            }).filter(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">                <span class="keyword">return</span> $.isNumeric(<span class="keyword">this</span>);</span><br><span class="line">            })[<span class="number">0</span>] + <span class="number">1</span> || <span class="number">0</span>;</span><br><span class="line">            setting.course = list[index] ? goCourse(list[index]) : <span class="number">0</span>;</span><br><span class="line">        }</span><br><span class="line">    });</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">goCourse</span>(<span class="params">url</span>) </span>{</span><br><span class="line">    GM_xmlhttpRequest({</span><br><span class="line">        method: <span class="string">'GET'</span>,</span><br><span class="line">        url: url,</span><br><span class="line">        onload: <span class="function"><span class="keyword">function</span>(<span class="params">xhr</span>) </span>{</span><br><span class="line">            $.globalEval(<span class="string">'location.href = "'</span> + $(<span class="string">'.articlename a[href]'</span>, xhr.responseText).attr(<span class="string">'href'</span>) + <span class="string">'";'</span>);</span><br><span class="line">        }</span><br><span class="line">    });</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">autoRead</span>(<span class="params"></span>) </span>{</span><br><span class="line">    $(<span class="string">'html, body'</span>).animate({</span><br><span class="line">        scrollTop: $(<span class="built_in">document</span>).height() - $(<span class="built_in">window</span>).height()</span><br><span class="line">    }, <span class="built_in">Math</span>.round(setting.read) * <span class="number">1E3</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">        $(<span class="string">'.nodeItem.r i'</span>).click();</span><br><span class="line">    }).one(<span class="string">'click'</span>, <span class="string">'#top'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>{</span><br><span class="line">        $(event.delegateTarget).stop();</span><br><span class="line">    });</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">DisplayURL</span>(<span class="params"></span>) </span>{</span><br><span class="line">    _self.WAY.box.hide();</span><br><span class="line">    <span class="keyword">var</span> $li = $(<span class="keyword">this</span>).closest(<span class="string">'li'</span>);</span><br><span class="line">    $.<span class="keyword">get</span>('/visit/goToCourseByFace', {</span><br><span class="line">        courseId: $li.find(<span class="string">'input[name=courseId]'</span>).val(),</span><br><span class="line">        clazzId: $li.find(<span class="string">'input[name=classId]'</span>).val()</span><br><span class="line">    }, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>{</span><br><span class="line">        $li.find(<span class="string">'[onclick^=openFaceTip]'</span>).removeAttr(<span class="string">'onclick'</span>).attr({</span><br><span class="line">            target: <span class="string">'_blank'</span>,</span><br><span class="line">            href: $(data).filter(<span class="string">'script:last'</span>).text().match(<span class="regexp">/n\("(.+?)"/</span>)[<span class="number">1</span>]</span><br><span class="line">        });</span><br><span class="line">        alert(<span class="string">'本课程已临时解除面部识别'</span>);</span><br><span class="line">    }, <span class="string">'html'</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getSchoolId</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> school = <span class="regexp">/^1\d{10}$/</span>.test(setting.username) ? <span class="string">''</span> : setting.school;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">isNaN</span>(school)) <span class="keyword">return</span> setTimeout(toLogin, setting.time, school);</span><br><span class="line">    <span class="keyword">if</span> (school == <span class="string">'账号为手机号可以不修改此参数'</span>) <span class="keyword">return</span> alert(<span class="string">'请修改school参数'</span>);</span><br><span class="line">    $.getJSON(<span class="string">'/org/searchUnis?filter='</span> + <span class="built_in">encodeURI</span>(school) + <span class="string">'&amp;product=44'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>{</span><br><span class="line">        <span class="keyword">if</span> (!data.result) <span class="keyword">return</span> alert(<span class="string">'学校查询错误'</span>);</span><br><span class="line">        <span class="keyword">var</span> msg = $.grep(data.froms, <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>{</span><br><span class="line">            <span class="keyword">return</span> value.name == school;</span><br><span class="line">        })[<span class="number">0</span>];</span><br><span class="line">        msg ? setTimeout(toLogin, setting.time, msg.schoolid) : alert(<span class="string">'学校名称不完整'</span>);</span><br><span class="line">    });</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">toLogin</span>(<span class="params">fid</span>) </span>{</span><br><span class="line">    GM_xmlhttpRequest({</span><br><span class="line">        method: <span class="string">'GET'</span>,</span><br><span class="line">        url: <span class="string">'/api/login?name='</span> + setting.username + <span class="string">'&amp;pwd='</span> + setting.password + <span class="string">'&amp;schoolid='</span> + fid + <span class="string">'&amp;verify=0'</span>,</span><br><span class="line">        onload: <span class="function"><span class="keyword">function</span>(<span class="params">xhr</span>) </span>{</span><br><span class="line">            <span class="keyword">var</span> obj = $.parseJSON(xhr.responseText) || {};</span><br><span class="line">            obj.result ? location.href = <span class="built_in">decodeURIComponent</span>($(<span class="string">'#ref, #refer_0x001'</span>).val()) : alert(obj.errorMsg || <span class="string">'Error'</span>);</span><br><span class="line">        }</span><br><span class="line">    });</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">submitAnswer</span>(<span class="params">$job, data</span>) </span>{</span><br><span class="line">    $job.removeClass(<span class="string">'ans-job-finished'</span>);</span><br><span class="line">    data = data.length ? $(data) : $(<span class="string">'.TiMu'</span>).map(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">        <span class="keyword">var</span> title = filterImg($(<span class="string">'.Zy_TItle .clearfix'</span>, <span class="keyword">this</span>));</span><br><span class="line">        <span class="keyword">return</span> {</span><br><span class="line">            question: title.replace(<span class="regexp">/^【.*?】\s*/</span>, <span class="string">''</span>),</span><br><span class="line">            type: ({单选题: <span class="number">0</span>, 多选题: <span class="number">1</span>, 填空题: <span class="number">2</span>, 判断题: <span class="number">3</span>})[title.match(<span class="regexp">/^【(.*?)】|$/</span>)[<span class="number">1</span>]]</span><br><span class="line">        };</span><br><span class="line">    });</span><br><span class="line">    data = $.grep(data.map(<span class="function"><span class="keyword">function</span>(<span class="params">index</span>) </span>{</span><br><span class="line">        <span class="keyword">var</span> $TiMu = $(<span class="string">'.TiMu'</span>).eq(index);</span><br><span class="line">        <span class="keyword">if</span> (!($.isPlainObject(<span class="keyword">this</span>) &amp;&amp; <span class="keyword">this</span>.type &lt; <span class="number">4</span> &amp;&amp; $TiMu.find(<span class="string">'.fr'</span>).length)) {</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.type == <span class="number">2</span>) {</span><br><span class="line">            <span class="keyword">var</span> $ans = $TiMu.find(<span class="string">'.Py_tk, .Py_answer'</span>).eq(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span> (!$TiMu.find(<span class="string">'.cuo'</span>).length &amp;&amp; <span class="keyword">this</span>.code) {</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            } <span class="keyword">else</span> <span class="keyword">if</span> (!$ans.find(<span class="string">'.cuo'</span>).length) {</span><br><span class="line">                <span class="keyword">this</span>.option = $ans.find(<span class="string">'.clearfix'</span>).map(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">                    <span class="keyword">return</span> $(<span class="keyword">this</span>).text().trim();</span><br><span class="line">                }).get().join(<span class="string">'#'</span>) || <span class="string">'无'</span>;</span><br><span class="line">            } <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.code) {</span><br><span class="line">                <span class="keyword">this</span>.code = <span class="number">-1</span>;</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.type == <span class="number">3</span>) {</span><br><span class="line">            <span class="keyword">var</span> ans = $TiMu.find(<span class="string">'.font20:last'</span>).text();</span><br><span class="line">            <span class="keyword">if</span> ($TiMu.find(<span class="string">'.cuo'</span>).length) {</span><br><span class="line">                <span class="keyword">this</span>.option = ({<span class="string">'√'</span>: <span class="string">'错误'</span>, <span class="string">'×'</span>: <span class="string">'正确'</span>})[ans] || <span class="string">'无'</span>;</span><br><span class="line">            } <span class="keyword">else</span> <span class="keyword">if</span> (!<span class="keyword">this</span>.code) {</span><br><span class="line">                <span class="keyword">this</span>.option = ({<span class="string">'√'</span>: <span class="string">'正确'</span>, <span class="string">'×'</span>: <span class="string">'错误'</span>})[ans] || <span class="string">'无'</span>;</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="keyword">var</span> text = $TiMu.find(<span class="string">'.Py_answer &gt; span:eq(0)'</span>).text();</span><br><span class="line">            <span class="keyword">if</span> ($TiMu.find(<span class="string">'.dui'</span>).length &amp;&amp; <span class="keyword">this</span>.code &amp;&amp; !<span class="regexp">/^A?B?C?D?E?F?G?$/</span>.test(<span class="keyword">this</span>.option)) {</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            } <span class="keyword">else</span> <span class="keyword">if</span> ($TiMu.find(<span class="string">'.dui'</span>).length || text.match(<span class="string">'正确答案'</span>)) {</span><br><span class="line">                text = text.match(<span class="regexp">/[A-G]/gi</span>) || [];</span><br><span class="line">                <span class="keyword">this</span>.option = $.map(text, <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>{</span><br><span class="line">                    <span class="keyword">return</span> filterImg($TiMu.find(<span class="string">'.fl:contains('</span> + value + <span class="string">') + a'</span>));</span><br><span class="line">                }).join(<span class="string">'#'</span>) || <span class="string">'无'</span>;</span><br><span class="line">                <span class="keyword">this</span>.key = text.join(<span class="string">''</span>);</span><br><span class="line">            } <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.code) {</span><br><span class="line">                <span class="keyword">this</span>.code = <span class="number">-1</span>;</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }), <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>{</span><br><span class="line">        <span class="keyword">return</span> value &amp;&amp; value.option != <span class="string">'无'</span>;</span><br><span class="line">    });</span><br><span class="line">    setting.curs = $(<span class="string">'script:contains(courseName)'</span>, top.document).text().match(<span class="regexp">/courseName:\'(.+?)\'|$/</span>)[<span class="number">1</span>] || $(<span class="string">'h1'</span>).text().trim() || <span class="string">'无'</span>;</span><br><span class="line">    data.length &amp;&amp; GM_xmlhttpRequest({</span><br><span class="line">        method: <span class="string">'POST'</span>,</span><br><span class="line">        url: <span class="string">'http://mooc.forestpolice.org/upload/cx/'</span> + (setting.token || <span class="number">0</span>) + <span class="string">'/?workRelationId='</span> + $(<span class="string">'#workId'</span>).val(),</span><br><span class="line">        headers: {</span><br><span class="line">            <span class="string">'Content-type'</span>: <span class="string">'application/x-www-form-urlencoded'</span></span><br><span class="line">        },</span><br><span class="line">        data: <span class="string">'course='</span> + <span class="built_in">encodeURIComponent</span>(setting.curs) + <span class="string">'&amp;data='</span> + <span class="built_in">encodeURIComponent</span>((Ext.encode || <span class="built_in">JSON</span>.stringify)(data)) + <span class="string">'&amp;id='</span> + $(<span class="string">'#jobid'</span>).val().slice(<span class="number">5</span>)</span><br><span class="line">    });</span><br><span class="line">    $job.addClass(<span class="string">'ans-job-finished'</span>);</span><br><span class="line">}</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">function filterImg(dom) {</span></span><br><span class="line"><span class="comment">    return $(dom).clone().find('img[src]').replaceWith(function() {</span></span><br><span class="line"><span class="comment">        return $('&lt;p&gt;&lt;/p&gt;').text('&lt;img src="' + $(this).attr('src') + '"&gt;');</span></span><br><span class="line"><span class="comment">    }).end().find('iframe[src]').replaceWith(function() {</span></span><br><span class="line"><span class="comment">        return $('&lt;p&gt;&lt;/p&gt;').text('&lt;iframe src="' + $(this).attr('src') + '"&gt;&lt;/irame&gt;');</span></span><br><span class="line"><span class="comment">    }).end().text().trim();</span></span><br><span class="line"><span class="comment">}</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filterImg</span>(<span class="params">dom</span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> $(dom).clone().find(<span class="string">'img[src]'</span>).replaceWith(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">        <span class="keyword">return</span> $(<span class="string">'&lt;p&gt;&lt;/p&gt;'</span>).text(<span class="string">''</span>);</span><br><span class="line">    }).end().find(<span class="string">'iframe[src]'</span>).replaceWith(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">        <span class="keyword">return</span> $(<span class="string">'&lt;p&gt;&lt;/p&gt;'</span>).text(<span class="string">''</span>);</span><br><span class="line">    }).end().text().trim();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="脚本②"><a href="#脚本②" class="headerlink" title="脚本②"></a>脚本②</h1><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br></pre></td><td class="code"><pre><span class="line">超星学习通油猴脚本</span><br><span class="line"><span class="comment">// ==UserScript==</span></span><br><span class="line"><span class="comment">// @name         超星网课助手(改)(查题可用)</span></span><br><span class="line"><span class="comment">// @version      4.5.7</span></span><br><span class="line"><span class="comment">// @namespace    coder_tq</span></span><br><span class="line"><span class="comment">// @description  自动挂机看尔雅MOOC，支持视频、音频、文档、图书自动完成，章节测验自动答题提交，支持自动切换任务点、挂机阅读时长、自动登录等，解除各类功能限制，开放自定义参数</span></span><br><span class="line"><span class="comment">// @author       coder_tq</span></span><br><span class="line"><span class="comment">// @match        *://*.chaoxing.com/*</span></span><br><span class="line"><span class="comment">// @match        *://*.edu.cn/*</span></span><br><span class="line"><span class="comment">// @match        *://*.nbdlib.cn/*</span></span><br><span class="line"><span class="comment">// @match        *://*.hnsyu.net/*</span></span><br><span class="line"><span class="comment">// @connect      cx.beaa.cn</span></span><br><span class="line"><span class="comment">// @connect      cx.icodef.com</span></span><br><span class="line"><span class="comment">// @run-at       document-end</span></span><br><span class="line"><span class="comment">// @grant        unsafeWindow</span></span><br><span class="line"><span class="comment">// @grant        GM_xmlhttpRequest</span></span><br><span class="line"><span class="comment">// @grant        GM_setValue</span></span><br><span class="line"><span class="comment">// @grant        GM_getValue</span></span><br><span class="line"><span class="comment">// @grant        GM_setClipboard</span></span><br><span class="line"><span class="comment">// @license      MIT</span></span><br><span class="line"><span class="comment">// ==/UserScript==</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置修改后，需要刷新或重新打开网课页面才会生效</span></span><br><span class="line"><span class="keyword">var</span> setting = {</span><br><span class="line">    <span class="comment">// 5E3 == 5000，科学记数法，表示毫秒数</span></span><br><span class="line">    time: <span class="number">5E3</span> <span class="comment">// 默认响应速度为5秒，不建议小于5秒</span></span><br><span class="line">    ,<span class="attr">token</span>: <span class="string">''</span> <span class="comment">// token可以增加并发次数，用来打码，采集题库奖励</span></span><br><span class="line">    ,<span class="attr">review</span>: <span class="number">0</span> <span class="comment">// 复习模式，完整挂机视频(音频)时长，支持挂机任务点已完成的视频和音频，默认关闭</span></span><br><span class="line">    ,<span class="attr">queue</span>: <span class="number">1</span> <span class="comment">// 队列模式，开启后任务点逐一完成，关闭则单页面所有任务点同时进行，默认开启</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1代表开启，0代表关闭</span></span><br><span class="line">    ,<span class="attr">video</span>: <span class="number">1</span> <span class="comment">// 视频支持后台、切换窗口不暂停，支持多视频，默认开启</span></span><br><span class="line">    ,<span class="attr">work</span>: <span class="number">0</span> <span class="comment">// 自动答题功能(章节测验)，作业需要手动开启查询，高准确率，默认开启</span></span><br><span class="line">    ,<span class="attr">audio</span>: <span class="number">1</span> <span class="comment">// 音频自动播放，与视频功能共享vol和rate参数，默认开启</span></span><br><span class="line">    ,<span class="attr">book</span>: <span class="number">1</span> <span class="comment">// 图书阅读任务点，非课程阅读任务点，默认开启</span></span><br><span class="line">    ,<span class="attr">docs</span>: <span class="number">1</span> <span class="comment">// 文档阅读任务点，PPT类任务点自动完成阅读任务，默认开启</span></span><br><span class="line">    <span class="comment">// 本区域参数，上方为任务点功能，下方为独立功能</span></span><br><span class="line">    ,<span class="attr">jump</span>: <span class="number">1</span> <span class="comment">// 自动切换任务点、章节、课程(需要配置course参数)，默认开启</span></span><br><span class="line">    ,<span class="attr">read</span>: <span class="string">'65'</span> <span class="comment">// 挂机课程阅读时间，单位是分钟，'65'代表挂机65分钟，请手动打开阅读页面，默认'65'分钟</span></span><br><span class="line">    ,<span class="attr">face</span>: <span class="number">1</span> <span class="comment">// 解除面部识别(不支持二维码类面部采集)，此功能仅为临时解除，默认开启</span></span><br><span class="line">    ,<span class="attr">total</span>: <span class="number">1</span> <span class="comment">// 显示课程进度的统计数据，在学习进度页面的上方展示，默认开启</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 仅开启video(audio)时，修改此处才会生效</span></span><br><span class="line">    ,<span class="attr">line</span>: <span class="string">'公网1'</span> <span class="comment">// 视频播放的默认资源线路，此功能适用于系统默认线路无资源，默认'公网1'</span></span><br><span class="line">    ,<span class="attr">http</span>: <span class="string">'标清'</span> <span class="comment">// 视频播放的默认清晰度，无效参数则使用系统默认清晰度，默认'标清'</span></span><br><span class="line">    <span class="comment">// 本区域参数，上方为video功能独享，下方为audio功能共享</span></span><br><span class="line">    ,<span class="attr">vol</span>: <span class="string">'0'</span> <span class="comment">// 默认音量的百分数，设定范围：[0,100]，'0'为静音，默认'0'</span></span><br><span class="line">    ,<span class="attr">rate</span>: <span class="string">'3'</span> <span class="comment">// 视频播放默认倍率，参数范围0∪[0.0625,16]，'0'为秒过，默认'1'倍</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 仅开启work时，修改此处才会生效</span></span><br><span class="line">    ,<span class="attr">auto</span>: <span class="number">0</span> <span class="comment">// 答题完成后自动提交，默认关闭</span></span><br><span class="line">    ,<span class="attr">none</span>: <span class="number">0</span> <span class="comment">// 无匹配答案时执行默认操作，关闭后若题目无匹配答案则会暂时保存已作答的题目，默认开启</span></span><br><span class="line">    ,<span class="attr">scale</span>: <span class="number">0</span> <span class="comment">// 富文本编辑器高度自动拉伸，用于文本类题目，答题框根据内容自动调整大小，默认关闭</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 仅开启jump时，修改此处才会生效</span></span><br><span class="line">    ,<span class="attr">course</span>: <span class="number">0</span> <span class="comment">// 当前课程完成后自动切换课程，仅支持按照根目录课程顺序切换，默认开启</span></span><br><span class="line">    ,<span class="attr">lock</span>: <span class="number">1</span> <span class="comment">// 跳过未开放(图标是锁)的章节，即闯关模式或定时发放的任务点，默认开启</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 自动登录功能配置区</span></span><br><span class="line">    ,<span class="attr">school</span>: <span class="string">'账号为手机号可以不修改此参数'</span> <span class="comment">// 学校/单位/机构码，要求完整有效可查询，例如'清华大学'</span></span><br><span class="line">    ,<span class="attr">username</span>: <span class="string">''</span> <span class="comment">// 学号/工号/借书证号(邮箱/手机号/账号)，例如'2018010101'，默认''</span></span><br><span class="line">    ,<span class="attr">password</span>: <span class="string">''</span> <span class="comment">// 密码，例如'123456'，默认''</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 题库接口配置区</span></span><br><span class="line">    ,<span class="attr">tk_num</span>: <span class="number">0</span> <span class="comment">// 题库接口，默认0</span></span><br><span class="line">},</span><br><span class="line">    _self = unsafeWindow,</span><br><span class="line">    url = location.pathname,</span><br><span class="line">    top = _self;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">setting.tk_num = GM_getValue(<span class="string">'tk_num'</span>);</span><br><span class="line">setting.tk_num = setting.tk_num == <span class="literal">undefined</span> ? <span class="number">1</span>:setting.tk_num;</span><br><span class="line">setting.tk_num = <span class="built_in">isNaN</span>(setting.tk_num)? <span class="number">1</span>:setting.tk_num;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (url != <span class="string">'/studyApp/studying'</span> &amp;&amp; top != _self.top) <span class="built_in">document</span>.domain = location.host.replace(<span class="regexp">/.+?\./</span>, <span class="string">''</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> {</span><br><span class="line">    <span class="keyword">while</span> (top != _self.top) {</span><br><span class="line">        top = top.parent.document ? top.parent : _self.top;</span><br><span class="line">        <span class="keyword">if</span> (top.location.pathname == <span class="string">'/mycourse/studentstudy'</span>) <span class="keyword">break</span>;</span><br><span class="line">    }</span><br><span class="line">} <span class="keyword">catch</span> (err) {</span><br><span class="line">    <span class="comment">// console.log(err);</span></span><br><span class="line">    top = _self;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> $ = _self.jQuery || top.jQuery,</span><br><span class="line">    parent = _self == top ? self : _self.parent,</span><br><span class="line">    Ext = _self.Ext || parent.Ext || {},</span><br><span class="line">    UE = _self.UE,</span><br><span class="line">    vjs = _self.videojs;</span><br><span class="line"></span><br><span class="line"><span class="built_in">String</span>.prototype.toCDB = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.replace(<span class="regexp">/\s/g</span>, <span class="string">''</span>).replace(<span class="regexp">/[\uff01-\uff5e]/g</span>, <span class="function"><span class="keyword">function</span>(<span class="params">str</span>) </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">String</span>.fromCharCode(str.charCodeAt(<span class="number">0</span>) - <span class="number">65248</span>);</span><br><span class="line">    }).replace(<span class="regexp">/[“”]/g</span>, <span class="string">'"'</span>).replace(<span class="regexp">/[‘’]/g</span>, <span class="string">"'"</span>).replace(<span class="regexp">/。/g</span>, <span class="string">'.'</span>);</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line">setting.normal = <span class="string">''</span>; <span class="comment">// ':visible'</span></span><br><span class="line"><span class="comment">// setting.time += Math.ceil(setting.time * Math.random()) - setting.time / 2;</span></span><br><span class="line">setting.job = [<span class="string">':not(*)'</span>];</span><br><span class="line"></span><br><span class="line">setting.video &amp;&amp; setting.job.push(<span class="string">'iframe[src*="/video/index.html"]'</span>);</span><br><span class="line">setting.work &amp;&amp; setting.job.push(<span class="string">'iframe[src*="/work/index.html"]'</span>);</span><br><span class="line">setting.audio &amp;&amp; setting.job.push(<span class="string">'iframe[src*="/audio/index.html"]'</span>);</span><br><span class="line">setting.book &amp;&amp; setting.job.push(<span class="string">'iframe[src*="/innerbook/index.html"]'</span>);</span><br><span class="line">setting.docs &amp;&amp; setting.job.push(<span class="string">'iframe[src*="/ppt/index.html"]'</span>, <span class="string">'iframe[src*="/pdf/index.html"]'</span>);</span><br><span class="line"></span><br><span class="line">setting.tip = !setting.queue || top != _self &amp;&amp; jobSort($ || Ext.query);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (url == <span class="string">'/mycourse/studentstudy'</span>) {</span><br><span class="line">    _self.checkMobileBrowerLearn = $.noop;</span><br><span class="line">    <span class="keyword">var</span> classId = location.search.match(<span class="regexp">/cla[zs]{2}id=(\d+)/i</span>)[<span class="number">1</span>] || <span class="number">0</span>,</span><br><span class="line">        courseId = _self.courseId || location.search.match(<span class="regexp">/courseId=(\d+)/i</span>)[<span class="number">1</span>] || <span class="number">0</span>;</span><br><span class="line">    setting.lock || $(<span class="string">'#coursetree'</span>).on(<span class="string">'click'</span>, <span class="string">'[onclick*=void], [href*=void]'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">        _self.getTeacherAjax(courseId, classId, $(<span class="keyword">this</span>).parent().attr(<span class="string">'id'</span>).slice(<span class="number">3</span>));</span><br><span class="line">    });</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (url == <span class="string">'/ananas/modules/video/index.html'</span> &amp;&amp; setting.video) {</span><br><span class="line">    <span class="keyword">if</span> (setting.review) _self.greenligth = Ext.emptyFn;</span><br><span class="line">    checkPlayer(_self.supportH5Video());</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (url == <span class="string">'/work/doHomeWorkNew'</span> || url == <span class="string">'/api/work'</span> || url == <span class="string">'/work/addStudentWorkNewWeb'</span>) {</span><br><span class="line">    <span class="keyword">if</span> (!UE) {</span><br><span class="line">        <span class="keyword">var</span> len = ($ || Ext.query || <span class="built_in">Array</span>)(<span class="string">'font:contains(未登录)'</span>, <span class="built_in">document</span>).length;</span><br><span class="line">        setTimeout(len == <span class="number">1</span> ? top.location.reload : parent.greenligth, setting.time);</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (setting.work) {</span><br><span class="line">        setTimeout(relieveLimit, <span class="number">0</span>);</span><br><span class="line">        beforeFind();</span><br><span class="line">    }</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (url == <span class="string">'/ananas/modules/audio/index.html'</span> &amp;&amp; setting.audio) {</span><br><span class="line">    <span class="keyword">if</span> (setting.review) _self.greenligth = Ext.emptyFn;</span><br><span class="line">    _self.videojs = hookAudio;</span><br><span class="line">    hookAudio.xhr = vjs.xhr;</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (url == <span class="string">'/ananas/modules/innerbook/index.html'</span> &amp;&amp; setting.book &amp;&amp; setting.tip) {</span><br><span class="line">    setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">        _self.setting ? _self.top.onchangepage(_self.getFrameAttr(<span class="string">'end'</span>)) : _self.greenligth();</span><br><span class="line">    }, setting.time);</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (url.match(<span class="regexp">/^\/ananas\/modules\/(ppt|pdf)\/index\.html$/</span>) &amp;&amp; setting.docs &amp;&amp; setting.tip) {</span><br><span class="line">    setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">        _self.setting ? _self.finishJob() : _self.greenligth();</span><br><span class="line">    }, setting.time);</span><br><span class="line">    frameElement.setAttribute(<span class="string">'download'</span>, <span class="number">1</span>);</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (url == <span class="string">'/knowledge/cards'</span>) {</span><br><span class="line">    $ &amp;&amp; checkToNext();</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (url.match(<span class="regexp">/^\/(course|zt)\/\d+\.html$/</span>)) {</span><br><span class="line">    setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">        +setting.read &amp;&amp; _self.sendLogs &amp;&amp; $(<span class="string">'.course_section:eq(0) .chapterText'</span>).click();</span><br><span class="line">    }, setting.time);</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (url == <span class="string">'/ztnodedetailcontroller/visitnodedetail'</span>) {</span><br><span class="line">    setting.read *= <span class="number">60</span> / $(<span class="string">'.course_section'</span>).length;</span><br><span class="line">    setting.read &amp;&amp; _self.sendLogs &amp;&amp; autoRead();</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (url == <span class="string">'/mycourse/studentcourse'</span>) {</span><br><span class="line">    <span class="keyword">var</span> gv = location.search.match(<span class="regexp">/d=\d+&amp;/g</span>);</span><br><span class="line">    setting.total &amp;&amp; $(<span class="string">'&lt;a&gt;'</span>, {</span><br><span class="line">        href: <span class="string">'/moocAnalysis/chapterStatisticByUser?classI'</span> + gv[<span class="number">1</span>] + <span class="string">'courseI'</span> + gv[<span class="number">0</span>] + <span class="string">'userId='</span> + _self.getCookie(<span class="string">'_uid'</span>) + <span class="string">'&amp;ut=s'</span>,</span><br><span class="line">        target: <span class="string">'_blank'</span>,</span><br><span class="line">        title: <span class="string">'点击查看章节统计'</span>,</span><br><span class="line">        style: <span class="string">'margin: 0 25px;'</span>,</span><br><span class="line">        html: <span class="string">'本课程共'</span> + $(<span class="string">'.icon'</span>).length + <span class="string">'节，剩余'</span> + $(<span class="string">'em:not(.openlock)'</span>).length + <span class="string">'节未完成'</span></span><br><span class="line">    }).appendTo(<span class="string">'.zt_logo'</span>).parent().width(<span class="string">'auto'</span>);</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (url.match(<span class="regexp">/^\/visit\/(courses|interaction)$/</span>)) {</span><br><span class="line">    setting.face &amp;&amp; $(<span class="string">'.zmodel'</span>).on(<span class="string">'click'</span>, <span class="string">'[onclick^=openFaceTip]'</span>, DisplayURL);</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (location.host.match(<span class="regexp">/^passport2/</span>)) {</span><br><span class="line">    setting.username &amp;&amp; getSchoolId();</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (location.hostname == <span class="string">'i.mooc.chaoxing.com'</span>) {</span><br><span class="line">    _self.layui.use(<span class="string">'layer'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">        <span class="keyword">this</span>.layer.open({<span class="attr">content</span>: <span class="string">'拖动进度条、倍速播放、秒过会导致不良记录！题库在慢慢补充，搜不到的题目系统会在次日进行自动补充'</span>, <span class="attr">title</span>: <span class="string">'超星网课助手提示'</span>, <span class="attr">btn</span>: <span class="string">'我已知悉'</span>, <span class="attr">offset</span>: <span class="string">'t'</span>, <span class="attr">closeBtn</span>: <span class="number">0</span>});</span><br><span class="line">    });</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (url == <span class="string">'/widget/pcvote/goStudentVotePage'</span>) {</span><br><span class="line">    $(<span class="string">':checked'</span>).click();</span><br><span class="line">    $(<span class="string">'.StudentTimu'</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">index</span>) </span>{</span><br><span class="line">        <span class="keyword">var</span> ans = _self.questionlist[index].answer;</span><br><span class="line">        $(<span class="string">':radio, :checkbox'</span>, <span class="keyword">this</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">num</span>) </span>{</span><br><span class="line">            ans[num].isanswer &amp;&amp; <span class="keyword">this</span>.click();</span><br><span class="line">        });</span><br><span class="line">        $(<span class="string">':text'</span>, <span class="keyword">this</span>).val(<span class="function"><span class="keyword">function</span>(<span class="params">num</span>) </span>{</span><br><span class="line">            <span class="keyword">return</span> $(ans[num].content).text().trim();</span><br><span class="line">        });</span><br><span class="line">    });</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (url == <span class="string">'/work/selectWorkQuestionYiPiYue'</span>) {</span><br><span class="line">    submitAnswer(getIframe().parent(), $.extend(<span class="literal">true</span>, [], parent._data));</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getIframe</span>(<span class="params">tip, win, job</span>) </span>{</span><br><span class="line">    <span class="keyword">if</span> (!$) <span class="keyword">return</span> Ext.get(frameElement || []).parent().child(<span class="string">'.ans-job-icon'</span>) || Ext.get([]);</span><br><span class="line">    <span class="keyword">do</span> {</span><br><span class="line">        win = win ? win.parent : _self;</span><br><span class="line">        job = $(win.frameElement).prevAll(<span class="string">'.ans-job-icon'</span>);</span><br><span class="line">    } <span class="keyword">while</span> (!job.length &amp;&amp; win.parent.frameElement);</span><br><span class="line">    <span class="keyword">return</span> tip ? win : job;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">jobSort</span>(<span class="params">$</span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> fn = $.fn ? [getIframe(<span class="number">1</span>), <span class="string">'length'</span>] : [self, <span class="string">'dom'</span>],</span><br><span class="line">        sel = setting.job.join(<span class="string">', :not(.ans-job-finished) &gt; .ans-job-icon'</span> + setting.normal + <span class="string">' ~ '</span>);</span><br><span class="line">    <span class="keyword">if</span> ($(sel, fn[<span class="number">0</span>].parent.document)[<span class="number">0</span>] == fn[<span class="number">0</span>].frameElement) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (!getIframe()[fn[<span class="number">1</span>]] || getIframe().parent().is(<span class="string">'.ans-job-finished'</span>)) <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">        $(sel, fn[<span class="number">0</span>].parent.document)[<span class="number">0</span>] == fn[<span class="number">0</span>].frameElement &amp;&amp; fn[<span class="number">0</span>].location.reload();</span><br><span class="line">    }, setting.time);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkPlayer</span>(<span class="params">tip</span>) </span>{</span><br><span class="line">    _self.videojs = hookVideo;</span><br><span class="line">    hookVideo.xhr = vjs.xhr;</span><br><span class="line">    Ext.isSogou = Ext.isIos = Ext.isAndroid = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">var</span> data = Ext.decode(_self.config(<span class="string">'data'</span>)) || {};</span><br><span class="line">    <span class="keyword">delete</span> data.danmaku;</span><br><span class="line">    data.doublespeed = <span class="number">1</span>;</span><br><span class="line">    frameElement.setAttribute(<span class="string">'data'</span>, Ext.encode(data));</span><br><span class="line">    <span class="keyword">if</span> (tip) <span class="keyword">return</span>;</span><br><span class="line">    _self.supportH5Video = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{<span class="keyword">return</span> <span class="literal">true</span>;};</span><br><span class="line">    alert(<span class="string">'此浏览器不支持html5播放器，请更换浏览器'</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hookVideo</span>(<span class="params"></span>) </span>{</span><br><span class="line">    _self.alert = <span class="built_in">console</span>.log;</span><br><span class="line">    <span class="keyword">var</span> config = <span class="built_in">arguments</span>[<span class="number">1</span>],</span><br><span class="line">        line = Ext.Array.filter(Ext.Array.map(config.playlines, <span class="function"><span class="keyword">function</span>(<span class="params">value, index</span>) </span>{</span><br><span class="line">            <span class="keyword">return</span> value.label == setting.line &amp;&amp; index;</span><br><span class="line">        }), <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>{</span><br><span class="line">            <span class="keyword">return</span> Ext.isNumber(value);</span><br><span class="line">        })[<span class="number">0</span>] || <span class="number">0</span>,</span><br><span class="line">        http = Ext.Array.filter(config.sources, <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>{</span><br><span class="line">            <span class="keyword">return</span> value.label == setting.http;</span><br><span class="line">        })[<span class="number">0</span>];</span><br><span class="line">    config.playlines.unshift(config.playlines[line]);</span><br><span class="line">    config.playlines.splice(line + <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">    config.plugins.videoJsResolutionSwitcher.default = http ? http.res : <span class="number">360</span>;</span><br><span class="line">    config.plugins.studyControl.enableSwitchWindow = <span class="number">1</span>;</span><br><span class="line">    config.plugins.timelineObjects.url = <span class="string">'/richvideo/initdatawithviewer?'</span>;</span><br><span class="line">    config.plugins.seekBarControl.enableFastForward = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (!setting.queue) <span class="keyword">delete</span> config.plugins.studyControl;</span><br><span class="line">    <span class="comment">// config.preload = setting.tip ? 'auto' : 'none';</span></span><br><span class="line">    <span class="keyword">var</span> player = vjs.apply(<span class="keyword">this</span>, <span class="built_in">arguments</span>),</span><br><span class="line">        a = <span class="string">'&lt;a href="https://d0.ananas.chaoxing.com/download/'</span> + _self.config(<span class="string">'objectid'</span>) + <span class="string">'" target="_blank"&gt;'</span>,</span><br><span class="line">        img = <span class="string">'&lt;img src="https://d0.ananas.chaoxing.com/download/e363b256c0e9bc5bd8266bf99dd6d6bb" style="margin: 6px 0 0 6px;"&gt;'</span>;</span><br><span class="line">    player.volume(<span class="built_in">Math</span>.round(setting.vol) / <span class="number">100</span> || <span class="number">0</span>);</span><br><span class="line">    Ext.get(player.controlBar.addChild(<span class="string">'Button'</span>).el_).setHTML(a + img + <span class="string">'&lt;/a&gt;'</span>).dom.title = <span class="string">'下载视频'</span>;</span><br><span class="line">    player.on(<span class="string">'loadstart'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">        setting.tip &amp;&amp; <span class="keyword">this</span>.play().catch(Ext.emptyFn);</span><br><span class="line">        <span class="keyword">this</span>.playbackRate(setting.rate &gt; <span class="number">16</span> || setting.rate &lt; <span class="number">0.0625</span> ? <span class="number">1</span> : setting.rate);</span><br><span class="line">    });</span><br><span class="line">    player.one([<span class="string">'loadedmetadata'</span>, <span class="string">'firstplay'</span>], <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">        setting.two = setting.rate === <span class="string">'0'</span> &amp;&amp; setting.two &lt; <span class="number">1</span>;</span><br><span class="line">        setting.two &amp;&amp; config.plugins.seekBarControl.sendLog(<span class="keyword">this</span>.children_[<span class="number">0</span>], <span class="string">'ended'</span>, <span class="built_in">Math</span>.floor(<span class="keyword">this</span>.cache_.duration));</span><br><span class="line">    });</span><br><span class="line">    player.on(<span class="string">'ended'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">        Ext.fly(frameElement).parent().addCls(<span class="string">'ans-job-finished'</span>);</span><br><span class="line">    });</span><br><span class="line">    <span class="keyword">return</span> player;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hookAudio</span>(<span class="params"></span>) </span>{</span><br><span class="line">    _self.alert = <span class="built_in">console</span>.log;</span><br><span class="line">    <span class="keyword">var</span> config = <span class="built_in">arguments</span>[<span class="number">1</span>];</span><br><span class="line">    config.plugins.studyControl.enableSwitchWindow = <span class="number">1</span>;</span><br><span class="line">    config.plugins.seekBarControl.enableFastForward = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (!setting.queue) <span class="keyword">delete</span> config.plugins.studyControl;</span><br><span class="line">    <span class="keyword">var</span> player = vjs.apply(<span class="keyword">this</span>, <span class="built_in">arguments</span>),</span><br><span class="line">        a = <span class="string">'&lt;a href="https://d0.ananas.chaoxing.com/download/'</span> + _self.config(<span class="string">'objectid'</span>) + <span class="string">'" target="_blank"&gt;'</span>,</span><br><span class="line">        img = <span class="string">'&lt;img src="https://d0.ananas.chaoxing.com/download/e363b256c0e9bc5bd8266bf99dd6d6bb" style="margin: 6px 0 0 6px;"&gt;'</span>;</span><br><span class="line">    player.volume(<span class="built_in">Math</span>.round(setting.vol) / <span class="number">100</span> || <span class="number">0</span>);</span><br><span class="line">    player.playbackRate(setting.rate &gt; <span class="number">16</span> || setting.rate &lt; <span class="number">0.0625</span> ? <span class="number">1</span> : setting.rate);</span><br><span class="line">    Ext.get(player.controlBar.addChild(<span class="string">'Button'</span>).el_).setHTML(a + img + <span class="string">'&lt;/a&gt;'</span>).dom.title = <span class="string">'下载音频'</span>;</span><br><span class="line">    player.on(<span class="string">'loadeddata'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">        setting.tip &amp;&amp; <span class="keyword">this</span>.play().catch(Ext.emptyFn);</span><br><span class="line">    });</span><br><span class="line">    player.one(<span class="string">'firstplay'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">        setting.rate === <span class="string">'0'</span> &amp;&amp; config.plugins.seekBarControl.sendLog(<span class="keyword">this</span>.children_[<span class="number">0</span>], <span class="string">'ended'</span>, <span class="built_in">Math</span>.floor(<span class="keyword">this</span>.cache_.duration));</span><br><span class="line">    });</span><br><span class="line">    player.on(<span class="string">'ended'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">        Ext.fly(frameElement).parent().addCls(<span class="string">'ans-job-finished'</span>);</span><br><span class="line">    });</span><br><span class="line">    <span class="keyword">return</span> player;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">relieveLimit</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">if</span> (setting.scale) _self.UEDITOR_CONFIG.scaleEnabled = <span class="literal">false</span>;</span><br><span class="line">    $.each(UE.instants, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">        <span class="keyword">var</span> key = <span class="keyword">this</span>.key;</span><br><span class="line">        <span class="keyword">this</span>.ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">            <span class="keyword">this</span>.destroy();</span><br><span class="line">            UE.getEditor(key);</span><br><span class="line">        });</span><br><span class="line">    });</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">beforeFind</span>(<span class="params"></span>) </span>{</span><br><span class="line">    setting.regl = parent.greenligth || $.noop;</span><br><span class="line">    <span class="keyword">if</span> ($.type(parent._data) == <span class="string">'array'</span>) <span class="keyword">return</span> setting.regl();</span><br><span class="line">    setting.div = $(</span><br><span class="line">        <span class="string">'&lt;div style="border: 2px dashed rgb(0, 85, 68); width: 330px; position: fixed; top: 0; right: 0; z-index: 99999; background-color: rgba(70, 196, 38, 0.6); overflow-x: auto;"&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;span style="font-size: medium;"&gt;&lt;/span&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;div style="font-size: medium;"&gt;正在搜索答案...&lt;/div&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;button style="margin-right: 10px;"&gt;暂停答题&lt;/button&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;button style="margin-right: 10px;"&gt;'</span> + (setting.auto ? <span class="string">'取消本次自动提交'</span> : <span class="string">'开启本次自动提交'</span>) + <span class="string">'&lt;/button&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;button style="margin-right: 10px;"&gt;重新查询&lt;/button&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;button&gt;折叠面板&lt;/button&gt;&lt;br&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;div style="font-size: medium;"&gt;当前查题接口:'</span>+ (setting.tk_num%<span class="number">2</span>+<span class="number">1</span>) + <span class="string">'&lt;/div&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;button id = "next_tk"&gt;切换为下一个查题接口&lt;/button&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;div style="max-height: 300px; overflow-y: auto;"&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;table border="1" style="font-size: 12px;"&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;thead&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;tr&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;th style="width: 25px; min-width: 25px;"&gt;题号&lt;/th&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;th style="width: 60%; min-width: 130px;"&gt;题目（点击可复制）&lt;/th&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;th style="min-width: 130px;"&gt;答案（点击可复制）&lt;/th&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;/tr&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;/thead&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;tfoot style="display: none;"&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;tr&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;th colspan="3"&gt;答案提示框 已折叠&lt;/th&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;/tr&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;/tfoot&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;tbody&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;tr&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;td colspan="3" style="display: none;"&gt;&lt;/td&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;/tr&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;/tbody&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;/table&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;/div&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;/div&gt;'</span></span><br><span class="line">    ).appendTo(<span class="string">'body'</span>).on(<span class="string">'click'</span>, <span class="string">'button, td'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">        <span class="keyword">var</span> len = $(<span class="keyword">this</span>).prevAll(<span class="string">'button'</span>).length;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.nodeName == <span class="string">'TD'</span>) {</span><br><span class="line">            $(<span class="keyword">this</span>).prev().length &amp;&amp; GM_setClipboard($(<span class="keyword">this</span>).text());</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (!$(<span class="keyword">this</span>).siblings().length) {</span><br><span class="line">            $(<span class="keyword">this</span>).parent().text(<span class="string">'正在搜索答案...'</span>);</span><br><span class="line">            setting.num++;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (len === <span class="number">0</span>) {</span><br><span class="line">            <span class="keyword">if</span> (setting.loop) {</span><br><span class="line">                clearInterval(setting.loop);</span><br><span class="line">                <span class="keyword">delete</span> setting.loop;</span><br><span class="line">                len = [<span class="string">'已暂停搜索'</span>, <span class="string">'继续答题'</span>];</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                setting.loop = setInterval(findAnswer, setting.time);</span><br><span class="line">                len = [<span class="string">'正在搜索答案...'</span>, <span class="string">'暂停答题'</span>];</span><br><span class="line">            }</span><br><span class="line">            setting.div.children(<span class="string">'div:eq(0)'</span>).html(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">                <span class="keyword">return</span> $(<span class="keyword">this</span>).data(<span class="string">'html'</span>) || len[<span class="number">0</span>];</span><br><span class="line">            }).removeData(<span class="string">'html'</span>);</span><br><span class="line">            $(<span class="keyword">this</span>).html(len[<span class="number">1</span>]);</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (len == <span class="number">1</span>) {</span><br><span class="line">            setting.auto = !setting.auto;</span><br><span class="line">            $(<span class="keyword">this</span>).html(setting.auto ? <span class="string">'取消本次自动提交'</span> : <span class="string">'开启本次自动提交'</span>);</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (len == <span class="number">2</span>) {</span><br><span class="line">            parent.location.reload();</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (len == <span class="number">3</span>) {</span><br><span class="line">            setting.div.find(<span class="string">'tbody, tfoot'</span>).toggle();</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (len == <span class="number">4</span>) {</span><br><span class="line">            setting.tk_num++;</span><br><span class="line">            GM_setValue(<span class="string">'tk_num'</span>,setting.tk_num);</span><br><span class="line">            setting.tk_num = GM_getValue(<span class="string">'tk_num'</span>);</span><br><span class="line">            <span class="built_in">console</span>.log(setting.tk_num);</span><br><span class="line">            parent.location.reload();</span><br><span class="line">        }</span><br><span class="line">    }).find(<span class="string">'table, td, th'</span>).css(<span class="string">'border'</span>, <span class="string">'1px solid'</span>).end();</span><br><span class="line">    setting.lose = setting.num = <span class="number">0</span>;</span><br><span class="line">    setting.data = parent._data = [];</span><br><span class="line">    setting.over = <span class="string">'&lt;button style="margin-right: 10px;"&gt;跳过此题&lt;/button&gt;'</span>;</span><br><span class="line">    setting.curs = $(<span class="string">'script:contains(courseName)'</span>, top.document).text().match(<span class="regexp">/courseName:\'(.+?)\'|$/</span>)[<span class="number">1</span>] || $(<span class="string">'h1'</span>).text().trim() || <span class="string">'无'</span>;</span><br><span class="line">    setting.loop = setInterval(findAnswer, setting.time);</span><br><span class="line">    <span class="keyword">var</span> tip = ({<span class="attr">undefined</span>: <span class="string">'任务点排队中'</span>, <span class="attr">null</span>: <span class="string">'等待切换中'</span>})[setting.tip];</span><br><span class="line">    tip &amp;&amp; setting.div.children(<span class="string">'div:eq(0)'</span>).data(<span class="string">'html'</span>, tip).siblings(<span class="string">'button:eq(0)'</span>).click();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">findAnswer</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">if</span> (setting.num &gt;= $(<span class="string">'.TiMu'</span>).length) {</span><br><span class="line">        <span class="keyword">var</span> arr = setting.lose ? [<span class="string">'共有 &lt;font color="red"&gt;'</span> + setting.lose + <span class="string">'&lt;/font&gt; 道题目待完善（已深色标注）'</span>, saveThis] : [<span class="string">'答题已完成'</span>, submitThis];</span><br><span class="line">        setting.div.children(<span class="string">'div:eq(0)'</span>).data(<span class="string">'html'</span>, arr[<span class="number">0</span>]).siblings(<span class="string">'button:eq(0)'</span>).hide().click();</span><br><span class="line">        <span class="keyword">return</span> setTimeout(arr[<span class="number">1</span>], setting.time);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">var</span> $TiMu = $(<span class="string">'.TiMu'</span>).eq(setting.num),</span><br><span class="line">        question = filterImg($TiMu.find(<span class="string">'.Zy_TItle:eq(0) .clearfix'</span>)).replace(<span class="regexp">/^【.*?】\s*/</span>, <span class="string">''</span>).replace(<span class="regexp">/\s*（\d+\.\d+分）$/</span>, <span class="string">''</span>).replace(<span class="regexp">/[(]\s*[)]。$/</span>,<span class="string">''</span>).replace(<span class="regexp">/（\s*）。$/</span>,<span class="string">''</span>).replace(<span class="regexp">/[(]\s*[)]$/</span>,<span class="string">''</span>).replace(<span class="regexp">/（\s*）$/</span>,<span class="string">''</span>).replace(<span class="regexp">/。$/</span>,<span class="string">''</span>),</span><br><span class="line">        type = $TiMu.find(<span class="string">'input[name^=answertype]:eq(0)'</span>).val() || <span class="string">'-1'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//setting.div.children('div:eq(0)').text(encodeURIComponent(question)+'正在搜索答案...');</span></span><br><span class="line">    <span class="keyword">switch</span>(setting.tk_num%<span class="number">2</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:{</span><br><span class="line">            GM_xmlhttpRequest({</span><br><span class="line">                method: <span class="string">'POST'</span>,</span><br><span class="line">                url: <span class="string">'http://cx.icodef.com/wyn-nb'</span>,</span><br><span class="line">                headers: {</span><br><span class="line">                    <span class="string">'Content-type'</span>: <span class="string">'application/x-www-form-urlencoded'</span>,</span><br><span class="line">                    <span class="string">'Authorization'</span>: setting.token,</span><br><span class="line">                },</span><br><span class="line">                data: <span class="string">'question='</span> + <span class="built_in">encodeURIComponent</span>(question) + <span class="string">'&amp;type='</span> + type + <span class="string">'&amp;id='</span> + ($(<span class="string">'#workLibraryId'</span>).val() || $(<span class="string">'#oldWorkId'</span>).val()),</span><br><span class="line">                timeout: setting.time,</span><br><span class="line">                onload: <span class="function"><span class="keyword">function</span>(<span class="params">xhr</span>) </span>{</span><br><span class="line">                    <span class="keyword">if</span> (!setting.loop) {</span><br><span class="line">                    } <span class="keyword">else</span> <span class="keyword">if</span> (xhr.status == <span class="number">200</span>) {</span><br><span class="line">                        <span class="keyword">var</span> obj = $.parseJSON(xhr.responseText) || {};</span><br><span class="line">                        obj.answer = obj.data;</span><br><span class="line">                        <span class="keyword">if</span> (obj.code) {</span><br><span class="line">                            setting.div.children(<span class="string">'div:eq(0)'</span>).text(<span class="string">'正在搜索答案...'</span>);</span><br><span class="line">                            <span class="keyword">var</span> td = <span class="string">'&lt;td style="border: 1px solid;'</span>,</span><br><span class="line">                                answer = <span class="built_in">String</span>(obj.answer).replace(<span class="regexp">/&amp;/g</span>, <span class="string">'&amp;amp;'</span>).replace(<span class="regexp">/&lt;(?!img)/g</span>, <span class="string">'&amp;lt;'</span>);</span><br><span class="line">                            obj.answer = <span class="regexp">/^http/</span>.test(answer) ? <span class="string">'&lt;img src="'</span> + obj.answer + <span class="string">'"&gt;'</span> : obj.answer;</span><br><span class="line">                            $(</span><br><span class="line">                                <span class="string">'&lt;tr&gt;'</span> +</span><br><span class="line">                                td + <span class="string">' text-align: center;"&gt;'</span> + $TiMu.find(<span class="string">'.Zy_TItle:eq(0) i'</span>).text().trim() + <span class="string">'&lt;/td&gt;'</span> +</span><br><span class="line">                                td + <span class="string">'" title="点击可复制"&gt;'</span> + (question.match(<span class="string">'&lt;img'</span>) ? question : question.replace(<span class="regexp">/&amp;/g</span>, <span class="string">'&amp;amp;'</span>).replace(<span class="regexp">/&lt;/g</span>, <span class="string">'&amp;lt'</span>)) + <span class="string">'&lt;/td&gt;'</span> +</span><br><span class="line">                                td + <span class="string">'" title="点击可复制"&gt;'</span> + (<span class="regexp">/^http/</span>.test(answer) ? obj.answer : <span class="string">''</span>) + answer + <span class="string">'&lt;/td&gt;'</span> +</span><br><span class="line">                                <span class="string">'&lt;/tr&gt;'</span></span><br><span class="line">                            ).appendTo(setting.div.find(<span class="string">'tbody'</span>)).css(<span class="string">'background-color'</span>, fillAnswer($TiMu.find(<span class="string">'ul:eq(0)'</span>).find(<span class="string">'li'</span>), obj, type) ? <span class="string">''</span> : <span class="string">'rgba(0, 150, 136, 0.6)'</span>);</span><br><span class="line">                            setting.data[setting.num++] = {</span><br><span class="line">                                code: obj.code &gt; <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>,</span><br><span class="line">                                question: question,</span><br><span class="line">                                option: obj.answer,</span><br><span class="line">                                type: <span class="built_in">Number</span>(type)</span><br><span class="line">                            };</span><br><span class="line">                        } <span class="keyword">else</span> {</span><br><span class="line">                            setting.div.children(<span class="string">'div:eq(0)'</span>).html(obj.answer || setting.over + <span class="string">'服务器繁忙，正在重试...'</span>);</span><br><span class="line">                        }</span><br><span class="line">                        setting.div.children(<span class="string">'span'</span>).html(obj.msg || <span class="string">''</span>);</span><br><span class="line">                    } <span class="keyword">else</span> <span class="keyword">if</span> (xhr.status == <span class="number">403</span>) {</span><br><span class="line">                        <span class="keyword">var</span> html = xhr.responseText.indexOf(<span class="string">'{'</span>) ? <span class="string">'请求过于频繁，单击下面的切换题库接口按钮试试吧'</span> : $.parseJSON(xhr.responseText).data;</span><br><span class="line">                        setting.div.children(<span class="string">'div:eq(0)'</span>).data(<span class="string">'html'</span>, html).siblings(<span class="string">'button:eq(0)'</span>).click();</span><br><span class="line">                    } <span class="keyword">else</span> {</span><br><span class="line">                        setting.div.children(<span class="string">'div:eq(0)'</span>).html(<span class="string">'题库异常，单击下面的切换题库接口按钮试试吧...'</span>);</span><br><span class="line">                    }</span><br><span class="line">                },</span><br><span class="line">                ontimeout: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">                    setting.loop &amp;&amp; setting.div.children(<span class="string">'div:eq(0)'</span>).html(setting.over + <span class="string">'服务器超时，正在重试...'</span>);</span><br><span class="line">                }</span><br><span class="line">            });</span><br><span class="line">        }; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:{</span><br><span class="line">            GM_xmlhttpRequest({</span><br><span class="line">                method: <span class="string">'POST'</span>,</span><br><span class="line">                url: <span class="string">'http://cx.beaa.cn/cx.php'</span>,</span><br><span class="line">                headers: {</span><br><span class="line">                    <span class="string">'Content-type'</span>: <span class="string">'application/x-www-form-urlencoded'</span>,</span><br><span class="line">                },</span><br><span class="line">                data: <span class="string">'content='</span> + <span class="built_in">encodeURIComponent</span>(question.replace(<span class="regexp">/^&lt;img src="/</span>,<span class="string">""</span>).replace(<span class="regexp">/"&gt;$/</span>,<span class="string">""</span>)),</span><br><span class="line">                timeout: setting.time,</span><br><span class="line">                onload: <span class="function"><span class="keyword">function</span>(<span class="params">xhr</span>) </span>{</span><br><span class="line">                    <span class="keyword">if</span> (!setting.loop) {</span><br><span class="line">                    } <span class="keyword">else</span> <span class="keyword">if</span> (xhr.status == <span class="number">200</span>) {</span><br><span class="line">                        <span class="keyword">var</span> obj = $.parseJSON(xhr.responseText.replace(<span class="regexp">/^操作数据失败！/</span>,<span class="string">''</span>)) || {};</span><br><span class="line">                        <span class="keyword">if</span> (obj.code) {</span><br><span class="line">                            setting.div.children(<span class="string">'div:eq(0)'</span>).text(<span class="string">'正在搜索答案...'</span>);</span><br><span class="line">                            <span class="keyword">var</span> td = <span class="string">'&lt;td style="border: 1px solid;'</span>,</span><br><span class="line">                                answer = S</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;h1 id=&quot;脚本①&quot;&gt;&lt;a href=&quot;#脚本①&quot; class=&quot;headerlink&quot; title=&quot;脚本①&quot;&gt;&lt;/a&gt;脚本①&lt;/h1&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td
      
    
    </summary>
    
    
    
      <category term="小技巧" scheme="https://melodyjerry.github.io/blog/tags/%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
      <category term="工具" scheme="https://melodyjerry.github.io/blog/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Beyond Compare 4解除到期限制的技巧</title>
    <link href="https://melodyjerry.github.io/blog/2020/06/08/Beyond%20Compare%204%E8%A7%A3%E9%99%A4%E5%88%B0%E6%9C%9F%E9%99%90%E5%88%B6%E7%9A%84%E6%8A%80%E5%B7%A7/"/>
    <id>https://melodyjerry.github.io/blog/2020/06/08/Beyond Compare 4解除到期限制的技巧/</id>
    <published>2020-06-08T14:50:00.000Z</published>
    <updated>2020-07-10T06:09:49.906Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>如果提示 这个授权密钥已被吊销 ，删除 C:\Users\Administrator\AppData\Roaming\Scooter Software\Beyond Compare 4 目录下的文件即可（将Administrator换成自己的用户名）</p></li><li><p>如果没有输入激活码，且试用30天已到期，可以删除安装目录下 的 BCUnrar.dll 文件，发现又可以使用了，不过依然是试用。<br>也可以删除注册表 \HKEY_CURRENT_USER\Software\ScooterSoftware\Beyond Compare 4\CacheId ，也能够继续使用，且不会到期。</p></li></ol><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;如果提示 这个授权密钥已被吊销 ，删除 C:\Users\Administrator\AppData\Roaming\Scooter Software\Beyond Compare 4 目录下的文件即可（将Administrator换成自己的用户名）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果没有输入激活码，且试用30天已到期，可以删除安装目录下 的 BCUnrar.dll 文件，发现又可以使用了，不过依然是试用。&lt;br&gt;也可以删除注册表 \HKEY_CURRENT_USER\Software\ScooterSoftware\Beyond Compare 4\CacheId ，也能够继续使用，且不会到期。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
    
      <category term="小技巧" scheme="https://melodyjerry.github.io/blog/tags/%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
      <category term="工具" scheme="https://melodyjerry.github.io/blog/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Java 常用资源工具集合</title>
    <link href="https://melodyjerry.github.io/blog/2020/06/08/Java%20%E5%B8%B8%E7%94%A8%E8%B5%84%E6%BA%90%E5%B7%A5%E5%85%B7%E9%9B%86%E5%90%88/"/>
    <id>https://melodyjerry.github.io/blog/2020/06/08/Java 常用资源工具集合/</id>
    <published>2020-06-08T06:14:00.000Z</published>
    <updated>2020-07-10T06:12:28.276Z</updated>
    
    <content type="html"><![CDATA[<p>来源：<a href="http://rrd.me/emdDq" target="_blank" rel="noopener">http://rrd.me/emdDq</a></p><a id="more"></a><p>搜索资源网站<br>学习技术过程我们经常需要使用搜索引擎来检索资料，国内常用的也就是某度了。</p><p>当然有条件的话，搜索引擎首先还是推荐使用 Google，如果没办法使用，可以使用以下几个作为备用：</p><p>Bing<br>Bing 国际版：<a href="https://cn.bing.com/" target="_blank" rel="noopener">https://cn.bing.com/</a></p><p>比某度好用，之前还被停用了几天，最近可以了。</p><p>DuckDuckGo<br>DuckDuckGo：<a href="https://duckduckgo.com/" target="_blank" rel="noopener">https://duckduckgo.com/</a></p><p>从官网的介绍来看这个搜索引擎不收集用户信息，而且没有广告。</p><p>Stack Overflow<br>Stack Overflow：<a href="https://stackoverflow.com/" target="_blank" rel="noopener">https://stackoverflow.com/</a></p><p>我们如果常用 Google，很多技术问题的答案就在这个网站上，如果你无法使用 Google 可以在这个网站上直接检索就好了。</p><p>Gitlogs<br>Gitlogs：<a href="https://www.gitlogs.com/" target="_blank" rel="noopener">https://www.gitlogs.com/</a></p><p>Gitlogs 是专门针对 GitHub 项目的搜索引擎，我们通过他可以快速找到想要项目。</p><p>jiumo search<br>文档搜索引擎 jiumo search 鸠摩搜书：<a href="https://www.jiumodiary.com/" target="_blank" rel="noopener">https://www.jiumodiary.com/</a></p><p>可以用来找一些技术文档手册，很多在百度网盘里。</p><p>Ebooke<br>Ebooke：<a href="https://ebookee.org/" target="_blank" rel="noopener">https://ebookee.org/</a></p><p>Ebookee 是一个基于互联网并提供免费电子图书下载的搜索引擎网站。</p><p>Iconfinder<br>图标搜索：<a href="https://www.iconfinder.com/" target="_blank" rel="noopener">https://www.iconfinder.com/</a></p><p>用来查找 logo 图片。</p><p>TinEye<br>TinEye：<a href="https://www.tineye.com" target="_blank" rel="noopener">https://www.tineye.com</a></p><p>用图片来检索图片，我们可以上传图片或输入图片的 URL 来检索。</p><p>SemanticScholar<br>SemanticScholar：<a href="https://www.semanticscholar.org/" target="_blank" rel="noopener">https://www.semanticscholar.org/</a></p><p>SemanticScholar 是一个免费学术搜索引擎，其检索结果来自于期刊、学术会议资料或者是学术机构的文献。</p><p>LibreStock<br>LibreStock：<a href="https://librestock.com/" target="_blank" rel="noopener">https://librestock.com/</a></p><p>LibreStock 上可以检索一些优质的高清图片。</p><p>CC Search<br>CC Search：<a href="https://ccsearch.creativecommons.org/" target="_blank" rel="noopener">https://ccsearch.creativecommons.org/</a></p><p>CC Search 上搜索到的图片资源都是无版权的，我们可以免费的使用。</p><p>Pexels<br>Pexels：<a href="https://www.pexels.com/" target="_blank" rel="noopener">https://www.pexels.com/</a></p><p>高质量的图片网站，可以免费使用。</p><p>Unsplash<br>Unsplash：<a href="https://unsplash.com/" target="_blank" rel="noopener">https://unsplash.com/</a></p><p>免费高清素材网站。</p><p>The App Store<br>The App Store：<a href="https://theappstore.org/" target="_blank" rel="noopener">https://theappstore.org/</a></p><p>The App Store 是一个针对苹果手机、iPad、Mac 设备的应用搜索工具。</p><p>工具类<br>图片相关工具<br>TinyPNG：<a href="https://tinypng.com/" target="_blank" rel="noopener">https://tinypng.com/</a></p><p>免费的在线图片压缩工具，压缩率高，无损画质，直接拖拽使用，很方便。</p><p>picdiet：<a href="https://www.picdiet.com/zh-cn" target="_blank" rel="noopener">https://www.picdiet.com/zh-cn</a></p><p>独特且强悍的JavaScript 算法，能极速压缩 80% 的图片大小，而不损害其质量。</p><p>SmartResize：</p><p><a href="https://www.smartresize.com/zh-cn" target="_blank" rel="noopener">https://www.smartresize.com/zh-cn</a></p><p>这个工具基于 javascript+HTML5 编写而成的，是一个批量裁剪缩放图片的神器！</p><p>正则表达式相关工具<br>以下两个工具以图形的方式来展示正则表达式，更易于理解：</p><p><a href="https://regexr.com/" target="_blank" rel="noopener">https://regexr.com/</a></p><p><a href="https://jex.im/regulex/#!flags=&amp;re=%5E(a%7Cb)*%3F%24" target="_blank" rel="noopener">https://jex.im/regulex/#!flags=&amp;re=%5E(a%7Cb)*%3F%24</a></p><p>文件转换转换工具<br>以下资源支持各种格式（PDF、图片、Word）相互转换。</p><p><a href="https://smallpdf.com/cn" target="_blank" rel="noopener">https://smallpdf.com/cn</a></p><p><a href="https://convertio.co/zh/" target="_blank" rel="noopener">https://convertio.co/zh/</a></p><p><a href="https://www.online-convert.com/" target="_blank" rel="noopener">https://www.online-convert.com/</a></p><p><a href="https://www.pdftoword.com/" target="_blank" rel="noopener">https://www.pdftoword.com/</a></p><p><a href="https://tools.pdf24.org/zh/" target="_blank" rel="noopener">https://tools.pdf24.org/zh/</a></p><p><a href="https://cn.office-converter.com/" target="_blank" rel="noopener">https://cn.office-converter.com/</a></p><p>在线编译器<br>包含前后端（php、java、c等）都可以在线运行测试</p><p><a href="https://rextester.com/" target="_blank" rel="noopener">https://rextester.com/</a></p><p><a href="https://www.onlinegdb.com/" target="_blank" rel="noopener">https://www.onlinegdb.com/</a></p><p><a href="https://c.runoob.com/" target="_blank" rel="noopener">https://c.runoob.com/</a></p><p>HTML、CSS、JS、设计类的工具<br>JSFiddle: <a href="https://jsfiddle.net/" target="_blank" rel="noopener">https://jsfiddle.net/</a></p><p>CodePen: <a href="https://codepen.io/" target="_blank" rel="noopener">https://codepen.io/</a></p><p>Runoob: <a href="https://c.runoob.com/front-end/61" target="_blank" rel="noopener">https://c.runoob.com/front-end/61</a></p><p>JSON 解析器: <a href="https://c.runoob.com/front-end/53" target="_blank" rel="noopener">https://c.runoob.com/front-end/53</a></p><p>在线 PS: <a href="http://www.kantu.com/" target="_blank" rel="noopener">http://www.kantu.com/</a></p><p>表格转换工具: <a href="https://tableconvert.com/" target="_blank" rel="noopener">https://tableconvert.com/</a></p><p>支持的 Markdown、HTML table、CSV 和 Excel 的相互转换。</p><p>DesignCap: <a href="https://www.designcap.com/" target="_blank" rel="noopener">https://www.designcap.com/</a></p><p>在线设计海报，内置众多模板及素材。</p><p>思维导图工具<br>推荐几款绘图工具：</p><p>Xmind：<a href="https://www.xmind.cn/" target="_blank" rel="noopener">https://www.xmind.cn/</a></p><p>跨平台、跨终端，拥有全功能的思维导图软件。</p><p>ProcessOn：<a href="https://www.processon.com/" target="_blank" rel="noopener">https://www.processon.com/</a></p><p>免费在线作图，实时协作，支持流程图、思维导图、原型图、UML、网络拓扑图、组织结构图等。</p><p>MindMaster：<a href="https://www.edrawsoft.cn/mindmaster/" target="_blank" rel="noopener">https://www.edrawsoft.cn/mindmaster/</a></p><p>多平台思维导图软件，可用于Windows，Mac和Linux等桌面环境，也可以在线使用或在苹果，安卓等移动端上使用。</p><p>MindMeister：<a href="https://www.mindmeister.com/zh" target="_blank" rel="noopener">https://www.mindmeister.com/zh</a></p><p>在线思维导图工具，已有超过1000万个用户。</p><p>百度脑图：<a href="http://naotu.baidu.com/" target="_blank" rel="noopener">http://naotu.baidu.com/</a> 简洁的在线思维导图工具</p><p>Gliffy：<a href="https://www.gliffy.com/" target="_blank" rel="noopener">https://www.gliffy.com/</a></p><p>我们可以在 Chrome 浏览器上安装 gliffy 插件。</p><p>可以在线创建流程图、UML图、线框图、BPNM、组织架构图等。</p><p>文档笔记平台<br>推荐几个常用的国内外云笔记平台，比较常用的应该是印象、有道、石墨，有一些国外的访问速度比较慢，影响体验。</p><p>现在用云笔记的人应该蛮多的，可以总结归纳自己的一些知识储备或者相关的业务资料，加上他们自带的跨平台特性，用起来还是很方便的。</p><p>印象笔记：<a href="https://www.yinxiang.com/" target="_blank" rel="noopener">https://www.yinxiang.com/</a></p><p>有道笔记：<a href="https://note.youdao.com/" target="_blank" rel="noopener">https://note.youdao.com/</a></p><p>OneNote：<a href="https://www.onenote.com/" target="_blank" rel="noopener">https://www.onenote.com/</a></p><p>幕布：<a href="https://mubu.com/" target="_blank" rel="noopener">https://mubu.com/</a></p><p>为知笔记：<a href="https://www.wiz.cn/" target="_blank" rel="noopener">https://www.wiz.cn/</a></p><p>石墨文档：<a href="https://shimo.im/" target="_blank" rel="noopener">https://shimo.im/</a></p><p>Google keep：<a href="https://keep.google.com/" target="_blank" rel="noopener">https://keep.google.com/</a></p><p>Simplenote：<a href="https://simplenote.com/" target="_blank" rel="noopener">https://simplenote.com/</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;来源：&lt;a href=&quot;http://rrd.me/emdDq&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://rrd.me/emdDq&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="小技巧" scheme="https://melodyjerry.github.io/blog/tags/%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
      <category term="工具" scheme="https://melodyjerry.github.io/blog/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="Java" scheme="https://melodyjerry.github.io/blog/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java比较两个List集合的方法</title>
    <link href="https://melodyjerry.github.io/blog/2020/06/08/Java%E5%AE%9E%E7%8E%B0%E6%AF%94%E8%BE%83%E4%B8%A4%E4%B8%AAList%E9%9B%86%E5%90%88%E6%98%AF%E5%90%A6%E7%9B%B8%E7%AD%89/"/>
    <id>https://melodyjerry.github.io/blog/2020/06/08/Java实现比较两个List集合是否相等/</id>
    <published>2020-06-08T05:27:00.000Z</published>
    <updated>2020-07-10T06:05:00.258Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 比较两个List集合是否相等</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;注：1. 如果一个List的引用为&lt;code&gt;null&lt;/code&gt;，或者其包含的元素个数为0，那么该List在本逻辑处理中都算作空；</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;2. 泛型参数E涉及到对象，所以需要确保正确实现了对应对象的&lt;code&gt;equal()&lt;/code&gt;方法。</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> list1</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> list2</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;E&gt;<span class="function"><span class="keyword">boolean</span> <span class="title">isListEqual</span><span class="params">(List&lt;E&gt; list1, List&lt;E&gt; list2)</span> </span>{</span><br><span class="line"><span class="comment">// 两个list引用相同（包括两者都为空指针的情况）</span></span><br><span class="line"><span class="keyword">if</span> (list1 == list2) {</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 两个list都为空（包括空指针、元素个数为0）</span></span><br><span class="line"><span class="keyword">if</span> ((list1 == <span class="keyword">null</span> &amp;&amp; list2 != <span class="keyword">null</span> &amp;&amp; list2.size() == <span class="number">0</span>)</span><br><span class="line">|| (list2 == <span class="keyword">null</span> &amp;&amp; list1 != <span class="keyword">null</span> &amp;&amp; list1.size() == <span class="number">0</span>)) {</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 两个list元素个数不相同</span></span><br><span class="line"><span class="keyword">if</span> (list1.size() != list2.size()) {</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 两个list元素个数已经相同，再比较两者内容</span></span><br><span class="line"><span class="comment">// 采用这种可以忽略list中的元素的顺序</span></span><br><span class="line"><span class="comment">// 涉及到对象的比较是否相同时，确保实现了equals()方法</span></span><br><span class="line"><span class="keyword">if</span> (!list1.containsAll(list2)) {</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>; </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>参考文章<a href="https://blog.csdn.net/zc274456223/article/details/77943156" target="_blank" rel="noopener">两个List比较内容是否一样</a>和<a href="https://www.jb51.net/article/149311.htm" target="_blank" rel="noopener">Java判断2个List集合是否相等(不考虑元素的顺序)</a>写的，主要对文章讲到的比较算法的具体实现进行了完善改造。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line
      
    
    </summary>
    
    
    
      <category term="Java" scheme="https://melodyjerry.github.io/blog/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java比较两个List集合的方法</title>
    <link href="https://melodyjerry.github.io/blog/2020/06/08/Java%E6%AF%94%E8%BE%83%E4%B8%A4%E4%B8%AAList%E9%9B%86%E5%90%88%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>https://melodyjerry.github.io/blog/2020/06/08/Java比较两个List集合的方法/</id>
    <published>2020-06-08T05:25:00.000Z</published>
    <updated>2020-07-10T06:03:53.197Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FindNumber</span> </span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line"><span class="comment">// 注意：一定要使用创建对象的格式创建数组</span></span><br><span class="line">Integer[] a = <span class="keyword">new</span> Integer[] { <span class="number">6</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">7</span> };</span><br><span class="line">Integer[] b = <span class="keyword">new</span> Integer[] { <span class="number">5</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">9</span> };</span><br><span class="line">List _a = Arrays.asList(a);</span><br><span class="line">List _b = Arrays.asList(b);</span><br><span class="line"><span class="comment">// 创建集合</span></span><br><span class="line">Collection realA = <span class="keyword">new</span> ArrayList&lt;Integer&gt;(_a);</span><br><span class="line">Collection realB = <span class="keyword">new</span> ArrayList&lt;Integer&gt;(_b);</span><br><span class="line"><span class="comment">// 求交集</span></span><br><span class="line">realA.retainAll(realB);</span><br><span class="line">System.out.println(<span class="string">"交集结果："</span> + realA);</span><br><span class="line">Set result = <span class="keyword">new</span> HashSet();</span><br><span class="line"><span class="comment">// 求全集</span></span><br><span class="line">result.addAll(_a);</span><br><span class="line">result.addAll(_b);</span><br><span class="line">System.out.println(<span class="string">"全集结果："</span> + result);</span><br><span class="line"><span class="comment">// 求差集：结果</span></span><br><span class="line">Collection aa = <span class="keyword">new</span> ArrayList(realA);</span><br><span class="line">Collection bb = <span class="keyword">new</span> ArrayList(result);</span><br><span class="line">bb.removeAll(aa);</span><br><span class="line">System.out.println(<span class="string">"最终结果："</span> + bb);</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line
      
    
    </summary>
    
    
    
      <category term="Java" scheme="https://melodyjerry.github.io/blog/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>【LeetCode】192周赛-5428. 重新排列数组</title>
    <link href="https://melodyjerry.github.io/blog/2020/06/07/%E3%80%90LeetCode%E3%80%91192%E5%91%A8%E8%B5%9B-5428.%20%E9%87%8D%E6%96%B0%E6%8E%92%E5%88%97%E6%95%B0%E7%BB%84/"/>
    <id>https://melodyjerry.github.io/blog/2020/06/07/【LeetCode】192周赛-5428. 重新排列数组/</id>
    <published>2020-06-07T03:16:00.000Z</published>
    <updated>2020-07-10T06:02:11.515Z</updated>
    
    <content type="html"><![CDATA[<p>题目来自【192场周赛】</p><h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><ol start="5428"><li>重新排列数组 </li></ol><p>题目难度：Easy</p><p>给你一个数组 nums ，数组中有 2n 个元素，按 [x1,x2,…,xn,y1,y2,…,yn] 的格式排列。</p><p>请你将数组按 [x1,y1,x2,y2,…,xn,yn] 格式重新排列，返回重排后的数组。</p><p>示例 1：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [2,5,1,3,4,7], n = 3</span><br><span class="line">输出：[2,3,5,4,1,7] </span><br><span class="line">解释：由于 x1=2, x2=5, x3=1, y1=3, y2=4, y3=7 ，所以答案为 [2,3,5,4,1,7]</span><br></pre></td></tr></tbody></table></figure><p>示例 2：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,2,3,4,4,3,2,1], n = 4</span><br><span class="line">输出：[1,4,2,3,3,2,4,1]</span><br></pre></td></tr></tbody></table></figure><p>示例 3：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,1,2,2], n = 2</span><br><span class="line">输出：[1,2,1,2]</span><br></pre></td></tr></tbody></table></figure><p>提示：</p><ul><li>1 &lt;= n &lt;= 500</li><li>nums.length == 2n</li><li>1 &lt;= nums[i] &lt;= 10^3</li></ul><a id="more"></a><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>思路贼简单，直接上代码：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>{</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] shuffle(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> n) {</span><br><span class="line">        <span class="keyword">int</span> count = (nums.length)/n; <span class="comment">// 每轮的元素个数,n轮</span></span><br><span class="line">        <span class="keyword">int</span>[] res = <span class="keyword">new</span> <span class="keyword">int</span>[nums.length];</span><br><span class="line">        <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt;count; j++) {</span><br><span class="line">                res[index] = nums[i + n * j];</span><br><span class="line">                ++index;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目来自【192场周赛】&lt;/p&gt;
&lt;h1 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h1&gt;&lt;ol start=&quot;5428&quot;&gt;
&lt;li&gt;重新排列数组 &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;题目难度：Easy&lt;/p&gt;
&lt;p&gt;给你一个数组 nums ，数组中有 2n 个元素，按 [x1,x2,…,xn,y1,y2,…,yn] 的格式排列。&lt;/p&gt;
&lt;p&gt;请你将数组按 [x1,y1,x2,y2,…,xn,yn] 格式重新排列，返回重排后的数组。&lt;/p&gt;
&lt;p&gt;示例 1：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;输入：nums = [2,5,1,3,4,7], n = 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出：[2,3,5,4,1,7] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;解释：由于 x1=2, x2=5, x3=1, y1=3, y2=4, y3=7 ，所以答案为 [2,3,5,4,1,7]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;示例 2：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;输入：nums = [1,2,3,4,4,3,2,1], n = 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出：[1,4,2,3,3,2,4,1]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;示例 3：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;输入：nums = [1,1,2,2], n = 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出：[1,2,1,2]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;提示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1 &amp;lt;= n &amp;lt;= 500&lt;/li&gt;
&lt;li&gt;nums.length == 2n&lt;/li&gt;
&lt;li&gt;1 &amp;lt;= nums[i] &amp;lt;= 10^3&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="算法" scheme="https://melodyjerry.github.io/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>【LeetCode】面试题29. 顺时针打印矩阵</title>
    <link href="https://melodyjerry.github.io/blog/2020/06/05/%E3%80%90LeetCode%E3%80%91%E9%9D%A2%E8%AF%95%E9%A2%9829.%20%E9%A1%BA%E6%97%B6%E9%92%88%E6%89%93%E5%8D%B0%E7%9F%A9%E9%98%B5/"/>
    <id>https://melodyjerry.github.io/blog/2020/06/05/【LeetCode】面试题29. 顺时针打印矩阵/</id>
    <published>2020-06-05T04:13:00.000Z</published>
    <updated>2020-07-10T06:01:03.623Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字。</p><p>示例 1：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：matrix = [[1,2,3],[4,5,6],[7,8,9]]</span><br><span class="line">输出：[1,2,3,6,9,8,7,4,5]</span><br></pre></td></tr></tbody></table></figure><p>示例 2：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]</span><br><span class="line">输出：[1,2,3,4,8,12,11,10,9,5,6,7]</span><br></pre></td></tr></tbody></table></figure><p>限制：</p><ul><li>0 &lt;= matrix.length &lt;= 100</li><li>0 &lt;= matrix[i].length &lt;= 100<br>注意：本题与主站 54 题相同：<a href="https://leetcode-cn.com/problems/spiral-matrix/" target="_blank" rel="noopener">54. 螺旋矩阵</a></li></ul><a id="more"></a><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>顺时针方向打印无非就是按着“右下左上”的方向进行遍历并打印，碰到边界就拐弯，然后再缩小边界。</p><p>源码有<code>Java</code>、<code>C</code>、<code>C++</code>两种，思路基本差不多。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>{</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] spiralOrder(<span class="keyword">int</span>[][] matrix) {</span><br><span class="line">        <span class="keyword">if</span>(matrix.length == <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">int</span> l = <span class="number">0</span>, r = matrix[<span class="number">0</span>].length - <span class="number">1</span>, t = <span class="number">0</span>, b = matrix.length - <span class="number">1</span>, x = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span>[] res = <span class="keyword">new</span> <span class="keyword">int</span>[(r + <span class="number">1</span>) * (b + <span class="number">1</span>)];</span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>) {</span><br><span class="line">            <span class="comment">// left to right.</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = l; i &lt;= r; i++) res[x++] = matrix[t][i]; </span><br><span class="line">            <span class="keyword">if</span>(++t &gt; b) <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// top to bottom.</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = t; i &lt;= b; i++) res[x++] = matrix[i][r]; </span><br><span class="line">            <span class="keyword">if</span>(l &gt; --r) <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// right to left.</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = r; i &gt;= l; i--) res[x++] = matrix[b][i]; </span><br><span class="line">            <span class="keyword">if</span>(t &gt; --b) <span class="keyword">break</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// bottom to top.</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = b; i &gt;= t; i--) res[x++] = matrix[i][l]; </span><br><span class="line">            <span class="keyword">if</span>(++l &gt; r) <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="https://img2020.cnblogs.com/blog/2013579/202006/2013579-20200605120720952-968301446.png" alt=""></p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Note: The returned array must be malloced, assume caller calls free().</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span>* <span class="title">spiralOrder</span><span class="params">(<span class="keyword">int</span>** matrix, <span class="keyword">int</span> matrixSize, <span class="keyword">int</span>* matrixColSize, <span class="keyword">int</span>* returnSize)</span></span>{</span><br><span class="line">    <span class="keyword">if</span> (matrix == <span class="literal">NULL</span> || matrixSize == <span class="number">0</span>) {</span><br><span class="line">        *returnSize = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    *returnSize = matrixSize * matrixColSize[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">int</span> *res = <span class="built_in">calloc</span>(*returnSize, <span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> urow, rcol, drow, lcol, r, c;</span><br><span class="line">    urow = <span class="number">-1</span>;</span><br><span class="line">    lcol = <span class="number">-1</span>;</span><br><span class="line">    drow = matrixSize;</span><br><span class="line">    rcol = matrixColSize[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (i &lt; *returnSize) {</span><br><span class="line">        <span class="comment">//right</span></span><br><span class="line">        r = urow + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (c = lcol + <span class="number">1</span>; i &lt; *returnSize &amp;&amp; c &lt; rcol; c++) {</span><br><span class="line">            res[i] = matrix[r][c];</span><br><span class="line">            i++;</span><br><span class="line">        }</span><br><span class="line">        urow++;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//down</span></span><br><span class="line">        c = rcol - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (r = urow + <span class="number">1</span>; i &lt; *returnSize &amp;&amp; r &lt; drow; r++) {</span><br><span class="line">            res[i] = matrix[r][c];</span><br><span class="line">            i++;</span><br><span class="line">        }</span><br><span class="line">        rcol--;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//left</span></span><br><span class="line">        r = drow - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (c = rcol - <span class="number">1</span>; i &lt; *returnSize &amp;&amp; c &gt; lcol; c--) {</span><br><span class="line">            res[i] = matrix[r][c];</span><br><span class="line">            i++;</span><br><span class="line">        }</span><br><span class="line">        drow--;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//up</span></span><br><span class="line">        c = lcol + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (r = drow - <span class="number">1</span>; i &lt; *returnSize &amp;&amp; r &gt; urow; r--) {</span><br><span class="line">            res[i] = matrix[r][c];</span><br><span class="line">            i++;</span><br><span class="line">        }</span><br><span class="line">        lcol++;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="https://img2020.cnblogs.com/blog/2013579/202006/2013579-20200605120804908-1179189610.png" alt=""></p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; spiralOrder(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;&amp; matrix) {</span><br><span class="line">        <span class="comment">// 边界情况</span></span><br><span class="line">        <span class="keyword">auto</span> height = matrix.size();</span><br><span class="line">        <span class="keyword">if</span> (!height) <span class="keyword">return</span> {};</span><br><span class="line">        <span class="keyword">auto</span> width = matrix[<span class="number">0</span>].size();</span><br><span class="line">        <span class="keyword">if</span> (!width) <span class="keyword">return</span> {};</span><br><span class="line">        <span class="comment">// 至少有一个元素</span></span><br><span class="line">        <span class="keyword">int</span> dx[<span class="number">4</span>]{<span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>}; <span class="comment">// 代表 4 个变化方向</span></span><br><span class="line">        <span class="keyword">int</span> dy[<span class="number">4</span>]{<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>}; <span class="comment">// 同上</span></span><br><span class="line">        <span class="keyword">int</span> d = <span class="number">0</span>;         <span class="comment">// 记录当前方向</span></span><br><span class="line">        <span class="keyword">int</span> h = <span class="number">0</span>, w = <span class="number">0</span>;  <span class="comment">// 记录当前索引</span></span><br><span class="line">        <span class="keyword">int</span> cycle = <span class="number">0</span>;     <span class="comment">// 记录当前是第几轮</span></span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i != height * width; ++i) {</span><br><span class="line">            <span class="comment">// 到达右边界</span></span><br><span class="line">            <span class="keyword">if</span> (!d &amp;&amp; w &gt;= width - <span class="number">1</span> - cycle) d = ++d % <span class="number">4</span>;</span><br><span class="line">            <span class="comment">// 到达下边界</span></span><br><span class="line">            <span class="keyword">if</span> (d == <span class="number">1</span> &amp;&amp; h &gt;= height - <span class="number">1</span> - cycle) d = ++d % <span class="number">4</span>;</span><br><span class="line">            <span class="comment">// 到达左边界</span></span><br><span class="line">            <span class="keyword">if</span> (d == <span class="number">2</span> &amp;&amp; w &lt;= cycle) d = ++d % <span class="number">4</span>;</span><br><span class="line">            <span class="comment">// 到达上边界</span></span><br><span class="line">            <span class="keyword">if</span> (d == <span class="number">3</span> &amp;&amp; h &lt;= cycle + <span class="number">1</span>) {</span><br><span class="line">                d = ++d % <span class="number">4</span>;</span><br><span class="line">                <span class="comment">// 进入下一轮</span></span><br><span class="line">                ++cycle;</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            ans.push_back(matrix[h][w]);</span><br><span class="line">            h += dy[d];</span><br><span class="line">            w += dx[d];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p><img src="https://img2020.cnblogs.com/blog/2013579/202006/2013579-20200605120353543-1048641385.png" alt=""></p><h1 id="推荐"><a href="#推荐" class="headerlink" title="推荐"></a>推荐</h1><p>极力推荐两个我喜欢的算法公众号的文章：</p><ol><li><a href="https://mp.weixin.qq.com/s/JB9MrVwITD60C1JqTWJapg" target="_blank" rel="noopener">面试题29. 顺时针打印矩阵</a></li><li><a href="https://mp.weixin.qq.com/s/lfM-T6m7KPf9OPEC421lcA" target="_blank" rel="noopener">顺时针打印矩阵</a></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h1&gt;&lt;p&gt;输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字。&lt;/p&gt;
&lt;p&gt;示例 1：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;输入：matrix = [[1,2,3],[4,5,6],[7,8,9]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出：[1,2,3,6,9,8,7,4,5]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;示例 2：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;输入：matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出：[1,2,3,4,8,12,11,10,9,5,6,7]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;限制：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;0 &amp;lt;= matrix.length &amp;lt;= 100&lt;/li&gt;
&lt;li&gt;0 &amp;lt;= matrix[i].length &amp;lt;= 100&lt;br&gt;注意：本题与主站 54 题相同：&lt;a href=&quot;https://leetcode-cn.com/problems/spiral-matrix/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;54. 螺旋矩阵&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="算法" scheme="https://melodyjerry.github.io/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
</feed>
