<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MelodyHub</title>
  
  <subtitle>你用走 可是我用跑</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://melodyjerry.github.io/blog/"/>
  <updated>2020-04-23T06:38:43.973Z</updated>
  <id>https://melodyjerry.github.io/blog/</id>
  
  <author>
    <name>Melody Jerry</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>正式开通博客园</title>
    <link href="https://melodyjerry.github.io/blog/2020/04/23/%E6%AD%A3%E5%BC%8F%E5%BC%80%E9%80%9A%E5%8D%9A%E5%AE%A2%E5%9B%AD/"/>
    <id>https://melodyjerry.github.io/blog/2020/04/23/正式开通博客园/</id>
    <published>2020-04-23T14:40:27.000Z</published>
    <updated>2020-04-23T06:38:43.973Z</updated>
    
    <content type="html"><![CDATA[<p>现在正式开通【博客园】：<a href="https://www.cnblogs.com/melodyjerry/" target="_blank" rel="noopener">https://www.cnblogs.com/melodyjerry/</a></p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;现在正式开通【博客园】：&lt;a href=&quot;https://www.cnblogs.com/melodyjerry/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.cnblogs.com/melodyjerry/&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="博客" scheme="https://melodyjerry.github.io/blog/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>Fiddler抓包工具</title>
    <link href="https://melodyjerry.github.io/blog/2020/04/23/Fiddler%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/"/>
    <id>https://melodyjerry.github.io/blog/2020/04/23/Fiddler抓包工具总结/</id>
    <published>2020-04-23T11:38:39.421Z</published>
    <updated>2020-02-26T13:33:03.623Z</updated>
    
    <content type="html"><![CDATA[<p> <a href="https://www.cnblogs.com/yyhh/p/5140852.html" target="_blank" rel="noopener">Fiddler抓包工具总结</a></p><p><a href="https://www.cnblogs.com/yyhh/p/5140852.html" target="_blank" rel="noopener">https://www.cnblogs.com/yyhh/p/5140852.html</a></p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; &lt;a href=&quot;https://www.cnblogs.com/yyhh/p/5140852.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Fiddler抓包工具总结&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/yyhh/p/5140852.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.cnblogs.com/yyhh/p/5140852.html&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="JavaWeb" scheme="https://melodyjerry.github.io/blog/tags/JavaWeb/"/>
    
      <category term="工具" scheme="https://melodyjerry.github.io/blog/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="HTTP" scheme="https://melodyjerry.github.io/blog/tags/HTTP/"/>
    
  </entry>
  
  <entry>
    <title>MVC：开发模式</title>
    <link href="https://melodyjerry.github.io/blog/2020/04/23/MVC%EF%BC%9A%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F/"/>
    <id>https://melodyjerry.github.io/blog/2020/04/23/MVC：开发模式/</id>
    <published>2020-04-23T11:38:39.409Z</published>
    <updated>2020-02-27T09:37:09.310Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MVC：开发模式"><a href="#MVC：开发模式" class="headerlink" title="MVC：开发模式"></a>MVC：开发模式</h1><h2 id="一、jsp演变历史"><a href="#一、jsp演变历史" class="headerlink" title="一、jsp演变历史"></a>一、jsp演变历史</h2><ol><li>早期只有servlet，只能使用response输出标签数据，非常麻烦</li><li>后来又jsp，简化了Servlet的开发，如果过度使用jsp，在jsp中即写大量的java代码，有写html表，造成难于维护，难于分工协作</li><li>再后来，java的web开发，借鉴mvc开发模式，使得程序的设计更加合理性</li></ol><h2 id="二、MVC"><a href="#二、MVC" class="headerlink" title="二、MVC"></a>二、MVC</h2><p><fancybox><img src="https://s2.ax1x.com/2020/02/27/3wYqbT.png" alt="3wYqbT.png"></fancybox></p><h3 id="M"><a href="#M" class="headerlink" title="M"></a>M</h3><ul><li><strong>Model，模型。JavaBean</strong></li></ul><ul><li>完成具体的业务操作，如：查询数据库，封装对象</li></ul><h3 id="V"><a href="#V" class="headerlink" title="V"></a>V</h3><ul><li><strong>View，视图。JSP</strong></li><li>展示数据</li></ul><h3 id="C"><a href="#C" class="headerlink" title="C"></a>C</h3><ul><li><strong>Controller，控制器。Servlet</strong></li></ul><ul><li>获取用户的输入</li><li>调用模型</li><li>将数据交给视图进行展示</li></ul><h2 id="三、优缺点"><a href="#三、优缺点" class="headerlink" title="三、优缺点"></a>三、优缺点</h2><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ol><li><strong>耦合性低，方便维护，可以利于分工协作</strong></li><li><strong>重用性高</strong></li><li>生命周期成本低</li><li>部署快</li><li><strong>可维护性高</strong></li><li><strong>有软件工程化管理</strong></li></ol><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><ol><li><strong>使得项目架构变得复杂，对开发人员要求高</strong></li><li><strong>不适合小型，中等规模的应用程序</strong></li><li>增加系统结构和实现的复杂性</li><li>视图与控制器间的过于紧密的连接</li><li>视图对模型数据的低效率访问</li><li>一般高级的界面工具或构造器不支持模式</li></ol><h1 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h1><ol><li><p>[CSDN] <a href="https://blog.csdn.net/liitdar/article/details/86685880" target="_blank" rel="noopener">MVC模式简介</a></p></li><li><p>[菜鸟教程] <a href="https://www.runoob.com/design-pattern/mvc-pattern.html" target="_blank" rel="noopener">MVC 模式</a></p></li><li><p>[百度百科] <a href="https://baike.baidu.com/item/MVC%E6%A1%86%E6%9E%B6/9241230?fromtitle=mvc&amp;fromid=85990&amp;fr=aladdin" target="_blank" rel="noopener">MVC框架</a></p></li></ol><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;MVC：开发模式&quot;&gt;&lt;a href=&quot;#MVC：开发模式&quot; class=&quot;headerlink&quot; title=&quot;MVC：开发模式&quot;&gt;&lt;/a&gt;MVC：开发模式&lt;/h1&gt;&lt;h2 id=&quot;一、jsp演变历史&quot;&gt;&lt;a href=&quot;#一、jsp演变历史&quot; class=&quot;headerlink&quot; title=&quot;一、jsp演变历史&quot;&gt;&lt;/a&gt;一、jsp演变历史&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;早期只有servlet，只能使用response输出标签数据，非常麻烦&lt;/li&gt;
&lt;li&gt;后来又jsp，简化了Servlet的开发，如果过度使用jsp，在jsp中即写大量的java代码，有写html表，造成难于维护，难于分工协作&lt;/li&gt;
&lt;li&gt;再后来，java的web开发，借鉴mvc开发模式，使得程序的设计更加合理性&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;二、MVC&quot;&gt;&lt;a href=&quot;#二、MVC&quot; class=&quot;headerlink&quot; title=&quot;二、MVC&quot;&gt;&lt;/a&gt;二、MVC&lt;/h2&gt;&lt;p&gt;&lt;fancybox&gt;&lt;img src=&quot;https://s2.ax1x.com/2020/02/27/3wYqbT.png&quot; alt=&quot;3wYqbT.png&quot;&gt;&lt;/fancybox&gt;&lt;/p&gt;
&lt;h3 id=&quot;M&quot;&gt;&lt;a href=&quot;#M&quot; class=&quot;headerlink&quot; title=&quot;M&quot;&gt;&lt;/a&gt;M&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Model，模型。JavaBean&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;完成具体的业务操作，如：查询数据库，封装对象&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;V&quot;&gt;&lt;a href=&quot;#V&quot; class=&quot;headerlink&quot; title=&quot;V&quot;&gt;&lt;/a&gt;V&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;View，视图。JSP&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;展示数据&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;C&quot;&gt;&lt;a href=&quot;#C&quot; class=&quot;headerlink&quot; title=&quot;C&quot;&gt;&lt;/a&gt;C&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Controller，控制器。Servlet&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;获取用户的输入&lt;/li&gt;
&lt;li&gt;调用模型&lt;/li&gt;
&lt;li&gt;将数据交给视图进行展示&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;三、优缺点&quot;&gt;&lt;a href=&quot;#三、优缺点&quot; class=&quot;headerlink&quot; title=&quot;三、优缺点&quot;&gt;&lt;/a&gt;三、优缺点&lt;/h2&gt;&lt;h2 id=&quot;优点&quot;&gt;&lt;a href=&quot;#优点&quot; class=&quot;headerlink&quot; title=&quot;优点&quot;&gt;&lt;/a&gt;优点&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;耦合性低，方便维护，可以利于分工协作&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;重用性高&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;生命周期成本低&lt;/li&gt;
&lt;li&gt;部署快&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可维护性高&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;有软件工程化管理&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;缺点&quot;&gt;&lt;a href=&quot;#缺点&quot; class=&quot;headerlink&quot; title=&quot;缺点&quot;&gt;&lt;/a&gt;缺点&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;使得项目架构变得复杂，对开发人员要求高&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;不适合小型，中等规模的应用程序&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;增加系统结构和实现的复杂性&lt;/li&gt;
&lt;li&gt;视图与控制器间的过于紧密的连接&lt;/li&gt;
&lt;li&gt;视图对模型数据的低效率访问&lt;/li&gt;
&lt;li&gt;一般高级的界面工具或构造器不支持模式&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;扩展阅读&quot;&gt;&lt;a href=&quot;#扩展阅读&quot; class=&quot;headerlink&quot; title=&quot;扩展阅读&quot;&gt;&lt;/a&gt;扩展阅读&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;[CSDN] &lt;a href=&quot;https://blog.csdn.net/liitdar/article/details/86685880&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;MVC模式简介&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[菜鸟教程] &lt;a href=&quot;https://www.runoob.com/design-pattern/mvc-pattern.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;MVC 模式&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[百度百科] &lt;a href=&quot;https://baike.baidu.com/item/MVC%E6%A1%86%E6%9E%B6/9241230?fromtitle=mvc&amp;amp;fromid=85990&amp;amp;fr=aladdin&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;MVC框架&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
    
      <category term="JavaWeb" scheme="https://melodyjerry.github.io/blog/tags/JavaWeb/"/>
    
      <category term="笔记" scheme="https://melodyjerry.github.io/blog/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="MVC" scheme="https://melodyjerry.github.io/blog/tags/MVC/"/>
    
  </entry>
  
  <entry>
    <title>将博客搬至CSDN</title>
    <link href="https://melodyjerry.github.io/blog/2020/04/23/%E5%B0%86%E5%8D%9A%E5%AE%A2%E6%90%AC%E8%87%B3CSDN/"/>
    <id>https://melodyjerry.github.io/blog/2020/04/23/将博客搬至CSDN/</id>
    <published>2020-04-23T01:04:00.000Z</published>
    <updated>2020-04-23T01:07:57.652Z</updated>
    
    <content type="html"><![CDATA[<p>现将本博客中，截止到2020-4-23 09点04分的所有博客拷贝到CSDN。</p><p>CSDN博客链接：<a href="https://blog.csdn.net/weixin_43438052" target="_blank" rel="noopener">https://blog.csdn.net/weixin_43438052</a></p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;现将本博客中，截止到2020-4-23 09点04分的所有博客拷贝到CSDN。&lt;/p&gt;
&lt;p&gt;CSDN博客链接：&lt;a href=&quot;https://blog.csdn.net/weixin_43438052&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.csdn.net/weixin_43438052&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="博客" scheme="https://melodyjerry.github.io/blog/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>“点击查看”隐藏式按钮html实现</title>
    <link href="https://melodyjerry.github.io/blog/2020/04/22/%E2%80%9C%E7%82%B9%E5%87%BB%E6%9F%A5%E7%9C%8B%E2%80%9D%E9%9A%90%E8%97%8F%E5%BC%8F%E6%8C%89%E9%92%AEhtml%E5%AE%9E%E7%8E%B0/"/>
    <id>https://melodyjerry.github.io/blog/2020/04/22/“点击查看”隐藏式按钮html实现/</id>
    <published>2020-04-22T15:00:00.000Z</published>
    <updated>2020-04-22T08:16:44.276Z</updated>
    
    <content type="html"><![CDATA[<details open=""><summary>点击查看</summary><ul class="popular-posts"><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/2114475547.html" target="_blank" rel="bookmark noopener" data-pjax-state="">Hexo NexT主题美化2.0</a></div></li><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/3274212224.html" target="_blank" rel="bookmark noopener" data-pjax-state="">浏览器控制台个性化输出</a></div></li><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/1599400735.html" target="_blank" rel="bookmark noopener" data-pjax-state="">Hexo 优化与加速</a></div></li><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/273344197.html" target="_blank" rel="bookmark noopener" data-pjax-state="">本站主题已整理开源</a></div></li><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/4158923031.html" target="_blank" rel="bookmark noopener" data-pjax-state="">Hexo NexT主题之自定义标签页</a></div></li><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/507826828.html" target="_blank" rel="bookmark noopener" data-pjax-state="">Hexo NexT主题移动端样式适配</a></div></li><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/662668482.html" target="_blank" rel="bookmark noopener" data-pjax-state="">Hexo NexT接入Google AdSense广告</a></div></li><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/554801533.html" target="_blank" rel="bookmark noopener" data-pjax-state="">NexT主题之LeanCloud切换国际版</a></div></li><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/4114783453.html" target="_blank" rel="bookmark noopener" data-pjax-state="">Hexo NexT主题之代码块Mac Panel特效</a></div></li><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/4084686398.html" target="_blank" rel="bookmark noopener" data-pjax-state="">Hexo-abbrlink生成唯一文章链接</a></div></li></ul></details><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;details open=&quot;&quot;&gt;&lt;summary&gt;点击查看&lt;/summary&gt;&lt;ul class=&quot;popular-posts&quot;&gt;&lt;li class=&quot;popular-posts-item&quot;&gt;&lt;div class=&quot;popular-posts-title&quot;&gt;&lt;a href=&quot;https://www.liaofuzhan.com/posts/2114475547.html&quot; target=&quot;_blank&quot; rel=&quot;bookmark noopener&quot; data-pjax-state=&quot;&quot;&gt;Hexo NexT主题美化2.0&lt;/a&gt;&lt;/div&gt;&lt;/li&gt;&lt;li class=&quot;popular-posts-item&quot;&gt;&lt;div class=&quot;popular-posts-title&quot;&gt;&lt;a href=&quot;https://www.liaofuzhan.com/posts/3274212224.html&quot; target=&quot;_blank&quot; rel=&quot;bookmark noopener&quot; data-pjax-state=&quot;&quot;&gt;浏览器控制台个性化输出&lt;/a&gt;&lt;/div&gt;&lt;/li&gt;&lt;li class=&quot;popular-posts-item&quot;&gt;&lt;div class=&quot;popular-posts-title&quot;&gt;&lt;a href=&quot;https://www.liaofuzhan.com/posts/1599400735.html&quot; target=&quot;_blank&quot; rel=&quot;bookmark noopener&quot; data-pjax-state=&quot;&quot;&gt;Hexo 优化与加速&lt;/a&gt;&lt;/div&gt;&lt;/li&gt;&lt;li class=&quot;popular-posts-item&quot;&gt;&lt;div class=&quot;popular-posts-title&quot;&gt;&lt;a href=&quot;https://www.liaofuzhan.com/posts/273344197.html&quot; target=&quot;_blank&quot; rel=&quot;bookmark noopener&quot; data-pjax-state=&quot;&quot;&gt;本站主题已整理开源&lt;/a&gt;&lt;/div&gt;&lt;/li&gt;&lt;li class=&quot;popular-posts-item&quot;&gt;&lt;div class=&quot;popular-posts-title&quot;&gt;&lt;a href=&quot;https://www.liaofuzhan.com/posts/4158923031.html&quot; target=&quot;_blank&quot; rel=&quot;bookmark noopener&quot; data-pjax-state=&quot;&quot;&gt;Hexo NexT主题之自定义标签页&lt;/a&gt;&lt;/div&gt;&lt;/li&gt;&lt;li class=&quot;popular-posts-item&quot;&gt;&lt;div class=&quot;popular-posts-title&quot;&gt;&lt;a href=&quot;https://www.liaofuzhan.com/posts/507826828.html&quot; target=&quot;_blank&quot; rel=&quot;bookmark noopener&quot; data-pjax-state=&quot;&quot;&gt;Hexo NexT主题移动端样式适配&lt;/a&gt;&lt;/div&gt;&lt;/li&gt;&lt;li class=&quot;popular-posts-item&quot;&gt;&lt;div class=&quot;popular-posts-title&quot;&gt;&lt;a href=&quot;https://www.liaofuzhan.com/posts/662668482.html&quot; target=&quot;_blank&quot; rel=&quot;bookmark noopener&quot; data-pjax-state=&quot;&quot;&gt;Hexo NexT接入Google AdSense广告&lt;/a&gt;&lt;/div&gt;&lt;/li&gt;&lt;li class=&quot;popular-posts-item&quot;&gt;&lt;div class=&quot;popular-posts-title&quot;&gt;&lt;a href=&quot;https://www.liaofuzhan.com/posts/554801533.html&quot; target=&quot;_blank&quot; rel=&quot;bookmark noopener&quot; data-pjax-state=&quot;&quot;&gt;NexT主题之LeanCloud切换国际版&lt;/a&gt;&lt;/div&gt;&lt;/li&gt;&lt;li class=&quot;popular-posts-item&quot;&gt;&lt;div class=&quot;popular-posts-title&quot;&gt;&lt;a href=&quot;https://www.liaofuzhan.com/posts/4114783453.html&quot; target=&quot;_blank&quot; rel=&quot;bookmark noopener&quot; data-pjax-state=&quot;&quot;&gt;Hexo NexT主题之代码块Mac Panel特效&lt;/a&gt;&lt;/div&gt;&lt;/li&gt;&lt;li class=&quot;popular-posts-item&quot;&gt;&lt;div class=&quot;popular-posts-title&quot;&gt;&lt;a href=&quot;https://www.liaofuzhan.com/posts/4084686398.html&quot; target=&quot;_blank&quot; rel=&quot;bookmark noopener&quot; data-pjax-state=&quot;&quot;&gt;Hexo-abbrlink生成唯一文章链接&lt;/a&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;
    
    </summary>
    
    
    
      <category term="HTML" scheme="https://melodyjerry.github.io/blog/tags/HTML/"/>
    
      <category term="博客" scheme="https://melodyjerry.github.io/blog/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>一款炫丽的网页播放器插件</title>
    <link href="https://melodyjerry.github.io/blog/2020/04/22/%E4%B8%80%E6%AC%BE%E7%82%AB%E4%B8%BD%E7%9A%84%E7%BD%91%E9%A1%B5%E6%92%AD%E6%94%BE%E5%99%A8%E6%8F%92%E4%BB%B6/"/>
    <id>https://melodyjerry.github.io/blog/2020/04/22/一款炫丽的网页播放器插件/</id>
    <published>2020-04-22T14:00:00.000Z</published>
    <updated>2020-04-22T08:14:47.435Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一款炫丽的网页播放器插件"><a href="#一款炫丽的网页播放器插件" class="headerlink" title="一款炫丽的网页播放器插件"></a>一款炫丽的网页播放器插件</h2><p>网上看到一款挺不错的基于 HTML 5 实现的播放器插件，支持多平台音乐解析、精准 LRC 歌词、智能记忆、视频播放等多种功能。目前免费使用，只需注册即可 DIY。作者表明自己是个<strong>初！中！生！</strong>，<del>在 2016 年用业余时间写的</del>（网传是抄袭、暴力破解他人作品），目前每天的访问量 10W+，用的人还是挺多的，本站点也进行了集成，可在左下角体验效果。</p><blockquote><p>2020 年 04 月 01 日更新：本站已弃用绚丽彩虹，推荐 <a href="https://player.lmih.cn/" target="_blank" rel="noopener">明月浩空</a></p></blockquote><p>转载链接：<a href="https://www.liaofuzhan.com/posts/2636059693.html" target="_blank" rel="noopener">https://www.liaofuzhan.com/posts/2636059693.html</a></p><a id="more"></a><h3 id="绚丽彩虹播放器"><a href="#绚丽彩虹播放器" class="headerlink" title="绚丽彩虹播放器"></a>绚丽彩虹播放器</h3><p><a href="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/14/1.gif" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/14/1.gif" alt="绚丽彩虹播放器"></a></p><p><a href="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/14/2.gif" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/14/2.gif" alt="uxH7Hs.gif"></a></p><p>相关的功能介绍可参考：</p><p><a href="http://www.badapple.top" target="_blank" rel="noopener">绚丽彩虹播放器http://www.badapple.top/<img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/icon/linkcard.png" alt="图标"></a></p><p>之前用的是 APlayer 这款播放器，其吸盘模式能放在网页左下角，外链需自己逐个添加。由于本站要过滤 HTTP 链接，想要的外链不好找，而且在 IE 11 （博主的破旧电脑） 里 JS 一大堆报错。。部分非主流浏览器（谁会用呢 -.-!）兼容还有点问题。</p><blockquote><p>PS：NexT 5.1.4 在 Pisces 这个 scheme 下，左侧栏 sidebar 在 IE 11 里会不显示。（本站已修复）</p></blockquote><p>基于这些原因（主要是找到了更好的~），所以将 Aplayer 进行了替换，步骤也很简单：</p><ol><li>在 next/layout/_layout.swig 的 body 体内部，新增如下代码：</li></ol><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">  复制&lt;!-- badApplePlayer --&gt;</span><br><span class="line">{% if theme.badApplePlayer.enable %}</span><br><span class="line">  &lt;!-- Your XlchPlayerKey --&gt;</span><br><span class="line">  &lt;script&gt;XlchKey="{{theme.badApplePlayer.XlchKey}}";&lt;/script&gt;</span><br><span class="line">  &lt;!-- font-awesome 4.2.0 --&gt;</span><br><span class="line">  &lt;link href="https://lib.baomitu.com/font-awesome/4.2.0/css/font-awesome.min.css" rel="stylesheet" type="text/css"&gt;</span><br><span class="line">  &lt;!-- JQuery-mousewheel 3.1.9 --&gt;</span><br><span class="line">  &lt;script src="https://lib.baomitu.com/jquery-mousewheel/3.1.9/jquery.mousewheel.min.js"&gt;&lt;/script&gt;</span><br><span class="line">  &lt;!-- Scrollbar --&gt;</span><br><span class="line">  &lt;script src="https://static.https.badapple.top/BadApplePlayer/js/scrollbar.js"&gt;&lt;/script&gt;</span><br><span class="line">  &lt;!-- BadApplePlayer --&gt;</span><br><span class="line">  &lt;script src="https://static.https.badapple.top/BadApplePlayer/Player.js"&gt;&lt;/script&gt;</span><br><span class="line">{% endif %}</span><br></pre></td></tr></tbody></table></figure><p>其还需要依赖 jquery ，我在做其它功能时已经引入，这里就不需要了，如果你加了以上代码没效果，那么再补充：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">复制&lt;script src="https://lib.baomitu.com/jquery/2.2.4/jquery.min.js"&gt;&lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><p>以上链接均可换成 http 的，按需修改即可。</p><ol><li>在主题配置文件 _config.yml 中，添加配置：</li></ol><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">  复制# http://www.badapple.top</span><br><span class="line">badApplePlayer:</span><br><span class="line">  enable: true</span><br><span class="line">  XlchKey: your_key # 播放器Key</span><br></pre></td></tr></tbody></table></figure><p>XlchKey 为你自己的播放器 Key，官网完成注册，添加播放器后即可生成。你也可使用我的 <code>BZ9DLOyFjh</code> 来测试下。</p><ol><li>调整播放器在移动端大小（可选）。需要在 head 标签内添加以下代码，比如我是在 next/layout/_layout.swig 的 head 内加的：</li></ol><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">  复制{% if theme.badApplePlayer.enable %}</span><br><span class="line">  &lt;meta name="viewport" content="width=device-width, initial-scale=0.9, maximum-scale=0.9" /&gt;</span><br><span class="line">{% endif %}</span><br></pre></td></tr></tbody></table></figure><p>hexo 三连即可看到效果。附上视频教程地址：</p><p><a href="https://www.bilibili.com/video/av8153459" target="_blank" rel="noopener">绚丽彩虹播放器 [BadApplePlayer] 播放器教程 V20170122https://www.bilibili.com/video/av8153459<img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/icon/linkcard.png" alt="图标"></a></p><p>按照教程就可以添加网易云这些第三方平台的歌单啦！</p><h3 id="明月浩空音乐播放器"><a href="#明月浩空音乐播放器" class="headerlink" title="明月浩空音乐播放器"></a>明月浩空音乐播放器</h3><p>由于绚丽彩虹经常宕机，在网上找替换方案的同时，翻到了<a href="https://lmih.cn/about_player.html/comment-page-2" target="_blank" rel="noopener">明月浩空</a> 的网站。细品了这位大佬诸多文章后，才发现他才是播放器的原作者，只能说盗版行为太昌盛，真假难辨…明月浩空音乐播放器已经商用，功能很强大，如今开放了免费注册功能，大家不妨体验一下</p><p><a href="https://player.lmih.cn" target="_blank" rel="noopener">明月浩空音乐播放器https://player.lmih.cn/<img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/icon/linkcard.png" alt="图标"></a></p><blockquote><p>PS：其实也是基于 <a href="https://aplayer.js.org" target="_blank" rel="noopener">APlayer</a> 的定制版本，又绕回来了。。😝</p></blockquote><h3 id="宅音乐播放器"><a href="#宅音乐播放器" class="headerlink" title="宅音乐播放器"></a>宅音乐播放器</h3><p>另外一款，看了下代码，插件是修改于明月浩空免费版，体验了下，bug 挺多，毕竟是阉割版，不过它可以添加多个播放器和歌单，而明月浩空则需要付费才可以。体验地址：</p><p><a href="https://player.ilt.me" target="_blank" rel="noopener">宅音乐播放器https://player.ilt.me/<img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/icon/linkcard.png" alt="图标"></a></p><p>作者还分享了源代码和安装教程：</p><p><a href="https://github.com/lzx8589561/zhai-music" target="_blank" rel="noopener">宅音乐播放器源代码https://github.com/lzx8589561/zhai-music<img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/icon/linkcard.png" alt="图标"></a></p><p>底层使用 PHP 所写，前端为 LayUI 框架，数据库用的 MySQL</p><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>之前搭建的几款 JAVA 后端框架，可以用来 DIY 一个自己的播放器，彻底重写，有兴趣的朋友可以尝试一下。</p><h3 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h3><details open=""><summary>点击查看</summary><ul class="popular-posts"><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/2114475547.html" target="_blank" rel="bookmark noopener" data-pjax-state="">Hexo NexT主题美化2.0</a></div></li><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/3274212224.html" target="_blank" rel="bookmark noopener" data-pjax-state="">浏览器控制台个性化输出</a></div></li><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/1599400735.html" target="_blank" rel="bookmark noopener" data-pjax-state="">Hexo 优化与加速</a></div></li><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/273344197.html" target="_blank" rel="bookmark noopener" data-pjax-state="">本站主题已整理开源</a></div></li><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/4158923031.html" target="_blank" rel="bookmark noopener" data-pjax-state="">Hexo NexT主题之自定义标签页</a></div></li><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/507826828.html" target="_blank" rel="bookmark noopener" data-pjax-state="">Hexo NexT主题移动端样式适配</a></div></li><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/662668482.html" target="_blank" rel="bookmark noopener" data-pjax-state="">Hexo NexT接入Google AdSense广告</a></div></li><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/554801533.html" target="_blank" rel="bookmark noopener" data-pjax-state="">NexT主题之LeanCloud切换国际版</a></div></li><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/4114783453.html" target="_blank" rel="bookmark noopener" data-pjax-state="">Hexo NexT主题之代码块Mac Panel特效</a></div></li><li class="popular-posts-item"><div class="popular-posts-title"><a href="https://www.liaofuzhan.com/posts/4084686398.html" target="_blank" rel="bookmark noopener" data-pjax-state="">Hexo-abbrlink生成唯一文章链接</a></div></li></ul></details><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一款炫丽的网页播放器插件&quot;&gt;&lt;a href=&quot;#一款炫丽的网页播放器插件&quot; class=&quot;headerlink&quot; title=&quot;一款炫丽的网页播放器插件&quot;&gt;&lt;/a&gt;一款炫丽的网页播放器插件&lt;/h2&gt;&lt;p&gt;网上看到一款挺不错的基于 HTML 5 实现的播放器插件，支持多平台音乐解析、精准 LRC 歌词、智能记忆、视频播放等多种功能。目前免费使用，只需注册即可 DIY。作者表明自己是个&lt;strong&gt;初！中！生！&lt;/strong&gt;，&lt;del&gt;在 2016 年用业余时间写的&lt;/del&gt;（网传是抄袭、暴力破解他人作品），目前每天的访问量 10W+，用的人还是挺多的，本站点也进行了集成，可在左下角体验效果。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2020 年 04 月 01 日更新：本站已弃用绚丽彩虹，推荐 &lt;a href=&quot;https://player.lmih.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;明月浩空&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;转载链接：&lt;a href=&quot;https://www.liaofuzhan.com/posts/2636059693.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.liaofuzhan.com/posts/2636059693.html&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="博客" scheme="https://melodyjerry.github.io/blog/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>浏览器截长图的方法</title>
    <link href="https://melodyjerry.github.io/blog/2020/04/09/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%88%AA%E9%95%BF%E5%9B%BE%E6%96%B9%E6%B3%95/"/>
    <id>https://melodyjerry.github.io/blog/2020/04/09/浏览器截长图方法/</id>
    <published>2020-04-09T14:00:00.000Z</published>
    <updated>2020-04-09T14:26:50.792Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p><strong>Chrome</strong> -&gt; <strong>F12</strong> -&gt; <strong>Ctrl+Shift+P</strong> -&gt; <code>Capture full size screenshot</code></p></li><li><p><strong>Firefox</strong> -&gt; <strong>F12</strong> -&gt; 右上角”<strong>…</strong>“ -&gt; <strong>设置</strong> -&gt; <strong>可选的工具箱按钮</strong> -&gt; <strong>截取整个页面</strong> -&gt; 右上角“<strong>相机</strong>”按钮</p></li></ol><fancybox><p><img src="https://i.loli.net/2020/04/09/158ebf7RkVYUcmN.png" alt="Firefox"></p></fancybox><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Chrome&lt;/strong&gt; -&amp;gt; &lt;strong&gt;F12&lt;/strong&gt; -&amp;gt; &lt;strong&gt;Ctrl+Shift+P&lt;/strong&gt; -&amp;gt; &lt;code&gt;Capture full size screenshot&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Firefox&lt;/strong&gt; -&amp;gt; &lt;strong&gt;F12&lt;/strong&gt; -&amp;gt; 右上角”&lt;strong&gt;…&lt;/strong&gt;“ -&amp;gt; &lt;strong&gt;设置&lt;/strong&gt; -&amp;gt; &lt;strong&gt;可选的工具箱按钮&lt;/strong&gt; -&amp;gt; &lt;strong&gt;截取整个页面&lt;/strong&gt; -&amp;gt; 右上角“&lt;strong&gt;相机&lt;/strong&gt;”按钮&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;fancybox&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/04/09/158ebf7RkVYUcmN.png&quot; alt=&quot;Firefox&quot;&gt;&lt;/p&gt;
&lt;/fancybox&gt;
    
    </summary>
    
    
    
      <category term="小技巧" scheme="https://melodyjerry.github.io/blog/tags/%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>win10快速在当前文件夹打开cmd</title>
    <link href="https://melodyjerry.github.io/blog/2020/04/08/win10%E5%BF%AB%E9%80%9F%E5%9C%A8%E5%BD%93%E5%89%8D%E6%96%87%E4%BB%B6%E5%A4%B9%E6%89%93%E5%BC%80cmd/"/>
    <id>https://melodyjerry.github.io/blog/2020/04/08/win10快速在当前文件夹打开cmd/</id>
    <published>2020-04-08T09:43:23.000Z</published>
    <updated>2020-04-08T12:00:47.421Z</updated>
    
    <content type="html"><![CDATA[<p>一般有两种简单、直接的方法：</p><ol><li>在<strong>路径栏输入cmd</strong>，回车 即可在当前位置打开命令窗口</li><li>按住<strong>Shift键+鼠标右键</strong>，可见在<strong>“在此处打开cmd”</strong></li></ol><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一般有两种简单、直接的方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在&lt;strong&gt;路径栏输入cmd&lt;/strong&gt;，回车 即可在当前位置打开命令窗口&lt;/li&gt;
&lt;li&gt;按住&lt;strong&gt;Shift键+鼠标右键&lt;/strong&gt;，可见在&lt;strong&gt;“在此处打开cmd”&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>将idea工程打包成jar文件的全步骤</title>
    <link href="https://melodyjerry.github.io/blog/2020/04/08/%E5%B0%86idea%E5%B7%A5%E7%A8%8B%E6%89%93%E5%8C%85%E6%88%90jar%E6%96%87%E4%BB%B6%E7%9A%84%E5%85%A8%E6%AD%A5%E9%AA%A4/"/>
    <id>https://melodyjerry.github.io/blog/2020/04/08/将idea工程打包成jar文件的全步骤/</id>
    <published>2020-04-08T06:43:23.000Z</published>
    <updated>2020-04-08T07:06:27.092Z</updated>
    
    <content type="html"><![CDATA[<p><strong>前言</strong></p><p>近日在工作中遇到了一个问题，需要把本地的java文件打成jar包，传到云服务器上运行。于是学习了一下如何在intellijidea中将java工程打成jar包。</p><a id="more"></a><p><strong>步骤如下：</strong></p><p>1、File-&gt;PorjectStructure</p><p><a href="https://img.jbzj.com/file_images/article/201909/2019090709432910.png" target="_blank" rel="noopener"><img src="https://img.jbzj.com/file_images/article/201909/2019090709432910.png" alt="img"></a></p><p>2、在ProjectSetings中选择Artifects。</p><p>点击+号选择jar文件中的Empty选项</p><blockquote><p><strong>Artifacts –&gt; + –&gt; JAR –&gt; From modules with dependencies…</strong></p><p>参见文末</p></blockquote><p><a href="https://img.jbzj.com/file_images/article/201909/2019090709432911.png" target="_blank" rel="noopener"><img src="https://img.jbzj.com/file_images/article/201909/2019090709432911.png" alt="img"></a></p><p>3、在Name选项中修改jar文件的名字。</p><p>然后点击下方的CreatManifest按钮，点击ok(应该默认是当前工程)</p><p><a href="https://img.jbzj.com/file_images/article/201909/2019090709432912.png" target="_blank" rel="noopener"><img src="https://img.jbzj.com/file_images/article/201909/2019090709432912.png" alt="img"></a></p><p>4、点击Main Class右侧的文件夹图标，选择当前工程的入口类，即主函数所在类，点击ok</p><blockquote><p> <strong>Main Class是你这个项目(\</strong>脚本*<em>)的主方法,就是要运行的类,选一个*</em></p></blockquote><p><a href="https://img.jbzj.com/file_images/article/201909/2019090709432913.png" target="_blank" rel="noopener"><img src="https://img.jbzj.com/file_images/article/201909/2019090709432913.png" alt="img"></a></p><p>5、在右侧的AvailableElements一栏中双击编译后的资源文件，将其打入左侧jar包</p><p><a href="https://img.jbzj.com/file_images/article/201909/2019090709432914.png" target="_blank" rel="noopener"><img src="https://img.jbzj.com/file_images/article/201909/2019090709432914.png" alt="img"></a></p><p>6、点击Build选项中的BuildArtifacts</p><p><a href="https://img.jbzj.com/file_images/article/201909/2019090709433015.png" target="_blank" rel="noopener"><img src="https://img.jbzj.com/file_images/article/201909/2019090709433015.png" alt="img"></a></p><blockquote><p><em>点击Build选项。</em>这里Build选项是第一次构建jar，Rebuild是修改后重新构建jar，clean是删除jar。</p></blockquote><p><a href="https://img.jbzj.com/file_images/article/201909/2019090709433016.png" target="_blank" rel="noopener"><img src="https://img.jbzj.com/file_images/article/201909/2019090709433016.png" alt="img"></a></p><p>7、在这里我们可以看见生成的jar包</p><p><a href="https://img.jbzj.com/file_images/article/201909/2019090709433017.png" target="_blank" rel="noopener"><img src="https://img.jbzj.com/file_images/article/201909/2019090709433017.png" alt="img"></a></p><p>8、 进入jar包所在目录，在地址栏中输入cmd按回车，进入命令行</p><p><a href="https://img.jbzj.com/file_images/article/201909/2019090709433018.png" target="_blank" rel="noopener"><img src="https://img.jbzj.com/file_images/article/201909/2019090709433018.png" alt="img"></a></p><p>9、执行如图命令即可运行jar文件</p><p><a href="https://img.jbzj.com/file_images/article/201909/2019090709433019.png" target="_blank" rel="noopener"><img src="https://img.jbzj.com/file_images/article/201909/2019090709433019.png" alt="img"></a></p><hr><p>如果是选择  <strong>Artifacts –&gt; + –&gt; JAR –&gt; From modules with dependencies…</strong> 的话</p><p><strong><img src="https://images2015.cnblogs.com/blog/998529/201609/998529-20160929165026906-589079232.png" alt="img"></strong></p><p><strong>Main Class是你这个项目(\</strong>脚本*<em>)的主方法,就是要运行的类,选一个*</em></p><p><strong><img src="https://images2015.cnblogs.com/blog/998529/201609/998529-20160929165136203-124464870.png" alt="img"></strong></p><p><strong>如下图,设置 META-INF/MANIFEST.MF</strong></p><p><strong>!!!!!切记,不能用默认的(起码我用默认的是不成功的)!!!!!</strong></p><p><img src="https://images2015.cnblogs.com/blog/998529/201609/998529-20160929165409344-54984498.png" alt="img"></p><p><strong>选中你这个项目的根目录,一定要放在根目录下</strong></p><p><img src="https://images2015.cnblogs.com/blog/998529/201609/998529-20160929165602922-1728699131.png" alt="img"></p><p><strong>设置完是这样子的,关于 JAR files from libraries的两个选项:</strong></p><p><strong>选中第一个的话,打完包后是一个jar包</strong></p><p><strong>选中第二个的话,打完包后是一个jar包,外带你项目所用的jar包,个人推荐第二个</strong></p><p><strong><img src="https://images2015.cnblogs.com/blog/998529/201609/998529-20160929165729844-141512479.png" alt="img"></strong></p><p><strong>设置完后就可以点OK了</strong></p><p><strong>这个页面, Build on make打上勾,其他的不一样也没事</strong></p><p><strong><img src="https://images2015.cnblogs.com/blog/998529/201609/998529-20160929170231656-2012788781.png" alt="img"></strong></p><p><strong>最后一步, Build Artifacts… –&gt; XXX.jar –&gt; Build</strong></p><p><strong><img src="https://images2015.cnblogs.com/blog/998529/201609/998529-20160929170405078-2125381157.png" alt="img"></strong></p><p><img src="https://images2015.cnblogs.com/blog/998529/201609/998529-20160929170504891-1525363776.png" alt="img"></p><p><strong>复制这里的路径去找jar包就行</strong></p><p><strong><img src="https://images2015.cnblogs.com/blog/998529/201609/998529-20160929170637047-1227588275.png" alt="img"></strong></p><p><strong>参考资料：</strong></p><p><a href="https://blog.csdn.net/weixin_42089175/article/details/89113271" target="_blank" rel="noopener">https://blog.csdn.net/weixin_42089175/article/details/89113271</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;前言&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;近日在工作中遇到了一个问题，需要把本地的java文件打成jar包，传到云服务器上运行。于是学习了一下如何在intellijidea中将java工程打成jar包。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="笔记" scheme="https://melodyjerry.github.io/blog/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="IDEA" scheme="https://melodyjerry.github.io/blog/tags/IDEA/"/>
    
      <category term="JAVA" scheme="https://melodyjerry.github.io/blog/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>virtualbox安装ubuntu16 LTS及其配置</title>
    <link href="https://melodyjerry.github.io/blog/2020/04/07/virtualbox%E5%AE%89%E8%A3%85ubuntu16-LTS%E5%8F%8A%E5%85%B6%E9%85%8D%E7%BD%AE/"/>
    <id>https://melodyjerry.github.io/blog/2020/04/07/virtualbox安装ubuntu16-LTS及其配置/</id>
    <published>2020-04-07T11:00:00.000Z</published>
    <updated>2020-04-07T12:43:56.351Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/luengmingbiao/p/10859905.html" target="_blank" rel="noopener">virtualbox安装ubuntu16 LTS及其配置</a></p><p><a href="https://www.cnblogs.com/luengmingbiao/p/10859905.html" target="_blank" rel="noopener">https://www.cnblogs.com/luengmingbiao/p/10859905.html</a></p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/luengmingbiao/p/10859905.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;virtualbox安装ubuntu16 LTS及其配置&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/luengmingbiao/p/10859905.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.cnblogs.com/luengmingbiao/p/10859905.html&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="笔记" scheme="https://melodyjerry.github.io/blog/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Linux" scheme="https://melodyjerry.github.io/blog/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Java-生成验证码并保存到硬盘</title>
    <link href="https://melodyjerry.github.io/blog/2020/03/31/Java-%E7%94%9F%E6%88%90%E9%AA%8C%E8%AF%81%E7%A0%81%E5%B9%B6%E4%BF%9D%E5%AD%98%E5%88%B0%E7%A1%AC%E7%9B%98/"/>
    <id>https://melodyjerry.github.io/blog/2020/03/31/Java-生成验证码并保存到硬盘/</id>
    <published>2020-03-31T11:00:00.000Z</published>
    <updated>2020-03-31T11:58:22.956Z</updated>
    
    <content type="html"><![CDATA[<p>做课设时候，选择是做“图书借阅管理系统”。</p><p>在写登陆界面时候，想把前段时间学的web中生成验证码的知识用上。</p><p>于是，就写了这个。</p><p>分为两个文件：&lt;CheckCode.java&gt; 和 &lt;CheckCodeRead.java&gt; ，前者是生成，后者是读取，均可以在控制台打印验证码值 <strong>checkValue</strong> 。</p><a id="more"></a><h1 id="CheckCode"><a href="#CheckCode" class="headerlink" title="CheckCode"></a>CheckCode</h1><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">package view;</span><br><span class="line"></span><br><span class="line">import javax.imageio.ImageIO;</span><br><span class="line">import java.awt.*;</span><br><span class="line">import java.awt.image.BufferedImage;</span><br><span class="line">import java.io.*;</span><br><span class="line">import java.util.Random;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @Classname CheckCode</span><br><span class="line"> * @Description TODO</span><br><span class="line"> * @Date 2020/3/31 下午 5:13</span><br><span class="line"> * @Created by jerry</span><br><span class="line"> */</span><br><span class="line">public class CheckCode {</span><br><span class="line"></span><br><span class="line">    public void creatCheck() {</span><br><span class="line">        char[] chs = new char[4];</span><br><span class="line"></span><br><span class="line">        int width = 100;</span><br><span class="line">        int height = 50;</span><br><span class="line"></span><br><span class="line">        //1.创建一对象，在内存中图片(验证码图片对象)</span><br><span class="line">        BufferedImage image = new BufferedImage(width,height,BufferedImage.TYPE_INT_RGB);</span><br><span class="line"></span><br><span class="line">        //2.美化图片</span><br><span class="line">        //2.1 填充背景色</span><br><span class="line">        Graphics g = image.getGraphics();//画笔对象</span><br><span class="line">        g.setColor(Color.PINK);//设置画笔颜色</span><br><span class="line">        g.fillRect(0,0,width,height);</span><br><span class="line"></span><br><span class="line">        //2.2画边框</span><br><span class="line">        g.setColor(Color.BLUE);</span><br><span class="line">        g.drawRect(0,0,width - 1,height - 1);</span><br><span class="line"></span><br><span class="line">        String str = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghigklmnopqrstuvwxyz0123456789";</span><br><span class="line">        //生成随机角标</span><br><span class="line">        Random ran = new Random();</span><br><span class="line">        StringBuilder sb = new StringBuilder(); // StringBuilder：一个可变的字符序列</span><br><span class="line">        for (int i = 1; i &lt;= 4; i++) {</span><br><span class="line">            int index = ran.nextInt(str.length());</span><br><span class="line">            //获取字符</span><br><span class="line">            char ch = str.charAt(index);//随机字符</span><br><span class="line">            sb.append(ch);</span><br><span class="line">            chs[i-1] = ch;</span><br><span class="line">            //2.3写验证码</span><br><span class="line">            g.drawString(ch+"",width/5*i,height/2);</span><br><span class="line">        }</span><br><span class="line">        String checkCode_session = sb.toString();</span><br><span class="line"></span><br><span class="line">/*        //将验证码存入session</span><br><span class="line">        request.getSession().setAttribute("checkCode_session",checkCode_session);*/</span><br><span class="line"></span><br><span class="line">        //2.4画干扰线</span><br><span class="line">        g.setColor(Color.GREEN);</span><br><span class="line">        //随机生成坐标点</span><br><span class="line">        for (int i = 0; i &lt; 10; i++) {</span><br><span class="line">            int x1 = ran.nextInt(width);</span><br><span class="line">            int x2 = ran.nextInt(width);</span><br><span class="line"></span><br><span class="line">            int y1 = ran.nextInt(height);</span><br><span class="line">            int y2 = ran.nextInt(height);</span><br><span class="line">            g.drawLine(x1,y1,x2,y2);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        //3.将图片、验证码值写入硬盘</span><br><span class="line">//        ImageIO.write(image,"jpg",response.getOutputStream());</span><br><span class="line">        try {</span><br><span class="line">            String encoding="GBK";</span><br><span class="line">            ImageIO.write(image, "png",new File("F:\\MyJava\\LibrarySystem\\v0.0\\src\\image\\check.png"));</span><br><span class="line">            File file = new File("F:\\MyJava\\LibrarySystem\\v0.0\\src\\image\\check.txt");</span><br><span class="line">            Writer out = new OutputStreamWriter(new FileOutputStream(file),encoding);</span><br><span class="line">            out.write(checkCode_session); // 将验证码值写入check.txt文件里</span><br><span class="line">            out.close(); // 关闭输出流，回收资源</span><br><span class="line">            System.out.println(checkCode_session);</span><br><span class="line">        } catch (IOException e) {</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) {</span><br><span class="line">        new CheckCode().creatCheck();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="CheckCodeRead"><a href="#CheckCodeRead" class="headerlink" title="CheckCodeRead"></a>CheckCodeRead</h1><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">package view;</span><br><span class="line"></span><br><span class="line">import java.io.BufferedReader;</span><br><span class="line">import java.io.File;</span><br><span class="line">import java.io.FileInputStream;</span><br><span class="line">import java.io.InputStreamReader;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @Classname CheckCodeCreate</span><br><span class="line"> * @Description TODO</span><br><span class="line"> * @Date 2020/3/31 下午 5:51</span><br><span class="line"> * @Created by jerry</span><br><span class="line"> */</span><br><span class="line">public class CheckCodeRead {</span><br><span class="line">    /**</span><br><span class="line">     * 功能：Java读取txt文件的内容</span><br><span class="line">     * 步骤：1：先获得文件句柄</span><br><span class="line">     * 2：获得文件句柄当做是输入一个字节码流，需要对这个输入流进行读取</span><br><span class="line">     * 3：读取到输入流后，需要读取生成字节流</span><br><span class="line">     * 4：一行一行的输出。readline()。</span><br><span class="line">     * 备注：需要考虑的是异常情况</span><br><span class="line">     * @param filePath</span><br><span class="line">     */</span><br><span class="line">    public static void readTxtFile(String filePath){</span><br><span class="line">        try {</span><br><span class="line">            String encoding="GBK";</span><br><span class="line">            File file=new File(filePath);</span><br><span class="line">            if(file.isFile() &amp;&amp; file.exists()){ //判断文件是否存在</span><br><span class="line">                InputStreamReader read = new InputStreamReader(</span><br><span class="line">                        new FileInputStream(file),encoding);//考虑到编码格式</span><br><span class="line">                BufferedReader bufferedReader = new BufferedReader(read);</span><br><span class="line">                String lineTxt = null;</span><br><span class="line">                while((lineTxt = bufferedReader.readLine()) != null){</span><br><span class="line">                    System.out.println(lineTxt);</span><br><span class="line">                }</span><br><span class="line">                read.close();</span><br><span class="line">            }else{</span><br><span class="line">                System.out.println("找不到指定的文件");</span><br><span class="line">            }</span><br><span class="line">        } catch (Exception e) {</span><br><span class="line">            System.out.println("读取文件内容出错");</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    public CheckCodeRead() {</span><br><span class="line">        String filePath = "F:\\MyJava\\LibrarySystem\\v0.0\\src\\image\\check.txt";</span><br><span class="line">        //   "res/";</span><br><span class="line">        readTxtFile(filePath);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    public static void main(String argv[]){</span><br><span class="line">        new  CheckCodeRead();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p>验证码图片 check.png 👇</p><p><img src="https://s1.ax1x.com/2020/03/31/GQ6su6.png" alt="GQ6su6.png"></p><p>控制台输出 👇</p><p><img src="https://s1.ax1x.com/2020/03/31/GQ6NEF.png" alt="GQ6NEF.png"></p><p>check.txt 保存 验证码值 👇</p><p><img src="https://s1.ax1x.com/2020/03/31/GQ6Bg1.png" alt="GQ6Bg1.png"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;做课设时候，选择是做“图书借阅管理系统”。&lt;/p&gt;
&lt;p&gt;在写登陆界面时候，想把前段时间学的web中生成验证码的知识用上。&lt;/p&gt;
&lt;p&gt;于是，就写了这个。&lt;/p&gt;
&lt;p&gt;分为两个文件：&amp;lt;CheckCode.java&amp;gt; 和 &amp;lt;CheckCodeRead.java&amp;gt; ，前者是生成，后者是读取，均可以在控制台打印验证码值 &lt;strong&gt;checkValue&lt;/strong&gt; 。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="笔记" scheme="https://melodyjerry.github.io/blog/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Java" scheme="https://melodyjerry.github.io/blog/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java.sql的接口PreparedStatement使用</title>
    <link href="https://melodyjerry.github.io/blog/2020/03/28/Java.sql%E7%9A%84%E6%8E%A5%E5%8F%A3PreparedStatement%E4%BD%BF%E7%94%A8/"/>
    <id>https://melodyjerry.github.io/blog/2020/03/28/Java.sql的接口PreparedStatement使用/</id>
    <published>2020-03-28T10:51:11.000Z</published>
    <updated>2020-03-28T10:57:25.496Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Classname</span> JdbcUtils</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> JDBC的工具类。(尽量用单例模式)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Created</span> by melodyjerry</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtil</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String driverName = <span class="string">"com.mysql.jdbc.Driver"</span>;</span><br><span class="line">    <span class="comment">// 数据库连接路径</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String URL = <span class="string">"jdbc:mysql://localhost:3306/librarysystem?"</span>   <span class="comment">//127.0.0.1</span></span><br><span class="line">            + <span class="string">"useUnicode = true &amp; serverTimezone = GMT"</span></span><br><span class="line">            <span class="comment">// MySQL在高版本需要指明是否进行SSL连接</span></span><br><span class="line">            + <span class="string">"&amp; characterEncoding = utf8 &amp; useSSL = false"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String userName = <span class="string">"root"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String userPassword = <span class="string">"root"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Connection dbConn = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Statement stmt;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> JdbcUtil utils = <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">// 预编译语句</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> PreparedStatement pstmt = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 不是线程安全的</span></span><br><span class="line"><span class="comment">     * 如果有并发访问实例化的时候会出现线程安全的问题</span></span><br><span class="line"><span class="comment">     * 解决办法加同步锁synchronized</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">static</span> JdbcUtil <span class="title">getJdbcUtil</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (utils == <span class="keyword">null</span>) {</span><br><span class="line">            utils = <span class="keyword">new</span> JdbcUtil();</span><br><span class="line">            <span class="keyword">return</span> utils;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> utils;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 静态代码块</span></span><br><span class="line"><span class="comment">     * 将加载驱动、连接数据库放入静态块中</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">static</span> {</span><br><span class="line">        <span class="keyword">if</span> (dbConn == <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            {</span><br><span class="line">                <span class="comment">// 使用Class.forName()方式来加载数据库的驱动类</span></span><br><span class="line">                <span class="comment">// Class.forName()是Java提供的一种基于反射的方式，直接根据类的全限定名（包+类）</span></span><br><span class="line">                Class.forName(driverName);</span><br><span class="line">                System.out.println(<span class="string">"加载驱动成功！"</span>);</span><br><span class="line">            }<span class="keyword">catch</span>(Exception e){</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">                System.out.println(<span class="string">"加载驱动失败！"</span>);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">try</span>{</span><br><span class="line">                dbConn= DriverManager.getConnection(URL,userName,userPassword);</span><br><span class="line">                System.out.println(<span class="string">"连接数据库成功！"</span>);</span><br><span class="line">            }<span class="keyword">catch</span>(Exception e)</span><br><span class="line">            {</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">                System.out.print(<span class="string">"SQL Server连接失败！"</span>);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 对外提供一个方法来获取数据库连接</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> dbConn</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConn</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">        <span class="keyword">return</span> dbConn;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建语句对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> stmt</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Statement <span class="title">getStmt</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">        <span class="keyword">if</span>(stmt == <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">try</span> {</span><br><span class="line">                <span class="keyword">if</span>(dbConn == <span class="keyword">null</span>) {</span><br><span class="line">                    dbConn = getConn();</span><br><span class="line">                }</span><br><span class="line">                stmt = dbConn.createStatement();</span><br><span class="line">            } <span class="keyword">catch</span> (Exception e) {</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> stmt;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 预编译语句对象</span></span><br><span class="line"><span class="comment">     * PreparedStatement对象可以防止sql注入，而Statement不能防止sql注入</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sql</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> PreparedStatement <span class="title">getPstmt</span><span class="params">(String sql)</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">        <span class="keyword">if</span>(pstmt == <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">try</span> {</span><br><span class="line">                pstmt = dbConn.prepareStatement(sql);</span><br><span class="line">            } <span class="keyword">catch</span> (SQLException e) {</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> pstmt;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 关闭数据库连接</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dbConn</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">closeConn</span><span class="params">(Connection dbConn)</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="keyword">if</span>(dbConn != <span class="keyword">null</span>)</span><br><span class="line">                dbConn.close();</span><br><span class="line">        } <span class="keyword">catch</span> (SQLException e) {</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            System.out.print(<span class="string">"MySQL数据库关闭失败！"</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 测试数据库连接、sql操作</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        <span class="comment">// 创建实例来测试连接</span></span><br><span class="line">        JdbcUtil jdbcUtil = <span class="keyword">new</span> JdbcUtil();</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            getConn(); <span class="comment">// jdbcUtil.getConn();</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 基于数据库连接Connection对象，创建SQL语句执行句柄，Statement对象</span></span><br><span class="line">            <span class="comment">// prepareStatement对象，就是用来基于底层的Connection代表的数据库连接</span></span><br><span class="line">            <span class="comment">// 允许我们通过java程序，通过prepareStatement对象，向MySQL数据库发送SQL语句</span></span><br><span class="line">            <span class="comment">// 从而实现通过发送的SQL语句来执行增删改查等逻辑</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 第一个，SQL语句中，值所在的地方，都用问号（?）代表</span></span><br><span class="line">            String sql = <span class="string">"select * from admin where adminName = ? and adminPassword = ?;"</span>;</span><br><span class="line">            pstmt = dbConn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 第二个，必须调用PreparedStatement的setX()系列方法，对指定的占位符设置实际的值</span></span><br><span class="line">            pstmt.setString(<span class="number">1</span>,<span class="string">"admin"</span>);</span><br><span class="line">            pstmt.setString(<span class="number">2</span>,<span class="string">"admin"</span>);</span><br><span class="line">            <span class="comment">// Statement.executeQuery()方法，用来执行select语句</span></span><br><span class="line">            <span class="comment">// Statement.executeUpdate()方法，就可以用来执行insert、update、delete语句</span></span><br><span class="line">            <span class="comment">// executeUpdate()方法，返回类型是个int值，也就是SQL语句影响的行数</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 第三个，执行SQL语句时，直接使用executeQuery()即可，不用传入任何参数</span></span><br><span class="line">            ResultSet rs = pstmt.executeQuery();</span><br><span class="line"></span><br><span class="line"><span class="comment">//            int rsn = pstmt.executeUpdate();</span></span><br><span class="line"><span class="comment">//            System.out.println("SQL语句影响了【" + rsn + "】行。");</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>(rs.next()){</span><br><span class="line">                <span class="comment">//打印的就是总记录数。把检索结果看成只有一跳记录一个字段的表</span></span><br><span class="line">                System.out.println(rs.getString(<span class="number">3</span>)+<span class="string">"\t"</span>);</span><br><span class="line">            }</span><br><span class="line">        } <span class="keyword">catch</span> (SQLException e) {</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            System.out.println(<span class="string">"sql语句操作失败！"</span>+e.toString());</span><br><span class="line">        } <span class="keyword">catch</span> (Exception e) {</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            System.out.println(<span class="string">"存在异常！"</span>+e.toString());</span><br><span class="line">        }<span class="keyword">finally</span> {</span><br><span class="line">            <span class="keyword">try</span> {</span><br><span class="line">                <span class="comment">// 最后一定要记得在finally代码块中，尽快在执行完SQL语句之后，就释放数据库连接</span></span><br><span class="line">                <span class="keyword">if</span> (pstmt != <span class="keyword">null</span>){</span><br><span class="line">                    pstmt.close();</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">if</span> (dbConn !=<span class="keyword">null</span>){</span><br><span class="line">                    dbConn.close();</span><br><span class="line">                }</span><br><span class="line">            }<span class="keyword">catch</span> (Exception e){</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><hr><p>参考资料：</p><ul><li><p><a href="https://www.cnblogs.com/liang-chen/p/11969788.html" target="_blank" rel="noopener">PreparedStatement用法详解</a></p></li><li><p><a href="https://www.iteye.com/blog/sunnylocus-432648" target="_blank" rel="noopener">对PreparedStatement、Statement的一点总结      </a></p></li><li><p><a href="https://blog.csdn.net/czh500/article/details/88202971" target="_blank" rel="noopener">java中PreparedStatement和Statement详细讲解</a></p></li><li><p><a href="https://blog.csdn.net/nnzhuilian/article/details/86241787" target="_blank" rel="noopener">prepareStatement的用法和解释</a></p></li><li><p><a href="https://blog.csdn.net/he_hchx/article/details/1586445" target="_blank" rel="noopener">PreparedStatement接口，prepareStatement方法</a></p></li><li><p><a href="https://blog.csdn.net/changyansz/article/details/83651663?depth_1-utm_source=distribute.pc_relevant.none-task&amp;utm_source=distribute.pc_relevant.none-task" target="_blank" rel="noopener">PreparedStatement的用法</a></p></li><li><p><a href="https://blog.csdn.net/qq_25302531/article/details/80250505" target="_blank" rel="noopener">Java.sql的接口PreparedStatement使用</a></p></li><li><p><a href="https://blog.csdn.net/sky198989/article/details/82216870" target="_blank" rel="noopener">怎么得到PreparedStatement查询条数的结果</a></p></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line
      
    
    </summary>
    
    
    
      <category term="笔记" scheme="https://melodyjerry.github.io/blog/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Java" scheme="https://melodyjerry.github.io/blog/tags/Java/"/>
    
      <category term="数据库" scheme="https://melodyjerry.github.io/blog/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>全能终端神器——MobaXterm</title>
    <link href="https://melodyjerry.github.io/blog/2020/03/25/%E5%85%A8%E8%83%BD%E7%BB%88%E7%AB%AF%E7%A5%9E%E5%99%A8MobaXterm/"/>
    <id>https://melodyjerry.github.io/blog/2020/03/25/全能终端神器MobaXterm/</id>
    <published>2020-03-25T03:17:00.000Z</published>
    <updated>2020-03-25T09:06:00.329Z</updated>
    
    <content type="html"><![CDATA[<p>现今软件市场上有很多终端工具，比如：secureCRT、Putty、telnet，等等。secureCRT其实也是一款很强大的终端工具，良许也使用过它很长时间，但是，它毕竟是收费软件，在公司里不允许使用。而且在良许自己的电脑里一量输入大写，整个界面就乱了（原因未知，未深究），这是直接导致良许放弃它的原因。</p><p>而Putty，它非常小巧，而且免费，在我们公司大量使用。但是良许不喜欢它的原因是它真的不好用，不支持标签，开多个会话的话就需要开多个窗口，窗口切换也很不方便，因此良许就使用了一两个月后就放弃它了。</p><p>当然还有其它终端工具，比如XShell，由于没用过就不敢乱评价了。</p><p>本文要隆重推出一款集万千于一身的全能型终端神器——<strong>MobaXterm</strong>！这款神器是我师傅介绍给我的，在我第一次使用它的时候，就深深爱上它了，真的是相见恨晚，从此一发不不可收拾，自己电脑，公司电脑全部都安上了这款神器。</p><p>先说说这款神器的优点：</p><blockquote><ol><li><p>功能十分强大，支持SSH，FTP，串口，VNC，X server等功能；</p></li><li><p>支持标签，切换也十分方便；</p></li><li><p>众多快捷键，操作方便；</p></li><li><p>有丰富的插件，可以进一步增强功能；</p></li><li><p>虽然有收费版，但免费版已经可以让我们装逼装上天……</p></li></ol></blockquote><p>当然优点、功能远不止这些，更多闪光点期待读者去发掘！</p><p>废话这么多，下面进入教学阶段。</p><a id="more"></a><p><strong>1. 软件的安装</strong></p><p>直接去官网下载，有免费版下载。当然你要是够土豪买收费版良许也不介意。免费版不仅提供了安装版，还提供了免安装的绿色版，我们甚至可以将它拷到U盘，在家里有公司所有配置都一样。</p><p><strong>2. 创建SSH session</strong></p><p>安装完毕之后界面长这个样。</p><p><img src="https://pic3.zhimg.com/80/v2-71bb8aa80024b225c26de758bf7425de_720w.jpg" alt="img"></p><p>当然你们刚安装完成是不会有任何session的。下面来创建第一个SSH session。</p><p>点击菜单栏 「sessions」 –&gt; 「new session」，即可弹出 「session setting」 对话框。由上面那一大串的连接方式我们就可以知道Moba的强大之处。</p><p><img src="https://pic2.zhimg.com/80/v2-8c9c249618d844e9b2495d65557db571_720w.jpg" alt="img"></p><p>我们点选第一个SSH图标，并填入相关信息，就可以完成session创建了。</p><p>点击确定后，输入密码就可以连接上虚拟机了。而且边上虚拟机之后，它会自动通过FTP也连接到虚拟机，直接拖拽就可以进行文件复制了。</p><p><strong>3. 快速连接session</strong></p><p>创建一个session之后，就可以在左侧的session标签里留下它的信息，下次需要连接的时候直接双击即可。</p><p><img src="https://pic3.zhimg.com/80/v2-71bb8aa80024b225c26de758bf7425de_720w.jpg" alt="img"></p><p><strong>4. 创建串口session</strong></p><p>下面介绍串口session的创建。</p><p>如同第2步，在「session setting」 对话框里选择serial，再选好串口号及波特率，点击OK就完成连接了。</p><p>同样session会保存在左侧的session标签页里，方便下次连接。</p><p><img src="https://pic1.zhimg.com/80/v2-7ea726ba389a57562479920fdbac8830_720w.jpg" alt="img"></p><p><strong>5. 几个有用的设置</strong></p><p><strong>5.1 隐藏菜单栏下的那排按钮</strong></p><p>菜单栏下的那排按钮感觉有点鸡肋，全部可以从菜单栏里找到，而且使用频率也不是非常高。况且，大部分屏幕是长方形的，上下空间有限，左右还比较富余一些，因此去掉它可以省下很大空间。</p><p><img src="https://pic2.zhimg.com/80/v2-f0d89ba4a643f8fcd8a9a4ce6984c1fd_720w.jpg" alt="img"></p><p>在菜单栏点击 「view」 –&gt; 「show menu bar」，即可隐藏此排按钮。</p><p><strong>5.2 右键粘贴</strong></p><p>在Moba及很多终端工具里，都有这样的功能：鼠标左键划选复制文件，右键粘贴文本。但在Moba中右键粘贴功能默认不打开，我们可以手动打开。</p><p>在菜单栏点击 「settings」 –&gt; 「Configuration」，在弹出的对话框中选择 「terminal」，再将 「paste using right-click」 打上对勾即可。</p><p><img src="https://pic4.zhimg.com/80/v2-16d5c00e4e623b560e3fe817a91a0327_720w.jpg" alt="img"></p><p><strong>5.3 关闭自动弹出SFTP</strong></p><p>Moba在连接上远程电脑之后，将自动打开左侧的SFTP侧边栏。有时我们并不需要SFTP，同时主窗口是黑色的，SFTP又是白色的，显得有点刺眼，因此可以将自动弹出SFTP功能关闭掉。</p><p>在菜单栏点击 「settings」 –&gt; 「Configuration」，在弹出的对话框中选择 「SSH」，再将 「automaticall switch to SSH-browser tab after login」 前面的对勾去掉即可。</p><p><img src="https://pic1.zhimg.com/80/v2-962287e59926731131ffb9fa13a1a164_720w.jpg" alt="img"></p><p><strong>6. 小结</strong></p><p>本文介绍了三种连接方式：SSH，FTP，serial，以及三个有用的设置。当然Moba的功能远不止这些，但这三种连接方式是最基本，最常用的，因此先拿出来讲。在后续的博文中，将进一步介绍Moba的高级用法，敬请期待！</p><hr><p>本文章转载自知乎 <a href="https://zhuanlan.zhihu.com/p/56341917" target="_blank" rel="noopener">[<strong>良许Linux</strong>]</a></p><p>本文仅供学习使用</p><p>原文链接：<a href="https://zhuanlan.zhihu.com/p/56341917" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/56341917</a></p><p><img src="https://pic1.zhimg.com/80/v2-59872508750edbfa909089fdacd78260_720w.jpg" alt="img"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;现今软件市场上有很多终端工具，比如：secureCRT、Putty、telnet，等等。secureCRT其实也是一款很强大的终端工具，良许也使用过它很长时间，但是，它毕竟是收费软件，在公司里不允许使用。而且在良许自己的电脑里一量输入大写，整个界面就乱了（原因未知，未深究），这是直接导致良许放弃它的原因。&lt;/p&gt;
&lt;p&gt;而Putty，它非常小巧，而且免费，在我们公司大量使用。但是良许不喜欢它的原因是它真的不好用，不支持标签，开多个会话的话就需要开多个窗口，窗口切换也很不方便，因此良许就使用了一两个月后就放弃它了。&lt;/p&gt;
&lt;p&gt;当然还有其它终端工具，比如XShell，由于没用过就不敢乱评价了。&lt;/p&gt;
&lt;p&gt;本文要隆重推出一款集万千于一身的全能型终端神器——&lt;strong&gt;MobaXterm&lt;/strong&gt;！这款神器是我师傅介绍给我的，在我第一次使用它的时候，就深深爱上它了，真的是相见恨晚，从此一发不不可收拾，自己电脑，公司电脑全部都安上了这款神器。&lt;/p&gt;
&lt;p&gt;先说说这款神器的优点：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;功能十分强大，支持SSH，FTP，串口，VNC，X server等功能；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;支持标签，切换也十分方便；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;众多快捷键，操作方便；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;有丰富的插件，可以进一步增强功能；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;虽然有收费版，但免费版已经可以让我们装逼装上天……&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;当然优点、功能远不止这些，更多闪光点期待读者去发掘！&lt;/p&gt;
&lt;p&gt;废话这么多，下面进入教学阶段。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="工具" scheme="https://melodyjerry.github.io/blog/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>VS Code配置C/C++环境</title>
    <link href="https://melodyjerry.github.io/blog/2020/03/21/VS%20Code%20%E9%85%8D%E7%BD%AEC%E3%80%81C++%E7%8E%AF%E5%A2%83/"/>
    <id>https://melodyjerry.github.io/blog/2020/03/21/VS Code 配置C、C++环境/</id>
    <published>2020-03-21T03:17:00.000Z</published>
    <updated>2020-03-21T08:51:12.966Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="1、安装-VS-Code"><a href="#1、安装-VS-Code" class="headerlink" title="1、安装 VS Code"></a>1、安装 VS Code</h1><p>官网下载安装包直接安装即可 </p><p><a href="https://code.visualstudio.com/" target="_blank" rel="noopener">https://code.visualstudio.com/</a></p><h1 id="2、VS-Code-插件"><a href="#2、VS-Code-插件" class="headerlink" title="2、VS Code 插件"></a>2、VS Code 插件</h1><ol><li>C/C++</li></ol><p><img src="https://s1.ax1x.com/2020/03/21/8f8fYV.png" alt="8f8fYV.png"></p><ol start="2"><li>彩虹括号</li></ol><p><img src="https://s1.ax1x.com/2020/03/21/8f8oy4.png" alt="8f8oy4.png"></p><ol start="3"><li>汉化</li></ol><p><img src="https://s1.ax1x.com/2020/03/21/8f8qT1.png" alt="8f8qT1.png"></p><ol start="4"><li>Include Autocorrelete</li></ol><p><img src="https://s1.ax1x.com/2020/03/21/8fGpOH.png" alt="8fGpOH.png"></p><h1 id="3、安装mingw-w64"><a href="#3、安装mingw-w64" class="headerlink" title="3、安装mingw-w64"></a>3、安装mingw-w64</h1><p>在mingw-w64官网下载64位的mingw-w64离线包<br> <a href="https://sourceforge.net/projects/mingw-w64/files/?source=navbar" target="_blank" rel="noopener">https://sourceforge.net/projects/mingw-w64/files/?source=navbar</a><br> 根据系统选择合适的安装包进行下载（win10_64位选择如图标签） </p><p><img src="https://s1.ax1x.com/2020/03/21/8fGdB9.png" alt="8fGdB9.png"></p><p>可以直接下载文件压缩包(我是下载文件压缩包直接解压就可以用了) </p><h1 id="4、配置计算机环境变量PATH"><a href="#4、配置计算机环境变量PATH" class="headerlink" title="4、配置计算机环境变量PATH"></a>4、配置计算机环境变量PATH</h1><p>我的bin目录是：<strong>C:\mingw64\bin</strong></p><p>把它加到环境变量中的PATH里去</p><p><img src="https://s1.ax1x.com/2020/03/21/8fGfHA.png" alt="8fGfHA.png"></p><h1 id="5、重启电脑、检验安装"><a href="#5、重启电脑、检验安装" class="headerlink" title="5、重启电脑、检验安装"></a>5、重启电脑、检验安装</h1><p>重启电脑后，打开CMD，输入<code>gcc -v</code>查看是否安装正确</p><p>输入gcc -v的最后一行输出。版本要和你自己下的对应，例如64位要有x86_64和seh</p><p><img src="https://s1.ax1x.com/2020/03/21/8fJnC6.png" alt="8fJnC6.png"></p><h1 id="6、VS-Code-配置运行环境"><a href="#6、VS-Code-配置运行环境" class="headerlink" title="6、VS Code 配置运行环境"></a>6、VS Code 配置运行环境</h1><p>打开vscode，选择或新建一个空文件夹目录打开作为项目目录。<br>点击“文件”按钮，再点击“新建文件夹”按钮，并重命名为”<code>.vscode</code>”。<br>在该文件夹内，在点击“新建文件”按钮，建<code>launch.json</code>，<code>settings.json</code>，<code>tasks.json</code>三个.json文件。</p><h2 id="launch-json"><a href="#launch-json" class="headerlink" title="launch.json"></a>launch.json</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">    "version": "0.2.0",</span><br><span class="line">    "configurations": [</span><br><span class="line">        {</span><br><span class="line">            "name": "(gdb) Launch",</span><br><span class="line">            "preLaunchTask": "build",</span><br><span class="line">            "type": "cppdbg",</span><br><span class="line">            "request": "launch",</span><br><span class="line">            "program": "${fileDirname}/${fileBasenameNoExtension}.exe",</span><br><span class="line">            "args": [],</span><br><span class="line">            "stopAtEntry": false,</span><br><span class="line">            "cwd": "${workspaceFolder}",</span><br><span class="line">            "environment": [],</span><br><span class="line">            "externalConsole": true,</span><br><span class="line">            "MIMode": "gdb",</span><br><span class="line">            "miDebuggerPath": "C:/Program Files/mingw-w64/x86_64-8.1.0-release-posix-sjlj-rt_v6-rev0/mingw64/bin/gdb.exe", // 这里修改GDB路径为安装的mingw64的bin下的gdb.exe路径</span><br><span class="line">            "setupCommands": [</span><br><span class="line">                {</span><br><span class="line">                    "description": "Enable pretty-printing for gdb",</span><br><span class="line">                    "text": "-enable-pretty-printing",</span><br><span class="line">                    "ignoreFailures": true,</span><br><span class="line">                }</span><br><span class="line">            ]</span><br><span class="line">        }]</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="tasks-json"><a href="#tasks-json" class="headerlink" title="tasks.json"></a>tasks.json</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">    "version": "2.0.0",</span><br><span class="line">    "tasks": [</span><br><span class="line">        {</span><br><span class="line">            "label": "build",</span><br><span class="line">            "type": "shell",</span><br><span class="line">            "group": {</span><br><span class="line">                "kind": "build",</span><br><span class="line">                "isDefault": true</span><br><span class="line">            },</span><br><span class="line">            "presentation": {</span><br><span class="line">                "echo": true,</span><br><span class="line">                "reveal": "always",</span><br><span class="line">                "focus": false,</span><br><span class="line">                "panel": "shared"</span><br><span class="line">            },</span><br><span class="line">            "windows": {</span><br><span class="line">                "command": "g++",</span><br><span class="line">                "args": [</span><br><span class="line">                    "-ggdb",</span><br><span class="line">                    "\"${file}\"",</span><br><span class="line">                    "--std=c++11",</span><br><span class="line">                    "-o",</span><br><span class="line">                    "\"${fileDirname}\\${fileBasenameNoExtension}.exe\"",</span><br><span class="line">                    "-finput-charset=UTF-8",//输入编译器文本编码 默认为UTF-8</span><br><span class="line">                    "-fexec-charset=GBK"//编译器输出文本编码 自行选择</span><br><span class="line">                ]</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    ]</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="settings-json"><a href="#settings-json" class="headerlink" title="settings.json"></a>settings.json</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">// Configuring tasks.json for C/C++ debugging </span><br><span class="line">// author: huihut</span><br><span class="line">// repo: https://gist.github.com/huihut/887d3c28db92617bd5148c20a5ff112a</span><br><span class="line"></span><br><span class="line">// Available variables which can be used inside of strings.</span><br><span class="line">// ${workspaceRoot}: the root folder of the team        </span><br><span class="line">// ${file}: the current opened file                     </span><br><span class="line">// ${fileBasename}: the current opened file's basename </span><br><span class="line">// ${fileDirname}: the current opened file's dirname    </span><br><span class="line">// ${fileExtname}: the current opened file's extension  </span><br><span class="line">// ${cwd}: the current working directory of the spawned process</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">{</span><br><span class="line">    "version": "2.0.0",</span><br><span class="line">    "tasks": [</span><br><span class="line">        {</span><br><span class="line">            "label": "build",</span><br><span class="line">            "type": "shell",</span><br><span class="line">            "group": {</span><br><span class="line">                "kind": "build",</span><br><span class="line">                "isDefault": true</span><br><span class="line">            },</span><br><span class="line">            "presentation": {</span><br><span class="line">                "echo": true,</span><br><span class="line">                "reveal": "always",</span><br><span class="line">                "focus": false,</span><br><span class="line">                "panel": "shared"</span><br><span class="line">            },</span><br><span class="line">            "windows": {</span><br><span class="line">                "command": "g++",</span><br><span class="line">                "args": [</span><br><span class="line">                    "-ggdb",</span><br><span class="line">                    "\"${file}\"",</span><br><span class="line">                    "--std=c++11",</span><br><span class="line">                    "-o",</span><br><span class="line">                    "\"${fileDirname}\\${fileBasenameNoExtension}.exe\""</span><br><span class="line">                ]</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    ],</span><br><span class="line">    "files.autoSave": "afterDelay",</span><br><span class="line">    "[c]": {</span><br><span class="line"></span><br><span class="line">    },</span><br><span class="line">    "files.encoding": "utf8",</span><br><span class="line">    "files.autoGuessEncoding": true,</span><br><span class="line">    "explorer.confirmDragAndDrop": false,</span><br><span class="line">    "workbench.colorTheme": "Visual Studio Dark",</span><br><span class="line">    "team.showWelcomeMessage": false</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="工作区设置（可选）"><a href="#工作区设置（可选）" class="headerlink" title="工作区设置（可选）"></a>工作区设置（可选）</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">    "C_Cpp.errorSquiggles": "Disabled",</span><br><span class="line">    "files.associations": {</span><br><span class="line">        "stdlib.h": "c",</span><br><span class="line">        "time.h": "c"</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="7、运行测试代码"><a href="#7、运行测试代码" class="headerlink" title="7、运行测试代码"></a>7、运行测试代码</h1><p>新建一个文件，run试试</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">{</span><br><span class="line">    std::cout &lt;&lt; "Hello World!\n";</span><br><span class="line">    return 0;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;h1 id=&quot;1、安装-VS-Code&quot;&gt;&lt;a href=&quot;#1、安装-VS-Code&quot; class=&quot;headerlink&quot; title=&quot;1、安装 VS Code&quot;&gt;&lt;/a&gt;1、安装 VS Code&lt;/h1&gt;&lt;p&gt;官网下载安装包直接安装
      
    
    </summary>
    
    
    
      <category term="C/C++" scheme="https://melodyjerry.github.io/blog/tags/C-C/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯-模拟正整数序列的数量</title>
    <link href="https://melodyjerry.github.io/blog/2020/03/15/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E6%A8%A1%E6%8B%9F%E6%AD%A3%E6%95%B4%E6%95%B0%E5%BA%8F%E5%88%97%E7%9A%84%E6%95%B0%E9%87%8F/"/>
    <id>https://melodyjerry.github.io/blog/2020/03/15/蓝桥杯-模拟正整数序列的数量/</id>
    <published>2020-03-15T06:41:11.000Z</published>
    <updated>2020-03-15T08:42:24.585Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>　小明想知道，满足以下条件的正整数序列的数量：<br> 　1. 第一项为 n；<br> 　2. 第二项不超过 n；<br> 　3. 从第三项开始，每一项小于前两项的差的绝对值。<br> 　请计算，对于给定的 n，有多少种满足条件的序列。</p><a id="more"></a><h1 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h1><p>　　输入一行包含一个整数 n。</p><h1 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h1><p>　　输出一个整数，表示答案。答案可能很大，请输出答案除以10000的余数。</p><h1 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h1><p>4</p><h1 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h1><p>7</p><h1 id="样例说明"><a href="#样例说明" class="headerlink" title="样例说明"></a>样例说明</h1><p>　　以下是满足条件的序列：<br> 　4 1<br> 　4 1 1<br> 　4 1 2<br> 　4 2<br> 　4 2 1<br> 　4 3<br> 　4 4</p><h1 id="评测用例规模与约定"><a href="#评测用例规模与约定" class="headerlink" title="评测用例规模与约定"></a>评测用例规模与约定</h1><p>　 对于 20% 的评测用例，1 &lt;= n &lt;= 5；<br> 　对于 50% 的评测用例，1 &lt;= n &lt;= 10；<br> 　对于 80% 的评测用例，1 &lt;= n &lt;= 100；<br> 　对于所有评测用例，1 &lt;= n &lt;= 1000。</p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">import java.util.Scanner;</span><br><span class="line"></span><br><span class="line">public class Demo8序列 {</span><br><span class="line">public static int n=0,count=0;</span><br><span class="line">public static int [] []map ;</span><br><span class="line">public static void main(String[] args) {</span><br><span class="line">Scanner sc = new Scanner(System.in);</span><br><span class="line"> n =sc.nextInt();</span><br><span class="line"> sc.close();</span><br><span class="line"> map = new int [n+1][n+1];</span><br><span class="line"> for (int i = 1; i &lt;=n; i++) {</span><br><span class="line">map[i][i]=1;</span><br><span class="line">map[i][0]=1;</span><br><span class="line">map[0][i]=1;</span><br><span class="line">}</span><br><span class="line"> for (int i = 1; i &lt;=n; i++) {</span><br><span class="line">count+=f(n,i);</span><br><span class="line">count%=10000;</span><br><span class="line">//System.out.println(count);</span><br><span class="line">}</span><br><span class="line"> System.out.println(count);</span><br><span class="line">// System.out.println(f(4,2));</span><br><span class="line"> </span><br><span class="line">}</span><br><span class="line">public static int f(int x,int y){</span><br><span class="line">if(map[x][y]!=0){</span><br><span class="line">return map[x][y];</span><br><span class="line">}</span><br><span class="line">for (int i = Math.abs(x-y)-1; i&gt;=0; i--) {</span><br><span class="line">map[x][y]+=f(y,i);</span><br><span class="line">}</span><br><span class="line">map[x][y]%=10000;</span><br><span class="line">map[y][x]=map[x][y];</span><br><span class="line">return map[x][y];</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h1&gt;&lt;p&gt;　小明想知道，满足以下条件的正整数序列的数量：&lt;br&gt; 　1. 第一项为 n；&lt;br&gt; 　2. 第二项不超过 n；&lt;br&gt; 　3. 从第三项开始，每一项小于前两项的差的绝对值。&lt;br&gt; 　请计算，对于给定的 n，有多少种满足条件的序列。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Java" scheme="https://melodyjerry.github.io/blog/tags/Java/"/>
    
      <category term="算法" scheme="https://melodyjerry.github.io/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯-模拟组织晚会</title>
    <link href="https://melodyjerry.github.io/blog/2020/03/15/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E6%A8%A1%E6%8B%9F%E7%BB%84%E7%BB%87%E6%99%9A%E4%BC%9A/"/>
    <id>https://melodyjerry.github.io/blog/2020/03/15/蓝桥杯-模拟组织晚会/</id>
    <published>2020-03-15T06:33:11.000Z</published>
    <updated>2020-03-15T08:42:54.223Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>　　小明要组织一台晚会，总共准备了 n 个节目。然后晚会的时间有限，他只能最终选择其中的 m 个节目。<br> 　这 n 个节目是按照小明设想的顺序给定的，顺序不能改变。<br> 　小明发现，观众对于晚上的喜欢程度与前几个节目的好看程度有非常大的关系，他希望选出的第一个节目尽可能好看，在此前提下希望第二个节目尽可能好看，依次类推。<br> 　小明给每个节目定义了一个好看值，请你帮助小明选择出 m 个节目，满足他的要求。</p><a id="more"></a><h1 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h1><p>　　输入的第一行包含两个整数 n, m ，表示节目的数量和要选择的数量。<br> 　第二行包含 n 个整数，依次为每个节目的好看值。</p><h1 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h1><p>　　输出一行包含 m 个整数，为选出的节目的好看值。</p><h1 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h1><p>5 3<br>3 1 2 5 4</p><h1 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h1><p>3 5 4</p><h1 id="样例说明"><a href="#样例说明" class="headerlink" title="样例说明"></a>样例说明</h1><p>　　选择了第1, 4, 5个节目。</p><h1 id="评测用例规模与约定"><a href="#评测用例规模与约定" class="headerlink" title="评测用例规模与约定"></a>评测用例规模与约定</h1><p>对于 30% 的评测用例，1 &lt;= n &lt;= 20；<br> 对于 60% 的评测用例，1 &lt;= n &lt;= 100；<br> 对于所有评测用例，1 &lt;= n &lt;= 100000，0 &lt;= 节目的好看值 &lt;= 100000。</p><!--more--><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.Arrays;</span><br><span class="line">import java.util.Scanner;</span><br><span class="line"></span><br><span class="line">public class Demo10选节目 {</span><br><span class="line">public static void main(String[] args) {</span><br><span class="line">Scanner sc = new Scanner(System.in);</span><br><span class="line">int n = sc.nextInt();</span><br><span class="line">int m = sc.nextInt();</span><br><span class="line">int[] num = new int[n];</span><br><span class="line">int[] order = new int[n];</span><br><span class="line">for (int i = 0; i &lt; n; i++) {</span><br><span class="line">num[i] = sc.nextInt();</span><br><span class="line">order[i] = num[i];</span><br><span class="line">}</span><br><span class="line">sc.close();</span><br><span class="line">Arrays.sort(order);</span><br><span class="line">ArrayList&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();</span><br><span class="line">for (int i = n - m; i &lt; n; i++) {</span><br><span class="line">list.add(order[i]);</span><br><span class="line">}</span><br><span class="line">StringBuilder sb = new StringBuilder("");</span><br><span class="line">for (int i : num) {</span><br><span class="line">if (list.contains(i)) {</span><br><span class="line">sb.append(i + " ");</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">System.out.println(sb);</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h1&gt;&lt;p&gt;　　小明要组织一台晚会，总共准备了 n 个节目。然后晚会的时间有限，他只能最终选择其中的 m 个节目。&lt;br&gt; 　这 n 个节目是按照小明设想的顺序给定的，顺序不能改变。&lt;br&gt; 　小明发现，观众对于晚上的喜欢程度与前几个节目的好看程度有非常大的关系，他希望选出的第一个节目尽可能好看，在此前提下希望第二个节目尽可能好看，依次类推。&lt;br&gt; 　小明给每个节目定义了一个好看值，请你帮助小明选择出 m 个节目，满足他的要求。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Java" scheme="https://melodyjerry.github.io/blog/tags/Java/"/>
    
      <category term="算法" scheme="https://melodyjerry.github.io/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯-模拟带九9的数的个数</title>
    <link href="https://melodyjerry.github.io/blog/2020/03/15/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E6%A8%A1%E6%8B%9F%E5%B8%A6%E4%B9%9D9%E7%9A%84%E6%95%B0%E7%9A%84%E4%B8%AA%E6%95%B0/"/>
    <id>https://melodyjerry.github.io/blog/2020/03/15/蓝桥杯-模拟带九9的数的个数/</id>
    <published>2020-03-15T06:21:11.000Z</published>
    <updated>2020-03-15T08:42:45.152Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>　　在1至2019中，有多少个数的数位中包含数字9？<br> 　注意，有的数中的数位中包含多个9，这个数只算一次。例如，1999这个数包含数字9，在计算只是算一个数。</p><a id="more"></a><h1 id="答案提交"><a href="#答案提交" class="headerlink" title="答案提交"></a>答案提交</h1><p>　　这是一道结果填空的题，你只需要算出结果后提交即可。本题的结果为一个整数，在提交答案时只填写这个整数，填写多余的内容将无法得分。</p><p>​        答案：544</p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * @Classname Main</span><br><span class="line"> * @Description 模拟带九9的数的个数</span><br><span class="line"> * @Date 2020/3/15 下午 2:21</span><br><span class="line"> * @Created by jerry</span><br><span class="line"> */</span><br><span class="line">public class Main {</span><br><span class="line">    public static void main(String[] args) {</span><br><span class="line">        int count=0;</span><br><span class="line">        A:for (int i = 1; i &lt;=2019; i++) {</span><br><span class="line">            int a=i;</span><br><span class="line">            while(a!=0){</span><br><span class="line">                int b = a%10;</span><br><span class="line">                if(b==9){</span><br><span class="line">                    count++;</span><br><span class="line">                    continue A;</span><br><span class="line">                }</span><br><span class="line">                a/=10;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        System.out.println(count);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h1&gt;&lt;p&gt;　　在1至2019中，有多少个数的数位中包含数字9？&lt;br&gt; 　注意，有的数中的数位中包含多个9，这个数只算一次。例如，1999这个数包含数字9，在计算只是算一个数。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Java" scheme="https://melodyjerry.github.io/blog/tags/Java/"/>
    
      <category term="算法" scheme="https://melodyjerry.github.io/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯-求一个数的约数个数</title>
    <link href="https://melodyjerry.github.io/blog/2020/03/15/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E6%B1%82%E4%B8%80%E4%B8%AA%E6%95%B0%E7%9A%84%E7%BA%A6%E6%95%B0%E4%B8%AA%E6%95%B0/"/>
    <id>https://melodyjerry.github.io/blog/2020/03/15/蓝桥杯-求一个数的约数个数/</id>
    <published>2020-03-15T06:11:11.000Z</published>
    <updated>2020-03-15T08:42:38.454Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>　　1200000有多少个约数（只计算正约数）。</p><a id="more"></a><h1 id="答案提交"><a href="#答案提交" class="headerlink" title="答案提交"></a>答案提交</h1><p>　　这是一道结果填空的题，你只需要算出结果后提交即可。本题的结果为一个整数，在提交答案时只填写这个整数，填写多余的内容将无法得分。<br>        答案：96</p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">import java.io.*;</span><br><span class="line">import java.util.*;</span><br><span class="line">public class Main{</span><br><span class="line">    public static void main(String [] args){</span><br><span class="line">        Scanner s=new Scanner(System.in);</span><br><span class="line">        String sc=s.nextLine();</span><br><span class="line">        int num=Integer.valueOf(sc);</span><br><span class="line">        String ss=s.nextLine();</span><br><span class="line">        String []sss=ss.split(" ");</span><br><span class="line">        for(int i=0;i&lt;num;i++){</span><br><span class="line">            System.out.println(yueshu(Integer.valueOf(sss[i])));</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    static int yueshu(int a){</span><br><span class="line">        int num=0;</span><br><span class="line">        for(int i=1;i&lt;=Math.sqrt(a);i++){</span><br><span class="line">            if(a%i==0){</span><br><span class="line">                if(i!=Math.sqrt(a))</span><br><span class="line">                    num=num+2;</span><br><span class="line">                else</span><br><span class="line">                    num=num+1;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        return num;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h1&gt;&lt;p&gt;　　1200000有多少个约数（只计算正约数）。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Java" scheme="https://melodyjerry.github.io/blog/tags/Java/"/>
    
      <category term="算法" scheme="https://melodyjerry.github.io/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>生成n位的所有二进制数</title>
    <link href="https://melodyjerry.github.io/blog/2020/03/12/%E7%94%9F%E6%88%90n%E4%BD%8D%E7%9A%84%E6%89%80%E6%9C%89%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0/"/>
    <id>https://melodyjerry.github.io/blog/2020/03/12/生成n位的所有二进制数/</id>
    <published>2020-03-12T04:14:11.000Z</published>
    <updated>2020-03-15T08:44:15.233Z</updated>
    
    <content type="html"><![CDATA[<h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><p>要求输入位数n，生成所有情况的二进制数并存进数组</p><a id="more"></a><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @Classname BinaryList</span><br><span class="line"> * @Description 输入位数n，生成所有情况的二进制数并存进数组</span><br><span class="line"> * @Date 2020/3/12 上午 11:54</span><br><span class="line"> * @Created by MelodyJerry</span><br><span class="line"> */</span><br><span class="line">public class BinaryList {</span><br><span class="line">    public static void main(String[] args){</span><br><span class="line">        List&lt;String&gt; list = new ArrayList&lt;String&gt;();</span><br><span class="line">        int n = 4; //二进制位数</span><br><span class="line">        int i = 1;</span><br><span class="line">        for(int j = n; j &gt; 0; j--){</span><br><span class="line">            i = i * 2; //对应位权</span><br><span class="line">        }</span><br><span class="line">        for(i = i-1 ; i &gt;= 0; i--){</span><br><span class="line">            //System.out.println(i);</span><br><span class="line">            String bin = Integer.toBinaryString(i);</span><br><span class="line">            while(bin.length() &lt; n){</span><br><span class="line">                bin = "0"+bin;</span><br><span class="line">            }</span><br><span class="line">            //System.out.println(bin);</span><br><span class="line">            list.add(bin);</span><br><span class="line">        }</span><br><span class="line">        for(String entry : list){</span><br><span class="line">            System.out.println(entry);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="需求-1"><a href="#需求-1" class="headerlink" title="需求"></a>需求</h1><p>用户输入一个整数，程序输出该数的二进制</p><h1 id="实现-1"><a href="#实现-1" class="headerlink" title="实现"></a>实现</h1><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">package org.pcl;</span><br><span class="line"> </span><br><span class="line">import java.util.Scanner;</span><br><span class="line"> </span><br><span class="line">/**</span><br><span class="line"> * 用户输入一个整数，程序输出该数的二进制</span><br><span class="line"> * </span><br><span class="line"> * @version 1.0 2014-05-05</span><br><span class="line"> * @author yifan</span><br><span class="line"> */</span><br><span class="line">public class OutBinary {</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) {</span><br><span class="line">Scanner scan = new Scanner(System.in);</span><br><span class="line">System.out.println("请输入一个整数:");</span><br><span class="line">int number = scan.nextInt();</span><br><span class="line"></span><br><span class="line">int tmp = 1&lt;&lt;31; //用于计算的临时变量</span><br><span class="line"></span><br><span class="line">System.out.println();</span><br><span class="line">for(int i=0; i&lt;Integer.SIZE-1; i++) {</span><br><span class="line">//System.out.print(number &amp;(tmp&gt;&gt;&gt;=1));</span><br><span class="line">System.out.print( (number &amp;(tmp&gt;&gt;&gt;=1))&gt;0? 1:0);</span><br><span class="line">}</span><br><span class="line">System.out.println();</span><br><span class="line">if(scan != null) {</span><br><span class="line">scan.close();</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>该实现代码由CSDN博主「yfstdio」提供<br>原文链接：<a href="https://blog.csdn.net/yfstdio/article/details/25079563" target="_blank" rel="noopener">https://blog.csdn.net/yfstdio/article/details/25079563</a></p></blockquote><h1 id="需求-2"><a href="#需求-2" class="headerlink" title="需求"></a>需求</h1><p>二、八、十六进制输出</p><h1 id="实现-2"><a href="#实现-2" class="headerlink" title="实现"></a>实现</h1><p>一、未使用移位运算</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">public static void main(String[] args) {</span><br><span class="line">int a = -17;</span><br><span class="line">System.out.println("二进制输出"+Integer.toBinaryString(a));</span><br><span class="line"></span><br><span class="line">System.out.println("八进制输出"+Integer.toOctalString(a));</span><br><span class="line">System.out.printf("八进制输出"+"%010o\n",a);</span><br><span class="line">        //按10位十六进制输出，向右靠齐，左边用0补齐</span><br><span class="line"></span><br><span class="line">System.out.printf("十六进制输出"+"%010x\n",a);</span><br><span class="line">        //按10位八进制输出，向右靠齐，左边用0补齐</span><br><span class="line">System.out.println("十六进制输出"+Integer.toHexString(a));</span><br><span class="line">System.out.println();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int b = 17;</span><br><span class="line">System.out.println("二进制输出"+Integer.toBinaryString(b));</span><br><span class="line"></span><br><span class="line">System.out.println("八进制输出"+Integer.toOctalString(b));</span><br><span class="line">System.out.printf("八进制输出"+"%010o\n",b);</span><br><span class="line"></span><br><span class="line">System.out.printf("十六进制输出"+"%010x\n",b);</span><br><span class="line">System.out.println("十六进制输出"+Integer.toHexString(b));</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">/* 运行结果：</span><br><span class="line">二进制输出11111111111111111111111111101111</span><br><span class="line">八进制输出37777777757</span><br><span class="line">八进制输出37777777757</span><br><span class="line">十六进制输出00ffffffef</span><br><span class="line">十六进制输出ffffffef</span><br><span class="line"> </span><br><span class="line">二进制输出10001</span><br><span class="line">八进制输出21</span><br><span class="line">八进制输出0000000021</span><br><span class="line">十六进制输出0000000011</span><br><span class="line">十六进制输出11</span><br><span class="line">*/</span><br></pre></td></tr></tbody></table></figure><p>二、使用移位运算</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">public static void main(String[] args) {</span><br><span class="line">int a = -5;</span><br><span class="line">System.out.println(a);</span><br><span class="line">System.out.println("二进制输出"+Integer.toBinaryString(a));</span><br><span class="line">System.out.println(a+"&lt;&lt;2"+"="+(a&lt;&lt;2));</span><br><span class="line">System.out.println("二进制输出"+Integer.toBinaryString(a&lt;&lt;2));</span><br><span class="line">System.out.println(a+"&gt;&gt;2"+"="+(a&gt;&gt;2));</span><br><span class="line">System.out.println("二进制输出"+Integer.toBinaryString(a&gt;&gt;2));</span><br><span class="line">System.out.println("无符号右移"+a+"&gt;&gt;&gt;2"+"="+(a&gt;&gt;&gt;2));</span><br><span class="line">System.out.println("二进制输出"+Integer.toBinaryString(a&gt;&gt;&gt;2));</span><br><span class="line">System.out.println();</span><br><span class="line">int b = 5;</span><br><span class="line">System.out.println(b);</span><br><span class="line">System.out.println("二进制输出"+Integer.toBinaryString(b));</span><br><span class="line">System.out.println(b+"&lt;&lt;2"+"="+(b&lt;&lt;2));</span><br><span class="line">System.out.println("二进制输出"+Integer.toBinaryString(b&lt;&lt;2));</span><br><span class="line">System.out.println(b+"&gt;&gt;2"+"="+(b&gt;&gt;2));</span><br><span class="line">System.out.println("二进制输出"+Integer.toBinaryString(b&gt;&gt;2));</span><br><span class="line">System.out.println("无符号右移"+b+"&gt;&gt;&gt;2"+"="+(b&gt;&gt;&gt;2));</span><br><span class="line">System.out.println("二进制输出"+Integer.toBinaryString(b&gt;&gt;&gt;2));</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">/* 运行结果：</span><br><span class="line">-5</span><br><span class="line">二进制输出11111111111111111111111111111011</span><br><span class="line">-5&lt;&lt;2=-20</span><br><span class="line">二进制输出11111111111111111111111111101100</span><br><span class="line">-5&gt;&gt;2=-2</span><br><span class="line">二进制输出11111111111111111111111111111110</span><br><span class="line">无符号右移-5&gt;&gt;&gt;2=1073741822</span><br><span class="line">二进制输出111111111111111111111111111110</span><br><span class="line"> </span><br><span class="line">5</span><br><span class="line">二进制输出101</span><br><span class="line">5&lt;&lt;2=20</span><br><span class="line">二进制输出10100</span><br><span class="line">5&gt;&gt;2=1</span><br><span class="line">二进制输出1</span><br><span class="line">无符号右移5&gt;&gt;&gt;2=1</span><br><span class="line">二进制输出1</span><br><span class="line">*/</span><br></pre></td></tr></tbody></table></figure><p>左移运算符&lt;&lt; </p><p>1、a&lt;&lt;n   将a的二进制数据左移b位，右边移空的部分补0</p><p>  可以理解为数字a= a<em>2^n（移了n位）。5&lt;&lt;2 –&gt;5</em>2^2=20   -5&lt;&lt;2^2=-20</p><p>2、a&gt;&gt;n   将a的二进制数据右移b位，如果最高位是0，则左边移空的部分补0，如果最高位是1，则左边移空的部分补1</p><p>  可以理解为数字a= a/2^n（移了n位），向下取整。5&gt;&gt;2 —&gt; 5/2^2=1;    3、-5&gt;&gt;2 –&gt; -5/2^2=-2 (向下取整)</p><p>a&gt;&gt;&gt;n  不管最高位是0或1，左边移空部分都补0</p><p>正数可以按右移计算，负数没有捷径。</p><blockquote><p>本实现代码由 CSDN博主「qq_36503510」提供<br>原文链接：<a href="https://blog.csdn.net/qq_36503510/article/details/83957214" target="_blank" rel="noopener">https://blog.csdn.net/qq_36503510/article/details/83957214</a></p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h1&gt;&lt;p&gt;要求输入位数n，生成所有情况的二进制数并存进数组&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="笔记" scheme="https://melodyjerry.github.io/blog/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Java" scheme="https://melodyjerry.github.io/blog/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>和一个人聊天很舒服是什么感觉？</title>
    <link href="https://melodyjerry.github.io/blog/2020/03/02/%E5%92%8C%E4%B8%80%E4%B8%AA%E4%BA%BA%E8%81%8A%E5%A4%A9%E5%BE%88%E8%88%92%E6%9C%8D%E6%98%AF%E4%BB%80%E4%B9%88%E6%84%9F%E8%A7%89%EF%BC%9F/"/>
    <id>https://melodyjerry.github.io/blog/2020/03/02/和一个人聊天很舒服是什么感觉？/</id>
    <published>2020-03-02T11:58:00.000Z</published>
    <updated>2020-03-02T12:35:48.202Z</updated>
    
    <content type="html"><![CDATA[<center><font color="#03CA65">说</font><font color="#06C864">来</font><font color="#09C663">这</font><font color="#0CC462">文</font><font color="#0FC261">案</font><font color="#12C060">是</font><font color="#15BE5F">有</font><font color="#18BC5E">问</font><font color="#1BBA5D">题</font><font color="#1EB85C">的</font><font color="#21B65B">。</font></center><center><font color="#27B259">和</font><font color="#2AB058">一</font><font color="#2DAE57">个</font><font color="#30AC56">人</font><font color="#33AA55">聊</font><font color="#36A854">天</font><font color="#39A653">很</font><font color="#3CA452">舒</font><font color="#3FA251">服</font><font color="#42A050">是</font><font color="#459E4F">什</font><font color="#489C4E">么</font><font color="#4B9A4D">感</font><font color="#4E984C">觉</font><font color="#51964B">？</font></center><center><font color="#579249">当</font><font color="#5A9048">然</font><font color="#5D8E47">是</font><font color="#608C46">很</font><font color="#638A45">舒</font><font color="#668844">服</font><font color="#698643">啊</font><font color="#6C8442">。</font></center><center><font color="#728040">我</font><font color="#757E3F">也</font><font color="#787C3E">是</font><font color="#7B7A3D">不</font><font color="#7E783C">知</font><font color="#81763B">道</font><font color="#84743A">当</font><font color="#877239">时</font><font color="#8A7038">为</font><font color="#8D6E37">什</font><font color="#906C36">么</font><font color="#936A35">会</font><font color="#966834">这</font><font color="#996633">么</font><font color="#9C6432">写</font><font color="#9F6231">。</font></center><center><font color="#A55E2F">不</font><font color="#A85C2E">过</font><font color="#AB5A2D">，</font><font color="#AE582C">确</font><font color="#B1562B">实</font><font color="#B4542A">很</font><font color="#B75229">开</font><font color="#BA5028">心</font></center><center><font color="#C04C26">—</font><font color="#C34A25">—</font><font color="#C64824">2</font><font color="#C94623">0</font><font color="#CC4422">2</font><font color="#CF4221">0</font><font color="#D24020">.</font><font color="#D53E1F">3</font><font color="#D83C1E">.</font><font color="#DB3A1D">2</font></center><p><fancybox><img src="https://s2.ax1x.com/2020/03/02/3WhYrT.png" alt="🐇大佬"></fancybox></p><a id="more"></a><center><font color="#F4F4F4">运</font><font color="#FFE7E7">气</font><font color="#FFDBDB"></font><font color="#FFCFCF"></font><font color="#FFC3C3"></font><font color="#FFB7B7"></font><font color="#FFABAB"></font><font color="#FF9F9F"></font><font color="#FF9292"></font><font color="#FF8686"></font><font color="#FF7A7A"></font><font color="#FF6E6E"></font><font color="#FF6262"></font><font color="#FF5656">彩</font><font color="#FF4A4A"></font><font color="#FF3D3D"></font><font color="#FF3131">蛋</font><font color="#FF2525"></font><font color="#FF1919"></font><font color="#FF0D0D"></font><font color="#FF0101"></font></center><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;font color=&quot;#03CA65&quot;&gt;说&lt;/font&gt;&lt;font color=&quot;#06C864&quot;&gt;来&lt;/font&gt;&lt;font color=&quot;#09C663&quot;&gt;这&lt;/font&gt;&lt;font color=&quot;#0CC462&quot;&gt;文&lt;/font&gt;&lt;font color=&quot;#0FC261&quot;&gt;案&lt;/font&gt;&lt;font color=&quot;#12C060&quot;&gt;是&lt;/font&gt;&lt;font color=&quot;#15BE5F&quot;&gt;有&lt;/font&gt;&lt;font color=&quot;#18BC5E&quot;&gt;问&lt;/font&gt;&lt;font color=&quot;#1BBA5D&quot;&gt;题&lt;/font&gt;&lt;font color=&quot;#1EB85C&quot;&gt;的&lt;/font&gt;&lt;font color=&quot;#21B65B&quot;&gt;。&lt;/font&gt;&lt;/center&gt;&lt;center&gt;&lt;font color=&quot;#27B259&quot;&gt;和&lt;/font&gt;&lt;font color=&quot;#2AB058&quot;&gt;一&lt;/font&gt;&lt;font color=&quot;#2DAE57&quot;&gt;个&lt;/font&gt;&lt;font color=&quot;#30AC56&quot;&gt;人&lt;/font&gt;&lt;font color=&quot;#33AA55&quot;&gt;聊&lt;/font&gt;&lt;font color=&quot;#36A854&quot;&gt;天&lt;/font&gt;&lt;font color=&quot;#39A653&quot;&gt;很&lt;/font&gt;&lt;font color=&quot;#3CA452&quot;&gt;舒&lt;/font&gt;&lt;font color=&quot;#3FA251&quot;&gt;服&lt;/font&gt;&lt;font color=&quot;#42A050&quot;&gt;是&lt;/font&gt;&lt;font color=&quot;#459E4F&quot;&gt;什&lt;/font&gt;&lt;font color=&quot;#489C4E&quot;&gt;么&lt;/font&gt;&lt;font color=&quot;#4B9A4D&quot;&gt;感&lt;/font&gt;&lt;font color=&quot;#4E984C&quot;&gt;觉&lt;/font&gt;&lt;font color=&quot;#51964B&quot;&gt;？&lt;/font&gt;&lt;/center&gt;

&lt;center&gt;&lt;font color=&quot;#579249&quot;&gt;当&lt;/font&gt;&lt;font color=&quot;#5A9048&quot;&gt;然&lt;/font&gt;&lt;font color=&quot;#5D8E47&quot;&gt;是&lt;/font&gt;&lt;font color=&quot;#608C46&quot;&gt;很&lt;/font&gt;&lt;font color=&quot;#638A45&quot;&gt;舒&lt;/font&gt;&lt;font color=&quot;#668844&quot;&gt;服&lt;/font&gt;&lt;font color=&quot;#698643&quot;&gt;啊&lt;/font&gt;&lt;font color=&quot;#6C8442&quot;&gt;。&lt;/font&gt;&lt;/center&gt;

&lt;center&gt;&lt;font color=&quot;#728040&quot;&gt;我&lt;/font&gt;&lt;font color=&quot;#757E3F&quot;&gt;也&lt;/font&gt;&lt;font color=&quot;#787C3E&quot;&gt;是&lt;/font&gt;&lt;font color=&quot;#7B7A3D&quot;&gt;不&lt;/font&gt;&lt;font color=&quot;#7E783C&quot;&gt;知&lt;/font&gt;&lt;font color=&quot;#81763B&quot;&gt;道&lt;/font&gt;&lt;font color=&quot;#84743A&quot;&gt;当&lt;/font&gt;&lt;font color=&quot;#877239&quot;&gt;时&lt;/font&gt;&lt;font color=&quot;#8A7038&quot;&gt;为&lt;/font&gt;&lt;font color=&quot;#8D6E37&quot;&gt;什&lt;/font&gt;&lt;font color=&quot;#906C36&quot;&gt;么&lt;/font&gt;&lt;font color=&quot;#936A35&quot;&gt;会&lt;/font&gt;&lt;font color=&quot;#966834&quot;&gt;这&lt;/font&gt;&lt;font color=&quot;#996633&quot;&gt;么&lt;/font&gt;&lt;font color=&quot;#9C6432&quot;&gt;写&lt;/font&gt;&lt;font color=&quot;#9F6231&quot;&gt;。&lt;/font&gt;&lt;/center&gt;

&lt;center&gt;&lt;font color=&quot;#A55E2F&quot;&gt;不&lt;/font&gt;&lt;font color=&quot;#A85C2E&quot;&gt;过&lt;/font&gt;&lt;font color=&quot;#AB5A2D&quot;&gt;，&lt;/font&gt;&lt;font color=&quot;#AE582C&quot;&gt;确&lt;/font&gt;&lt;font color=&quot;#B1562B&quot;&gt;实&lt;/font&gt;&lt;font color=&quot;#B4542A&quot;&gt;很&lt;/font&gt;&lt;font color=&quot;#B75229&quot;&gt;开&lt;/font&gt;&lt;font color=&quot;#BA5028&quot;&gt;心&lt;/font&gt;&lt;/center&gt;

&lt;center&gt;&lt;font color=&quot;#C04C26&quot;&gt;—&lt;/font&gt;&lt;font color=&quot;#C34A25&quot;&gt;—&lt;/font&gt;&lt;font color=&quot;#C64824&quot;&gt;2&lt;/font&gt;&lt;font color=&quot;#C94623&quot;&gt;0&lt;/font&gt;&lt;font color=&quot;#CC4422&quot;&gt;2&lt;/font&gt;&lt;font color=&quot;#CF4221&quot;&gt;0&lt;/font&gt;&lt;font color=&quot;#D24020&quot;&gt;.&lt;/font&gt;&lt;font color=&quot;#D53E1F&quot;&gt;3&lt;/font&gt;&lt;font color=&quot;#D83C1E&quot;&gt;.&lt;/font&gt;&lt;font color=&quot;#DB3A1D&quot;&gt;2&lt;/font&gt;&lt;/center&gt;

&lt;p&gt;&lt;fancybox&gt;&lt;img src=&quot;https://s2.ax1x.com/2020/03/02/3WhYrT.png&quot; alt=&quot;🐇大佬&quot;&gt;&lt;/fancybox&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="随笔" scheme="https://melodyjerry.github.io/blog/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
