<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MelodyHub</title>
  
  <subtitle>你用走 可是我用跑</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://melodyjerry.github.io/blog/"/>
  <updated>2020-02-11T10:56:14.942Z</updated>
  <id>https://melodyjerry.github.io/blog/</id>
  
  <author>
    <name>Melody Jerry</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>任正非:唯一有愧的是对不起父母</title>
    <link href="https://melodyjerry.github.io/blog/2020/02/11/%E4%BB%BB%E6%AD%A3%E9%9D%9E-%E5%94%AF%E4%B8%80%E6%9C%89%E6%84%A7%E7%9A%84%E6%98%AF%E5%AF%B9%E4%B8%8D%E8%B5%B7%E7%88%B6%E6%AF%8D/"/>
    <id>https://melodyjerry.github.io/blog/2020/02/11/任正非-唯一有愧的是对不起父母/</id>
    <published>2020-02-11T05:58:08.000Z</published>
    <updated>2020-02-11T10:56:14.942Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>​        前几天，弟在做高考语文预测卷时，突然跟我说“老哥，你去看看<strong>任正非的文章《我的父亲母亲》</strong>，很有深意”。在看完文章后还有一篇<strong>作者是柳传志的读后感</strong>。对这两篇文章深有感触，所以专门开设并记录在博文里。</p><a id="more"></a><h2 id="《我的父亲母亲》——-任正非"><a href="#《我的父亲母亲》——-任正非" class="headerlink" title="《我的父亲母亲》—— 任正非"></a>《我的父亲母亲》—— 任正非</h2><blockquote><p><strong>《我的父亲母亲》</strong></p><p><strong>任正非</strong></p><img src="http://5b0988e595225.cdn.sohucs.com/images/20190602/63bf99f49c4847838b5d18d603cb753b.jpeg"><p><strong>【一】</strong></p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;上世纪末最后一天，我总算良心发现，在公务结束之后，买了一张从北京去昆明的机票，去看看妈妈。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;买好机票后，我没有给她打电话，我知道一打电话她一下午都会忙碌，不管多晚到达，都会给我做一些我小时候喜欢吃的东西。直到飞机起飞，我才告诉她，让她不要告诉别人，不要车来接，我自己坐出租车回家，目的就是好好陪陪她。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;前几年我每年也去看看妈妈，但一下飞机就给办事处接走了，说这个客户很重要，要拜见一下，那个客户很重要，要陪他们吃顿饭，忙来忙去，忙到上飞机时回家取行李，与父母匆匆告别。妈妈盼星星、盼月亮，盼唠唠家常，却一次又一次地落空。</p><p><strong>【二】</strong></p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;一个普通的早上，妈妈从菜市场出来，提着两小包菜，被汽车撞成重伤。我身在伊朗，飞机要多次中转才能回来，在巴林转机要待6.5个小时，真是心如煎熬，又遇巴林雷雨，飞机延误两个小时，到曼谷时又晚了10分钟，没有及时赶上回昆明的飞机，直到深夜才赶到昆明。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;回到昆明，就知道妈妈不行了，她的头部全部给撞坏了，当时的心跳、呼吸全是靠药物和机器维持，之所以在电话上不告诉我，是怕我在旅途中出事。我看见妈妈一声不响地安详地躺在病床上，不用操劳、烦心，好像她一生也没有这么休息过。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;我真后悔没有在伊朗给妈妈打一个电话。因为以前不管我在国内、国外给她打电话时，她都唠叨：“你又出差了”，“非非你的身体还不如我好呢”，“非非你的皱纹比妈妈还多呢”，“非非你走路还不如我呢，你这么年纪轻轻就这么多病”，“非非，糖尿病参加宴会多了，坏得更快呢，你的心脏又不好”……</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;我想伊朗条件这么差，我一打电话，妈妈又唠叨，反正过不了几天就见面了，就没有打，而这是我一生中最大的憾事。如果我真打了，拖延她一两分钟出门，也许妈妈就躲过了这场灾难。这种悔恨的心情，真是难以形容。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;我看了妈妈最后一眼，妈妈溘然去世。</p><p><strong>【三】</strong></p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1995年，我父亲在昆明街头的小摊上买了一瓶塑料包装的软饮料，喝后拉肚子，一直到全身衰竭去世。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;父亲任摩逊，尽职尽责一生，可以说是一个乡村教育家。妈妈程远昭，是一个陪伴父亲在贫困山区与穷孩子厮混了一生的一个普通得不能再普通的园丁。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;父亲穿着土改工作队的棉衣，随解放军剿匪部队一同进入贵州少数民族山区去筹建一所民族中学。一头扎进去就是几十年，他培养的学生不少成为党和国家的高级干部，有些还是中央院校的校级领导，而父亲还是那么位卑言微。</p><p><strong>【四】</strong></p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;我与父母相处的青少年时代，印象最深的就是度过三年自然灾害的困难时期。今天想来还历历在目。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;我们兄妹七个，加上父母共九人。全靠父母微薄的工资来生活，毫无其他来源。本来生活就十分困难，儿女一天天在长大，衣服一天天在变短，而且都要读书，开支很大，每个学期每人要交2-3元的学费，到交费时，妈妈每次都发愁。我经常看到妈妈月底就到处向人借钱度饥荒，而且常常走了几家都未必借到。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;直到高中毕业我没有穿过衬衣。有同学看到很热的天，我还穿着厚厚的外衣，就让我向妈妈要一件衬衣，我不敢，因为我知道做不到。我上大学时妈妈一次送我两件衬衣，我真想哭，因为，我有衬衣了，弟妹们就会更难了。我家当时是2-3人合用一条被盖，而且破旧的被单下面铺的是稻草。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;上大学我要拿走一条被子，就更困难了，因为那时还实行布票、棉花票管制，最少的一年，每人只发0.5米布票。没有被单，妈妈捡了毕业学生丢弃的几床破被单缝缝补补，洗干净，这条被单就在重庆陪我度过了五年的大学生活。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;我们家当时每餐实行严格分饭制，控制所有人欲望的配给制，保证人人都能活下来。如果不是这样，总会有一个、两个弟妹活不到今天。我真正能理解活下去这句话的含义。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;高三快高考时，我有时在家复习功课，实在饿得受不了了，用米糠和菜合一下，烙着吃，被父亲碰上几次，他心疼了。其实那时我家穷得连一个可上锁的柜子都没有，粮食是用瓦缸装着，我也不敢去随便抓一把。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;高考前三个月，妈妈经常在早上塞给我一个小小的玉米饼，要我安心复习功课，我能考上大学，小玉米饼功劳巨大。如果不是这样，也许我就进不了华为这样的公司，社会上多了一名养猪能手，或街边多了一名能工巧匠而已。这个小小的玉米饼，是从父母与弟妹的口中抠出来的，我无以报答他们。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;“记住知识就是力量，别人不学，你要学，不要随大流。”“以后有能力要帮助弟妹。”背负着这种重托，我在当时的环境下，将樊映川的高等数学习题集从头到尾做了两遍，学习了逻辑、哲学。还自学了三门外语，当时已到可以阅读大学课本的程度，终因我不是语言天才，加之在军队服务时用不上，20多年荒废，完全忘光了。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;我当年穿走父亲的皮鞋，没念及父亲那时是做苦工的，泥里水里，冰冷潮湿，他更需要鞋子。现在回忆起来，感觉自己太自私了。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;回顾我自己已走过的历史，唯一有愧的是对不起父母，没条件时没有照顾他们，有条件时也没有照顾他们。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;爸爸，妈妈，千声万声呼唤你们，千声万声唤不回。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;逝者已经逝去，活着的还要前行。</p><p>​                                                                                                                ——2001年2月8日 于深圳</p></blockquote><hr><h2 id="《要想富就要知道为何穷》——柳传志"><a href="#《要想富就要知道为何穷》——柳传志" class="headerlink" title="《要想富就要知道为何穷》——柳传志"></a>《要想富就要知道为何穷》——柳传志</h2><blockquote><p><strong>《要想富就要知道为何穷》</strong></p><p><strong>柳传志</strong></p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;在手机上读着一篇任正非写的怀念他的父母亲的文章，而脑子里却想起了另一件事。那是2013年9月，我接到了一个邀请函。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;那天我是真的有事，但出于对老任发自内心的敬佩和尊重，我尽力挤开了别的事情，花了一个半小时的车程赶到了会场。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;老任的面子确实大，那天是贵州都匀一中的“校训研讨会”，真请来了不少领导和知名的企业家。他看见我来了显得非常高兴。我也高兴，那是因为在企业工作者里面，我们都是属于少有的“老家伙”序列里的人，相互都比较了解，然而又极少见面，所以紧紧的握手不愿松开。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;原来都匀一中就是任正非的母校，他的父亲在此曾任过三年校长，他毕生从事教育工作，50多年来倾注了全部的心血。在现任学校领导介绍学校的历史，介绍老任的父亲任摩逊先生事迹的时候，我注意盯着任正非，我想这样的内容他应该听过无数遍了，他却依然听得那么专注，那么动情!</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;此刻我正在读他写的怀念他的父母的文章，我认真读这篇文章，是因为深深引起了我的共鸣。我和他是同年生人，我们的出生背景有所不同，但是上一辈在政治上受到的磨难和考验几乎是相同的。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;任正非谈到他的父亲在这考验的重压之下，依旧勤勤恳恳拼力地工作，为他自己后来在华为拼命地工作做出了表率，而父辈的榜样在他身上打下了深深的烙印。我的父亲也是我的榜样。给我最深刻的印象是在强大的政治压力下，他能够像以前教导我的那样，用行动做出表率-做一个正直的人。正直，这是一个多么平常的词藻，然而在特殊的考验面前，这个词就超过了千钧的分量。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1966年文化革命爆发的第一个年头，我亲眼看到我的父亲在威逼面前不肯诬陷当年的战友，被开除党籍。当时的气氛紧张惊恐。这深深地印在了我的脑海中，而我的父亲以身教的方式告诉了我如何做人，什么叫正直!</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;联想发展到今天的三十年中，经过的风险无其数，尤其在早期还有一定的政策风险，我自诩是个敢担当的人，而在联想结出胜利果实时，我也以为自己是个舍得让利的人，这对联想能发展到今天也许有一定的影响。和任正非一样，我们能以身作则地把企业利益放在个人利益的前面。追根溯源，是我们的父辈给我们打下了如何做人的基础。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;当我读到任正非的母亲是因为意外车祸辞世的，我的心一下子揪了起来。我能想象对他那是一种什么样的撕心裂肺!</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;任正非讲到他在高三那年(也应该是我高三的那年吧，就是最困难的1961年)，母亲经常早上塞给他一个小小的玉米饼，他说我能考上大学，小玉米饼的功劳巨大，这个小小的玉米饼是从父母与弟妹的口中抠出来的，我无以报答他们。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;我相信绝大多数的80后、90后的朋友是读不出玉米饼的感觉的，因为他们不懂什么叫饥饿。61年，我是北京25中的一名高三学生，我们中学生是早上8、9点钟的太阳，所以享受着最高待遇，一个月32斤粮，半斤油，半斤肉。知道什么叫一个月半斤油吗?</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;那是在一锅熬白菜煮熟的时候，油瓶口顺着筷子点入几滴油，使锅里漂着油花，一个月下来，这半斤油就用完了。知道什么叫饿吗?那就是耗干净你身上的脂肪，然后再耗你的肌肉。有一天夜里，我饿的实在受不了，想起抽屉里有一盒中药是羚翘解毒丸，我就吃了两颗，几小时后药性发作，抽筋断肠，头痛欲裂。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;经过饥饿的人才知道什么叫从父母弟妹的嘴里面抠出的玉米饼。任正非想念着母亲，我何尝不想念自己的母亲、不想起在那最艰难的岁月里，母亲对我的慈爱。我的父母都已经去世了，我和老任一样也是老大，我会永远记住父母的恩德慈爱。我有兄弟姐妹四人，我们会永远相亲相爱。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;我在想，读了老任的文章，是什么让我会拿起笔说了上边这段话，我想说给谁听呢?</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;说给老任?让他知道我是他的知音?说给我的亲人、朋友、同学、同事?让我们更加珍惜今天的生活?</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;好像是，但也不是。<strong>我明白，我最想说给那些年青、年少的，甚至是儿童，让他们长大了听。</strong>   </p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;我一直告诫自己不要成为一个碎嘴唠叨的老头。而说这些话，我估计孩子们是不爱听的。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;前些天，我看了一部叫“归来”的电影，写的是我亲眼看见过的年代，亲眼看见过的事情，电影演毕，潸然泪下。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;问过几个年青人是否看过这部片子，都说没有。有一个对我说：人总是要向前看么，老说那些老话，凄凄惨惨有什么意思?!他们爱看光鲜亮丽、富有、任性的电影，那是他们的追求。</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;他们不爱看“归来”，不爱听我碎嘴唠叨，但我还是忍不住想对他们说，到底为了什么?</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<strong>因为我们这个民族就在不久以前还很苦，很凄惨，很窝囊。你要想今后过得富有光鲜亮丽，你就要知道过去为什么穷，为什么苦，为什么受人欺负。你就要懂得历史，你就要从中学到教训，我们已经是为数不多的见过那段历史的尾巴的人了，尽量还原真实的历史是我们的责任。不管你是哪国国籍，但你和你的子孙血管中流的是中国人的血，这是无法改变的事实!</strong>     </p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;我谈不上是高尚的人，更谈不上是纯粹的人。但我努力在做一个知恩图报的人，做一个懂廉耻、要自强的人。我希望几十年以后，今天年青、年少的人们能凭追求、凭团结、凭实力让中国富强，让自己过上光鲜亮丽富有的生活。</p></blockquote><hr><h1 id="重要文献"><a href="#重要文献" class="headerlink" title="重要文献"></a>重要文献</h1><p>[1] 题目《任正非：唯一有愧的是对不起父母》，摘自百家号“金融界”， <a href="https://baijiahao.baidu.com/s?id=1644249222074823165&amp;wfr=spider&amp;for=pc" target="_blank" rel="noopener">https://baijiahao.baidu.com/s?id=1644249222074823165&amp;wfr=spider&amp;for=pc</a></p><p>[2] 原文，转自凤凰网，<a href="http://news.ifeng.com/c/7nKjN9F2Uy0" target="_blank" rel="noopener">http://news.ifeng.com/c/7nKjN9F2Uy0</a></p><p>[3] 插图，来自网络</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;​        前几天，弟在做高考语文预测卷时，突然跟我说“老哥，你去看看&lt;strong&gt;任正非的文章《我的父亲母亲》&lt;/strong&gt;，很有深意”。在看完文章后还有一篇&lt;strong&gt;作者是柳传志的读后感&lt;/strong&gt;。对这两篇文章深有感触，所以专门开设并记录在博文里。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="文章" scheme="https://melodyjerry.github.io/blog/tags/%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
  <entry>
    <title>解决bash: hexo: command not found</title>
    <link href="https://melodyjerry.github.io/blog/2020/02/10/%E8%A7%A3%E5%86%B3bash-hexo-command-not-found/"/>
    <id>https://melodyjerry.github.io/blog/2020/02/10/解决bash-hexo-command-not-found/</id>
    <published>2020-02-10T13:28:02.000Z</published>
    <updated>2020-02-11T10:56:14.938Z</updated>
    
    <content type="html"><![CDATA[<p><br>记录一次离奇的车祸现场。</p><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>今天用<code>hexo</code>新建文章<code>hexo new</code>时<code>git</code>报错：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash: hexo: command not found</span><br></pre></td></tr></tbody></table></figure><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><p>将<code>G:\blog_gitee\node_modules\.bin</code>添加进PATH。</p><h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p>可能是因为我今天更新<code>npm</code>了？</p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;br&gt;记录一次离奇的车祸现场。&lt;/p&gt;
&lt;h1 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h1&gt;&lt;p&gt;今天用&lt;code&gt;hexo&lt;/code&gt;新建文章&lt;code&gt;hexo new&lt;/code&gt;时&lt;code&gt;git&lt;/code&gt;报错：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bash: hexo: command not found&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&quot;解决办法&quot;&gt;&lt;a href=&quot;#解决办法&quot; class=&quot;headerlink&quot; title=&quot;解决办法&quot;&gt;&lt;/a&gt;解决办法&lt;/h1&gt;&lt;p&gt;将&lt;code&gt;G:\blog_gitee\node_modules\.bin&lt;/code&gt;添加进PATH。&lt;/p&gt;
&lt;h1 id=&quot;原因&quot;&gt;&lt;a href=&quot;#原因&quot; class=&quot;headerlink&quot; title=&quot;原因&quot;&gt;&lt;/a&gt;原因&lt;/h1&gt;&lt;p&gt;可能是因为我今天更新&lt;code&gt;npm&lt;/code&gt;了？&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Hexo" scheme="https://melodyjerry.github.io/blog/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>[转]CentOS 7镜像下载</title>
    <link href="https://melodyjerry.github.io/blog/2020/02/10/%E8%BD%AC-CentOS-7%E9%95%9C%E5%83%8F%E4%B8%8B%E8%BD%BD/"/>
    <id>https://melodyjerry.github.io/blog/2020/02/10/转-CentOS-7镜像下载/</id>
    <published>2020-02-10T13:26:37.000Z</published>
    <updated>2020-02-11T10:56:14.946Z</updated>
    
    <content type="html"><![CDATA[<p>官网下载链接：<a href="http://isoredirect.centos.org/centos/7.4.1708/isos/x86_64/" target="_blank" rel="noopener">http://isoredirect.centos.org/centos/7/isos/x86_64/</a></p><p><strong><em>step1: 进入下载页，选择阿里云站点进行下载</em></strong></p><p>Actual Country 国内资源          Nearby Countries 周边国家资源</p><p>阿里云站点：<a href="http://mirrors.aliyun.com/centos/7/isos/x86_64/" target="_blank" rel="noopener">http://mirrors.aliyun.com/centos/7/isos/x86_64/</a></p><p>每个链接都包括了镜像文件的地址、类型及版本号等信息</p><p>选择当前国家资源区站点下载，获取资源速度比较快</p><img src="https:////upload-images.jianshu.io/upload_images/4170765-6a8d1c8f689e6545.png?imageMogr2/auto-orient/strip|imageView2/2/w/502/format/webp" alt="img" style="zoom:80%;"><img src="https:////upload-images.jianshu.io/upload_images/4170765-079a53e5b94f35f8.png?imageMogr2/auto-orient/strip|imageView2/2/w/472/format/webp" alt="img" style="zoom:80%;"><p><strong><em>step1: 进入阿里云站点，选择</em></strong> <strong>CentOS-7-x86_64-DVD-1804.iso下载</strong></p><img src="https:////upload-images.jianshu.io/upload_images/4170765-74d8c1e65e699710.png?imageMogr2/auto-orient/strip|imageView2/2/w/776/format/webp" alt="img" style="zoom:80%;"><p>各个版本的ISO镜像文件说明：</p><p>CentOS-7-x86_64-DVD-1708.iso        标准安装版（推荐）</p><p>CentOS-7-x86_64-Everything-1708.iso    完整版，集成所有软件（以用来补充系统的软件或者填充本地镜像）</p><p>CentOS-7-x86_64-LiveGNOME-1708.iso     GNOME桌面版  </p><p>CentOS-7-x86_64-LiveKDE-1708.iso      KDE桌面版  </p><p>CentOS-7-x86_64-Minimal-1708.iso      精简版，自带的软件最少</p><p>CentOS-7-x86_64-NetInstall-1708.iso    网络安装版（从网络安装或者救援系统） </p><hr><p>作者：Ada54<br>链接：<a href="https://www.jianshu.com/p/a63f47e096e8" target="_blank" rel="noopener">https://www.jianshu.com/p/a63f47e096e8</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;官网下载链接：&lt;a href=&quot;http://isoredirect.centos.org/centos/7.4.1708/isos/x86_64/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://isoredirect.centos.org/centos/7/isos/x86_64/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;step1: 进入下载页，选择阿里云站点进行下载&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Actual Country 国内资源          Nearby Countries 周边国家资源&lt;/p&gt;
&lt;p&gt;阿里云站点：&lt;a href=&quot;http://mirrors.aliyun.com/centos/7/isos/x86_64/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://mirrors.aliyun.com/centos/7/isos/x86_64/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;每个链接都包括了镜像文件的地址、类型及版本号等信息&lt;/p&gt;
&lt;p&gt;选择当前国家资源区站点下载，获取资源速度比较快&lt;/p&gt;
&lt;img src=&quot;https:////upload-images.jianshu.io/upload_images/4170765-6a8d1c8f689e6545.png?imageMogr2/auto-orient/strip|imageView2/2/w/502/format/webp&quot; alt=&quot;img&quot; style=&quot;zoom:80%;&quot;&gt;

&lt;img src=&quot;https:////upload-images.jianshu.io/upload_images/4170765-079a53e5b94f35f8.png?imageMogr2/auto-orient/strip|imageView2/2/w/472/format/webp&quot; alt=&quot;img&quot; style=&quot;zoom:80%;&quot;&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;step1: 进入阿里云站点，选择&lt;/em&gt;&lt;/strong&gt; &lt;strong&gt;CentOS-7-x86_64-DVD-1804.iso下载&lt;/strong&gt;&lt;/p&gt;
&lt;img src=&quot;https:////upload-images.jianshu.io/upload_images/4170765-74d8c1e65e699710.png?imageMogr2/auto-orient/strip|imageView2/2/w/776/format/webp&quot; alt=&quot;img&quot; style=&quot;zoom:80%;&quot;&gt;

&lt;p&gt;各个版本的ISO镜像文件说明：&lt;/p&gt;
&lt;p&gt;CentOS-7-x86_64-DVD-1708.iso        标准安装版（推荐）&lt;/p&gt;
&lt;p&gt;CentOS-7-x86_64-Everything-1708.iso    完整版，集成所有软件（以用来补充系统的软件或者填充本地镜像）&lt;/p&gt;
&lt;p&gt;CentOS-7-x86_64-LiveGNOME-1708.iso     GNOME桌面版  &lt;/p&gt;
&lt;p&gt;CentOS-7-x86_64-LiveKDE-1708.iso      KDE桌面版  &lt;/p&gt;
&lt;p&gt;CentOS-7-x86_64-Minimal-1708.iso      精简版，自带的软件最少&lt;/p&gt;
&lt;p&gt;CentOS-7-x86_64-NetInstall-1708.iso    网络安装版（从网络安装或者救援系统） &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;作者：Ada54&lt;br&gt;链接：&lt;a href=&quot;https://www.jianshu.com/p/a63f47e096e8&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.jianshu.com/p/a63f47e096e8&lt;/a&gt;&lt;br&gt;来源：简书&lt;br&gt;著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="镜像" scheme="https://melodyjerry.github.io/blog/tags/%E9%95%9C%E5%83%8F/"/>
    
  </entry>
  
  <entry>
    <title>MySQL的数据类型？</title>
    <link href="https://melodyjerry.github.io/blog/2020/02/09/MySQL%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <id>https://melodyjerry.github.io/blog/2020/02/09/MySQL的数据类型/</id>
    <published>2020-02-09T12:42:25.000Z</published>
    <updated>2020-02-11T10:56:14.886Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MySQL的数据类型"><a href="#MySQL的数据类型" class="headerlink" title="MySQL的数据类型"></a>MySQL的数据类型</h1><p>数据库中的每个列都应该有适当的数据类型，用于限制或允许该列中存储的数据。例如，列中存储的为数字，则相应的数据类型应该为数值类型。</p><p>如果使用错误的数据类型可能会严重影响应用程序的功能和性能，所以在设计表时，应该特别重视数据列所用的数据类型。更改包含数据的列不是一件小事，这样做可能会导致数据丢失。因此，在创建表时必须为每个列设置正确的数据类型和长度。</p><p>MySQL中定义数据字段的类型对你数据库的优化是非常重要的。</p><p>MySQL支持所有标准SQL数值数据类型。</p><p>MySQL支持多种类型，大致可以分为三类：</p><ul><li>数值</li><li>日期/时间</li><li>字符(串)类型。</li></ul><h1 id="数据类型分类"><a href="#数据类型分类" class="headerlink" title="数据类型分类"></a>数据类型分类</h1><ol><li>数值类型（整数类型和小数类型）</li></ol><ul><li>整数类型：包括 TINYINT、SMALLINT、MEDIUMINT、INT、BIGINT。</li><li>小数类型：<ul><li>浮点数类型包括 FLOAT 和 DOUBLE。</li><li>定点数类型为 DECIMAL。</li></ul></li></ul><ol start="2"><li>日期/时间类型</li></ol><ul><li>包括 YEAR、TIME、DATE、DATETIME 和 TIMESTAMP。</li></ul><ol start="3"><li>字符类型（文本字符串和二进制字符串）</li></ol><ul><li>字符串类型：包括 CHAR、VARCHAR、BINARY、VARBINARY、BLOB、TEXT、ENUM 和 SET 等。</li><li>二进制类型：包括 BIT、BINARY、VARBINARY、TINYBLOB、BLOB、MEDIUMBLOB 和 LONGBLOB。</li></ul><a id="more"></a><h2 id="数值类型"><a href="#数值类型" class="headerlink" title="数值类型"></a>数值类型</h2><p>MySQL支持所有标准SQL数值数据类型。</p><p>这些类型包括严格数值数据类型(INTEGER、SMALLINT、DECIMAL和NUMERIC)，以及近似数值数据类型(FLOAT、REAL和DOUBLE PRECISION)。</p><p>关键字INT是INTEGER的同义词，关键字DEC是DECIMAL的同义词。</p><p>BIT数据类型保存位字段值，并且支持MyISAM、MEMORY、InnoDB和BDB表。</p><p>作为SQL标准的扩展，MySQL也支持整数类型TINYINT、MEDIUMINT和BIGINT。下面的表显示了需要的每个整数类型的存储和范围。</p><table><thead><tr><th align="left">类型</th><th align="left">大小</th><th align="left">范围（有符号）</th><th align="left">范围（无符号）</th><th align="left">用途</th></tr></thead><tbody><tr><td align="left">TINYINT</td><td align="left">1 字节</td><td align="left">(-128，127)</td><td align="left">(0，255)</td><td align="left">小整数值</td></tr><tr><td align="left">SMALLINT</td><td align="left">2 字节</td><td align="left">(-32 768，32 767)</td><td align="left">(0，65 535)</td><td align="left">大整数值</td></tr><tr><td align="left">MEDIUMINT</td><td align="left">3 字节</td><td align="left">(-8 388 608，8 388 607)</td><td align="left">(0，16 777 215)</td><td align="left">大整数值</td></tr><tr><td align="left">INT或INTEGER</td><td align="left">4 字节</td><td align="left">(-2 147 483 648，2 147 483 647)</td><td align="left">(0，4 294 967 295)</td><td align="left">大整数值</td></tr><tr><td align="left">BIGINT</td><td align="left">8 字节</td><td align="left">(-9,223,372,036,854,775,808，9 223 372 036 854 775 807)</td><td align="left">(0，18 446 744 073 709 551 615)</td><td align="left">极大整数值</td></tr><tr><td align="left">FLOAT</td><td align="left">4 字节</td><td align="left">(-3.402 823 466 E+38，-1.175 494 351 E-38)，0，(1.175 494 351 E-38，3.402 823 466 351 E+38)</td><td align="left">0，(1.175 494 351 E-38，3.402 823 466 E+38)</td><td align="left">单精度 浮点数值</td></tr><tr><td align="left">DOUBLE</td><td align="left">8 字节</td><td align="left">(-1.797 693 134 862 315 7 E+308，-2.225 073 858 507 201 4 E-308)，0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td><td align="left">0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td><td align="left">双精度 浮点数值</td></tr><tr><td align="left">DECIMAL</td><td align="left">对DECIMAL(M,D) ，如果M&gt;D，为M+2否则为D+2</td><td align="left">依赖于M和D的值</td><td align="left">依赖于M和D的值</td><td align="left">小数值</td></tr></tbody></table><h3 id="整数类型"><a href="#整数类型" class="headerlink" title="整数类型"></a>整数类型</h3><blockquote><p>整数类型又称数值型数据，数值型数据类型主要用来存储数字。</p></blockquote><p>MySQL提供了多种数值型数据类型，不同的数据类型提供不同的取值范围，可以存储的值范围越大，所需的存储空间也会越大。</p><p>MySQL 主要提供的整数类型有 <strong>TINYINT</strong>、<strong>SMALLINT</strong>、<strong>MEDIUMINT</strong>、<strong>INT</strong>、<strong>BIGINT</strong>，其属性字段可以添加 AUTO_INCREMENT 自增约束条件。下表中列出了 MySQL 中的数值类型。</p><table><thead><tr><th>类型名称</th><th>说明</th><th>存储需求</th></tr></thead><tbody><tr><td>TINYINT</td><td>很小的整数</td><td>1个字节</td></tr><tr><td>SMALLINT</td><td>小的整数</td><td>2个宇节</td></tr><tr><td>MEDIUMINT</td><td>中等大小的整数</td><td>3个字节</td></tr><tr><td>INT (INTEGHR)</td><td>普通大小的整数</td><td>4个字节</td></tr><tr><td>BIGINT</td><td>大整数</td><td>8个字节</td></tr></tbody></table><p>从上表中可以看到，不同类型的整数存储所需的字节数不相同，占用字节数最小的是 TINYINT 类型，占用字节最大的是 BIGINT 类型，占用的字节越多的类型所能表示的数值范围越大。</p><p>根据占用字节数可以求出每一种数据类型的取值范围。例如，TINYINT 需要 1 个字节（8bit）来存储，那么 TINYINT 无符号数的最大值为 28-1，即 255；TINYINT 有符号数的最大值为 27-1，即 127。其他类型的整数的取值范围计算方法相同，如下表所示。</p><table><thead><tr><th>类型名称</th><th>说明</th><th>存储需求</th></tr></thead><tbody><tr><td>TINYINT</td><td>-128〜127</td><td>0 〜255</td></tr><tr><td>SMALLINT</td><td>-32768〜32767</td><td>0〜65535</td></tr><tr><td>MEDIUMINT</td><td>-8388608〜8388607</td><td>0〜16777215</td></tr><tr><td>INT (INTEGER)</td><td>-2147483648〜2147483647</td><td>0〜4294967295</td></tr><tr><td>BIGINT</td><td>-9223372036854775808〜9223372036854775807</td><td>0〜18446744073709551615</td></tr></tbody></table><blockquote><p>提示：显示宽度和数据类型的取值范围是无关的。显示宽度只是指明 MySQL 最大可能显示的数字个数，数值的位数小于指定的宽度时会由空格填充。如果插入了大于显示宽度的值，只要该值不超过该类型整数的取值范围，数值依然可以插入，而且能够显示出来。例如，year 字段插入 19999，当使用 SELECT 查询该列值的时候，MySQL 显示的将是完整的带有 5 位数字的 19999，而不是 4 位数字的值。</p></blockquote><p>其他整型数据类型也可以在定义表结构时指定所需的显示宽度，如果不指定，则系统为每一种类型指定默认的宽度值。</p><p>不同的整数类型有不同的取值范围，并且需要不同的存储空间，因此应根据实际需要选择最合适的类型，这样有利于提高查询的效率和节省存储空间。</p><h3 id="小数类型"><a href="#小数类型" class="headerlink" title="小数类型"></a>小数类型</h3><p>MySQL 中使用浮点数和定点数来表示小数。</p><p>浮点类型有两种，分别是单精度浮点数（<strong>FLOAT</strong>）和双精度浮点数（<strong>DOUBLE</strong>）；定点类型只有一种，就是 <strong>DECIMAL</strong>。</p><p>浮点类型和定点类型都可以用<code>(M, D)</code>来表示，其中<code>M</code>称为精度，表示总共的位数；<code>D</code>称为标度，表示小数的位数。</p><p>浮点数类型的取值范围为 M（1～255）和 D（1～30，且不能大于 M-2），分别表示显示宽度和小数位数。M 和 D 在 FLOAT 和DOUBLE 中是可选的，FLOAT 和 DOUBLE 类型将被保存为硬件所支持的最大精度。DECIMAL 的默认 D 值为 0、M 值为 10。</p><p>下表中列出了 MySQL 中的小数类型和存储需求。</p><table><thead><tr><th>类型名称</th><th>说明</th><th>存储需求</th></tr></thead><tbody><tr><td>FLOAT</td><td>单精度浮点数</td><td>4 个字节</td></tr><tr><td>DOUBLE</td><td>双精度浮点数</td><td>8 个字节</td></tr><tr><td>DECIMAL (M, D)，DEC</td><td>压缩的“严格”定点数</td><td>M+2 个字节</td></tr></tbody></table><p>DECIMAL 类型不同于 FLOAT 和 DOUBLE。DOUBLE 实际上是以字符串的形式存放的，DECIMAL 可能的最大取值范围与 DOUBLE 相同，但是有效的取值范围由 M 和 D 决定。如果改变 M 而固定 D，则取值范围将随 M 的变大而变大。</p><p>从上表中可以看到，DECIMAL 的存储空间并不是固定的，而由精度值 M 决定，占用 M+2 个字节。</p><p>FLOAT 类型的取值范围如下：</p><ul><li>有符号的取值范围：-3.402823466E+38～-1.175494351E-38。</li><li>无符号的取值范围：0 和 -1.175494351E-38～-3.402823466E+38。</li></ul><p>DOUBLE 类型的取值范围如下：</p><ul><li>有符号的取值范围：-1.7976931348623157E+308～-2.2250738585072014E-308。</li><li>无符号的取值范围：0 和 -2.2250738585072014E-308～-1.7976931348623157E+308。</li></ul><blockquote><p>提示：不论是定点还是浮点类型，如果用户指定的精度超出精度范围，则会四舍五入进行处理。</p></blockquote><p>FLOAT 和 DOUBLE 在不指定精度时，默认会按照实际的精度（由计算机硬件和操作系统决定），DECIMAL 如果不指定精度，默认为（10，0）。</p><p>浮点数相对于定点数的优点是在长度一定的情况下，浮点数能够表示更大的范围；缺点是会引起精度问题。</p><p>最后再强调一下：在 MySQL 中，定点数以字符串形式存储，在对精度要求比较高的时候（如货币、科学数据），使用 DECIMAL 的类型比较好，另外两个浮点数进行减法和比较运算时也容易出问题，所以在使用浮点数时需要注意，并尽量避免做浮点数比较。</p><h2 id="日期-时间类型"><a href="#日期-时间类型" class="headerlink" title="日期/时间类型"></a>日期/时间类型</h2><p>MySQL 中有多处表示日期的数据类型：<strong>YEAR</strong>、<strong>TIME</strong>、<strong>DATE</strong>、<strong>DTAETIME</strong>、<strong>TIMESTAMP</strong>。当只记录年信息的时候，可以只使用 YEAR 类型。</p><p>每个时间类型有一个有效值范围和一个”零”值。当指定不合法的MySQL不能表示的值时，系统将“零”值插入数据库中。</p><p>TIMESTAMP类型有专有的自动更新特性，将在后面描述。</p><table><thead><tr><th>类型名称</th><th>日期格式</th><th>日期范围</th><th>存储需求</th></tr></thead><tbody><tr><td>YEAR</td><td>YYYY</td><td>1901 ~ 2155</td><td>1 个字节</td></tr><tr><td>TIME</td><td>HH:MM:SS</td><td>-838:59:59 ~ 838:59:59</td><td>3 个字节</td></tr><tr><td>DATE</td><td>YYYY-MM-DD</td><td>1000-01-01 ~ 9999-12-3</td><td>3 个字节</td></tr><tr><td>DATETIME</td><td>YYYY-MM-DD HH:MM:SS</td><td>1000-01-01 00:00:00 ~ 9999-12-31 23:59:59</td><td>8 个字节</td></tr><tr><td>TIMESTAMP</td><td>YYYY-MM-DD HH:MM:SS</td><td>1970-01-01 00:00:00/2038<br>结束时间是第 <strong>2147483647</strong> 秒，北京时间 <strong>2038-1-19 11:14:07</strong>，格林尼治时间 2038年1月19日 凌晨 03:14:07</td><td>4 个字节</td></tr></tbody></table><h3 id="YEAR-类型"><a href="#YEAR-类型" class="headerlink" title="YEAR 类型"></a>YEAR 类型</h3><p>YEAR 类型是一个单字节类型，用于表示年，在存储时只需要 1 个字节。可以使用各种格式指定 YEAR，如下所示：</p><ul><li>以 4 位字符串或者 4 位数字格式表示的 YEAR，范围为 ‘1901’～’2155’。输入格式为 ‘YYYY’ 或者 YYYY，例如，输入 ‘2010’ 或 2010，插入数据库的值均为 2010。</li><li>以 2 位字符串格式表示的 YEAR，范围为 ‘00’ 到 ‘99’。’00’～’69’ 和 ‘70’～’99’ 范围的值分别被转换为 2000～2069 和 1970～1999 范围的 YEAR 值。’0’ 与 ‘00’ 的作用相同。插入超过取值范围的值将被转换为 2000。</li><li>以 2 位数字表示的 YEAR，范围为 1～99。1～99 和 70～99 范围的值分别被转换为 2001～2069 和 1970～1999 范围的 YEAR 值。注意，在这里 0 值将被转换为 0000，而不是 2000。</li></ul><blockquote><p>提示：两位整数范围与两位字符串范围稍有不同。例如，插入 3000 年，读者可能会使用数字格式的 0 表示 YEAR，实际上，插入数据库的值为 0000，而不是所希望的 3000。只有使用字符串格式的 ‘0’ 或 ‘00’，才可以被正确解释为 3000，非法 YEAR值将被转换为 0000。</p></blockquote><h3 id="TIME-类型"><a href="#TIME-类型" class="headerlink" title="TIME 类型"></a>TIME 类型</h3><p>TIME 类型用于只需要时间信息的值，在存储时需要 3 个字节。格式为 HH:MM:SS。HH 表示小时，MM 表示分钟，SS 表示秒。</p><p>TIME 类型的取值范围为 -838：59：59～838：59：59，小时部分如此大的原因是 TIME 类型不仅可以用于表示一天的时间（必须小于 24 小时），还可能是某个事件过去的时间或两个事件之间的时间间隔（可大于 24 小时，或者甚至为负）。</p><p>可以使用各种格式指定 TIME 值，如下所示。</p><ul><li>‘D HH：MM：SS’ 格式的字符串。还可以使用这些“非严格”的语法：’HH：MM：SS’、’HH：MM’、’D HH’ 或 ‘SS’。这里的 D 表示日，可以取 0～34 之间的值。在插入数据库时，D 被转换为小时保存，格式为 “D*24+HH”。</li><li>‘HHMMSS’ 格式、没有间隔符的字符串或者 HHMMSS 格式的数值，假定是有意义的时间。例如，’101112’ 被理解为’10：11：12’，但是 ‘106112’ 是不合法的（它有一个没有意义的分钟部分），在存储时将变为 00：00：00。</li></ul><blockquote><p>提示：为 TIME 列分配简写值时应注意：如果没有冒号，MySQL 解释值时，假定最右边的两位表示秒。（MySQL 解释 TIME 值为过去的时间而不是当前的时间）。例如，读者可能认为 ‘1112’ 和 1112 表示 11：12：00（即 11 点过 12 分钟），但MySQL 将它们解释为 00：11：12（即 11 分 12 秒）。同样 ‘12’ 和 12 被解释为00：00：12。相反，TIME 值中如果使用冒号则肯定被看作当天的时间，也就是说，’11：12’ 表示 11：12：00，而不是 00：11：12。</p></blockquote><h3 id="DATE-类型"><a href="#DATE-类型" class="headerlink" title="DATE 类型"></a>DATE 类型</h3><p>DATE 类型用于仅需要日期值时，没有时间部分，在存储时需要 3 个字节。日期格式为 ‘YYYY-MM-DD’，其中 YYYY 表示年，MM 表示月，DD 表示日。</p><p>在给 DATE 类型的字段赋值时，可以使用字符串类型或者数字类型的数据插入，只要符合 DATE 的日期格式即可。如下所示：</p><ul><li>以 ‘YYYY-MM-DD’ 或者 ‘YYYYMMDD’ 字符中格式表示的日期，取值范围为 ‘1000-01-01’～’9999-12-3’。例如，输入 ‘2015-12-31’ 或者 ‘20151231’，插入数据库的日期为2015-12-31。</li><li>以 ‘YY-MM-DD’ 或者 ‘YYMMDD’ 字符串格式表示日期，在这里YY表示两位的年值。MySQL 解释两位年值的规则：’00～69’ 范围的年值转换为 ‘2000<del>2069’，’70</del>99’ 范围的年值转换为 ‘1970～1999’。例如，输入 ‘15-12-31’，插入数据库的日期为 2015-12-31；输入 ‘991231’，插入数据库的日期为 1999-12-31。</li><li>以 YYMMDD 数字格式表示的日期，与前面相似，00~69 范围的年值转换为 2000～2069，80～99 范围的年值转换为 1980～1999。例如，输入 151231，插入数据库的日期为 2015-12-31，输入 991231，插入数据库的日期为 1999-12-31。</li><li>使用 CURRENT_DATE 或者 NOW()，插入当前系统日期。</li></ul><blockquote><p>提示：MySQL 允许“不严格”语法：任何标点符号都可以用作日期部分之间的间隔符。例如，’98-11-31’、’98.11.31’、’98/11/31’和‘98@11@31’ 是等价的，这些值也可以正确地插入数据库。</p></blockquote><h3 id="DATETIME-类型"><a href="#DATETIME-类型" class="headerlink" title="DATETIME 类型"></a>DATETIME 类型</h3><p>DATETIME 类型用于需要同时包含日期和时间信息的值，在存储时需要 8 个字节。日期格式为 ‘YYYY-MM-DD HH：MM：SS’，其中 YYYY 表示年，MM 表示月，DD 表示日，HH 表示小时，MM 表示分钟，SS 表示秒。</p><p>在给 DATETIME 类型的字段赋值时，可以使用字符串类型或者数字类型的数据插入，只要符合 DATETIME 的日期格式即可，如下所示。</p><ul><li>以 ‘YYYY-MM-DD HH：MM：SS’ 或者 ‘YYYYMMDDHHMMSS’ 字符串格式表示的日期，取值范围为 ‘1000-01-01 00：00：00’～’9999-12-3 23：59：59’。例如，输入 ‘2014-12-31 05：05：05’ 或者 ‘20141231050505’，插入数据库的 DATETIME 值都为 2014-12-31 05：05：05。</li><li>以 ‘YY-MM-DD HH：MM：SS’ 或者 ‘YYMMDDHHMMSS’ 字符串格式表示的日期，在这里 YY 表示两位的年值。与前面相同，’00～79’ 范围的年值转换为 ‘2000～2079’，’80～99’ 范围的年值转换为 ‘1980～1999’。例如，输入 ‘14-12-31 05：05：05’，插入数据库的 DATETIME 为 2014-12-31 05：05：05；输入 141231050505，插入数据库的 DATETIME 为 2014-12-31 05：05：05。</li><li>以 YYYYMMDDHHMMSS 或者 YYMMDDHHMMSS 数字格式表示的日期和时间。例如，输入 20141231050505，插入数据库的 DATETIME 为 2014-12-31 05：05：05；输入 140505050505，插入数据库的 DATETIME 为 2014-12-31 05：05：05。</li></ul><blockquote><p>提示：MySQL 允许“不严格”语法：任何标点符号都可用作日期部分或时间部分之间的间隔符。例如，’98-12-31 11：30：45’、’98.12.31 11+30+35’、’98/12/31 11<em>30</em>45’ 和 ‘98@12@31 11^30^45’ 是等价的，这些值都可以正确地插入数据库。</p></blockquote><h3 id="TIMESTAMP-类型"><a href="#TIMESTAMP-类型" class="headerlink" title="TIMESTAMP 类型"></a>TIMESTAMP 类型</h3><p>TIMESTAMP 的显示格式与 DATETIME 相同，显示宽度固定在 19 个字符，日期格式为 YYYY-MM-DD HH：MM：SS，在存储时需要 4 个字节。但是 TIMESTAMP 列的取值范围小于 DATETIME 的取值范围，为 ‘1970-01-01 00：00：01’UTC～’2038-01-19 03：14：07’UTC。在插入数据时，要保证在合法的取值范围内。</p><blockquote><p>提示：协调世界时（英：Coordinated Universal Time，法：Temps Universel Coordonné）又称为世界统一时间、世界标准时间、国际协调时间。英文（CUT）和法文（TUC）的缩写不同，作为妥协，简称 UTC。</p></blockquote><p>TIMESTAMP 与 DATETIME 除了存储字节和支持的范围不同外，还有一个最大的区别是：</p><ul><li>DATETIME 在存储日期数据时，按实际输入的格式存储，即输入什么就存储什么，与时区无关；</li><li>而 TIMESTAMP 值的存储是以 UTC（世界标准时间）格式保存的，存储时对当前时区进行转换，检索时再转换回当前时区。即查询时，根据当前时区的不同，显示的时间值是不同的。</li></ul><blockquote><p>提示：如果为一个 DATETIME 或 TIMESTAMP 对象分配一个 DATE 值，结果值的时间部分被设置为 ‘00：00：00’，因此 DATE 值未包含时间信息。如果为一个 DATE 对象分配一个 DATETIME 或 TIMESTAMP 值，结果值的时间部分被删除，因此DATE 值未包含时间信息。</p></blockquote><h2 id="字符类型"><a href="#字符类型" class="headerlink" title="字符类型"></a>字符类型</h2><p>MySQL 支持两类字符型数据：<strong>字符串类型和二进制类型</strong></p><p>包括CHAR、VARCHAR、BINARY、VARBINARY、BLOB、TEXT、ENUM和SET。该节描述了这些类型如何工作以及如何在查询中使用这些类型。</p><table><thead><tr><th align="left">类型</th><th align="left">大小/存储需求</th><th align="left">说明/用途</th></tr></thead><tbody><tr><td align="left">CHAR</td><td align="left">0-255字节</td><td align="left">定长字符串</td></tr><tr><td align="left">CHAR(M)</td><td align="left">M 字节，1&lt;=M&lt;=255</td><td align="left">固定长度非二进制字符串</td></tr><tr><td align="left">VARCHAR</td><td align="left">0-65535 字节</td><td align="left">变长字符串</td></tr><tr><td align="left">1VARCHAR(M)</td><td align="left">L+1字节，在此，L&lt; = M和 1&lt;=M&lt;=255</td><td align="left">变长非二进制字符串</td></tr><tr><td align="left">TINYBLOB</td><td align="left">0-255字节</td><td align="left">不超过 255 个字符的二进制字符串</td></tr><tr><td align="left">TINYTEXT</td><td align="left">0-255字节</td><td align="left">短文本字符串</td></tr><tr><td align="left">BLOB</td><td align="left">0-65 535字节</td><td align="left">二进制形式的长文本数据</td></tr><tr><td align="left">TEXT</td><td align="left">0-65 535字节</td><td align="left">长文本数据</td></tr><tr><td align="left">MEDIUMBLOB</td><td align="left">0-16 777 215字节</td><td align="left">二进制形式的中等长度文本数据</td></tr><tr><td align="left">MEDIUMTEXT</td><td align="left">0-16 777 215字节</td><td align="left">中等长度文本数据</td></tr><tr><td align="left">LONGBLOB</td><td align="left">0-4 294 967 295字节</td><td align="left">二进制形式的极大文本数据</td></tr><tr><td align="left">LONGTEXT</td><td align="left">0-4 294 967 295字节</td><td align="left">极大文本数据</td></tr><tr><td align="left">ENUM</td><td align="left">1或2个字节，取决于枚举值的数目 (最大值为65535)</td><td align="left">枚举类型，只能有一个枚举字符串值</td></tr><tr><td align="left">SET</td><td align="left">1、2、3、4或8个字节，取决于集合 成员的数量（最多64个成员）</td><td align="left">一个设置，字符串对象可以有零个或 多个SET成员</td></tr></tbody></table><p>CHAR 和 VARCHAR 类型类似，但它们保存和检索的方式不同。它们的最大长度和是否尾部空格被保留等方面也不同。在存储或检索过程中不进行大小写转换。</p><p>BINARY 和 VARBINARY 类似于 CHAR 和 VARCHAR，不同的是它们包含二进制字符串而不要非二进制字符串。也就是说，它们包含字节字符串而不是字符字符串。这说明它们没有字符集，并且排序和比较基于列值字节的数值值。</p><p>BLOB 是一个二进制大对象，可以容纳可变数量的数据。有 4 种 BLOB 类型：TINYBLOB、BLOB、MEDIUMBLOB 和 LONGBLOB。它们区别在于可容纳存储范围不同。</p><p>有 4 种 TEXT 类型：TINYTEXT、TEXT、MEDIUMTEXT 和 LONGTEXT。对应的这 4 种 BLOB 类型，可存储的最大长度不同，可根据实际情况选择。</p><h3 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h3><blockquote><p>又称“文本字符串类型”。</p></blockquote><p>字符串类型用来存储字符串数据，还可以存储图片和声音的二进制数据。字符串可以区分或者不区分大小写的串比较，还可以进行正则表达式的匹配查找。</p><p>MySQL 中的字符串类型有 <strong>CHAR</strong>、<strong>VARCHAR</strong>、<strong>TINYTEXT</strong>、<strong>TEXT</strong>、<strong>MEDIUMTEXT</strong>、<strong>LONGTEXT</strong>、<strong>ENUM</strong>、<strong>SET</strong> 等。</p><p>下表中列出了 MySQL 中的字符串数据类型，括号中的<code>M</code>表示可以为其指定长度。</p><table><thead><tr><th>类型名称</th><th>说明</th><th>存储需求</th></tr></thead><tbody><tr><td>CHAR(M)</td><td>固定长度非二进制字符串</td><td>M 字节，1&lt;=M&lt;=255</td></tr><tr><td>VARCHAR(M)</td><td>变长非二进制字符串</td><td>L+1字节，在此，L&lt; = M和 1&lt;=M&lt;=255</td></tr><tr><td>TINYTEXT</td><td>非常小的非二进制字符串</td><td>L+1字节，在此，L&lt;2^8</td></tr><tr><td>TEXT</td><td>小的非二进制字符串</td><td>L+2字节，在此，L&lt;2^16</td></tr><tr><td>MEDIUMTEXT</td><td>中等大小的非二进制字符串</td><td>L+3字节，在此，L&lt;2^24</td></tr><tr><td>LONGTEXT</td><td>大的非二进制字符串</td><td>L+4字节，在此，L&lt;2^32</td></tr><tr><td>ENUM</td><td>枚举类型，只能有一个枚举字符串值</td><td>1或2个字节，取决于枚举值的数目 (最大值为65535)</td></tr><tr><td>SET</td><td>一个设置，字符串对象可以有零个或 多个SET成员</td><td>1、2、3、4或8个字节，取决于集合 成员的数量（最多64个成员）</td></tr></tbody></table><p>VARCHAR 和 TEXT 类型是变长类型，其存储需求取决于列值的实际长度（在前面的表格中用 L 表示），而不是取决于类型的最大可能尺寸。</p><p>例如，一个 VARCHAR(10) 列能保存一个最大长度为 10 个字符的字符串，实际的存储需要字符串的长度 L 加上一个字节以记录字符串的长度。对于字符 “abcd”，L 是 4，而存储要求 5 个字节。</p><h4 id="CHAR-和-VARCHAR-类型"><a href="#CHAR-和-VARCHAR-类型" class="headerlink" title="CHAR 和 VARCHAR 类型"></a>CHAR 和 VARCHAR 类型</h4><p>CHAR(M) 为固定长度字符串，在定义时指定字符串列长。当保存时，在右侧填充空格以达到指定的长度。M 表示列的长度，范围是 0～255 个字符。</p><p>例如，CHAR(4) 定义了一个固定长度的字符串列，包含的字符个数最大为 4。当检索到 CHAR 值时，尾部的空格将被删除。</p><p>VARCHAR(M) 是长度可变的字符串，M 表示最大列的长度，M 的范围是 0～65535。VARCHAR 的最大实际长度由最长的行的大小和使用的字符集确定，而实际占用的空间为字符串的实际长度加 1。</p><p>例如，VARCHAR(50) 定义了一个最大长度为 50 的字符串，如果插入的字符串只有 10 个字符，则实际存储的字符串为 10 个字符和一个字符串结束字符。VARCHAR 在值保存和检索时尾部的空格仍保留。</p><p>【实例】下面将不同的字符串保存到 CHAR(4) 和 VARCHAR(4) 列，说明 CHAR 和 VARCHAR 之间的差别，如下表所示。</p><table><thead><tr><th>插入值</th><th>CHAR(4)</th><th>存储需求</th><th>VARCHAR(4)</th><th>存储需求</th></tr></thead><tbody><tr><td>‘ ‘</td><td>‘  ‘</td><td>4字节</td><td>‘’</td><td>1字节</td></tr><tr><td>‘ab’</td><td>‘ab ‘</td><td>4字节</td><td>‘ab’</td><td>3字节</td></tr><tr><td>‘abc’</td><td>‘abc ‘</td><td>4字节</td><td>‘abc’</td><td>4字节</td></tr><tr><td>‘abcd’</td><td>‘abcd’</td><td>4字节</td><td>‘abcd’</td><td>5字节</td></tr><tr><td>‘abcdef’</td><td>‘abcd’</td><td>4字节</td><td>‘abcd’</td><td>5字节</td></tr></tbody></table><p>对比结果可以看到，CHAR(4) 定义了固定长度为 4 的列，无论存入的数据长度为多少，所占用的空间均为 4 个字节。VARCHAR(4) 定义的列所占的字节数为实际长度加 1。</p><h4 id="TEXT-类型"><a href="#TEXT-类型" class="headerlink" title="TEXT 类型"></a>TEXT 类型</h4><p>TEXT 列保存非二进制字符串，如文章内容、评论等。当保存或查询 TEXT 列的值时，不删除尾部空格。</p><p>TEXT 类型分为 4 种：TINYTEXT、TEXT、MEDIUMTEXT 和 LONGTEXT。不同的 TEXT 类型的存储空间和数据长度不同。</p><ul><li>TINYTEXT 表示长度为 255（28-1）字符的 TEXT 列。</li><li>TEXT 表示长度为 65535（216-1）字符的 TEXT 列。</li><li>MEDIUMTEXT 表示长度为 16777215（224-1）字符的 TEXT 列。</li><li>LONGTEXT 表示长度为 4294967295 或 4GB（232-1）字符的 TEXT 列。</li></ul><h4 id="ENUM-类型"><a href="#ENUM-类型" class="headerlink" title="ENUM 类型"></a>ENUM 类型</h4><p>ENUM 是一个字符串对象，值为表创建时列规定中枚举的一列值。其语法格式如下：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;字段名&gt; ENUM( '值1', '值1', …, '值n' )</span><br></pre></td></tr></tbody></table></figure><p>字段名指将要定义的字段，值 n 指枚举列表中第 n 个值。</p><p>ENUM 类型的字段在取值时，能在指定的枚举列表中获取，而且一次只能取一个。如果创建的成员中有空格，尾部的空格将自动被删除。</p><p>ENUM 值在内部用整数表示，每个枚举值均有一个索引值；列表值所允许的成员值从 1 开始编号，MySQL 存储的就是这个索引编号，枚举最多可以有 65535 个元素。</p><p>例如，定义 ENUM 类型的列（’first’，’second’，’third’），该列可以取的值和每个值的索引如下表所示。</p><table><thead><tr><th>值</th><th>索引</th></tr></thead><tbody><tr><td>NULL</td><td>NULL</td></tr><tr><td>‘’</td><td>0</td></tr><tr><td>’first</td><td>1</td></tr><tr><td>second</td><td>2</td></tr><tr><td>third</td><td>3</td></tr></tbody></table><p>ENUM 值依照列索引顺序排列，并且空字符串排在非空字符串前，NULL 值排在其他所有枚举值前。</p><blockquote><p>提示：ENUM 列总有一个默认值。如果将 ENUM 列声明为 NULL，NULL 值则为该列的一个有效值，并且默认值为 NULL。如果 ENUM 列被声明为 NOT NULL，其默认值为允许的值列表的第 1 个元素。</p></blockquote><h4 id="SET-类型"><a href="#SET-类型" class="headerlink" title="SET 类型"></a>SET 类型</h4><p>SET 是一个字符串的对象，可以有零或多个值，SET 列最多可以有 64 个成员，值为表创建时规定的一列值。指定包括多个 SET 成员的 SET 列值时，各成员之间用逗号<code>,</code>隔开，语法格式如下：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SET( '值1', '值2', …, '值n' )</span><br></pre></td></tr></tbody></table></figure><p>与 ENUM 类型相同，SET 值在内部用整数表示，列表中每个值都有一个索引编号。当创建表时，SET 成员值的尾部空格将自动删除。</p><p>但与 ENUM 类型不同的是，ENUM 类型的字段只能从定义的列值中选择一个值插入，而 SET 类型的列可从定义的列值中选择多个字符的联合。</p><blockquote><p>提示：如果插入 SET 字段中的列值有重复，则 MySQL 自动删除重复的值；插入 SET 字段的值的顺序并不重要，MySQL 会在存入数据库时，按照定义的顺序显示；如果插入了不正确的值，默认情况下，MySQL 将忽视这些值，给出警告。</p></blockquote><h3 id="二进制类型"><a href="#二进制类型" class="headerlink" title="二进制类型"></a>二进制类型</h3><blockquote><p> 二进制字符串类型有时候也直接被称为“二进制类型”。</p></blockquote><p>MySQL 中的二进制字符串有 <strong>BIT</strong>、<strong>BINARY</strong>、<strong>VARBINARY</strong>、<strong>TINYBLOB</strong>、<strong>BLOB</strong>、<strong>MEDIUMBLOB</strong> 和 <strong>LONGBLOB</strong>。</p><p>下表中列出了 MySQL 中的二进制数据类型，括号中的<code>M</code>表示可以为其指定长度。</p><table><thead><tr><th>类型名称</th><th>说明</th><th>存储需求</th></tr></thead><tbody><tr><td>BIT(M)</td><td>位字段类型</td><td>大约 (M+7)/8 字节</td></tr><tr><td>BINARY(M)</td><td>固定长度二进制字符串</td><td>M 字节</td></tr><tr><td>VARBINARY (M)</td><td>可变长度二进制字符串</td><td>M+1 字节</td></tr><tr><td>TINYBLOB (M)</td><td>非常小的BLOB</td><td>L+1 字节，在此，L&lt;2^8</td></tr><tr><td>BLOB (M)</td><td>小 BLOB</td><td>L+2 字节，在此，L&lt;2^16</td></tr><tr><td>MEDIUMBLOB (M)</td><td>中等大小的BLOB</td><td>L+3 字节，在此，L&lt;2^24</td></tr><tr><td>LONGBLOB (M)</td><td>非常大的BLOB</td><td>L+4 字节，在此，L&lt;2^32</td></tr></tbody></table><h4 id="BIT-类型"><a href="#BIT-类型" class="headerlink" title="BIT 类型"></a>BIT 类型</h4><p>位字段类型。M 表示每个值的位数，范围为 1～64。如果 M 被省略，默认值为 1。如果为 BIT(M) 列分配的值的长度小于 M 位，在值的左边用 0 填充。例如，为 BIT(6) 列分配一个值 b’101’，其效果与分配 b’000101’ 相同。</p><p>BIT 数据类型用来保存位字段值，例如以二进制的形式保存数据 13，13 的二进制形式为 1101，在这里需要位数至少为 4 位的 BIT 类型，即可以定义列类型为 BIT(4)。大于二进制 1111 的数据是不能插入 BIT(4) 类型的字段中的。</p><blockquote><p>提示：默认情况下，MySQL 不可以插入超出该列允许范围的值，因而插入数据时要确保插入的值在指定的范围内。</p></blockquote><h4 id="BINARY-和-VARBINARY-类型"><a href="#BINARY-和-VARBINARY-类型" class="headerlink" title="BINARY 和 VARBINARY 类型"></a>BINARY 和 VARBINARY 类型</h4><p>BINARY 和 VARBINARY 类型类似于 CHAR 和 VARCHAR，不同的是它们包含二进制字节字符串。使用的语法格式如下：</p><p>列名称 BINARY(M) 或者 VARBINARY(M)</p><p>BINARY 类型的长度是固定的，指定长度后，不足最大长度的，将在它们右边填充 “\0” 补齐，以达到指定长度。例如，指定列数据类型为 BINARY(3)，当插入 a 时，存储的内容实际为 “\a0\0”，当插入 ab 时，实际存储的内容为“ab\0”，无论存储的内容是否达到指定的长度，存储空间均为指定的值 M。</p><p>VARBINARY 类型的长度是可变的，指定好长度之后，长度可以在 0 到最大值之间。例如，指定列数据类型为 VARBINARY(20)，如果插入的值长度只有 10，则实际存储空间为 10 加 1，实际占用的空间为字符串的实际长度加 1。</p><h4 id="BLOB-类型"><a href="#BLOB-类型" class="headerlink" title="BLOB 类型"></a>BLOB 类型</h4><p>BLOB 是一个二进制的对象，用来存储可变数量的数据。BLOB 类型分为 4 种：TINYBLOB、BLOB、MEDIUMBLOB 和 LONGBLOB，它们可容纳值的最大长度不同，如下表所示。</p><table><thead><tr><th>数据类型</th><th>存储范围</th></tr></thead><tbody><tr><td>TINYBLOB</td><td>最大长度为255 (28-1)字节</td></tr><tr><td>BLOB</td><td>最大长度为65535 (216-1)字节</td></tr><tr><td>MEDIUMBLOB</td><td>最大长度为16777215 (224-1)字节</td></tr><tr><td>LONGBLOB</td><td>最大长度为4294967295或4GB (231-1)字节</td></tr></tbody></table><p>BLOB 列存储的是二进制字符串（字节字符串），TEXT 列存储的是非进制字符串（字符字符串）。</p><p>BLOB 列是字符集，并且排序和比较基于列值字节的数值；TEXT 列有一个字符集，并且根据字符集对值进行排序和比较。</p><hr><p>以上笔记部分来自 <a href="http://c.biancheng.net" target="_blank" rel="noopener">C语言中文网</a> 、百度知道、<a href="https://www.csdn.net/" target="_blank" rel="noopener">CSDN</a>。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;MySQL的数据类型&quot;&gt;&lt;a href=&quot;#MySQL的数据类型&quot; class=&quot;headerlink&quot; title=&quot;MySQL的数据类型&quot;&gt;&lt;/a&gt;MySQL的数据类型&lt;/h1&gt;&lt;p&gt;数据库中的每个列都应该有适当的数据类型，用于限制或允许该列中存储的数据。例如，列中存储的为数字，则相应的数据类型应该为数值类型。&lt;/p&gt;
&lt;p&gt;如果使用错误的数据类型可能会严重影响应用程序的功能和性能，所以在设计表时，应该特别重视数据列所用的数据类型。更改包含数据的列不是一件小事，这样做可能会导致数据丢失。因此，在创建表时必须为每个列设置正确的数据类型和长度。&lt;/p&gt;
&lt;p&gt;MySQL中定义数据字段的类型对你数据库的优化是非常重要的。&lt;/p&gt;
&lt;p&gt;MySQL支持所有标准SQL数值数据类型。&lt;/p&gt;
&lt;p&gt;MySQL支持多种类型，大致可以分为三类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数值&lt;/li&gt;
&lt;li&gt;日期/时间&lt;/li&gt;
&lt;li&gt;字符(串)类型。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;数据类型分类&quot;&gt;&lt;a href=&quot;#数据类型分类&quot; class=&quot;headerlink&quot; title=&quot;数据类型分类&quot;&gt;&lt;/a&gt;数据类型分类&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;数值类型（整数类型和小数类型）&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;整数类型：包括 TINYINT、SMALLINT、MEDIUMINT、INT、BIGINT。&lt;/li&gt;
&lt;li&gt;小数类型：&lt;ul&gt;
&lt;li&gt;浮点数类型包括 FLOAT 和 DOUBLE。&lt;/li&gt;
&lt;li&gt;定点数类型为 DECIMAL。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;日期/时间类型&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;包括 YEAR、TIME、DATE、DATETIME 和 TIMESTAMP。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;字符类型（文本字符串和二进制字符串）&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;字符串类型：包括 CHAR、VARCHAR、BINARY、VARBINARY、BLOB、TEXT、ENUM 和 SET 等。&lt;/li&gt;
&lt;li&gt;二进制类型：包括 BIT、BINARY、VARBINARY、TINYBLOB、BLOB、MEDIUMBLOB 和 LONGBLOB。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="笔记" scheme="https://melodyjerry.github.io/blog/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="MySQL" scheme="https://melodyjerry.github.io/blog/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>[转]MySQL数据库引擎</title>
    <link href="https://melodyjerry.github.io/blog/2020/02/09/%E8%BD%AC-MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BC%95%E6%93%8E/"/>
    <id>https://melodyjerry.github.io/blog/2020/02/09/转-MySQL数据库引擎/</id>
    <published>2020-02-09T10:43:52.000Z</published>
    <updated>2020-02-11T10:56:14.918Z</updated>
    
    <content type="html"><![CDATA[<p>接下来介绍一下存储引擎的基本概念、MySQL支持的存储引擎、存储引擎的选择以及操作默认存储引擎。</p><a id="more"></a><h2 id="什么是存储引擎"><a href="#什么是存储引擎" class="headerlink" title="什么是存储引擎"></a>什么是存储引擎</h2><p>数据库存储引擎是数据库底层软件组件，数据库管理系统使用数据引擎进行创建、查询、更新和删除数据操作。不同的存储引擎提供不同的存储机制、索引技巧、锁定水平等功能，使用不同的存储引擎还可以获得特定的功能。</p><p>现在许多数据库管理系统都支持多种不同的存储引擎。MySQL 的核心就是存储引擎。</p><blockquote><p>提示：InnoDB 事务型数据库的首选引擎，支持事务安全表（ACID），支持行锁定和外键。MySQL 5.5.5 之后，InnoDB 作为默认存储引擎。</p></blockquote><p>MyISAM 是基于 ISAM 的存储引擎，并对其进行扩展，是在 Web、数据仓储和其他应用环境下最常使用的存储引擎之一。MyISAM 拥有较高的插入、查询速度，但不支持事务。</p><p>MEMORY 存储引擎将表中的数据存储到内存中，为查询和引用其他数据提供快速访问。</p><h2 id="MySQL-5-7-支持的存储引擎"><a href="#MySQL-5-7-支持的存储引擎" class="headerlink" title="MySQL 5.7 支持的存储引擎"></a>MySQL 5.7 支持的存储引擎</h2><p>MySQL 支持多种类型的数据库引擎，可分别根据各个引擎的功能和特性为不同的数据库处理任务提供各自不同的适应性和灵活性。在 MySQL 中，可以利用 SHOW ENGINES 语句来显示可用的数据库引擎和默认引擎。</p><p>MySQL 提供了多个不同的存储引擎，包括处理事务安全表的引擎和处理非事务安全表的引擎。在 MySQL 中，不需要在整个服务器中使用同一种存储引擎，针对具体的要求，可以对每一个表使用不同的存储引擎。</p><p>MySQL 5.7 支持的存储引擎有 InnoDB、MyISAM、Memory、Merge、Archive、Federated、CSV、BLACKHOLE 等。可以使用<code>SHOW ENGINES</code>语句查看系统所支持的引擎类型，结果如图所示。</p><p><fancybox><img src="http://c.biancheng.net/uploads/allimg/190222/4-1Z2221K006125.gif" alt="MySQL数据库中的存储引擎"></fancybox></p><p>Support 列的值表示某种引擎是否能使用，<code>YES</code>表示可以使用，<code>NO</code>表示不能使用，<code>DEFAULT</code>表示该引擎为当前默认的存储引擎。</p><h2 id="如何选择-MySQL-存储引擎"><a href="#如何选择-MySQL-存储引擎" class="headerlink" title="如何选择 MySQL 存储引擎"></a>如何选择 MySQL 存储引擎</h2><p>不同的存储引擎都有各自的特点，以适应不同的需求，如表所示。为了做出选择，首先要考虑每一个存储引擎提供了哪些不同的功能。</p><table><thead><tr><th>功能</th><th>MylSAM</th><th>MEMORY</th><th>InnoDB</th><th>Archive</th></tr></thead><tbody><tr><td>存储限制</td><td>256TB</td><td>RAM</td><td>64TB</td><td>None</td></tr><tr><td>支持事务</td><td>No</td><td>No</td><td>Yes</td><td>No</td></tr><tr><td>支持全文索引</td><td>Yes</td><td>No</td><td>No</td><td>No</td></tr><tr><td>支持树索引</td><td>Yes</td><td>Yes</td><td>Yes</td><td>No</td></tr><tr><td>支持哈希索引</td><td>No</td><td>Yes</td><td>No</td><td>No</td></tr><tr><td>支持数据缓存</td><td>No</td><td>N/A</td><td>Yes</td><td>No</td></tr><tr><td>支持外键</td><td>No</td><td>No</td><td>Yes</td><td>No</td></tr></tbody></table><p>可以根据以下的原则来选择 MySQL 存储引擎：</p><ul><li>如果要提供提交、回滚和恢复的事务安全（ACID 兼容）能力，并要求实现并发控制，InnoDB 是一个很好的选择。</li><li>如果数据表主要用来插入和查询记录，则 MyISAM 引擎提供较高的处理效率。</li><li>如果只是临时存放数据，数据量不大，并且不需要较高的数据安全性，可以选择将数据保存在内存的 MEMORY 引擎中，MySQL 中使用该引擎作为临时表，存放查询的中间结果。</li><li>如果只有 INSERT 和 SELECT 操作，可以选择Archive 引擎，Archive 存储引擎支持高并发的插入操作，但是本身并不是事务安全的。Archive 存储引擎非常适合存储归档数据，如记录日志信息可以使用 Archive 引擎。</li></ul><blockquote><p>提示：使用哪一种引擎要根据需要灵活选择，一个数据库中多个表可以使用不同的引擎以满足各种性能和实际需求。使用合适的存储引擎将会提高整个数据库的性能。</p></blockquote><h2 id="MySQL-默认存储引擎"><a href="#MySQL-默认存储引擎" class="headerlink" title="MySQL 默认存储引擎"></a>MySQL 默认存储引擎</h2><p>InnoDB 是系统的默认引擎，支持可靠的事务处理。</p><p>使用下面的语句可以修改数据库临时的默认存储引擎</p><p>SET default_storage_engine=&lt; 存储引擎名 &gt;</p><p>例如，将 MySQL 数据库的临时默认存储引擎修改为 MyISAM，输入的 SQL 语句和运行结果如图所示。</p><p><fancybox><img src="http://c.biancheng.net/uploads/allimg/190222/4-1Z2221K501L1.gif" alt="修改MySQL数据库中的默认存储引擎"></fancybox></p><p>此时，可以发现 MySQL 的默认存储引擎已经变成了 MyISAM。但是当再次重启客户端时，默认存储引擎仍然是 InnoDB。</p><hr><p>原文链接：<a href="http://c.biancheng.net/view/2418.html" target="_blank" rel="noopener">http://c.biancheng.net/view/2418.html</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;接下来介绍一下存储引擎的基本概念、MySQL支持的存储引擎、存储引擎的选择以及操作默认存储引擎。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="笔记" scheme="https://melodyjerry.github.io/blog/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="MySQL" scheme="https://melodyjerry.github.io/blog/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>[转]MySQL区别大小写字母的问题</title>
    <link href="https://melodyjerry.github.io/blog/2020/02/09/%E8%BD%AC-MySQL%E5%8C%BA%E5%88%AB%E5%A4%A7%E5%B0%8F%E5%86%99%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://melodyjerry.github.io/blog/2020/02/09/转-MySQL区别大小写的问题/</id>
    <published>2020-02-09T08:29:12.000Z</published>
    <updated>2020-02-11T10:56:14.921Z</updated>
    
    <content type="html"><![CDATA[<p>如果直接使用MYSQL客户端用SQL语句查询数据库中的数据，SQL语句中字段的大写或小写查出的数据是一样的，说明查询条件对字段的大小写是不敏感（默认）。</p><h1 id="怎样让MYSQL对大小字母写敏感？"><a href="#怎样让MYSQL对大小字母写敏感？" class="headerlink" title="怎样让MYSQL对大小字母写敏感？"></a>怎样让MYSQL对大小字母写敏感？</h1><h2 id="解决方案一"><a href="#解决方案一" class="headerlink" title="解决方案一"></a>解决方案一</h2><p>MYSQL区别大小写需要设置collate（校对） 。 </p><p><strong>collate规则：</strong></p><ul><li><p>*_bin: 表示的是 <code>binary casesensitive collation</code>，也就是说是区分大小写的</p></li><li><p>*_cs: 表示的是 <code>casesensitive collation</code>，区分大小写</p></li><li><p>*_ci: 表示的是 <code>caseinsensitive collation</code>，不区分大小写</p></li></ul><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><ol><li><p>可以将查询条件用binary()括起来。 比如： </p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from emp where binary username= 'jack';</span><br></pre></td></tr></tbody></table></figure></li><li><p>可以修改该字段的collation 为 binary。比如：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE TABLENAME MODIFY COLUMN COLUMNNAME VARCHAR(50) BINARY CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL;</span><br></pre></td></tr></tbody></table></figure><h2 id="解决方案二"><a href="#解决方案二" class="headerlink" title="解决方案二"></a>解决方案二</h2></li></ol><p>mysql查询默认是不区分大小写的 如:</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select * from emp where username=‘jack';</span><br><span class="line">select * from emp where username='JACK';</span><br></pre></td></tr></tbody></table></figure><p>得到的结果是一样的，如果我们需要进行区分的话可以按照如下方法来做：</p><h3 id="第一种方法"><a href="#第一种方法" class="headerlink" title="第一种方法"></a>第一种方法</h3><p>要让mysql查询区分大小写，可以：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select * from emp where binary username='jack'</span><br><span class="line">select * from emp where binary username='JACK'</span><br></pre></td></tr></tbody></table></figure><h3 id="第二种方法"><a href="#第二种方法" class="headerlink" title="第二种方法"></a>第二种方法</h3><p>在建表时时候加以标识</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">create table emp(</span><br><span class="line">   username varchar(20) binary</span><br><span class="line">)</span><br></pre></td></tr></tbody></table></figure><blockquote><p>原理：对于CHAR、VARCHAR和TEXT类型，BINARY属性可以为列分配该列字符集的校对规则。<strong>BINARY属性是指定列字符集的二元校对规则的简写。排序和比较基于数值字符值,因此也就自然区分了大小写。</strong></p></blockquote><hr><p>原文链接：<a href="https://blog.csdn.net/qq_15160079/article/details/100976519" target="_blank" rel="noopener">https://blog.csdn.net/qq_15160079/article/details/100976519</a></p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果直接使用MYSQL客户端用SQL语句查询数据库中的数据，SQL语句中字段的大写或小写查出的数据是一样的，说明查询条件对字段的大小写是不敏感（默认）。&lt;/p&gt;
&lt;h1 id=&quot;怎样让MYSQL对大小字母写敏感？&quot;&gt;&lt;a href=&quot;#怎样让MYSQL对大小字母写敏感？&quot; class=&quot;headerlink&quot; title=&quot;怎样让MYSQL对大小字母写敏感？&quot;&gt;&lt;/a&gt;怎样让MYSQL对大小字母写敏感？&lt;/h1&gt;&lt;h2 id=&quot;解决方案一&quot;&gt;&lt;a href=&quot;#解决方案一&quot; class=&quot;headerlink&quot; title=&quot;解决方案一&quot;&gt;&lt;/a&gt;解决方案一&lt;/h2&gt;&lt;p&gt;MYSQL区别大小写需要设置collate（校对） 。 &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;collate规则：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;*_bin: 表示的是 &lt;code&gt;binary casesensitive collation&lt;/code&gt;，也就是说是区分大小写的&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;*_cs: 表示的是 &lt;code&gt;casesensitive collation&lt;/code&gt;，区分大小写&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;*_ci: 表示的是 &lt;code&gt;caseinsensitive collation&lt;/code&gt;，不区分大小写&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;解决方法&quot;&gt;&lt;a href=&quot;#解决方法&quot; class=&quot;headerlink&quot; title=&quot;解决方法&quot;&gt;&lt;/a&gt;解决方法&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;可以将查询条件用binary()括起来。 比如： &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;select * from emp where binary username= &#39;jack&#39;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可以修改该字段的collation 为 binary。比如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ALTER TABLE TABLENAME MODIFY COLUMN COLUMNNAME VARCHAR(50) BINARY CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;解决方案二&quot;&gt;&lt;a href=&quot;#解决方案二&quot; class=&quot;headerlink&quot; title=&quot;解决方案二&quot;&gt;&lt;/a&gt;解决方案二&lt;/h2&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;mysql查询默认是不区分大小写的 如:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;select * from emp where username=‘jack&#39;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;select * from emp where username=&#39;JACK&#39;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;得到的结果是一样的，如果我们需要进行区分的话可以按照如下方法来做：&lt;/p&gt;
&lt;h3 id=&quot;第一种方法&quot;&gt;&lt;a href=&quot;#第一种方法&quot; class=&quot;headerlink&quot; title=&quot;第一种方法&quot;&gt;&lt;/a&gt;第一种方法&lt;/h3&gt;&lt;p&gt;要让mysql查询区分大小写，可以：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;select * from emp where binary username=&#39;jack&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;select * from emp where binary username=&#39;JACK&#39;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;第二种方法&quot;&gt;&lt;a href=&quot;#第二种方法&quot; class=&quot;headerlink&quot; title=&quot;第二种方法&quot;&gt;&lt;/a&gt;第二种方法&lt;/h3&gt;&lt;p&gt;在建表时时候加以标识&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;create table emp(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   username varchar(20) binary&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;原理：对于CHAR、VARCHAR和TEXT类型，BINARY属性可以为列分配该列字符集的校对规则。&lt;strong&gt;BINARY属性是指定列字符集的二元校对规则的简写。排序和比较基于数值字符值,因此也就自然区分了大小写。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;原文链接：&lt;a href=&quot;https://blog.csdn.net/qq_15160079/article/details/100976519&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.csdn.net/qq_15160079/article/details/100976519&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="笔记" scheme="https://melodyjerry.github.io/blog/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="MySQL" scheme="https://melodyjerry.github.io/blog/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Navicat Premium连接MySQL失败？</title>
    <link href="https://melodyjerry.github.io/blog/2020/02/09/Navicat-Premium%E8%BF%9E%E6%8E%A5MySQL%E5%A4%B1%E8%B4%A5%EF%BC%9F/"/>
    <id>https://melodyjerry.github.io/blog/2020/02/09/Navicat-Premium连接MySQL失败？/</id>
    <published>2020-02-09T07:42:25.000Z</published>
    <updated>2020-02-11T10:56:14.881Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>使用Navicat Premium连接MySQL失败，并弹窗提示👇</p><p><img src="https://s2.ax1x.com/2020/02/09/1fOM4A.png" alt=""></p><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>从错误信息可知caching_sha2_password不能加载。</p><p>以上报错是由于目前已有的客户端连接软件还不支持Mysql8新增加的加密方式caching_sha2_password，所以我们需要修改用户的加密方式，将其改为老的加密验证方式。</p><p>大安装Mysql数据库的主机上登录Mysql对应的用户，上面连接时用的用户为root，所以我们登录root用户。</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><ol><li>执行命令，查看当前用户的加密方式：</li></ol><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use mysql;</span><br><span class="line"></span><br><span class="line">select user,plugin from user where user='root';</span><br></pre></td></tr></tbody></table></figure><p>可以看到当前用户的加密方式为caching_sha2_password。</p><ol start="2"><li>登录MySQL后输入，执行命令：</li></ol><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'YourPassword';</span><br><span class="line"></span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></tbody></table></figure><p>将用户的加密方式改为mysql_native_password。</p><ol start="3"><li>再次尝试连接Mysql，连接成功。</li></ol><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h1&gt;&lt;p&gt;使用Navicat Premium连接MySQL失败，并弹窗提示👇&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2020/02/09/1fOM4A.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;分析&quot;&gt;&lt;a href=&quot;#分析&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h1&gt;&lt;p&gt;从错误信息可知caching_sha2_password不能加载。&lt;/p&gt;
&lt;p&gt;以上报错是由于目前已有的客户端连接软件还不支持Mysql8新增加的加密方式caching_sha2_password，所以我们需要修改用户的加密方式，将其改为老的加密验证方式。&lt;/p&gt;
&lt;p&gt;大安装Mysql数据库的主机上登录Mysql对应的用户，上面连接时用的用户为root，所以我们登录root用户。&lt;/p&gt;
&lt;h1 id=&quot;解决&quot;&gt;&lt;a href=&quot;#解决&quot; class=&quot;headerlink&quot; title=&quot;解决&quot;&gt;&lt;/a&gt;解决&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;执行命令，查看当前用户的加密方式：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;use mysql;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;select user,plugin from user where user=&#39;root&#39;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;可以看到当前用户的加密方式为caching_sha2_password。&lt;/p&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;登录MySQL后输入，执行命令：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED WITH mysql_native_password BY &#39;YourPassword&#39;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;FLUSH PRIVILEGES;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将用户的加密方式改为mysql_native_password。&lt;/p&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;再次尝试连接Mysql，连接成功。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
    
      <category term="笔记" scheme="https://melodyjerry.github.io/blog/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="MySQL" scheme="https://melodyjerry.github.io/blog/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>输入密码后登录不上MySQL？</title>
    <link href="https://melodyjerry.github.io/blog/2020/02/09/%E8%BE%93%E5%85%A5%E5%AF%86%E7%A0%81%E5%90%8E%E7%99%BB%E5%BD%95%E4%B8%8D%E4%B8%8AMySQL%EF%BC%9F/"/>
    <id>https://melodyjerry.github.io/blog/2020/02/09/输入密码后登录不上MySQL？/</id>
    <published>2020-02-09T07:08:37.000Z</published>
    <updated>2020-02-11T10:56:14.924Z</updated>
    
    <content type="html"><![CDATA[<p>昨晚安装好MySQL后，可以登录。但是今天输入密码后，总是没办法登录。</p><p>刚开始我是用DOS窗口的，我检查了命令，命令也没输错啊。</p><p><img src="https://s2.ax1x.com/2020/02/09/1fTjC6.png" alt=""></p><p>接着转去MySQL Command Line Client试试，一直没反应。</p><p><img src="https://s2.ax1x.com/2020/02/09/1f7rPx.png" alt=""></p><p>我突然想到“是不是MySQL服务没有启动？”</p><p>果然！看了一下，这个时候MySQL需要手动启动，于是我把MySQL服务设置成<strong>开机自动启动</strong>，以后就省去手动启动这个麻烦。</p><p><img src="https://s2.ax1x.com/2020/02/09/1f7XZj.png" alt=""></p><p>回到DOS，输入<code>mysql -h localhost -u root -p</code>试试，可以正常登录MySQL了hh  <strong>o(<em>￣▽￣</em>)o</strong></p><p><img src="https://s2.ax1x.com/2020/02/09/1fHVoR.png" alt=""></p><hr><p>除了上面这种到<strong>【服务】</strong>手动开启MySQL服务的方法外，也可以用<strong>PowerShell(管理员)</strong>来启动。</p><p>输入命令<code>net start mysql</code>，启动MySQL服务。启动成功会在左下角弹窗提示👇</p><p><img src="https://s2.ax1x.com/2020/02/09/1fHo79.png" alt=""></p><p>一定是要<strong>带有管理员权限的PowerShell</strong>，否者只会是这个样子👇</p><p><img src="https://s2.ax1x.com/2020/02/09/1fbPht.png" alt=""></p><blockquote><p>输入<code>net start mysql</code>，按回车键，就能启动 MySQL 服务，停止服务的命令为<code>net stop mysql</code>。</p></blockquote><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;昨晚安装好MySQL后，可以登录。但是今天输入密码后，总是没办法登录。&lt;/p&gt;
&lt;p&gt;刚开始我是用DOS窗口的，我检查了命令，命令也没输错啊。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2020/02/09/1fTjC6.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;接着转去MySQL Command Line Client试试，一直没反应。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2020/02/09/1f7rPx.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;我突然想到“是不是MySQL服务没有启动？”&lt;/p&gt;
&lt;p&gt;果然！看了一下，这个时候MySQL需要手动启动，于是我把MySQL服务设置成&lt;strong&gt;开机自动启动&lt;/strong&gt;，以后就省去手动启动这个麻烦。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2020/02/09/1f7XZj.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;回到DOS，输入&lt;code&gt;mysql -h localhost -u root -p&lt;/code&gt;试试，可以正常登录MySQL了hh  &lt;strong&gt;o(&lt;em&gt;￣▽￣&lt;/em&gt;)o&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2020/02/09/1fHVoR.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;除了上面这种到&lt;strong&gt;【服务】&lt;/strong&gt;手动开启MySQL服务的方法外，也可以用&lt;strong&gt;PowerShell(管理员)&lt;/strong&gt;来启动。&lt;/p&gt;
&lt;p&gt;输入命令&lt;code&gt;net start mysql&lt;/code&gt;，启动MySQL服务。启动成功会在左下角弹窗提示👇&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2020/02/09/1fHo79.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;一定是要&lt;strong&gt;带有管理员权限的PowerShell&lt;/strong&gt;，否者只会是这个样子👇&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2020/02/09/1fbPht.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;输入&lt;code&gt;net start mysql&lt;/code&gt;，按回车键，就能启动 MySQL 服务，停止服务的命令为&lt;code&gt;net stop mysql&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
    
      <category term="笔记" scheme="https://melodyjerry.github.io/blog/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="MySQL" scheme="https://melodyjerry.github.io/blog/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>[工具]文件加密软件</title>
    <link href="https://melodyjerry.github.io/blog/2020/02/09/%E5%B7%A5%E5%85%B7-%E6%96%87%E4%BB%B6%E5%8A%A0%E5%AF%86%E8%BD%AF%E4%BB%B6/"/>
    <id>https://melodyjerry.github.io/blog/2020/02/09/工具-文件加密软件/</id>
    <published>2020-02-09T05:40:26.000Z</published>
    <updated>2020-02-11T10:56:14.889Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Folder-locker"><a href="#Folder-locker" class="headerlink" title="Folder-locker"></a>Folder-locker</h1><p>这是一个小巧的文件上锁软件，<strong>没有压缩和加密过程</strong>，方便快捷。</p><h2 id="功能展示"><a href="#功能展示" class="headerlink" title="功能展示"></a>功能展示</h2><p><img src="https://albert-w.github.io/Folder-locker/locker.gif" alt="img"></p><p>在想加密的文件夹上，右键则可呼出加密面板，输入两次密码确认加密。</p><p>在已加密的文件夹上，右键，输入密码，则取消加密</p><h2 id="项目介绍"><a href="#项目介绍" class="headerlink" title="项目介绍"></a>项目介绍</h2><p>项目分了两个目录：</p><ul><li>DButility 用于通过轻量极数据库SQLite 保存密码。<ul><li>通过Md5算法对密码加密，通过SQL参数防止SQL注入。</li></ul></li><li>folderLocker 用于实现业务逻辑。</li></ul><h2 id="软件使用"><a href="#软件使用" class="headerlink" title="软件使用"></a>软件使用</h2><ul><li>下载软件安装包 <a href="https://github.com/Albert-W/Folder-locker/blob/master/FolderLocker.exe" target="_blank" rel="noopener">Folder Locker.exe</a></li><li>进行安装，建议安装在D盘。</li><li>可以右键使用，也可以打开软件主页面使用。</li></ul><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li>密码保存在本机数据库，没有上传任何服务器。</li><li>删除软件会同时删除数据库，因而删除密码。</li></ul><p>如果忘记密码：</p><p>如果密码遗失，文件被锁，可以通过命令行工具重命名：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd C:\Users\91991\Music</span><br><span class="line">ren "Test.{2559a1f2-21d7-11d4-bdaf-00c04f60b9f0}" "Test1"</span><br></pre></td></tr></tbody></table></figure><p>或者把文件复制出来。</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd C:\Users\91991\Music</span><br><span class="line">cd '.\Test.{2559a1f2-21d7-11d4-bdaf-00c04f60b9f0}\'</span><br><span class="line">ls</span><br><span class="line">mv .\* ..\Test1\</span><br></pre></td></tr></tbody></table></figure><p><strong>项目地址：</strong> <a href="https://github.com/Albert-W/Folder-locker" target="_blank" rel="noopener">https://github.com/Albert-W/Folder-locker</a> </p><p><strong>项目展示：</strong> <a href="https://albert-w.github.io/Folder-locker/" target="_blank" rel="noopener">https://albert-w.github.io/Folder-locker/</a></p><a id="more"></a><hr><h1 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h1><p>这是国人开发的一款开源加密小程序，它只有一个功能，就是给文件夹上密码。</p><p>下载后安装，需要注意的是，软件默认安装到D盘，你可以改成其他盘，但不建议安装到C盘，因为可能导致数据库丢失，影响解密；</p><p><img src="https://s2.ax1x.com/2020/02/09/1fyfyV.png" alt=""></p><p>加密过程也很简单，右键需要加密的文件夹 – Folder locker – 输入密码– lock 即可；</p><p><img src="https://mmbiz.qpic.cn/mmbiz_gif/Ecxs2iaUkqAVLoOZyqETaiaHdBHWDXNOQvkQo84auX1K4Km3lewun6PkxiaVYprsNfbYzHpauaCbcYOByeHtvnFGg/640?wx_fmt=gif&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1" alt="img"></p><p>加密后文件夹图标会变成锁，无法双击打开，需要解密的话，右键已加密文件夹 –  Folder locker – 输入密码– unlock 即可；</p><p><img src="https://mmbiz.qpic.cn/mmbiz_gif/Ecxs2iaUkqAVLoOZyqETaiaHdBHWDXNOQvzHsKGtF2QZko01ria7rticuSF0USbugHey0neP8juaLjF73zUfzPbPJA/640?wx_fmt=gif&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1" alt="img"></p><p>整个过程没有任何数据上传，你的密码会通过Md5算法加密，并保存在本机数据库，卸载软件会同时删除数据库，导致密码丢失。</p><p>这个小程序原理非常简单，就是利用 Windows 的注册表修改了文件夹属性，使其不能直接已文件夹的形式打开，就像「上帝模式」一样，小程序并没有对文件夹内的文件做任何修改，没有压缩和加密过程，所以速度非常快。</p><p>但也正因为其简单，知道原理的话不需要程序也能解密。</p><p>忘记密码的解密方法：</p><p><img src="https://mmbiz.qpic.cn/mmbiz_gif/Ecxs2iaUkqAVLoOZyqETaiaHdBHWDXNOQv2cOTd04ms28wARznDX7x9HnicoMqaicjIQFGK4E7SkjRhLn8LOe9kSYA/640?wx_fmt=gif&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1" alt="img"></p><p>以上就是使用这个小程序所有的方法，它的安全系数不高，不适用来加密非常重要的机密文件，但保护普通用户的小秘密应该是搓搓有余的。</p><p>目前这款软件好像在 Windows 2004 版本上失效了。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Folder-locker&quot;&gt;&lt;a href=&quot;#Folder-locker&quot; class=&quot;headerlink&quot; title=&quot;Folder-locker&quot;&gt;&lt;/a&gt;Folder-locker&lt;/h1&gt;&lt;p&gt;这是一个小巧的文件上锁软件，&lt;strong&gt;没有压缩和加密过程&lt;/strong&gt;，方便快捷。&lt;/p&gt;
&lt;h2 id=&quot;功能展示&quot;&gt;&lt;a href=&quot;#功能展示&quot; class=&quot;headerlink&quot; title=&quot;功能展示&quot;&gt;&lt;/a&gt;功能展示&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://albert-w.github.io/Folder-locker/locker.gif&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;p&gt;在想加密的文件夹上，右键则可呼出加密面板，输入两次密码确认加密。&lt;/p&gt;
&lt;p&gt;在已加密的文件夹上，右键，输入密码，则取消加密&lt;/p&gt;
&lt;h2 id=&quot;项目介绍&quot;&gt;&lt;a href=&quot;#项目介绍&quot; class=&quot;headerlink&quot; title=&quot;项目介绍&quot;&gt;&lt;/a&gt;项目介绍&lt;/h2&gt;&lt;p&gt;项目分了两个目录：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DButility 用于通过轻量极数据库SQLite 保存密码。&lt;ul&gt;
&lt;li&gt;通过Md5算法对密码加密，通过SQL参数防止SQL注入。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;folderLocker 用于实现业务逻辑。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;软件使用&quot;&gt;&lt;a href=&quot;#软件使用&quot; class=&quot;headerlink&quot; title=&quot;软件使用&quot;&gt;&lt;/a&gt;软件使用&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;下载软件安装包 &lt;a href=&quot;https://github.com/Albert-W/Folder-locker/blob/master/FolderLocker.exe&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Folder Locker.exe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;进行安装，建议安装在D盘。&lt;/li&gt;
&lt;li&gt;可以右键使用，也可以打开软件主页面使用。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;注意事项&quot;&gt;&lt;a href=&quot;#注意事项&quot; class=&quot;headerlink&quot; title=&quot;注意事项&quot;&gt;&lt;/a&gt;注意事项&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;密码保存在本机数据库，没有上传任何服务器。&lt;/li&gt;
&lt;li&gt;删除软件会同时删除数据库，因而删除密码。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果忘记密码：&lt;/p&gt;
&lt;p&gt;如果密码遗失，文件被锁，可以通过命令行工具重命名：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cd C:\Users\91991\Music&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ren &quot;Test.{2559a1f2-21d7-11d4-bdaf-00c04f60b9f0}&quot; &quot;Test1&quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;或者把文件复制出来。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cd C:\Users\91991\Music&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd &#39;.\Test.{2559a1f2-21d7-11d4-bdaf-00c04f60b9f0}\&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ls&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mv .\* ..\Test1\&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;项目地址：&lt;/strong&gt; &lt;a href=&quot;https://github.com/Albert-W/Folder-locker&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/Albert-W/Folder-locker&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;项目展示：&lt;/strong&gt; &lt;a href=&quot;https://albert-w.github.io/Folder-locker/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://albert-w.github.io/Folder-locker/&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="工具" scheme="https://melodyjerry.github.io/blog/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>登录MySQL</title>
    <link href="https://melodyjerry.github.io/blog/2020/02/08/%E7%99%BB%E5%BD%95MySQL/"/>
    <id>https://melodyjerry.github.io/blog/2020/02/08/登录MySQL/</id>
    <published>2020-02-08T14:54:46.000Z</published>
    <updated>2020-02-11T10:56:14.892Z</updated>
    
    <content type="html"><![CDATA[<p>安装好MySQL后，默认启动服务，这时候开始尝试登录MySQL数据库。</p><p>有两种登录方式：</p><ul><li>Power Shell 或 CMD（DOS窗口）</li><li>命令行客户端（MySQL Command Line Client）【安装软件时，一般会安装的】</li></ul><h2 id="Power-Shell"><a href="#Power-Shell" class="headerlink" title="Power Shell"></a>Power Shell</h2><ol><li>启动 Power Shell 。</li><li>输入命令<code>cd C:\Program Files\MySQL\MySQL Server 8.0\bin</code>（cd+空格+安装目录/bin），回车。</li><li>输入登录命令，回车。登录命令有4中，选其一即可：</li></ol><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#第一种 服务器主机地址+不接密码</span><br><span class="line">mysql -h localhost -u root -p</span><br><span class="line">#第二种 服务器主机地址+密码</span><br><span class="line">mysql -h localhost -u root -proot</span><br><span class="line">#第三种 省略服务器主机地址+不接密码，默认localhost</span><br><span class="line">mysql -u root -p</span><br><span class="line">#第四种 省略服务器主机地址+密码，默认localhost</span><br><span class="line">mysql -u root -proot</span><br></pre></td></tr></tbody></table></figure><blockquote><blockquote><p>提示：mysql 为登录命令，-h 后面的参数是服务器的主机地址，在这里客户端和服务器在同一台机器上，所以输入 localhost 或者 IP 地址；-u 后面跟登录数据库的用户名称，在这里为 root；-p 后面是用户登录密码。</p></blockquote><p>在 DOS 窗口下运行该命令后，系统会提示输入密码。密码输入正确以后，即可登录到 MySQL 数据库。</p><p>可以在 mysql 命令中直接加上密码，该命令为 mysql -h localhost -u root -proot。这里的 -p 后面的 root 就是密码。此处<strong>特别注意 -p 和密码之间没有空格</strong>。如果出现空格，系统将不会把后面的字符串当成密码来对待。</p></blockquote><ol start="4"><li>系统提示输入密码。（若选用第二/四种方式进行登录，则跳过本步骤）</li><li>成功登录到MySQL数据库。登录成功后进入 MySQL 初始界面，会出现“Welcome to the MySQL monitor”的欢迎语，如下图所示。</li></ol><p><fancybox><img src="https://s2.ax1x.com/2020/02/08/1Whw0P.png" alt=""></fancybox></p><blockquote><p>登录成功后进入 MySQL 初始界面，会出现“Welcome to the MySQL monitor”的欢迎语，然后下面还有一些说明性的语句，如图所示。</p><p>这些说明性语句介绍如下：</p><ul><li>Commands end with; or\g：说明 mysql 命令行下的命令是以分号（;）或“\g”来结束的，遇到这个结束符就开始执行命令。</li><li>Your MySQL connection id is 3：id 表示 MySQL 数据库的连接次数。</li><li>Server version: 5. 7.29-log MySQL Community Server（GPL）：Server version 后面说明数据库的版本，这个版本为 5.7.29。Community 表示该版本是社区版。</li><li>Type ‘help;’ or ‘\h’ for help：表示输入”help;“或者”\h“可以看到帮助信息。</li><li>Type ‘\c’ to clear the current input statement：表示遇到”\c“就清除前面的命令。</li></ul><blockquote><p>提示：当窗口中出现如上图所示的说明信息，命令提示符变为“<strong>mysql&gt;</strong>”时，表明已经成功登录 MySQL 服务器，可以开始对数据库进行操作了。 </p></blockquote></blockquote><ol start="4"><li>输入命令<code>exit</code>，即可退出MySQL。</li></ol><h2 id="MySQL-Command-Line-Client"><a href="#MySQL-Command-Line-Client" class="headerlink" title="MySQL Command Line Client"></a>MySQL Command Line Client</h2><p>打开 MySQL Command Line Client 进入提示输入密码的界面，如图所示。</p><p><img src="https://s2.ax1x.com/2020/02/08/1WhohF.png" alt=""></p><blockquote><p>输入正确的密码后，登录到 MySQL 软件。<strong>如果以这种方式登录 MySQL，需要保证 MySQL 服务处于启动状态。</strong></p></blockquote><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;安装好MySQL后，默认启动服务，这时候开始尝试登录MySQL数据库。&lt;/p&gt;
&lt;p&gt;有两种登录方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Power Shell 或 CMD（DOS窗口）&lt;/li&gt;
&lt;li&gt;命令行客户端（MySQL Command Line Client）【安装软件时，一般会安装的】&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Power-Shell&quot;&gt;&lt;a href=&quot;#Power-Shell&quot; class=&quot;headerlink&quot; title=&quot;Power Shell&quot;&gt;&lt;/a&gt;Power Shell&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;启动 Power Shell 。&lt;/li&gt;
&lt;li&gt;输入命令&lt;code&gt;cd C:\Program Files\MySQL\MySQL Server 8.0\bin&lt;/code&gt;（cd+空格+安装目录/bin），回车。&lt;/li&gt;
&lt;li&gt;输入登录命令，回车。登录命令有4中，选其一即可：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#第一种 服务器主机地址+不接密码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql -h localhost -u root -p&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#第二种 服务器主机地址+密码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql -h localhost -u root -proot&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#第三种 省略服务器主机地址+不接密码，默认localhost&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql -u root -p&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#第四种 省略服务器主机地址+密码，默认localhost&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql -u root -proot&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;提示：mysql 为登录命令，-h 后面的参数是服务器的主机地址，在这里客户端和服务器在同一台机器上，所以输入 localhost 或者 IP 地址；-u 后面跟登录数据库的用户名称，在这里为 root；-p 后面是用户登录密码。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在 DOS 窗口下运行该命令后，系统会提示输入密码。密码输入正确以后，即可登录到 MySQL 数据库。&lt;/p&gt;
&lt;p&gt;可以在 mysql 命令中直接加上密码，该命令为 mysql -h localhost -u root -proot。这里的 -p 后面的 root 就是密码。此处&lt;strong&gt;特别注意 -p 和密码之间没有空格&lt;/strong&gt;。如果出现空格，系统将不会把后面的字符串当成密码来对待。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;系统提示输入密码。（若选用第二/四种方式进行登录，则跳过本步骤）&lt;/li&gt;
&lt;li&gt;成功登录到MySQL数据库。登录成功后进入 MySQL 初始界面，会出现“Welcome to the MySQL monitor”的欢迎语，如下图所示。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;fancybox&gt;&lt;img src=&quot;https://s2.ax1x.com/2020/02/08/1Whw0P.png&quot; alt=&quot;&quot;&gt;&lt;/fancybox&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;登录成功后进入 MySQL 初始界面，会出现“Welcome to the MySQL monitor”的欢迎语，然后下面还有一些说明性的语句，如图所示。&lt;/p&gt;
&lt;p&gt;这些说明性语句介绍如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Commands end with; or\g：说明 mysql 命令行下的命令是以分号（;）或“\g”来结束的，遇到这个结束符就开始执行命令。&lt;/li&gt;
&lt;li&gt;Your MySQL connection id is 3：id 表示 MySQL 数据库的连接次数。&lt;/li&gt;
&lt;li&gt;Server version: 5. 7.29-log MySQL Community Server（GPL）：Server version 后面说明数据库的版本，这个版本为 5.7.29。Community 表示该版本是社区版。&lt;/li&gt;
&lt;li&gt;Type ‘help;’ or ‘\h’ for help：表示输入”help;“或者”\h“可以看到帮助信息。&lt;/li&gt;
&lt;li&gt;Type ‘\c’ to clear the current input statement：表示遇到”\c“就清除前面的命令。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;提示：当窗口中出现如上图所示的说明信息，命令提示符变为“&lt;strong&gt;mysql&amp;gt;&lt;/strong&gt;”时，表明已经成功登录 MySQL 服务器，可以开始对数据库进行操作了。 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;输入命令&lt;code&gt;exit&lt;/code&gt;，即可退出MySQL。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;MySQL-Command-Line-Client&quot;&gt;&lt;a href=&quot;#MySQL-Command-Line-Client&quot; class=&quot;headerlink&quot; title=&quot;MySQL Command Line Client&quot;&gt;&lt;/a&gt;MySQL Command Line Client&lt;/h2&gt;&lt;p&gt;打开 MySQL Command Line Client 进入提示输入密码的界面，如图所示。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2020/02/08/1WhohF.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;输入正确的密码后，登录到 MySQL 软件。&lt;strong&gt;如果以这种方式登录 MySQL，需要保证 MySQL 服务处于启动状态。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
    
      <category term="笔记" scheme="https://melodyjerry.github.io/blog/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="MySQL" scheme="https://melodyjerry.github.io/blog/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL基础教学</title>
    <link href="https://melodyjerry.github.io/blog/2020/02/08/MySQL%E5%9F%BA%E7%A1%80%E6%95%99%E5%AD%A6/"/>
    <id>https://melodyjerry.github.io/blog/2020/02/08/MySQL基础教学/</id>
    <published>2020-02-08T13:25:58.000Z</published>
    <updated>2020-02-11T10:56:14.874Z</updated>
    
    <content type="html"><![CDATA[<p>两个学习MySQL基础的网站：</p><ul><li><a href="https://www.runoob.com/mysql/mysql-tutorial.html" target="_blank" rel="noopener">C语言中文网</a></li><li><a href="http://c.biancheng.net/mysql/" target="_blank" rel="noopener">菜鸟教程</a></li></ul><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;两个学习MySQL基础的网站：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.runoob.com/mysql/mysql-tutorial.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;C语言中文网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://c.biancheng.net/mysql/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;菜鸟教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="笔记" scheme="https://melodyjerry.github.io/blog/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="MySQL" scheme="https://melodyjerry.github.io/blog/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>[转]MySQL安装</title>
    <link href="https://melodyjerry.github.io/blog/2020/02/08/%E8%BD%AC-MySQL%E5%AE%89%E8%A3%85/"/>
    <id>https://melodyjerry.github.io/blog/2020/02/08/转-MySQL安装/</id>
    <published>2020-02-08T12:58:45.000Z</published>
    <updated>2020-02-11T10:56:14.927Z</updated>
    
    <content type="html"><![CDATA[<p>转载一份非常详细的【MySQL】的安装教程。</p><a id="more"></a><ol><li>进入官网找到自己所需的安装包：<a href="https://dev.mysql.com/" target="_blank" rel="noopener">https://dev.mysql.com/</a>  ，路径：DOWNLOAD–&gt;MYSQL Community Edition(GRL)–&gt;MYSQL on Windows (Installer &amp; Tool) </li></ol><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722225513168-99169810.png" alt="img"></p><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722225525340-1635922988.png" alt="img"></p><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722225535090-1925937407.png" alt="img"></p><ol start="2"><li><p>找到所需的安装包:<img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722225609184-438065502.png" alt="img"></p></li><li><p>点击download。这里选择的是安装版（mysql -install-community）</p></li></ol><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722225738356-88388521.png" alt="img"></p><ol start="4"><li>选择不登陆下载。</li></ol><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722225950840-2044210671.png" alt="img"></p><ol start="5"><li>双击运行下载好的mysql-installer-community-5.7.19.0.msi，程序运行需要一些时间，请等待一下。</li></ol><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722230026215-1797155710.png" alt="img"></p><ol start="6"><li>运行成功之后，进入欢迎的界面.选择我同意协议，不然无法进行下一步。</li></ol><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722230046043-978659071.png" alt="img"></p><ol start="7"><li>进入类型选择页面，本人需要mysql云服务就选择了developer default（7.1是默认安装的步骤），如果只想安装mysql server的就选择custom模式（7.2步骤是选择自己需要的服务器类型，所选择的用于做一些数据分析）</li></ol><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">developer default（开发者默认）：安装mysql开发所需的所有产品</span><br><span class="line">server only（服务器）：只安装mysql服务器产品</span><br><span class="line">client only（客户端）：只安装没有服务器的mysql客户端产品</span><br><span class="line">full（完全）：安装所有包含的mysql产品和功能</span><br><span class="line">custom（手动）：手动选择系统上应安装的产品</span><br></pre></td></tr></tbody></table></figure><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722230201246-220989429.png" alt="img"></p><ul><li>7.1 开发者默认模式检测以下程序会安装不成功，点击下一步进入下一个安装流程—&gt;跳到第八步。</li></ul><p>check requirements：以下产品的请求失败，安装程序将自动尝试解决其中一些问题。标记为手动的要求无法自动解决。单击这些项目以尝试手动恢复。</p><p> <img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722230232793-1759462371.png" alt="img"></p><p>检测到不可安装的程序说明：</p><p>Visual Studio：是一款代码编辑工具（可编写C#、Visual Basic、C++、TypeScript、F# ），如果你安装的话就安装要求去安装Visual Studio version：2012.2013.2015.2017其中一个版本</p><p>Connector/pyton 3.4：电脑有python3.6了就没选择3.4版本的。如果你没安装有python可按要求去安装一些内容。</p><ul><li><p>7.2 选择mysql server（服务） 5.7.19 x64</p><p> 选择mysql workbench(mysql 的工作薄) 6.3.9 x64</p><p> 选择mysql notiyier(通知) 1.1.7 x86(因为这里只有一个选择所以选择了86)点击下一步进入下一个安装流程—&gt;跳到第九步。</p></li></ul><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722230314340-1501335191.png" alt="img"></p><ol start="8"><li>当我们点击下一步的时候安装程序出现了提示：（一个或者移动产品要求没有得到满足，那些符合要求的产品将不会安装/升级。你想要继续吗），这里我选择的是：YES</li></ol><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722230439528-92431868.png" alt="img"></p><ol start="9"><li>在安装所选界面能看到我们接下来所需要安装的程序，点击execute</li></ol><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722230506262-176699446.png" alt="img"></p><ol start="10"><li>安装程序进度界面，安装需要一些时间。点击dide tails能看到安装日志</li></ol><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722230524700-2060141633.png" alt="img"></p><ol start="11"><li>程序安装完成之后，点击next</li></ol><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722230808200-494027333.png" alt="img"></p><ol start="12"><li>在product configutration（产品配置）页面能看到需要配置的程序，点击next（页面英语介绍：现在我们将逐一介绍以下产品的配置向导。您可以随时取消，如果您希望离开此向导，而不必配置所有产品）</li></ol><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722230838934-1132653366.png" alt="img"></p><ol start="13"><li>先配置mysql server的类型以及网络：type and networking（类型和网络），这里有两种mysql server类型，选择第一种类型点击next。</li></ol><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">有两种类型简单介绍</span><br><span class="line">1.standalone mysql server/classic mysql replication：独立的mysql服务器/经典的mysql复制</span><br><span class="line">choose this option if you want to run the mysql server either standalone with the opportunity to later configure classic mysql replication：选择这个选项，如果你想运行mysql服务器是独立的，有机会以后配置经典的mysql复制</span><br><span class="line"></span><br><span class="line">2. innodb cluster sandbox thst setup(for testing only)：</span><br><span class="line">innodb集群沙箱thst设置（仅用于测试）</span><br></pre></td></tr></tbody></table></figure><p> <img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722230918575-127114164.png" alt="img"></p><ol start="14"><li>设置服务器配置类型以及连接端口：继续next</li></ol><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Config Type:选择Development Machine，用于小型以及学习所用足够了。</span><br><span class="line">Port number：输入3306，也可以输入其他最好是3306-3309之间。</span><br></pre></td></tr></tbody></table></figure><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722231058356-1269244144.png" alt="img"></p><ol start="15"><li>配置root的密码（该密码要记住），系统提示这密码虚弱</li></ol><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722231209903-956653442.png" alt="img"></p><ol start="16"><li><em>添加其他管理员，点击add user 输入账号密码点击ok（如果添加的管理员只允许在本地登录就将host改成</em>local），回到界面之后点击next</li></ol><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722231228387-1590560639.png" alt="img"></p><ol start="17"><li>配置mysql在windows系统中的名字，是否选择开机启动mysql服务，其它的没进行修改，点击“Next”. </li></ol><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722231608825-2099636815.png" alt="img"></p><ol start="18"><li>配置插件和扩展页面没进行修改直接下一步：</li></ol><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722231638887-180558399.png" alt="img"></p><ol start="19"><li>Mysql server :apply configuration（应用配置页面），选择execute进行安装配置</li></ol><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722231654278-649027984.png" alt="img"></p><ol start="20"><li>mysql server应用配置的log，选择finish</li></ol><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722231714809-1553936235.png" alt="img"></p><ol start="21"><li>安装程序又回到了product configutration（产品配置）页面，此时我们看到mysql server安装成功的显示，继续下一步：</li></ol><p><em><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722231738825-1692782858.png" alt="img"></em></p><ol start="22"><li>配置mysql router：勾选configure mysql route for innoDB cluster之后输入密码。（如果不想输入密码可直接点击点一下）点击下一步</li></ol><p><em><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722231755762-1299837152.png" alt="img"></em></p><ol start="23"><li>Mysql router :apply configuration（应用配置页面）点击execute,</li></ol><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722231811528-357673493.png" alt="img"></p><ol start="24"><li>安装完成之后点击选择finish</li></ol><p><em><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722231826746-634086390.png" alt="img"></em></p><ol start="25"><li>检测root密码</li></ol><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p> <img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722231844528-1242732523.png" alt="img"></p><ol start="26"><li>安装一些server，老规矩点击execute，完成之后点击finish</li></ol><p><em><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722231902950-256599456.png" alt="img"></em></p><ol start="27"><li>程序回到产品配置页面。继续下一步：</li></ol><ol start="28"><li>安装程序完成界面。</li></ol><p><em><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722231933637-179722774.png" alt="img"></em></p><ol start="29"><li>双击运行之前下载的安装包，能看到我们所安装的产品。</li></ol><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722232012418-1876643408.png" alt="img"></p><ol start="30"><li>配置mysql环境变量</li></ol><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">上面安装的是时候我们看到mysql默认安装路径是：C:\Program Files\MySQL\MySQL Server 5.7</span><br><span class="line">我的电脑右键—&gt;属性à高级系统设置à环境变量à新建MYSQL_HOME,将安装目录输入：</span><br></pre></td></tr></tbody></table></figure><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722232031684-1843508.png" alt="img"></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">找到path编辑：输入%MYSQL_HOME%\bin</span><br></pre></td></tr></tbody></table></figure><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722232044090-1304683536.png" alt="img"></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">打开cmd输入mysql –u root –p</span><br><span class="line">输入root的密码</span><br></pre></td></tr></tbody></table></figure><p><img src="https://images2015.cnblogs.com/blog/1202941/201707/1202941-20170722232055731-2127042770.png" alt="img"></p><hr><p><em>原文链接：<a href="https://www.cnblogs.com/xiaodingdong/p/7223245.html" target="_blank" rel="noopener">https://www.cnblogs.com/xiaodingdong/p/7223245.html</a></em></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;转载一份非常详细的【MySQL】的安装教程。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="MySQL" scheme="https://melodyjerry.github.io/blog/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>元宵团圆饭</title>
    <link href="https://melodyjerry.github.io/blog/2020/02/08/%E5%85%83%E5%AE%B5%E5%9B%A2%E5%9C%86%E9%A5%AD/"/>
    <id>https://melodyjerry.github.io/blog/2020/02/08/元宵团圆饭/</id>
    <published>2020-02-08T09:13:43.000Z</published>
    <updated>2020-02-08T09:37:50.898Z</updated>
    
    <content type="html"><![CDATA[<p>🌸于我们，这是妈走后的第一个除夕、春节。</p><p>💓“老妈，我们都在等你回来。就差你了，快和我们一起来吃团圆饭啦！”</p><fancybox></fancybox><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;🌸于我们，这是妈走后的第一个除夕、春节。&lt;/p&gt;
&lt;p&gt;💓“老妈，我们都在等你回来。就差你了，快和我们一起来吃团圆饭啦！”&lt;/p&gt;
&lt;fancybox&gt;

&lt;/fancybox&gt;
    
    </summary>
    
    
    
      <category term="随笔" scheme="https://melodyjerry.github.io/blog/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>第一个元宵</title>
    <link href="https://melodyjerry.github.io/blog/2020/02/08/%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%85%83%E5%AE%B5/"/>
    <id>https://melodyjerry.github.io/blog/2020/02/08/第一个元宵/</id>
    <published>2020-02-08T09:13:43.000Z</published>
    <updated>2020-02-08T10:52:37.428Z</updated>
    
    <content type="html"><![CDATA[<p>🌸于我们，这是妈走后的第一个元宵。</p><p>🎈这次没有汤圆……</p><p>💓“老妈，我们都在等你回来。就差你了，快和我们一起来吃团圆饭啦！”</p><p>👍附上老爸的新作(暂时想不出名字来hh，反正好吃hh)</p><fancybox><img src="https://s2.ax1x.com/2020/02/08/1WiCfe.png" style="zoom:67%;"><img src="https://s2.ax1x.com/2020/02/08/1WiFld.png" alt="老爸的新作" style="zoom:67%;"></fancybox><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;🌸于我们，这是妈走后的第一个元宵。&lt;/p&gt;
&lt;p&gt;🎈这次没有汤圆……&lt;/p&gt;
&lt;p&gt;💓“老妈，我们都在等你回来。就差你了，快和我们一起来吃团圆饭啦！”&lt;/p&gt;
&lt;p&gt;👍附上老爸的新作(暂时想不出名字来hh，反正好吃hh)&lt;/p&gt;
&lt;fancybox&gt;

&lt;img src=&quot;https://s2.ax1x.com/2020/02/08/1WiCfe.png&quot; style=&quot;zoom:67%;&quot;&gt;



&lt;img src=&quot;https://s2.ax1x.com/2020/02/08/1WiFld.png&quot; alt=&quot;老爸的新作&quot; style=&quot;zoom:67%;&quot;&gt;





&lt;/fancybox&gt;
    
    </summary>
    
    
    
      <category term="随笔" scheme="https://melodyjerry.github.io/blog/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>[转]jsdelivr的使用</title>
    <link href="https://melodyjerry.github.io/blog/2020/02/08/%E8%BD%AC-jsdelivr%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://melodyjerry.github.io/blog/2020/02/08/转-jsdelivr的使用/</id>
    <published>2020-02-08T06:22:39.000Z</published>
    <updated>2020-02-11T10:56:14.933Z</updated>
    
    <content type="html"><![CDATA[<p>本文链接：<a href="https://blog.csdn.net/qq_36910987/article/details/89562291" target="_blank" rel="noopener">https://blog.csdn.net/qq_36910987/article/details/89562291</a></p><a id="more"></a><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">jsdelivr https:<span class="comment">//www.jsdelivr.com/</span></span><br><span class="line">下面就以举例子的方式说明</span><br><span class="line"></span><br><span class="line">我是用 jsdelivr 来访问 github的资源，做博客来着</span><br><span class="line">我的github  https:<span class="comment">//github.com/yuDuChen/yuduchen</span></span><br><span class="line">下面直接说怎么用jsdelivr，就不提如何创建github了</span><br><span class="line"></span><br><span class="line">首先需要创建 releases</span><br></pre></td></tr></tbody></table></figure><p><img src="https://img-blog.csdnimg.cn/20190426170728348.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2OTEwOTg3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190426170744905.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2OTEwOTg3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190426170753634.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2OTEwOTg3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">创建完,随便进入到一个文件,注意地址名</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></tbody></table></figure><p><img src="https://img-blog.csdnimg.cn/20190426171039798.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2OTEwOTg3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="comment">//github.com/yuDuChen/yuduchen/blob/v1.5.6/layui/layui.js </span></span><br><span class="line">这个地址用jsdelivr来访问</span><br><span class="line">https:<span class="comment">//cdn.jsdelivr.net/gh/yuDuChen/yuduchen@v1.5.6/layui/layui.js </span></span><br><span class="line"></span><br><span class="line">对比一下就发现怎么用了吧</span><br><span class="line"></span><br><span class="line">注* 不使用jsdelivr直接引用github的文件  content-type 是 text/plain  页面无法解析</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文链接：&lt;a href=&quot;https://blog.csdn.net/qq_36910987/article/details/89562291&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.csdn.net/qq_36910987/article/details/89562291&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="博客" scheme="https://melodyjerry.github.io/blog/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="jQuery" scheme="https://melodyjerry.github.io/blog/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯-基础练习-01字串</title>
    <link href="https://melodyjerry.github.io/blog/2020/02/07/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0-01%E5%AD%97%E4%B8%B2/"/>
    <id>https://melodyjerry.github.io/blog/2020/02/07/蓝桥杯-基础练习-01字串/</id>
    <published>2020-02-07T13:24:17.000Z</published>
    <updated>2020-02-08T10:53:52.613Z</updated>
    
    <content type="html"><![CDATA[<br><p>在刷蓝桥杯试题时候，有一道很意思又有丶烧脑的题目👇</p><hr><h1 id="资源限制"><a href="#资源限制" class="headerlink" title="资源限制"></a>资源限制</h1><p>时间限制：1.0s  内存限制：256.0MB</p><h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>对于长度为5位的一个01串，每一位都可能是0或1，一共有32种可能。它们的前几个是：</p><p>00000</p><p>00001</p><p>00010</p><p>00011</p><p>00100</p><p>请按从小到大的顺序输出这32种01串。</p><h1 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h1><p>本试题没有输入。</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出32行，按从小到大的顺序每行一个长度为5的01串。</p><h1 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h1><p>00000<br>00001<br>00010<br>00011<br>&lt;以下部分省略&gt;</p><a id="more"></a><h1 id="提交代码（Java）"><a href="#提交代码（Java）" class="headerlink" title="提交代码（Java）"></a>提交代码（Java）</h1><h2 id="暴力输出"><a href="#暴力输出" class="headerlink" title="暴力输出"></a>暴力输出</h2><p>刚开始想不出什么好办法，就<strong>直接把32个都写出来</strong>。抱着玩的心态，试试<strong>暴力输出</strong>看看系统给不给过，但是没想到，还真给我<strong>过了</strong>hhh</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">System.out.println(<span class="string">"00000"</span>);</span><br><span class="line">System.out.println(<span class="string">"00001"</span>);</span><br><span class="line">System.out.println(<span class="string">"00010"</span>);</span><br><span class="line">System.out.println(<span class="string">"00011"</span>);</span><br><span class="line">System.out.println(<span class="string">"00100"</span>);</span><br><span class="line">System.out.println(<span class="string">"00101"</span>);</span><br><span class="line">System.out.println(<span class="string">"00110"</span>);</span><br><span class="line">System.out.println(<span class="string">"00111"</span>);</span><br><span class="line">System.out.println(<span class="string">"01000"</span>);</span><br><span class="line">System.out.println(<span class="string">"01001"</span>);</span><br><span class="line">System.out.println(<span class="string">"01010"</span>);</span><br><span class="line">System.out.println(<span class="string">"01011"</span>);</span><br><span class="line">System.out.println(<span class="string">"01100"</span>);</span><br><span class="line">System.out.println(<span class="string">"01101"</span>);</span><br><span class="line">System.out.println(<span class="string">"01110"</span>);</span><br><span class="line">System.out.println(<span class="string">"01111"</span>);</span><br><span class="line">System.out.println(<span class="string">"10000"</span>);</span><br><span class="line">System.out.println(<span class="string">"10001"</span>);</span><br><span class="line">System.out.println(<span class="string">"10010"</span>);</span><br><span class="line">System.out.println(<span class="string">"10011"</span>);</span><br><span class="line">System.out.println(<span class="string">"10100"</span>);</span><br><span class="line">System.out.println(<span class="string">"10101"</span>);</span><br><span class="line">System.out.println(<span class="string">"10110"</span>);</span><br><span class="line">System.out.println(<span class="string">"10111"</span>);</span><br><span class="line">System.out.println(<span class="string">"11000"</span>);</span><br><span class="line">System.out.println(<span class="string">"11001"</span>);</span><br><span class="line">System.out.println(<span class="string">"11010"</span>);</span><br><span class="line">System.out.println(<span class="string">"11011"</span>);</span><br><span class="line">System.out.println(<span class="string">"11100"</span>);</span><br><span class="line">System.out.println(<span class="string">"11101"</span>);</span><br><span class="line">System.out.println(<span class="string">"11110"</span>);</span><br><span class="line">System.out.println(<span class="string">"11111"</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s2.ax1x.com/2020/02/07/12u7RK.png" alt=""></p><h2 id="五层循环"><a href="#五层循环" class="headerlink" title="五层循环"></a>五层循环</h2><p>这是我想到的第二个方法，就类似说的<strong>“逢二进一”</strong>吧</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line"><span class="keyword">int</span> a,b,c,d,e;</span><br><span class="line"><span class="keyword">for</span>(a=<span class="number">0</span>;a&lt;<span class="number">2</span>;++a)</span><br><span class="line">  <span class="keyword">for</span>(b=<span class="number">0</span>;b&lt;<span class="number">2</span>;++b)</span><br><span class="line"><span class="keyword">for</span>(c=<span class="number">0</span>;c&lt;<span class="number">2</span>;++c)</span><br><span class="line">  <span class="keyword">for</span>(d=<span class="number">0</span>;d&lt;<span class="number">2</span>;++d)</span><br><span class="line"><span class="keyword">for</span>(e=<span class="number">0</span>;e&lt;<span class="number">2</span>;++e)</span><br><span class="line">                    System.out.printf(<span class="string">"%d%d%d%d%d\n"</span>,a,b,c,d,e);</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s2.ax1x.com/2020/02/07/12MN7j.png" alt=""></p><hr><p>以下两种方法均来自网络。</p><hr><h2 id="十进制转换二进制"><a href="#十进制转换二进制" class="headerlink" title="十进制转换二进制"></a>十进制转换二进制</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">32</span>;i++){</span><br><span class="line"><span class="keyword">int</span> a,b,c,d,e;</span><br><span class="line">a = i%<span class="number">32</span>/<span class="number">16</span>;</span><br><span class="line">b = i%<span class="number">16</span>/<span class="number">8</span>;</span><br><span class="line">c = i%<span class="number">8</span>/<span class="number">4</span>;</span><br><span class="line">d = i%<span class="number">4</span>/<span class="number">2</span>;</span><br><span class="line">e = i%<span class="number">2</span>;</span><br><span class="line">System.out.printf(<span class="string">"%d%d%d%d%d\n"</span>,a,b,c,d,e);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="以下标求1"><a href="#以下标求1" class="headerlink" title="以下标求1"></a>以下标求1</h2><p>一共是32个串，给每个串设置0-31的下标。<strong>根据下标，寻找对应串中1出现的位置。</strong>👇</p><blockquote><p>比如，下标3表示的串是“00011”，利用while循环可以找到出现1的下标是1、2</p></blockquote><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">31</span>;i++){</span><br><span class="line"><span class="keyword">int</span> a[]= <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">5</span>];<span class="comment">// 默认初始化值为0</span></span><br><span class="line"><span class="comment">//或 int a[]= {0,0,0,0,0};</span></span><br><span class="line"><span class="keyword">int</span> temp=i;</span><br><span class="line"><span class="keyword">int</span> index=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(temp!=<span class="number">0</span>)</span><br><span class="line">{</span><br><span class="line">a[index]=temp%<span class="number">2</span>;</span><br><span class="line">index++;</span><br><span class="line">temp/=<span class="number">2</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> idx=<span class="number">4</span>;idx&gt;=<span class="number">0</span>;idx--)</span><br><span class="line">System.out.print(a[idx]);</span><br><span class="line">System.out.println();</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;br&gt;

&lt;p&gt;在刷蓝桥杯试题时候，有一道很意思又有丶烧脑的题目👇&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;资源限制&quot;&gt;&lt;a href=&quot;#资源限制&quot; class=&quot;headerlink&quot; title=&quot;资源限制&quot;&gt;&lt;/a&gt;资源限制&lt;/h1&gt;&lt;p&gt;时间限制：1.0s  内存限制：256.0MB&lt;/p&gt;
&lt;h1 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h1&gt;&lt;p&gt;对于长度为5位的一个01串，每一位都可能是0或1，一共有32种可能。它们的前几个是：&lt;/p&gt;
&lt;p&gt;00000&lt;/p&gt;
&lt;p&gt;00001&lt;/p&gt;
&lt;p&gt;00010&lt;/p&gt;
&lt;p&gt;00011&lt;/p&gt;
&lt;p&gt;00100&lt;/p&gt;
&lt;p&gt;请按从小到大的顺序输出这32种01串。&lt;/p&gt;
&lt;h1 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h1&gt;&lt;p&gt;本试题没有输入。&lt;/p&gt;
&lt;h2 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h2&gt;&lt;p&gt;输出32行，按从小到大的顺序每行一个长度为5的01串。&lt;/p&gt;
&lt;h1 id=&quot;样例输出&quot;&gt;&lt;a href=&quot;#样例输出&quot; class=&quot;headerlink&quot; title=&quot;样例输出&quot;&gt;&lt;/a&gt;样例输出&lt;/h1&gt;&lt;p&gt;00000&lt;br&gt;00001&lt;br&gt;00010&lt;br&gt;00011&lt;br&gt;&amp;lt;以下部分省略&amp;gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Java" scheme="https://melodyjerry.github.io/blog/tags/Java/"/>
    
      <category term="蓝桥杯" scheme="https://melodyjerry.github.io/blog/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
      <category term="算法" scheme="https://melodyjerry.github.io/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>使用fancybox标签实现图片浏览器</title>
    <link href="https://melodyjerry.github.io/blog/2020/02/07/%E4%BD%BF%E7%94%A8-fancybox-%E6%A0%87%E7%AD%BE%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    <id>https://melodyjerry.github.io/blog/2020/02/07/使用-fancybox-标签实现图片浏览器/</id>
    <published>2020-02-07T12:42:55.000Z</published>
    <updated>2020-02-07T15:20:51.233Z</updated>
    
    <content type="html"><![CDATA[<p>使用<code>&lt;fancybox&gt;&lt;/fancybox&gt;</code>标签实现图片浏览器</p><ul><li>单张图，只提供<strong>放大</strong>🔍<strong>关闭❌</strong>两个按钮，见黄色标记👇</li></ul><fancybox><p><img src="https://s2.ax1x.com/2020/02/07/12ZifU.png" alt=""></p></fancybox><ul><li>多张图，可<strong>幻灯片播放</strong>，见红色标记👇</li></ul><p><fancybox><img src="https://s2.ax1x.com/2020/02/07/12AON8.png" alt=""></fancybox></p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用&lt;code&gt;&amp;lt;fancybox&amp;gt;&amp;lt;/fancybox&amp;gt;&lt;/code&gt;标签实现图片浏览器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单张图，只提供&lt;strong&gt;放大&lt;/strong&gt;🔍&lt;strong&gt;关闭❌&lt;/strong&gt;两个按钮，见黄色标记👇&lt;/li&gt;
&lt;/ul&gt;
&lt;fancybox&gt;

&lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2020/02/07/12ZifU.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/fancybox&gt;

&lt;ul&gt;
&lt;li&gt;多张图，可&lt;strong&gt;幻灯片播放&lt;/strong&gt;，见红色标记👇&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;fancybox&gt;&lt;img src=&quot;https://s2.ax1x.com/2020/02/07/12AON8.png&quot; alt=&quot;&quot;&gt;&lt;/fancybox&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Hexo" scheme="https://melodyjerry.github.io/blog/tags/Hexo/"/>
    
      <category term="博客" scheme="https://melodyjerry.github.io/blog/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯-入门训练-Fibonacci数列</title>
    <link href="https://melodyjerry.github.io/blog/2020/02/07/%E8%93%9D%E6%A1%A5%E6%9D%AF%E2%80%94-%E5%85%A5%E9%97%A8%E8%AE%AD%E7%BB%83-Fibonacci%E6%95%B0%E5%88%97/"/>
    <id>https://melodyjerry.github.io/blog/2020/02/07/蓝桥杯—-入门训练-Fibonacci数列/</id>
    <published>2020-02-07T11:48:54.000Z</published>
    <updated>2020-02-07T15:20:51.243Z</updated>
    
    <content type="html"><![CDATA[<h2 id="资源限制"><a href="#资源限制" class="headerlink" title="资源限制"></a>资源限制</h2><p>时间限制：1.0s  内存限制：256.0MB</p><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>Fibonacci数列的递推公式为：Fn=Fn-1+Fn-2，其中F1=F2=1。</p><p>当n比较大时，Fn也非常大，现在我们想知道，Fn除以10007的余数是多少。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>输入包含一个整数n。</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出一行，包含一个整数，表示Fn除以10007的余数。</p><blockquote><p>说明：在本题中，答案是要求Fn除以10007的余数，因此我们只要能算出这个余数即可，而不需要先计算出Fn的准确值，再将计算的结果除以10007取余数，直接计算余数往往比先算出原数再取余简单。</p></blockquote><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><p>10</p><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><p>55</p><h2 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h2><p>22</p><h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><p>7704</p><h2 id="数据规模与约定"><a href="#数据规模与约定" class="headerlink" title="数据规模与约定"></a>数据规模与约定</h2><p>1 &lt;= n &lt;= 1,000,000。</p><a id="more"></a><h2 id="提交代码（Java）"><a href="#提交代码（Java）" class="headerlink" title="提交代码（Java）"></a>提交代码（Java）</h2><h3 id="第一次提交"><a href="#第一次提交" class="headerlink" title="第一次提交"></a>第一次提交</h3><p>第一次时候，我想使用<strong>递归</strong>的方式👇</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> n = sc.nextInt();</span><br><span class="line">System.out.println(F(n)%<span class="number">10007</span>);</span><br><span class="line">sc.close();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">F</span><span class="params">(<span class="keyword">int</span> n)</span> </span>{</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">1</span>||n==<span class="number">2</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> F(n-<span class="number">1</span>)+F(n-<span class="number">2</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>提交后，系统提示【<strong>运行超时</strong>】👇</p><p><fancybox><img src="https://i.loli.net/2020/02/07/d6o8x2OnvDZ7luL.png" alt=""></fancybox></p><h3 id="第二次提交"><a href="#第二次提交" class="headerlink" title="第二次提交"></a>第二次提交</h3><p>使用递归来处理，比较耗时。</p><p>而且这次我按照题目的提示【<strong>说明：在本题中，答案是要求Fn除以10007的余数，因此我们只要能算出这个余数即可，而不需要先计算出Fn的准确值，再将计算的结果除以10007取余数，直接计算余数往往比先算出原数再取余简单。</strong>】来处理，就改用数组来实现👇</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> n = sc.nextInt();</span><br><span class="line"><span class="keyword">int</span> F[] = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">2</span>];</span><br><span class="line">F[<span class="number">1</span>] = F[<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(n &gt; <span class="number">2</span>) {</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>; i&lt;=n; i++)</span><br><span class="line"><span class="comment">// F[i]直接计算到求余数的值，即保存余数</span></span><br><span class="line">F[i]=(F[i-<span class="number">1</span>]+F[i-<span class="number">2</span>])%<span class="number">10007</span>;</span><br><span class="line">}</span><br><span class="line"><span class="comment">//F[n]即所求值</span></span><br><span class="line">System.out.println(F[n]);</span><br><span class="line">sc.close();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这次直接通过👇</p><fancybox><p><img src="https://s2.ax1x.com/2020/02/07/12F55D.png" alt=""></p></fancybox><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;资源限制&quot;&gt;&lt;a href=&quot;#资源限制&quot; class=&quot;headerlink&quot; title=&quot;资源限制&quot;&gt;&lt;/a&gt;资源限制&lt;/h2&gt;&lt;p&gt;时间限制：1.0s  内存限制：256.0MB&lt;/p&gt;
&lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;Fibonacci数列的递推公式为：Fn=Fn-1+Fn-2，其中F1=F2=1。&lt;/p&gt;
&lt;p&gt;当n比较大时，Fn也非常大，现在我们想知道，Fn除以10007的余数是多少。&lt;/p&gt;
&lt;h2 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h2&gt;&lt;p&gt;输入包含一个整数n。&lt;/p&gt;
&lt;h3 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h3&gt;&lt;p&gt;输出一行，包含一个整数，表示Fn除以10007的余数。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;说明：在本题中，答案是要求Fn除以10007的余数，因此我们只要能算出这个余数即可，而不需要先计算出Fn的准确值，再将计算的结果除以10007取余数，直接计算余数往往比先算出原数再取余简单。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;样例输入&quot;&gt;&lt;a href=&quot;#样例输入&quot; class=&quot;headerlink&quot; title=&quot;样例输入&quot;&gt;&lt;/a&gt;样例输入&lt;/h2&gt;&lt;p&gt;10&lt;/p&gt;
&lt;h3 id=&quot;样例输出&quot;&gt;&lt;a href=&quot;#样例输出&quot; class=&quot;headerlink&quot; title=&quot;样例输出&quot;&gt;&lt;/a&gt;样例输出&lt;/h3&gt;&lt;p&gt;55&lt;/p&gt;
&lt;h2 id=&quot;样例输入-1&quot;&gt;&lt;a href=&quot;#样例输入-1&quot; class=&quot;headerlink&quot; title=&quot;样例输入&quot;&gt;&lt;/a&gt;样例输入&lt;/h2&gt;&lt;p&gt;22&lt;/p&gt;
&lt;h3 id=&quot;样例输出-1&quot;&gt;&lt;a href=&quot;#样例输出-1&quot; class=&quot;headerlink&quot; title=&quot;样例输出&quot;&gt;&lt;/a&gt;样例输出&lt;/h3&gt;&lt;p&gt;7704&lt;/p&gt;
&lt;h2 id=&quot;数据规模与约定&quot;&gt;&lt;a href=&quot;#数据规模与约定&quot; class=&quot;headerlink&quot; title=&quot;数据规模与约定&quot;&gt;&lt;/a&gt;数据规模与约定&lt;/h2&gt;&lt;p&gt;1 &amp;lt;= n &amp;lt;= 1,000,000。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Java" scheme="https://melodyjerry.github.io/blog/tags/Java/"/>
    
      <category term="蓝桥杯" scheme="https://melodyjerry.github.io/blog/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
      <category term="算法" scheme="https://melodyjerry.github.io/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Java之printf格式化输出的例子</title>
    <link href="https://melodyjerry.github.io/blog/2020/02/07/Java%E4%B9%8Bprintf%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BE%93%E5%87%BA%E7%9A%84%E4%BE%8B%E5%AD%90/"/>
    <id>https://melodyjerry.github.io/blog/2020/02/07/Java之printf格式化输出的例子/</id>
    <published>2020-02-07T09:46:23.000Z</published>
    <updated>2020-02-07T15:20:51.226Z</updated>
    
    <content type="html"><![CDATA[<p>转载自<a href="https://www.runoob.com/w3cnote/java-printf-formate-demo.html" target="_blank" rel="noopener">菜鸟教程</a></p><a id="more"></a><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 使用printf输出</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**关键技术点</span></span><br><span class="line"><span class="comment"> * 使用java.io.PrintStream的printf方法实现C风格的输出</span></span><br><span class="line"><span class="comment"> * printf 方法的第一个参数为输出的格式,第二个参数是可变长的,表示待输出的数据对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Printf</span> </span>{</span><br><span class="line"> </span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">              <span class="comment">/*** 输出字符串 ***/</span></span><br><span class="line">              <span class="comment">// %s表示输出字符串，也就是将后面的字符串替换模式中的%s</span></span><br><span class="line">              System.out.printf(<span class="string">"%s"</span>, <span class="keyword">new</span> Integer(<span class="number">1212</span>));</span><br><span class="line">              <span class="comment">// %n表示换行</span></span><br><span class="line">              System.out.printf(<span class="string">"%s%n"</span>, <span class="string">"end line"</span>);</span><br><span class="line">              <span class="comment">// 还可以支持多个参数</span></span><br><span class="line">              System.out.printf(<span class="string">"%s = %s%n"</span>, <span class="string">"Name"</span>, <span class="string">"Zhangsan"</span>);</span><br><span class="line">              <span class="comment">// %S将字符串以大写形式输出</span></span><br><span class="line">              System.out.printf(<span class="string">"%S = %s%n"</span>, <span class="string">"Name"</span>, <span class="string">"Zhangsan"</span>);</span><br><span class="line">              <span class="comment">// 支持多个参数时，可以在%s之间插入变量编号，1$表示第一个字符串，3$表示第3个字符串</span></span><br><span class="line">              System.out.printf(<span class="string">"%1$s = %3$s %2$s%n"</span>, <span class="string">"Name"</span>, <span class="string">"san"</span>, <span class="string">"Zhang"</span>);</span><br><span class="line">             </span><br><span class="line">              <span class="comment">/*** 输出boolean类型 ***/</span></span><br><span class="line">              System.out.printf(<span class="string">"true = %b; false = "</span>, <span class="keyword">true</span>);</span><br><span class="line">              System.out.printf(<span class="string">"%b%n"</span>, <span class="keyword">false</span>);</span><br><span class="line"> </span><br><span class="line">              <span class="comment">/*** 输出整数类型***/</span></span><br><span class="line">              Integer iObj = <span class="number">342</span>;</span><br><span class="line">              <span class="comment">// %d表示将整数格式化为10进制整数</span></span><br><span class="line">              System.out.printf(<span class="string">"%d; %d; %d%n"</span>, -<span class="number">500</span>, <span class="number">2343L</span>, iObj);</span><br><span class="line">              <span class="comment">// %o表示将整数格式化为8进制整数</span></span><br><span class="line">              System.out.printf(<span class="string">"%o; %o; %o%n"</span>, -<span class="number">500</span>, <span class="number">2343L</span>, iObj);</span><br><span class="line">              <span class="comment">// %x表示将整数格式化为16进制整数</span></span><br><span class="line">              System.out.printf(<span class="string">"%x; %x; %x%n"</span>, -<span class="number">500</span>, <span class="number">2343L</span>, iObj);</span><br><span class="line">              <span class="comment">// %X表示将整数格式化为16进制整数，并且字母变成大写形式</span></span><br><span class="line">              System.out.printf(<span class="string">"%X; %X; %X%n"</span>, -<span class="number">500</span>, <span class="number">2343L</span>, iObj);</span><br><span class="line">             </span><br><span class="line">              <span class="comment">/*** 输出浮点类型***/</span></span><br><span class="line">              Double dObj = <span class="number">45.6</span>d;</span><br><span class="line">              <span class="comment">// %e表示以科学技术法输出浮点数</span></span><br><span class="line">              System.out.printf(<span class="string">"%e; %e; %e%n"</span>, -<span class="number">756.403f</span>, <span class="number">7464.232641</span>d, dObj);</span><br><span class="line">              <span class="comment">// %E表示以科学技术法输出浮点数，并且为大写形式            </span></span><br><span class="line">              System.out.printf(<span class="string">"%E; %E; %E%n"</span>, -<span class="number">756.403f</span>, <span class="number">7464.232641</span>d, dObj);</span><br><span class="line">              <span class="comment">// %f表示以十进制格式化输出浮点数</span></span><br><span class="line">              System.out.printf(<span class="string">"%f; %f; %f%n"</span>, -<span class="number">756.403f</span>, <span class="number">7464.232641</span>d, dObj);</span><br><span class="line">              <span class="comment">// 还可以限制小数点后的位数</span></span><br><span class="line">              System.out.printf(<span class="string">"%.1f; %.3f; %f%n"</span>, -<span class="number">756.403f</span>, <span class="number">7464.232641</span>d, dObj);</span><br><span class="line">             </span><br><span class="line">              <span class="comment">/*** 输出日期类型***/</span></span><br><span class="line">              <span class="comment">// %t表示格式化日期时间类型，%T是时间日期的大写形式，在%t之后用特定的字母表示不同的输出格式</span></span><br><span class="line">              Date date = <span class="keyword">new</span> Date();</span><br><span class="line">              <span class="keyword">long</span> dataL = date.getTime();</span><br><span class="line">              <span class="comment">// 格式化年月日</span></span><br><span class="line">              <span class="comment">// %t之后用y表示输出日期的年份（2位数的年，如99）</span></span><br><span class="line">              <span class="comment">// %t之后用m表示输出日期的月份，%t之后用d表示输出日期的日号</span></span><br><span class="line">              System.out.printf(<span class="string">"%1$ty-%1$tm-%1$td; %2$ty-%2$tm-%2$td%n"</span>, date, dataL);</span><br><span class="line">              <span class="comment">// %t之后用Y表示输出日期的年份（4位数的年），</span></span><br><span class="line">              <span class="comment">// %t之后用B表示输出日期的月份的完整名， %t之后用b表示输出日期的月份的简称</span></span><br><span class="line">              System.out.printf(<span class="string">"%1$tY-%1$tB-%1$td; %2$tY-%2$tb-%2$td%n"</span>, date, dataL);</span><br><span class="line">             </span><br><span class="line">              <span class="comment">// 以下是常见的日期组合</span></span><br><span class="line">              <span class="comment">// %t之后用D表示以 "%tm/%td/%ty"格式化日期</span></span><br><span class="line">              System.out.printf(<span class="string">"%1$tD%n"</span>, date);</span><br><span class="line">              <span class="comment">//%t之后用F表示以"%tY-%tm-%td"格式化日期</span></span><br><span class="line">              System.out.printf(<span class="string">"%1$tF%n"</span>, date);</span><br><span class="line">             </span><br><span class="line">              <span class="comment">/*** 输出时间类型***/</span></span><br><span class="line">              <span class="comment">// 输出时分秒</span></span><br><span class="line">              <span class="comment">// %t之后用H表示输出时间的时（24进制），%t之后用I表示输出时间的时（12进制），</span></span><br><span class="line">              <span class="comment">// %t之后用M表示输出时间的分，%t之后用S表示输出时间的秒</span></span><br><span class="line">              System.out.printf(<span class="string">"%1$tH:%1$tM:%1$tS; %2$tI:%2$tM:%2$tS%n"</span>, date, dataL);</span><br><span class="line">              <span class="comment">// %t之后用L表示输出时间的秒中的毫秒</span></span><br><span class="line">              System.out.printf(<span class="string">"%1$tH:%1$tM:%1$tS %1$tL%n"</span>, date);</span><br><span class="line">              <span class="comment">// %t之后p表示输出时间的上午或下午信息</span></span><br><span class="line">              System.out.printf(<span class="string">"%1$tH:%1$tM:%1$tS %1$tL %1$tp%n"</span>, date);</span><br><span class="line">             </span><br><span class="line">              <span class="comment">// 以下是常见的时间组合</span></span><br><span class="line">              <span class="comment">// %t之后用R表示以"%tH:%tM"格式化时间</span></span><br><span class="line">              System.out.printf(<span class="string">"%1$tR%n"</span>, date);</span><br><span class="line">              <span class="comment">// %t之后用T表示以"%tH:%tM:%tS"格式化时间</span></span><br><span class="line">              System.out.printf(<span class="string">"%1$tT%n"</span>, date);</span><br><span class="line">              <span class="comment">// %t之后用r表示以"%tI:%tM:%tS %Tp"格式化时间</span></span><br><span class="line">              System.out.printf(<span class="string">"%1$tr%n"</span>, date);</span><br><span class="line">             </span><br><span class="line">              <span class="comment">/*** 输出星期***/</span></span><br><span class="line">              <span class="comment">// %t之后用A表示得到星期几的全称</span></span><br><span class="line">              System.out.printf(<span class="string">"%1$tF %1$tA%n"</span>, date);</span><br><span class="line">              <span class="comment">// %t之后用a表示得到星期几的简称</span></span><br><span class="line">              System.out.printf(<span class="string">"%1$tF %1$ta%n"</span>, date);</span><br><span class="line">             </span><br><span class="line">              <span class="comment">// 输出时间日期的完整信息</span></span><br><span class="line">              System.out.printf(<span class="string">"%1$tc%n"</span>, date);</span><br><span class="line">       }</span><br><span class="line">}</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *printf方法中,格式为"%s"表示以字符串的形式输出第二个可变长参数的第一个参数值;</span></span><br><span class="line"><span class="comment"> *格式为"%n"表示换行;格式为"%S"表示将字符串以大写形式输出;在"%s"之间用"n$"表示</span></span><br><span class="line"><span class="comment"> *输出可变长参数的第n个参数值.格式为"%b"表示以布尔值的形式输出第二个可变长参数</span></span><br><span class="line"><span class="comment"> *的第一个参数值.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 格式为"%d"表示以十进制整数形式输出;"%o"表示以八进制形式输出;"%x"表示以十六进制</span></span><br><span class="line"><span class="comment"> * 输出;"%X"表示以十六进制输出,并且将字母(A、B、C、D、E、F)换成大写.格式为"%e"表</span></span><br><span class="line"><span class="comment"> * 以科学计数法输出浮点数;格式为"%E"表示以科学计数法输出浮点数,而且将e大写;格式为</span></span><br><span class="line"><span class="comment"> * "%f"表示以十进制浮点数输出,在"%f"之间加上".n"表示输出时保留小数点后面n位.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 格式为"%t"表示输出时间日期类型."%t"之后用y表示输出日期的二位数的年份(如99)、用m</span></span><br><span class="line"><span class="comment"> * 表示输出日期的月份,用d表示输出日期的日号;"%t"之后用Y表示输出日期的四位数的年份</span></span><br><span class="line"><span class="comment"> * (如1999)、用B表示输出日期的月份的完整名,用b表示输出日期的月份的简称."%t"之后用D</span></span><br><span class="line"><span class="comment"> * 表示以"%tm/%td/%ty"的格式输出日期、用F表示以"%tY-%tm-%td"的格式输出日期.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * "%t"之后用H表示输出时间的时(24进制),用I表示输出时间的时(12进制),用M表示输出时间</span></span><br><span class="line"><span class="comment"> * 分,用S表示输出时间的秒,用L表示输出时间的秒中的毫秒数、用 p 表示输出时间的是上午还是</span></span><br><span class="line"><span class="comment"> * 下午."%t"之后用R表示以"%tH:%tM"的格式输出时间、用T表示以"%tH:%tM:%tS"的格式输出</span></span><br><span class="line"><span class="comment"> * 时间、用r表示以"%tI:%tM:%tS %Tp"的格式输出时间.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * "%t"之后用A表示输出日期的全称,用a表示输出日期的星期简称.</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;转载自&lt;a href=&quot;https://www.runoob.com/w3cnote/java-printf-formate-demo.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;菜鸟教程&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Java" scheme="https://melodyjerry.github.io/blog/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>给博客添加一些挂件</title>
    <link href="https://melodyjerry.github.io/blog/2020/02/05/%E8%BD%AC-%E7%BB%99%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E4%B8%80%E4%BA%9B%E6%8C%82%E4%BB%B6/"/>
    <id>https://melodyjerry.github.io/blog/2020/02/05/转-给博客添加一些挂件/</id>
    <published>2020-02-05T14:40:27.000Z</published>
    <updated>2020-02-07T15:20:51.247Z</updated>
    
    <content type="html"><![CDATA[<p>阅读了<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">官方文档</a> 和 <a href="https://www.itrhx.com/" target="_blank" rel="noopener">TRHX‘S BLOG</a> 等文档/文章后，搜集了一部分教程</p><a id="more"></a><h1 id="自定义鼠标指针样式"><a href="#自定义鼠标指针样式" class="headerlink" title="自定义鼠标指针样式"></a>自定义鼠标指针样式</h1><p>在 <code>\themes\material-x\source\less\_base.less</code> 文件 body 样式里写入如下代码：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">body {</span><br><span class="line">    cursor: url(https://cdn.jsdelivr.net/gh/TRHX/CDN-for-itrhx.com@2.1.6/images/mouse.cur),auto;</span><br><span class="line">    background-color: @theme_background;</span><br><span class="line">    ......</span><br><span class="line">    ......</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>鼠标指针可以用 Axialis CursorWorkshop 这个软件自己制作，不同主题具体放的文件有所不同，确保在博客主体 body 的 CSS 文件中即可，其中的鼠标指针链接可替换成自己的，首先尝试加载 <a href="https://cdn.jsdelivr.net/gh/TRHX/CDN-for-itrhx.com@2.1.6/images/mouse.cur" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/TRHX/CDN-for-itrhx.com@2.1.6/images/mouse.cur</a> ，如果该文件不存在或由于其他原因无效，那么 auto 会被使用，也就是自动默认效果，图片格式为.ico、.ani、.cur，建议使用.cur，如果使用.ani或者其他格式无效，原因是浏览器兼容问题，请阅读<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Basic_User_Interface/Using_URL_values_for_the_cursor_property" target="_blank" rel="noopener">参考文档</a>或者参考以下兼容表：</p><table><thead><tr><th align="center">浏览器</th><th align="center">最低版本</th><th align="center">格式</th></tr></thead><tbody><tr><td align="center">Internet Explorer</td><td align="center">6.0</td><td align="center">.cur / .ani</td></tr><tr><td align="center">Firefox (Gecko), Windows and Linux</td><td align="center">1.5 (1.8)</td><td align="center">.cur / .png / .gif / .jpg</td></tr><tr><td align="center">Firefox (Gecko)</td><td align="center">4.0 (2.0)</td><td align="center">.cur / .png / .gif / .jpg / .svg</td></tr><tr><td align="center">Opera</td><td align="center">—</td><td align="center">—</td></tr><tr><td align="center">Safari (Webkit)</td><td align="center">3.0 (522-523)</td><td align="center">.cur / .png / .gif / .jpg</td></tr></tbody></table><p>拓展阅读：<a href="https://blog.csdn.net/ixygj197875/article/details/79338360" target="_blank" rel="noopener">《CSS 鼠标样式 cursor属性》</a> （By：歪脖先生的博客）</p><h1 id="打字特效（蓝色）"><a href="#打字特效（蓝色）" class="headerlink" title="打字特效（蓝色）"></a>打字特效（蓝色）</h1><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src="https://cdn.jsdelivr.net/npm/typed.js@2.0.11"&gt;&lt;/script&gt; </span><br><span class="line">&lt;script&gt;var typed = new Typed("#subtitle", { strings: ["Live a good life, write some good code !!!", "愿自己的努力终将获得回报。", "花开不是为了花落，而是为了开的更加灿烂。", "没有伞的孩子必须努力奔跑！", "欲望以提升热忱，毅力以磨平高山。", "如果放弃太早，你永远都不知道自己会错过什么。", "没有礁石，就没有美丽的浪花；没有挫折，就没有壮丽的人生。"], startDelay: 1000, typeSpeed: 100, loop: !0, backSpeed: 60, backDelay: 2000, showCursor: !0 })&lt;/script&gt;</span><br><span class="line">&lt;div style="text-align: center;font-weight: bold;color: #1BC3FB;"&gt;</span><br><span class="line">      &lt;span id="subtitle"&gt;没有伞的孩子必须努力奔跑！&lt;/span&gt;&lt;span class="typed-cursor typed-cursor--blink"&gt;|&lt;/span&gt;</span><br><span class="line">      &lt;span id="typed-cursor"&gt;&lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br></pre></td></tr></tbody></table></figure><p>效果 👇</p><script src="https://cdn.jsdelivr.net/npm/typed.js@2.0.11"></script>  <script>var typed = new Typed("#subtitle", { strings: ["Live a good life, write some good code !!!", "愿自己的努力终将获得回报。", "花开不是为了花落，而是为了开的更加灿烂。", "没有伞的孩子必须努力奔跑！", "欲望以提升热忱，毅力以磨平高山。", "如果放弃太早，你永远都不知道自己会错过什么。", "没有礁石，就没有美丽的浪花；没有挫折，就没有壮丽的人生。"], startDelay: 1000, typeSpeed: 100, loop: !0, backSpeed: 60, backDelay: 2000, showCursor: !0 })</script><div style="text-align: center;font-weight: bold;color: #1BC3FB;">      <span id="subtitle">没有伞的孩子必须努力奔跑！</span><span class="typed-cursor typed-cursor--blink">|</span>      <span id="typed-cursor"></span>    </div><h1 id="网站访客地理信息"><a href="#网站访客地理信息" class="headerlink" title="网站访客地理信息"></a>网站访客地理信息</h1><ul><li>在<strong><code>.\themes\material-x\layout\layout.ejs</code></strong>中加入以下代码：</li></ul><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--网站访客地理信息--&gt;</span><br><span class="line">&lt;script type="text/javascript" src="//rf.revolvermaps.com/0/0/8.js?i=5eqiqb8vl6p&amp;amp;m=2&amp;amp;c=ff0000&amp;amp;cr1=ffffff&amp;amp;f=arial&amp;amp;l=33&amp;amp;z=17&amp;amp;rx=-40&amp;amp;lx=-540&amp;amp;ly=520&amp;amp;hi=60" async="async"&gt;&lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><ul><li>效果 👇</li></ul><script type="text/javascript" src="//rf.revolvermaps.com/0/0/8.js?i=5eqiqb8vl6p&amp;m=2&amp;c=ff0000&amp;cr1=ffffff&amp;f=arial&amp;l=33&amp;z=17&amp;rx=-40&amp;lx=-540&amp;ly=520&amp;hi=60" async="async"></script><h1 id="天气挂件"><a href="#天气挂件" class="headerlink" title="天气挂件"></a>天气挂件</h1><ul><li>JS代码，用于将插件插入到网页内</li></ul><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="tp-weather-widget"&gt;&lt;/div&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    (function(a,h,g,f,e,d,c,b){b=function(){d=h.createElement(g);c=h.getElementsByTagName(g)[0];d.src=e;d.charset="utf-8";d.async=1;c.parentNode.insertBefore(d,c)};a["SeniverseWeatherWidgetObject"]=f;a[f]||(a[f]=function(){(a[f].q=a[f].q||[]).push(arguments)});a[f].l=+new Date();if(a.attachEvent){a.attachEvent("onload",b)}else{a.addEventListener("load",b,false)}}(window,document,"script","SeniverseWeatherWidget","//cdn.sencdn.com/widget2/static/js/bundle.js?t="+parseInt((new Date().getTime() / 100000000).toString(),10)));</span><br><span class="line">    window.SeniverseWeatherWidget('show', {</span><br><span class="line">      flavor: "bubble",</span><br><span class="line">      location: "WS0E9D8WN298",</span><br><span class="line">      geolocation: true,</span><br><span class="line">      language: "zh-Hans",</span><br><span class="line">      unit: "c",</span><br><span class="line">      theme: "auto",</span><br><span class="line">      token: "5fd5b254-57fe-4f8a-8a13-f92485efeb0b",</span><br><span class="line">      hover: "enabled",</span><br><span class="line">      container: "tp-weather-widget"</span><br><span class="line">    })</span><br><span class="line">  &lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><ul><li>插件网页版链接，用于嵌入到iframe或webview中</li></ul><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe&gt;weather.seniverse.com/?token=5fd5b254-57fe-4f8a-8a13-f92485efeb0b&lt;/iframe&gt;</span><br></pre></td></tr></tbody></table></figure><ul><li>效果：见本博客页面左上角</li></ul><h1 id="背景添加动态线条效果"><a href="#背景添加动态线条效果" class="headerlink" title="背景添加动态线条效果"></a>背景添加动态线条效果</h1><p>在 <strong><code>.\themes\hexo-theme-spfk\layout\layout.ejs</code></strong>文件中添加如下代码：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--动态线条背景--&gt;</span><br><span class="line">&lt;script type="text/javascript"</span><br><span class="line">color="220,220,220" opacity='0.7' zIndex="-2" count="200" src="//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"&gt;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><p>其中：</p><ul><li>color：表示线条颜色，三个数字分别为(R,G,B)，默认：（0,0,0）</li><li>opacity：表示线条透明度（0~1），默认：0.5</li><li>count：表示线条的总数量，默认：150</li><li>zIndex：表示背景的z-index属性，css属性用于控制所在层的位置，默认：-1</li></ul><h1 id="人体时钟"><a href="#人体时钟" class="headerlink" title="人体时钟"></a>人体时钟</h1><p>无意中发现了个有趣的人体时钟 HONE HONE CLOCK，作者是个日本人，<a href="http://chabudai.org/blog/" target="_blank" rel="noopener">点击此处</a>访问作者博客，<a href="http://chabudai.org/blog/?p=59" target="_blank" rel="noopener">点击此处</a>在作者原博客上查看动态样式，<a href="http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.swf" target="_blank" rel="noopener">点击此处</a>查看动态大图，如果你的博客上有合适的地方，加上一个人体时钟会很有趣的</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/030.png" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/030.png" alt="030"></a></p><p>实现代码：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--人体时钟背景透明--&gt;</span><br><span class="line">&lt;script charset="Shift_JIS" src="http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.js"&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--人体时钟背景白--&gt;</span><br><span class="line">&lt;script charset="Shift_JIS" src="http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_wh.js"&gt;&lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h1 id="背景动态彩带效果"><a href="#背景动态彩带效果" class="headerlink" title="背景动态彩带效果"></a>背景动态彩带效果</h1><p>样式一是鼠标点击后彩带自动更换样式，样式二是飘动的彩带：</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/034.png" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/034.png" alt="034"></a></p><p>实现方法：在 \themes\material-x\layout\layout.ejs 文件的body前面添加如下代码：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 样式一（鼠标点击更换样式） --&gt;</span><br><span class="line">&lt;script src="https://g.joyinshare.com/hc/ribbon.min.js" type="text/javascript"&gt;&lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 样式二（飘动的彩带） --&gt;</span><br><span class="line">&lt;script src="https://g.joyinshare.com/hc/piao.js" type="text/javascript"&gt;&lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><h1 id="添加背景代码雨特效"><a href="#添加背景代码雨特效" class="headerlink" title="添加背景代码雨特效"></a>添加背景代码雨特效</h1><p>新建 <code>DigitalRain.js</code>，写入以下代码：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">复制window.onload = function(){</span><br><span class="line">    //获取画布对象</span><br><span class="line">    var canvas = document.getElementById("canvas");</span><br><span class="line">    //获取画布的上下文</span><br><span class="line">    var context =canvas.getContext("2d");</span><br><span class="line">    var s = window.screen;</span><br><span class="line">    var W = canvas.width = s.width;</span><br><span class="line">    var H = canvas.height;</span><br><span class="line">    //获取浏览器屏幕的宽度和高度</span><br><span class="line">    //var W = window.innerWidth;</span><br><span class="line">    //var H = window.innerHeight;</span><br><span class="line">    //设置canvas的宽度和高度</span><br><span class="line">    canvas.width = W;</span><br><span class="line">    canvas.height = H;</span><br><span class="line">    //每个文字的字体大小</span><br><span class="line">    var fontSize = 12;</span><br><span class="line">    //计算列</span><br><span class="line">    var colunms = Math.floor(W /fontSize);</span><br><span class="line">    //记录每列文字的y轴坐标</span><br><span class="line">    var drops = [];</span><br><span class="line">    //给每一个文字初始化一个起始点的位置</span><br><span class="line">    for(var i=0;i&lt;colunms;i++){</span><br><span class="line">        drops.push(0);</span><br><span class="line">    }</span><br><span class="line">    //运动的文字</span><br><span class="line">    var str ="WELCOME TO WWW.ITRHX.COM";</span><br><span class="line">    //4:fillText(str,x,y);原理就是去更改y的坐标位置</span><br><span class="line">    //绘画的函数</span><br><span class="line">    function draw(){</span><br><span class="line">        context.fillStyle = "rgba(238,238,238,.08)";//遮盖层</span><br><span class="line">        context.fillRect(0,0,W,H);</span><br><span class="line">        //给字体设置样式</span><br><span class="line">        context.font = "600 "+fontSize+"px  Georgia";</span><br><span class="line">        //给字体添加颜色</span><br><span class="line">        context.fillStyle = ["#33B5E5", "#0099CC", "#AA66CC", "#9933CC", "#99CC00", "#669900", "#FFBB33", "#FF8800", "#FF4444", "#CC0000"][parseInt(Math.random() * 10)];//randColor();可以rgb,hsl, 标准色，十六进制颜色</span><br><span class="line">        //写入画布中</span><br><span class="line">        for(var i=0;i&lt;colunms;i++){</span><br><span class="line">            var index = Math.floor(Math.random() * str.length);</span><br><span class="line">            var x = i*fontSize;</span><br><span class="line">            var y = drops[i] *fontSize;</span><br><span class="line">            context.fillText(str[index],x,y);</span><br><span class="line">            //如果要改变时间，肯定就是改变每次他的起点</span><br><span class="line">            if(y &gt;= canvas.height &amp;&amp; Math.random() &gt; 0.99){</span><br><span class="line">                drops[i] = 0;</span><br><span class="line">            }</span><br><span class="line">            drops[i]++;</span><br><span class="line">        }</span><br><span class="line">    };</span><br><span class="line">    function randColor(){//随机颜色</span><br><span class="line">        var r = Math.floor(Math.random() * 256);</span><br><span class="line">        var g = Math.floor(Math.random() * 256);</span><br><span class="line">        var b = Math.floor(Math.random() * 256);</span><br><span class="line">        return "rgb("+r+","+g+","+b+")";</span><br><span class="line">    }</span><br><span class="line">    draw();</span><br><span class="line">    setInterval(draw,35);</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p>在主题文件的相关css文件中（以 Material X 1.2.1 主题为例，在\themes\material-x-1.2.1\source\less_main.less 文件末尾）添加以下代码：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">复制canvas {</span><br><span class="line">  position: fixed;</span><br><span class="line">  right: 0px;</span><br><span class="line">  bottom: 0px;</span><br><span class="line">  min-width: 100%;</span><br><span class="line">  min-height: 100%;</span><br><span class="line">  height: auto;</span><br><span class="line">  width: auto;</span><br><span class="line">  z-index: -1;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>然后在主题的 layout.ejs 文件中引入即可：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">复制&lt;!-- 数字雨 --&gt;</span><br><span class="line">&lt;canvas id="canvas" width="1440" height="900" &gt;&lt;/canvas&gt;</span><br><span class="line">&lt;script type="text/javascript" src="/js/DigitalRain.js"&gt;&lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><p>最终效果：</p><p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/035.png" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A04/035.png" alt="035"></a></p><h1 id="自定义一个不使用主题模板渲染的独立页面"><a href="#自定义一个不使用主题模板渲染的独立页面" class="headerlink" title="自定义一个不使用主题模板渲染的独立页面"></a>自定义一个不使用主题模板渲染的独立页面</h1><p>  有时候我们需要新建一个独立的页面，这个页面不使用主题的渲染，具有自己独立的样式，可以放一些自己的作品，相册什么的，以下就介绍这种独立页面的实现方法。</p><p>方法一：</p><p>  使用 Hexo 提供的跳过渲染配置，在博客根目录的配置文件 <code>_config.yml</code> 里找到 <code>skip_render</code> 关键字，在后面添加想要跳过渲染的页面，比如我们创建 <code>\source\about\index.html</code>， 配置文件填写：<code>skip_render: about\**</code>，那么就表示 <code>\source\about</code> 里所有的文件将跳过渲染，里面的文件将会被直接复制到 public 文件夹，此时就会得到一个独立的 about 页面；官方文档：<a href="https://hexo.io/docs/configuration" target="_blank" rel="noopener">https://hexo.io/docs/configuration</a></p><p>方法二：</p><p>  在文章头部的 Front-matter 里添加配置 <code>layout: false</code> 来跳过渲染配置，比如我们要使 about 页面跳过渲染，创建 <code>\source\about\index.md</code>，将这个页面的相关 HTML 代码写进<code>.md</code>文件并保存，然后在 <code>index.md</code> 的头部写入：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">layout: false</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">{% raw %}</span><br><span class="line"></span><br><span class="line">这里是 HTML 代码</span><br><span class="line"></span><br><span class="line">{% endraw %}</span><br></pre></td></tr></tbody></table></figure><p>PS：Front-matter 是 <code>.md</code> 文件最上方以 — 分隔的区域，用于指定个别文件的变量，官方文档：<a href="https://hexo.io/docs/front-matter" target="_blank" rel="noopener">https://hexo.io/docs/front-matter</a></p><p>效果可以对比我的<a href="https://www.itrhx.com/" target="_blank" rel="noopener">博客主页</a>和<a href="https://www.itrhx.com/about/" target="_blank" rel="noopener">关于页面</a></p><h1 id="更改本地预览端口号"><a href="#更改本地预览端口号" class="headerlink" title="更改本地预览端口号"></a>更改本地预览端口号</h1><p>hexo博客在执行 <code>hexo s</code> 进行本地预览的时候，默认端口号是4000，当该端口号被占用时会报错 <code>Error: listen EADDRINUSE 0.0.0.0:4000</code> ，此时可以关闭占用该端口的进程，也可以更换端口号，更换端口号可以通过以下两种方法实现：</p><p>方法一：在根目录的 <code>_config.yml</code> 配置文件内加上如下代码更改 <code>hexo s</code> 运行时的端口号：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: 5000</span><br><span class="line">  compress: true</span><br><span class="line">  header: true</span><br></pre></td></tr></tbody></table></figure><p>方法二：通过 <code>hexo server -p 5000</code> 命令来指定端口，这种方法只是本次执行有效</p><h1 id="其他网页小挂件推荐"><a href="#其他网页小挂件推荐" class="headerlink" title="其他网页小挂件推荐"></a>其他网页小挂件推荐</h1><ul><li><a href="http://abowman.com/" target="_blank" rel="noopener">http://abowman.com/</a> 里面有很多有趣的小挂件，可以养养鱼、龟、狗、仓鼠等各式各样的虚拟宠物，能根据你的鼠标指针位置移动，直接复制代码就可以用</li><li><a href="http://www.revolvermaps.com/" target="_blank" rel="noopener">http://www.revolvermaps.com/</a> 它提供网站访客地理信息，可以以2D、3D等形式显示</li><li><a href="http://www.amazingcounters.com/" target="_blank" rel="noopener">http://www.amazingcounters.com/</a> 免费网站计数器，有非常多的样式供你选择，可以设置计数器初始数值，可以设置按访问量计数，也可以按独立访问者计数</li><li><a href="https://www.seniverse.com/widget/get" target="_blank" rel="noopener">https://www.seniverse.com/widget/get</a> 心知天气提供基于Web的免费天气插件，可以为你的网站添加一项简洁美观的天气预报功能，并自动适配PC和手机上的浏览</li></ul><!--more--><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;阅读了&lt;a href=&quot;https://hexo.io/zh-cn/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方文档&lt;/a&gt; 和 &lt;a href=&quot;https://www.itrhx.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;TRHX‘S BLOG&lt;/a&gt; 等文档/文章后，搜集了一部分教程&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Hexo" scheme="https://melodyjerry.github.io/blog/tags/Hexo/"/>
    
      <category term="博客" scheme="https://melodyjerry.github.io/blog/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
